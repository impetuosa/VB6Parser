Class {
	#name : #VBParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_VB6Parser'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 1 138 1 142 1 146] 
#[ 1 133 1 138 1 142 1 146] 
#[ 0 6 7 37] 
#[ 2 154 7 81] 
#[ 0 81 2 154] 
#[ 0 93 2 154] 
#[ 0 97 2 154] 
#[ 1 129 1 138 1 142 1 146] 
#[ 1 137 1 138 1 142 1 146] 
#[ 3 6 3 10] 
#[ 1 254 3 82] 
#[ 3 90 5 197] 
#[ 3 90 5 225] 
#[ 3 90 6 1] 
#[ 3 94 5 197] 
#[ 3 94 5 225] 
#[ 3 94 6 1] 
#[ 1 182 3 102] 
#[ 1 182 3 110] 
#[ 3 134 5 197] 
#[ 3 134 5 225] 
#[ 3 134 6 1] 
#[ 3 146 7 145] 
#[ 2 105 3 146] 
#[ 2 109 3 146] 
#[ 2 113 3 146] 
#[ 2 117 3 146] 
#[ 2 121 3 146] 
#[ 2 125 3 146] 
#[ 2 129 3 146] 
#[ 2 133 3 146] 
#[ 0 81 3 146] 
#[ 2 137 3 146] 
#[ 2 141 3 146] 
#[ 2 145 3 146] 
#[ 1 73 3 146] 
#[ 1 121 3 146] 
#[ 2 149 3 146] 
#[ 2 153 3 146] 
#[ 2 157 3 146] 
#[ 0 93 3 146] 
#[ 0 97 3 146] 
#[ 1 138 1 142 1 146 2 146] 
#[ 1 138 1 142 1 146 6 217] 
#[ 0 6 1 73] 
#[ 0 6 1 245] 
#[ 0 6 1 150] 
#[ 2 105 4 50] 
#[ 2 109 4 50] 
#[ 2 113 4 50] 
#[ 2 117 4 50] 
#[ 0 13 4 50] 
#[ 0 21 4 50] 
#[ 0 29 4 50] 
#[ 4 50 4 113] 
#[ 0 33 4 50] 
#[ 0 37 4 50] 
#[ 2 121 4 50] 
#[ 4 50 4 117] 
#[ 0 41 4 50] 
#[ 0 49 4 50] 
#[ 4 50 4 121] 
#[ 4 50 4 125] 
#[ 4 50 4 129] 
#[ 2 125 4 50] 
#[ 2 129 4 50] 
#[ 4 50 4 133] 
#[ 0 57 4 50] 
#[ 0 65 4 50] 
#[ 0 69 4 50] 
#[ 4 50 4 137] 
#[ 4 50 9 33] 
#[ 2 133 4 50] 
#[ 4 50 4 141] 
#[ 0 81 4 50] 
#[ 0 85 4 50] 
#[ 4 50 4 145] 
#[ 4 50 4 149] 
#[ 2 137 4 50] 
#[ 2 141 4 50] 
#[ 2 145 4 50] 
#[ 1 73 4 50] 
#[ 1 121 4 50] 
#[ 2 149 4 50] 
#[ 2 153 4 50] 
#[ 2 157 4 50] 
#[ 0 93 4 50] 
#[ 0 97 4 50] 
#[ 0 6 4 54] 
#[ 4 78 5 197] 
#[ 4 78 5 225] 
#[ 4 78 6 1] 
#[ 3 146 9 97] 
#[ 4 86 9 109] 
#[ 4 102 5 197] 
#[ 4 102 5 225] 
#[ 4 102 6 1] 
#[ 4 110 5 197] 
#[ 4 110 5 225] 
#[ 4 110 6 1] 
#[ 4 114 5 197] 
#[ 4 114 5 225] 
#[ 4 114 6 1] 
#[ 4 122 5 197] 
#[ 4 122 5 225] 
#[ 4 122 6 1] 
#[ 4 126 5 197] 
#[ 4 126 5 225] 
#[ 4 126 6 1] 
#[ 4 130 5 197] 
#[ 4 130 5 225] 
#[ 4 130 6 1] 
#[ 0 6 2 105] 
#[ 0 6 2 109] 
#[ 0 6 2 113] 
#[ 0 6 2 117] 
#[ 0 6 2 121] 
#[ 0 6 2 125] 
#[ 0 6 2 129] 
#[ 0 6 2 133] 
#[ 0 6 0 81] 
#[ 0 6 2 137] 
#[ 0 6 2 141] 
#[ 0 6 2 145] 
#[ 0 6 1 121] 
#[ 0 6 2 149] 
#[ 0 6 2 153] 
#[ 0 6 2 157] 
#[ 0 6 0 93] 
#[ 0 6 0 97] 
#[ 1 106 10 181] 
#[ 4 114 4 222 5 193] 
#[ 4 114 4 222 5 197] 
#[ 4 114 4 222 5 201] 
#[ 4 114 4 222 5 205] 
#[ 4 114 4 222 5 209] 
#[ 4 114 4 222 5 213] 
#[ 4 114 4 222 5 217] 
#[ 4 114 4 222 5 221] 
#[ 4 114 4 222 5 225] 
#[ 4 114 4 222 5 229] 
#[ 4 114 4 222 5 233] 
#[ 4 114 4 222 5 237] 
#[ 4 114 4 222 5 241] 
#[ 4 114 4 222 5 245] 
#[ 4 114 4 222 5 249] 
#[ 4 114 4 222 5 253] 
#[ 4 114 4 222 6 1] 
#[ 4 114 4 222 6 5] 
#[ 4 114 4 222 6 9] 
#[ 4 114 4 222 6 13] 
#[ 4 114 4 222 6 17] 
#[ 4 114 4 222 6 21] 
#[ 4 114 4 222 6 25] 
#[ 4 114 4 222 6 33] 
#[ 4 230 5 197] 
#[ 4 230 5 225] 
#[ 4 230 6 1] 
#[ 4 234 5 197] 
#[ 4 234 5 225] 
#[ 4 234 6 1] 
#[ 4 246 9 109] 
#[ 2 105 4 250] 
#[ 2 109 4 250] 
#[ 2 113 4 250] 
#[ 2 117 4 250] 
#[ 2 121 4 250] 
#[ 2 125 4 250] 
#[ 2 129 4 250] 
#[ 2 133 4 250] 
#[ 0 81 4 250] 
#[ 2 137 4 250] 
#[ 2 141 4 250] 
#[ 2 145 4 250] 
#[ 1 73 4 250] 
#[ 1 121 4 250] 
#[ 2 149 4 250] 
#[ 2 153 4 250] 
#[ 2 157 4 250] 
#[ 0 93 4 250] 
#[ 0 97 4 250] 
#[ 2 105 4 254] 
#[ 2 109 4 254] 
#[ 2 113 4 254] 
#[ 2 117 4 254] 
#[ 2 121 4 254] 
#[ 2 125 4 254] 
#[ 2 129 4 254] 
#[ 2 133 4 254] 
#[ 0 81 4 254] 
#[ 2 137 4 254] 
#[ 2 141 4 254] 
#[ 2 145 4 254] 
#[ 1 73 4 254] 
#[ 1 121 4 254] 
#[ 2 149 4 254] 
#[ 2 153 4 254] 
#[ 2 157 4 254] 
#[ 0 93 4 254] 
#[ 0 97 4 254] 
#[ 5 66 11 201] 
#[ 5 70 11 233] 
#[ 5 98 5 197] 
#[ 5 98 5 225] 
#[ 5 98 6 1] 
#[ 5 170 12 197] 
#[ 5 174 12 205] 
#[ 1 150 5 254] 
#[ 6 2 13 177] 
#[ 1 150 6 114] 
#[ 1 150 6 118] 
#[ 1 150 6 122] 
#[ 1 150 6 186] 
#[ 1 150 6 190] 
#[ 0 81 6 194] 
#[ 0 93 6 194] 
#[ 0 97 6 194] 
#[ 0 6 6 198] 
#[ 0 81 6 226] 
#[ 0 93 6 226] 
#[ 0 97 6 226] 
#[ 0 81 6 230] 
#[ 0 93 6 230] 
#[ 0 97 6 230] 
#[ 0 81 7 2] 
#[ 0 93 7 2] 
#[ 0 97 7 2]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2020-08-31T11:00:09.816422+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
%ignorecase;
%annotate_tokens;

#expression operators -- lowest precedence are first.
%left "")""  ;
%left  ""="";
%left "","";
%right "":"";
%left ""eqv"" ;
%left ""||"" ""or"" ""xor"";
%left ""&&"" ""and"";
%left ""is"" ""like"" ""!="" ""<>"";
%left ""<"" ""<="" "">"" "">="";
%left ""+"" ""-"";
%left ""*"" ""/"" ""Mod"";
%right ""^"";
%right ""delete"" ""~"";
%right ""["" ""("";
%left ""."" ""!"" ;
%prefix VB;
%root Program;
%suffix Node;
%start module;

<lineContinuation>
   :    [_ \r? \n ]
   ;
<DECIMAL_INTEGER>
	: 0 | [1-9] [0-9]*	
	;
<HEX_INTEGER>
	: 0[xX][0-9a-fA-F]+	
	;
<OCTAL_INTEGER>
	: 0[0-7]+	
	;
<EXPONENT>
	: [eE] [\-\+]? [0-9]+ 	
	;
<FLOAT_TYPE>
	: [fFdD]	
	;

<DATE_LITERAL>
   : ""#"" ([^\#\r\n])*  ""#""
   ;
<COLOR_LITERAL>
   : \&H <HEX_INTEGER>+ ""&""?
   ;

<INTEGER_LITERAL>
	: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
	;
<FLOATING_POINT_LITERAL>
	: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
	| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
	| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
	| [0-9]+ <FLOAT_TYPE>	
	| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
	;
<BOOLEAN_LITERAL>
	: true
	| false
	;
<STRING_LITERAL>
   : \"" ([^\""\r\n] | \""\"")* \""
   ;
<NULL_LITERAL>
	: Nothing	
	;
<IDENTIFIER>
	: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
	;
<HASH_IDENTIFIER>
	: ( \#) (<isLetter>|\w|$)*
	;
<whitespace>
	: \s+ | \s 
	;
<eol>
   :  (\r? \n | : \ ) 
   ;

<comment>
   :  (\' | :?  REM  \ ) ( [^\n\r])* 
   ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Basic module
########## ########## ########## ########## ########## ########## ########## ########## 

module: (header 'header' <eol>*)? ModuleStatement 'element'  (<eol>* ModuleStatement 'element' )*   <eol>* {{Module}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## Literals
########## ########## ########## ########## ########## ########## ########## ########## 
literal 
	: IntegerLiteral
	| ColorLiteral
	| DateLiteral
	| FloatLiteral
	| BooleanLiteral
	| StringLiteral
	| Null
	| GuidLiteral
;
IntegerLiteral :  <INTEGER_LITERAL> 'token' {{IntegerLiteral}};
ColorLiteral: <COLOR_LITERAL> 'token' {{ColorLiteral}} ; 
DateLiteral:  <DATE_LITERAL> 'token' {{DateLiteral}};
FloatLiteral: <FLOATING_POINT_LITERAL> 'token' {{FloatLiteral}};
BooleanLiteral: <BOOLEAN_LITERAL> 'token' {{BooleanLiteral}};
StringLiteral:  <STRING_LITERAL> 'token' {{StringLiteral}};
Null: <NULL_LITERAL> 'token' {{Null}};
GuidLiteral: ""{""<HEX_INTEGER> + ""-""<HEX_INTEGER>+""-"" <HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""}"" {{GuidLiteral}};

Identifier : 
	   SimpleIdentifier 
	| HashIdentifier
	| QualifiedIdentifier | HeadlessIdentifier;

HashIdentifier :  <HASH_IDENTIFIER> 'token'   {{HashIdentifier}};
SimpleIdentifier : <IDENTIFIER> | ""text""  'token'  {{SimpleIdentifier}};
HeadlessIdentifier  : "".""  Identifier 'token'  {{HeadlessIdentifier}};
QualifiedIdentifier : Identifier 'token'  "".""  <IDENTIFIER> 'member' {{QualifiedIdentifier}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## Module header and configuration
########## ########## ########## ########## ########## ########## ########## ########## 

header: ""version""   FloatLiteral  'version'  (""class"")?  {{}};
Option
   :   ""option"" IntegerLiteral 'value' {{OptionValue}}
   |   ""option"" ""compare"" ""database"" {{OptionCompareDatabase}}
   |   ""option"" ""compare""  (""binary""| ""text"" 'compare') {{OptionCompare}}
   |   ""option"" ""explicit"" {{OptionExplicit}}
   |  ""option"" ""private"" ""module""{{OptionPrivateModule}}
   ;

SetUpAssignation :  
	Identifier  'identifier' ""="" Expression 'value' {{SetUpAssignation}} 
;
Attribute
 : ""attribute"" SetUpAssignation 'setting' {{ModuleAttribute}}
 ;
Configuration 
:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* ""end"" {{Configuration}};

ModuleStatement :  
	Option  | Configuration | Attribute | DeclareExternal | VariableDefinition | BehaviourDefinition | Types
 ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Body statements
########## ########## ########## ########## ########## ########## ########## ########## 



Statement :   VariableDefinition | Attribute | Expression | ControlFlowStatement | Types ;
Block: Statement 'statement' (<eol>* Statement 'statement'  )* {{Block}};

BaseType: ""boolean"" | ""byte"" | ""collection"" | ""date"" | ""double"" | ""integer"" | ""long"" | ""object"" | ""single"" | ""string"" | ""variant"" {{BaseType}};
Visibility: ""private"" | ""public"" | ""friend"" | ""global"" ; 

ComplexType: Identifier 'name' {{ComplexType}};
Type: BaseType | ComplexType ;

TypedThing: (TypeSize 'size')? ""as""  Type 'type' (TypeSize 'size')? {{AsType}}; 
TypedAndInstantiatedThing: (TypeSize 'size')? ""as"" ""new""  Type 'type' (TypeSize 'size')?  {{AsTypeAndNew}}; 

TypeSize : (""("" TypeSizePattern 'size'? ( "","" TypeSizePattern 'size')* "")"") {{TypeSize}} ;
TypeSizePattern :  
	Expression 'size' {{SimpleSize}}|  Expression 'from' ""to"" Expression 'to' {{IntervalSize}} ;
AsType: TypedThing | TypedAndInstantiatedThing | TypeSize;



########## ########## ########## ########## ########## ########## ########## ########## 
########## Types
########## ########## ########## ########## ########## ########## ########## ########## 
Types : DefineEnum | DefineType | Event ;

DefineType : 	 (Visibility 'visibility')? ""type"" Identifier 'name' ( <eol>* TypeEntry 'field' )* <eol>* ""end"" ""type"" {{DefineType}}    ;
TypeEntry    : Identifier 'name' AsType 'type' (""*"" IntegerLiteral 'size' )? {{TypeEntry}}     ;
Event  : (Visibility 'visibility')?  ""event"" Identifier 'selector' ParameterList 'parameters' {{Event}} ;
DefineEnum    :  (Visibility 'visibility')?  ""enum"" Identifier 'name'  ( <eol>* EnumEntry 'field')* <eol>*  ""end"" ""enum"" {{DefineEnum}}    ;
EnumEntry    : Identifier 'name'  ( ""=""  Expression 'value')? {{EnumEntry}}    ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Parameters
########## ########## ########## ########## ########## ########## ########## ########## 
ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
ParameterList:  ""("" (Parameter 'parameter' ( "","" Parameter 'parameter')* )? "")"" {{ParameterList}};
Parameter: ""optional"" ? (ParameterPassingStrategy 'strategy')? ""paramarray""? Identifier 'name'  (AsType 'type')? (""="" Expression 'default')? {{Parameter}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## External declaration
########## ########## ########## ########## ########## ########## ########## ########## 
DeclareSub: (Visibility 'visibility')? ""declare""  ""sub"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  {{ExternalSub}};
DeclareFunction: (Visibility 'visibility')? ""declare""  ""function"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  AsType 'type' {{ExternalFunction}};
DeclareExternal : DeclareSub|DeclareFunction; 

########## ########## ########## ########## ########## ########## ########## ########## 
########## Function / Sub Definition 
########## ########## ########## ########## ########## ########## ########## ########## 

Modifier: ""static"" ;
DefineFunction: (Visibility 'visibility')? (Modifier 'modifier')? ""function"" Identifier 'selector' ParameterList 'parameters' (AsType 'type')? <eol>* Block 'block' ""end"" ""function"" {{FunctionDefinition}};
DefineSub:  (Visibility 'visibility')? (Modifier 'modifier')? ""sub"" Identifier 'selector' (ParameterList 'parameters') ? <eol>* Block 'block' ""end"" ""sub"" {{SubDefinition}};


ModulePropertyGet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""get"" Identifier 'selector' (ParameterList 'parameters') ? (AsType 'type')? <eol>* Block 'block' ""end"" ""property"" {{ModulePropertyGet}}; 
ModulePropertySet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""set"" Identifier 'selector'  (ParameterList 'parameters') ?   <eol>* Block 'block' ""end"" ""property"" {{ModulePropertyGet}}; 
ModulePropertyLet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""let"" Identifier 'selector' (ParameterList 'parameters') ?    <eol>* Block 'block' ""end"" ""property"" {{ModulePropertyGet}}; 


BehaviourDefinition:  DefineFunction | DefineSub | ModulePropertyGet | ModulePropertySet | ModulePropertyLet ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Variable / And Multiple Variables
########## ########## ########## ########## ########## ########## ########## ########## 

ModuleProperty : Visibility 'visibility' Variable 'variable' {{ModuleProperty}};
ModuleConstant : (Visibility 'visibility')? ""const"" Constant 'constant' {{ModuleConstant}};
DefineVariable : ""dim"" Variable 'variable' {{DimVariable}};
ReDefineVariable : ""redim"" ""preserve""? Variable 'variable' {{ReDimVariable}};
StaticVariable : ""static"" Variable 'variable' {{StaticVariable}};
Variable : ""WithEvents"" ? Identifier 'name' (AsType 'type') ? {{Variable}};
Constant :  Identifier 'constant' (AsType 'type')?  ""="" Expression 'value' {{Constant}} ;

ModuleProperties : Visibility 'visibility' VariableList 'variables' {{ModuleMultipleProperties}};
ModuleConstants : Visibility 'visibility'? ""const"" ConstantList 'constants' {{ModuleMultipleConstants}};
DefineVariables : ""dim"" VariableList 'variables' {{DimMultipleVariables}};
ReDefineVariables : ""redim""  ""preserve""?  VariableList 'variables' {{ReDimMultipleVariables}};
StaticVariables : ""static"" VariableList 'variables' {{StaticMultipleVariables}};
VariableList : Variable 'variable' ("",""  Variable 'variable' )+ {{VariableList}};
ConstantList : Constant 'constant' ("",""  Constant 'constant' )+ {{ConstantList}};

VariableDefinition : ModuleProperties | ModuleProperty | ModuleConstant | ModuleConstants | ConstantList | DefineVariable | ReDefineVariable |  DefineVariables |  ReDefineVariables | StaticVariable | StaticVariables ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Value Statements
########## ########## ########## ########## ########## ########## ########## ########## 

ValueStatement :  Operation | ValueClause | ImplicitCall | StateAccess | ExplicitCall | RaiseEvent  ;
Expression :  ValueStatement |  Identifier | literal  | ParentheseesExpression | Exits ; 
ParentheseesExpression : ""("" Expression 'expression' "")"" {{ParentheseesExpression}};
ValueStatementList : ValueStatement 'value' ("","" ValueStatement 'value' ) * {{ValueStatementList}} ; 

### Ops

Operation : UnaryOperation | BinaryOperation ;

DictionaryAccess :   Expression 'receiver' ""!"" Identifier 'member' {{DictionaryAccess}} ;
MemberAccess : Expression 'receiver' ""."" Identifier 'member' {{MemberAccess}} ;
ImplicitParenthesesLessCall : Identifier 'identifier' ArgumentList 'arguments' {{ImplicitParenthesesLessCall}} ;
ProcedureCallOrArrayAccess :  Expression 'receiver' ""("" ArgumentList 'arguments' "")"" {{ProcedureCallOrArrayAccess}} ;

Argument : (ParameterPassingStrategy 'strategy')?  ""paramarray""?  Expression 'value' {{Argument}};
ArgumentList : (Argument 'argument' ? ("","" | "";"" ))* Argument 'argument'? ( ("","" | "";"" )Argument 'argument' ?)* {{ArgumentList}};

ImplicitCall : Identifier | ProcedureCallOrArrayAccess | ImplicitParenthesesLessCall ;
StateAccess : DictionaryAccess | MemberAccess ;

ExplicitCall : ""Call""  ImplicitCall 'call'  {{ExplicitCall}}; 
RaiseEvent : ""RaiseEvent""  ImplicitCall 'call'  {{RaiseEvent}}; 

### Unary Ops 
UnaryOperation:  NegatedOperation | PositiveOperation |  NotOperation ; 

NegatedOperation : ""-""  Expression 'value' {{NegatedOperation}} ;
PositiveOperation : ""+"" Expression 'value' {{PositiveOperation}} ;
NotOperation : ""not""  Expression 'value'  {{NotOperation}};

### Binary Ops 
BinaryOperation: ComparisonOperation  
				| ArithmeticOperation | BooleanBinaryOperation 
				| ExplicitAssignement | AssignementOrEquals  | ConcatenationOperation ;

ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like""  ;
ComparisonOperation : Expression 'left' ComparisonOperator Expression 'right' {{ComparisonOperation}};
ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";
ArithmeticOperation : Expression 'left' ArithmeticOperator Expression 'right' {{ArithmeticOperation}};
BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
BooleanBinaryOperation : Expression 'left' BooleanOperator Expression 'right' {{ArithmeticOperation}};
ConcatenationOperation : Expression 'left' ""&"" Expression 'right' {{ConcatenationOperation}}; 
AssignementOrEquals : Expression 'left' ""="" Expression  'right' {{AssignementOrEquals}}; 
ExplicitAssignement : ""let"" | ""set""  Expression 'left' ""=""  Expression 'right' {{ExplicitAssignement}}; 
ExplicitAssignement :  Expression 'left' "":=""  Expression 'right' {{ExplicitAssignement}}; 
### Value Clause 
ValueClause: AddressOfClause | NewClause ;
AddressOfClause : ""AddressOf"" Identifier 'name'  {{AddressOfClause}}; 
NewClause : ""New"" Identifier 'typeName' {{NewClause}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## Control flow statements
########## ########## ########## ########## ########## ########## ########## ########## 


ControlFlowStatement : Exits| Loops | If  | On | Resume| Go | To | Label | With ; 

#### Loops
Loops : DoLoop | WhileWend | ForLoop ;

########## Do
DoLoop : InfinityLoop | WhileTrue | UntilTrue | DoWhileTrue | DoUntilTrue; 
InfinityLoop : 
	""do""  
		<eol>* (Block 'body')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{InfinityLoop}} ;

WhileTrue :  
	""do"" ""while"" ValueStatement 'condition' 
		<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{WhileTrue}}; 
UntilTrue : 
	""do"" ""until"" ValueStatement 'condition'
		 <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')?""loop"" 
 {{UntilTrue}}; 

DoWhileTrue :  
	""do""<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""loop""  ""while"" ValueStatement 'condition' 
{{DoWhileTrue}}; 

DoUntilTrue : 
	""do"" <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop"" ""until"" ValueStatement 'condition'
 {{DoUntilTrue}}; 

########## WhileWend
WhileWend: 
	""while"" ValueStatement 'condition'
		 <eol>* ( Block 'body')? <eol>*  (IntegerLiteral 'endLineNumber')? 
	""wend""  {{WhileWend}}; 

########## For 
ForLoop : ForEach | ForNext | ForStepNext;

ForEach :  
	""for"" ""each"" Identifier 'element' ""in"" Expression 'group' 
		 <eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
{{ForEach}} ;
 
ForNext :   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit'   
		<eol>*  ( Block 'body')? <eol>* 
	 (IntegerLiteral 'endLineNumber')? 	""next"" 
{{ForNext}} ;
ForStepNext:   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit' ""step"" Expression 'step'   
		<eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next""
 {{ForStepNext}} ;

########## If

If : IfThenColon | IfThenElseOneLine | IfThen | IfThenElse | IfThenElseIfElse | IfThenElseIf ; 

IfThenColon : ""if"" Expression 'condition' ""then"" Expression  'ifTrue' {{IfThenColon}} ;

IfThenElseOneLine : 
	""if"" Expression 'condition' ""then"" 
		 Expression  'ifTrue' 
	""else"" 
		 Expression  'ifFalse'  
{{IfThenColon}};


IfThen : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""end"" ""if"" 
{{IfThenElse}};

IfThenElse : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>* 
	(IntegerLiteral 'elseLineNumber')? ""else"" 
		 <eol>* (Block 'ifFalse')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElse}};

IfThenElseIfElse  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
""else""  
	<eol>* (Block 'otherwise')? <eol>*
 ""end"" ""if""
{{IfThenElseIfElse}};

IfThenElseIf  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
 ""end"" ""if""
{{IfThenElseIfElse}};


ElseIf: ElseIfBlock | ElseIfColon ;

ElseIfBlock : ""elseif"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifMatch')? <eol>*  {{ElseIfBlock}};
	
ElseIfColon : ""elseif"" Expression 'condition' ""then"" (  Expression 'ifMatch' ?  "":"" )* {{ElseIfColon}} ;

###### Label / LabelSub
	To : Label | LabelSub ;
	Label : Identifier 'label' "":""  {{GoToLabel}}; 
	LabelSub : Identifier 'label' "":"" (Block 'block' )? (IntegerLiteral 'endLineNumber')? ""return"" {{GoSubLabel}}; 

###### Resume
	Resume : ResumeLabel | ResumeNext | ResumeEmpty ;
	
	ResumeLabel : ""resume"" Identifier 'label' {{ResumeLabel}} ; 
	ResumeNext : ""resume"" ""next"" {{ResumeNext}} ; 
	ResumeEmpty : ""resume"" ; 

###### GoTo / GoSub 
Go: GoTo | GoSub ;

GoTo :  GoToLabel | GoToLine ;
GoToLabel : ""goto"" Identifier 'label' {{GoToLabel}}  ;
GoToLine :  ""goto"" IntegerLiteral 'lineNumber' {{GoToLine}}  ;

GoSub: GoSubLabel | GoSubLine ;
GoSubLabel :  ""gosub"" Identifier 'label'  {{GoSubLabel}} ;
GoSubLine :  ""gosub""  IntegerLiteral 'lineNumber'{{GoSubLine}} ;

########## On 
On: OnErrorGoTo | OnErrorResumeNext |  OnExpressionGo  ; 

OnErrorGoTo : ""on"" ""error"" GoTo 'to' {{OnErrorGoTo}}  ;
OnErrorResumeNext : ""on"" ""error"" ""resume""  ""next"" {{OnErrorResumeNext }} ;
OnExpressionGo : ""on"" Expression 'integerExpression' Go 'to' {{OnExpressionGo}} ;

########## Error
Error: ""error"" Expression 'errorCode' {{Error}} ;

########## With
With : ""with"" Identifier 'with' <eol>* (Block 'block' )? <eol>*  (IntegerLiteral 'endLineNumber')?""end"" ""with"" {{With}} ;

########## Exits

Exits : ExitFunction | ExitSub | ExitProperty | ExitDo |ExitFor ; 
ExitFunction : ""exit"" ""function"" {{Exits}} ; 
ExitSub : ""exit"" ""sub"" {{Exits}} ; 
ExitDo : ""exit"" ""do"" {{Exits}} ; 
ExitFor : ""exit"" ""for"" {{Exits}} ; 
ExitProperty : ""exit"" ""property"" {{Exits}} ;"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(133 0 #reduceActionFor_eol__1: 1715201 false ) 
	#(164 1 #liftFirstValue: 4640771 false ) 
	#(164 1 #liftFirstValue: 4640772 false ) 
	#(164 1 #liftFirstValue: 4640769 false ) 
	#(164 1 #liftFirstValue: 4640770 false ) 
	#(194 1 #liftFirstValue: 7514113 false ) 
	#(147 1 #reduceActionForSimpleIdentifier2: 2825218 false ) 
	#(147 1 #liftFirstValue: 2825217 false ) 
	#(146 1 #reduceActionForHashIdentifier1: 2757633 false ) 
	#(145 1 #liftFirstValue: 2655234 false ) 
	#(145 1 #liftFirstValue: 2655233 false ) 
	#(145 1 #liftFirstValue: 2655236 false ) 
	#(145 1 #liftFirstValue: 2655235 false ) 
	#(158 1 #liftFirstValue: 3977217 false ) 
	#(158 1 #liftFirstValue: 3977219 false ) 
	#(158 1 #liftFirstValue: 3977218 false ) 
	#(132 0 #reduceActionFor__eol___ModuleStatement__element____1: 1714177 false ) 
	#(158 1 #liftFirstValue: 3977223 false ) 
	#(174 1 #liftFirstValue: 5451778 false ) 
	#(174 1 #liftFirstValue: 5451779 false ) 
	#(174 1 #liftFirstValue: 5451777 false ) 
	#(193 1 #liftFirstValue: 7242753 false ) 
	#(193 1 #liftFirstValue: 7242754 false ) 
	#(158 1 #liftFirstValue: 3977220 false ) 
	#(200 1 #liftFirstValue: 8570881 false ) 
	#(200 1 #liftFirstValue: 8570882 false ) 
	#(200 1 #liftFirstValue: 8570883 false ) 
	#(200 1 #liftFirstValue: 8570884 false ) 
	#(200 1 #liftFirstValue: 8570885 false ) 
	#(158 1 #liftFirstValue: 3977222 false ) 
	#(219 1 #liftFirstValue: 10105858 false ) 
	#(219 1 #liftFirstValue: 10105859 false ) 
	#(219 1 #liftFirstValue: 10105862 false ) 
	#(219 1 #liftFirstValue: 10105863 false ) 
	#(219 1 #liftFirstValue: 10105866 false ) 
	#(219 1 #liftFirstValue: 10105857 false ) 
	#(219 1 #liftFirstValue: 10105860 false ) 
	#(219 1 #liftFirstValue: 10105864 false ) 
	#(219 1 #liftFirstValue: 10105865 false ) 
	#(219 1 #liftFirstValue: 10105867 false ) 
	#(219 1 #liftFirstValue: 10105861 false ) 
	#(158 1 #liftFirstValue: 3977221 false ) 
	#(148 2 #reduceActionForHeadlessIdentifier1: 2899969 false ) 
	#(153 2 #reduceActionForAttribute1: 3773441 false ) 
	#(202 2 #reduceActionForModuleConstant1: 8997889 false ) 
	#(209 2 #reduceActionForModuleConstants1: 9572353 false ) 
	#(206 1 #reduceActionForVariable1: 9300993 false ) 
	#(203 2 #reduceActionForDefineVariable1: 9092097 false ) 
	#(210 2 #reduceActionForDefineVariables1: 9679873 false ) 
	#(182 0 #reduceActionFor__eol___ModuleStatement__element____1: 5916673 false ) 
	#(151 2 #reduceActionForOption5: 3361797 false ) 
	#(135 1 #reduceActionForIntegerLiteral1: 2114561 false ) 
	#(151 2 #reduceActionForOption1: 3361793 false ) 
	#(204 2 #reduceActionForReDefineVariable1: 9153537 false ) 
	#(211 2 #reduceActionForReDefineVariables1: 9756673 false ) 
	#(205 2 #reduceActionForStaticVariable1: 9233409 false ) 
	#(212 2 #reduceActionForStaticVariables1: 9853953 false ) 
	#(177 0 #reduceActionFor__eol___ModuleStatement__element____1: 5564417 false ) 
	#(138 1 #reduceActionForFloatLiteral1: 2294785 false ) 
	#(150 2 #reduceActionForheader1: 3297281 false ) 
	#(171 0 #reduceActionFor__eol___ModuleStatement__element____1: 5019649 false ) 
	#(173 1 #liftFirstValue: 5188609 false ) 
	#(173 1 #liftFirstValue: 5188610 false ) 
	#(173 1 #liftFirstValue: 5188611 false ) 
	#(201 2 #reduceActionForModuleProperty1: 8914945 false ) 
	#(208 2 #reduceActionForModuleProperties1: 9472001 false ) 
	#(218 1 #reduceActionFor______Constant__constant____1: 10056705 false ) 
	#(216 2 #reduceActionForConstantList1: 10020865 false ) 
	#(133 2 #reduceActionFor_eol__2: 1715202 false ) 
	#(156 0 #reduceActionFor__eol___ModuleStatement__element____1: 3911681 false ) 
	#(206 2 #reduceActionForVariable3: 9300995 false ) 
	#(206 2 #reduceActionForVariable2: 9300994 false ) 
	#(215 1 #reduceActionFor______Constant__constant____1: 9972737 false ) 
	#(213 2 #reduceActionForVariableList1: 9936897 false ) 
	#(179 3 #reduceActionForEvent1: 5735425 false ) 
	#(151 3 #reduceActionForOption3: 3361795 false ) 
	#(151 3 #reduceActionForOption2: 3361794 false ) 
	#(151 3 #reduceActionForOption4: 3361796 false ) 
	#(151 3 #reduceActionForOption6: 3361798 false ) 
	#(204 3 #reduceActionForReDefineVariable2: 9153538 false ) 
	#(211 3 #reduceActionForReDefineVariables2: 9756674 false ) 
	#(150 3 #reduceActionForheader2: 3297282 false ) 
	#(254 1 #liftFirstValue: 13081601 false ) 
	#(137 1 #reduceActionForDateLiteral1: 2239489 false ) 
	#(136 1 #reduceActionForColorLiteral1: 2180097 false ) 
	#(139 1 #reduceActionForBooleanLiteral1: 2361345 false ) 
	#(140 1 #reduceActionForStringLiteral1: 2424833 false ) 
	#(141 1 #reduceActionForNull1: 2486273 false ) 
	#(221 1 #liftFirstValue: 10646531 false ) 
	#(134 1 #liftFirstValue: 1977345 false ) 
	#(134 1 #liftFirstValue: 1977346 false ) 
	#(134 1 #liftFirstValue: 1977347 false ) 
	#(134 1 #liftFirstValue: 1977348 false ) 
	#(134 1 #liftFirstValue: 1977349 false ) 
	#(134 1 #liftFirstValue: 1977350 false ) 
	#(134 1 #liftFirstValue: 1977351 false ) 
	#(134 1 #liftFirstValue: 1977352 false ) 
	#(237 1 #liftFirstValue: 11636737 false ) 
	#(221 1 #liftFirstValue: 10646530 false ) 
	#(234 0 #reduceActionFor_Argument__argument__________________1: 11517953 false ) 
	#(221 1 #liftFirstValue: 10646529 false ) 
	#(172 1 #reduceActionForTypeSizePattern1: 5071873 false ) 
	#(221 1 #liftFirstValue: 10646532 false ) 
	#(220 1 #liftFirstValue: 10542081 false ) 
	#(238 1 #liftFirstValue: 11725825 false ) 
	#(238 1 #liftFirstValue: 11725826 false ) 
	#(237 1 #liftFirstValue: 11636739 false ) 
	#(237 1 #liftFirstValue: 11636738 false ) 
	#(220 1 #liftFirstValue: 10542083 false ) 
	#(220 1 #liftFirstValue: 10542084 false ) 
	#(220 1 #liftFirstValue: 10542085 false ) 
	#(220 1 #liftFirstValue: 10542086 false ) 
	#(226 1 #liftFirstValue: 10940417 false ) 
	#(241 1 #liftFirstValue: 11923457 false ) 
	#(241 1 #liftFirstValue: 11923458 false ) 
	#(241 1 #liftFirstValue: 11923459 false ) 
	#(226 1 #liftFirstValue: 10940418 false ) 
	#(245 1 #liftFirstValue: 12214273 false ) 
	#(245 1 #liftFirstValue: 12214274 false ) 
	#(245 1 #liftFirstValue: 12214275 false ) 
	#(245 1 #liftFirstValue: 12214278 false ) 
	#(245 1 #liftFirstValue: 12214277 false ) 
	#(245 1 #liftFirstValue: 12214276 false ) 
	#(220 1 #liftFirstValue: 10542082 false ) 
	#(255 1 #liftFirstValue: 13301761 false ) 
	#(255 1 #liftFirstValue: 13301762 false ) 
	#(221 1 #liftFirstValue: 10646533 false ) 
	#(305 1 #liftFirstValue: 18162689 false ) 
	#(305 1 #liftFirstValue: 18162690 false ) 
	#(305 1 #liftFirstValue: 18162692 false ) 
	#(305 1 #liftFirstValue: 18162693 false ) 
	#(305 1 #liftFirstValue: 18162691 false ) 
	#(149 3 #reduceActionForQualifiedIdentifier1: 2972673 false ) 
	#(207 3 #reduceActionForConstant1: 9378817 false ) 
	#(163 1 #liftFirstValue: 4493313 false ) 
	#(163 1 #liftFirstValue: 4493314 false ) 
	#(163 1 #liftFirstValue: 4493315 false ) 
	#(163 1 #liftFirstValue: 4493316 false ) 
	#(163 1 #liftFirstValue: 4493317 false ) 
	#(163 1 #liftFirstValue: 4493318 false ) 
	#(163 1 #liftFirstValue: 4493319 false ) 
	#(163 1 #liftFirstValue: 4493320 false ) 
	#(163 1 #liftFirstValue: 4493321 false ) 
	#(163 1 #liftFirstValue: 4493322 false ) 
	#(163 1 #reduceActionForBaseType11: 4493323 false ) 
	#(165 1 #reduceActionForComplexType1: 4701185 false ) 
	#(166 1 #liftFirstValue: 4750337 false ) 
	#(166 1 #liftFirstValue: 4750338 false ) 
	#(167 2 #reduceActionForTypedThing1: 4783105 false ) 
	#(132 2 #reduceActionFor__eol___ModuleStatement__element____2: 1714178 false ) 
	#(130 3 #reduceActionFormodule1: 1651713 false ) 
	#(202 3 #reduceActionForModuleConstant2: 8997890 false ) 
	#(209 3 #reduceActionForModuleConstants2: 9572354 false ) 
	#(217 2 #reduceActionFor______Constant__constant___1: 10056705 false ) 
	#(218 2 #reduceActionFor______Constant__constant____2: 10056706 false ) 
	#(152 3 #reduceActionForSetUpAssignation1: 3677185 false ) 
	#(206 3 #reduceActionForVariable4: 9300996 false ) 
	#(214 2 #reduceActionFor______Constant__constant___1: 9972737 false ) 
	#(215 2 #reduceActionFor______Constant__constant____2: 9972738 false ) 
	#(182 2 #reduceActionFor___eol___EnumEntry__field___2: 5916674 false ) 
	#(185 2 #reduceActionForParameterList1: 6354945 false ) 
	#(184 1 #reduceActionForParameterPassingStrategy2: 6277122 false ) 
	#(184 1 #liftFirstValue: 6277121 false ) 
	#(190 0 #reduceActionFor_____Expression__default___1: 6572033 false ) 
	#(187 0 #reduceActionFor__eol___ModuleStatement__element____1: 6398977 false ) 
	#(291 1 #liftFirstValue: 17253377 false ) 
	#(159 1 #liftFirstValue: 4323330 false ) 
	#(162 0 #reduceActionFor__eol___ModuleStatement__element____1: 4446209 false ) 
	#(159 1 #liftFirstValue: 4323333 false ) 
	#(159 1 #liftFirstValue: 4323329 false ) 
	#(159 1 #liftFirstValue: 4323331 false ) 
	#(159 1 #liftFirstValue: 4323332 false ) 
	#(258 1 #liftFirstValue: 13696002 false ) 
	#(259 1 #liftFirstValue: 13793281 false ) 
	#(260 1 #liftFirstValue: 13848577 false ) 
	#(260 1 #liftFirstValue: 13848578 false ) 
	#(260 1 #liftFirstValue: 13848579 false ) 
	#(260 1 #liftFirstValue: 13848580 false ) 
	#(260 1 #liftFirstValue: 13848581 false ) 
	#(259 1 #liftFirstValue: 13793282 false ) 
	#(259 1 #liftFirstValue: 13793283 false ) 
	#(267 1 #liftFirstValue: 14846977 false ) 
	#(267 1 #liftFirstValue: 14846978 false ) 
	#(267 1 #liftFirstValue: 14846979 false ) 
	#(258 1 #liftFirstValue: 13696003 false ) 
	#(271 1 #liftFirstValue: 15537153 false ) 
	#(271 1 #liftFirstValue: 15537154 false ) 
	#(271 1 #liftFirstValue: 15537155 false ) 
	#(271 1 #liftFirstValue: 15537156 false ) 
	#(271 1 #liftFirstValue: 15537157 false ) 
	#(271 1 #liftFirstValue: 15537158 false ) 
	#(258 1 #liftFirstValue: 13696007 false ) 
	#(258 1 #liftFirstValue: 13696008 false ) 
	#(285 1 #liftFirstValue: 16879617 false ) 
	#(285 1 #liftFirstValue: 16879618 false ) 
	#(258 1 #liftFirstValue: 13696005 false ) 
	#(288 1 #liftFirstValue: 17086465 false ) 
	#(288 1 #liftFirstValue: 17086466 false ) 
	#(288 1 #liftFirstValue: 17086467 false ) 
	#(258 1 #liftFirstValue: 13696006 false ) 
	#(292 1 #liftFirstValue: 17302529 false ) 
	#(293 1 #liftFirstValue: 17323009 false ) 
	#(293 1 #liftFirstValue: 17323010 false ) 
	#(292 1 #liftFirstValue: 17302530 false ) 
	#(296 1 #liftFirstValue: 17476609 false ) 
	#(296 1 #liftFirstValue: 17476610 false ) 
	#(258 1 #liftFirstValue: 13696004 false ) 
	#(299 1 #liftFirstValue: 17652737 false ) 
	#(299 1 #liftFirstValue: 17652738 false ) 
	#(299 1 #liftFirstValue: 17652739 false ) 
	#(258 1 #liftFirstValue: 13696009 false ) 
	#(258 1 #liftFirstValue: 13696001 false ) 
	#(177 2 #reduceActionFor___eol___EnumEntry__field___2: 5564418 false ) 
	#(243 2 #reduceActionForPositiveOperation1: 12066817 false ) 
	#(242 2 #reduceActionForNegatedOperation1: 11999233 false ) 
	#(256 2 #reduceActionForAddressOfClause1: 13345793 false ) 
	#(239 2 #reduceActionForExplicitCall1: 11776001 false ) 
	#(257 2 #reduceActionForNewClause1: 13418497 false ) 
	#(240 2 #reduceActionForRaiseEvent1: 11840513 false ) 
	#(308 2 #reduceActionForExitDo1: 18315265 false ) 
	#(309 2 #reduceActionForExitFor1: 18350081 false ) 
	#(306 2 #reduceActionForExitFunction1: 18231297 false ) 
	#(310 2 #reduceActionForExitProperty1: 18386945 false ) 
	#(307 2 #reduceActionForExitSub1: 18278401 false ) 
	#(244 2 #reduceActionForNotOperation1: 12135425 false ) 
	#(143 1 #reduceActionFor_HEX_INTEGER___1: 2542593 false ) 
	#(229 2 #reduceActionForImplicitParenthesesLessCall1: 11163649 false ) 
	#(236 0 #reduceActionFor_Argument__argument__________________1: 11578369 false ) 
	#(169 3 #reduceActionForTypeSize1: 4978689 false ) 
	#(171 2 #reduceActionFor______Constant__constant____2: 5019650 false ) 
	#(248 1 #reduceActionForArithmeticOperator1: 12566529 false ) 
	#(248 1 #reduceActionForArithmeticOperator2: 12566530 false ) 
	#(248 1 #reduceActionForArithmeticOperator3: 12566531 false ) 
	#(248 1 #reduceActionForArithmeticOperator4: 12566532 false ) 
	#(246 1 #reduceActionForArithmeticOperator2: 12386306 false ) 
	#(246 1 #reduceActionForArithmeticOperator4: 12386308 false ) 
	#(246 1 #reduceActionForArithmeticOperator3: 12386307 false ) 
	#(246 1 #reduceActionForArithmeticOperator1: 12386305 false ) 
	#(246 1 #reduceActionForComparisonOperator5: 12386309 false ) 
	#(248 1 #reduceActionForArithmeticOperator7: 12566535 false ) 
	#(248 1 #reduceActionForArithmeticOperator6: 12566534 false ) 
	#(248 1 #reduceActionForComparisonOperator5: 12566533 false ) 
	#(250 1 #reduceActionForBooleanOperator1: 12737537 false ) 
	#(250 1 #reduceActionForBooleanOperator4: 12737540 false ) 
	#(246 1 #reduceActionForArithmeticOperator6: 12386310 false ) 
	#(246 1 #reduceActionForArithmeticOperator7: 12386311 false ) 
	#(250 1 #reduceActionForBooleanOperator2: 12737538 false ) 
	#(250 1 #reduceActionForBooleanOperator3: 12737539 false ) 
	#(168 3 #reduceActionForTypedAndInstantiatedThing1: 4866049 false ) 
	#(167 3 #reduceActionForTypedThing2: 4783106 false ) 
	#(167 3 #reduceActionForTypedThing3: 4783107 false ) 
	#(207 4 #reduceActionForConstant2: 9378818 false ) 
	#(131 2 #reduceActionFor__eol___ModuleStatement__element___1: 1714177 false ) 
	#(179 4 #reduceActionForEvent2: 5735426 false ) 
	#(154 5 #reduceActionForConfiguration1: 3850241 false ) 
	#(157 1 #reduceActionFor_HEX_INTEGER___1: 3913729 false ) 
	#(156 2 #reduceActionFor__eol___ModuleStatement__element____2: 3911682 false ) 
	#(183 1 #reduceActionForEnumEntry1: 5988353 false ) 
	#(181 2 #reduceActionFor__eol___ModuleStatement__element___1: 5916673 false ) 
	#(190 1 #reduceActionFor_____Expression__default___2: 6572034 false ) 
	#(188 2 #reduceActionForParameter1: 6456321 false ) 
	#(298 2 #reduceActionForGoSubLine1: 17569793 false ) 
	#(297 2 #reduceActionForGoSubLabel1: 17509377 false ) 
	#(295 2 #reduceActionForGoToLine1: 17411073 false ) 
	#(294 2 #reduceActionForGoToLabel1: 17354753 false ) 
	#(290 2 #reduceActionForResumeNext1: 17204225 false ) 
	#(289 2 #reduceActionForResumeLabel1: 17140737 false ) 
	#(286 2 #reduceActionForLabel1: 16905217 false ) 
	#(160 2 #reduceActionForBlock1: 4416513 false ) 
	#(176 2 #reduceActionFor__eol___ModuleStatement__element___1: 5564417 false ) 
	#(222 3 #reduceActionForParentheseesExpression1: 10738689 false ) 
	#(143 2 #reduceActionFor_eol__2: 2542594 false ) 
	#(233 1 #reduceActionFor_Argument__argument_________________1: 11517953 false ) 
	#(233 1 #reduceActionFor_Argument__argument_________________2: 11517954 false ) 
	#(231 1 #reduceActionForArgument1: 11401217 false ) 
	#(234 2 #reduceActionFor_Argument__argument__________________2: 11517954 false ) 
	#(232 2 #reduceActionForArgumentList1: 11502593 false ) 
	#(170 2 #reduceActionFor______Constant__constant___1: 5019649 false ) 
	#(169 4 #reduceActionForTypeSize2: 4978690 false ) 
	#(227 3 #reduceActionForDictionaryAccess1: 10989569 false ) 
	#(252 3 #reduceActionForConcatenationOperation1: 12892161 false ) 
	#(228 3 #reduceActionForMemberAccess1: 11081729 false ) 
	#(254 3 #reduceActionForExplicitAssignement3: 13081603 false ) 
	#(253 3 #reduceActionForAssignementOrEquals1: 12989441 false ) 
	#(172 3 #reduceActionForTypeSizePattern2: 5071874 false ) 
	#(247 3 #reduceActionForComparisonOperation1: 12461057 false ) 
	#(249 3 #reduceActionForArithmeticOperation1: 12632065 false ) 
	#(251 3 #reduceActionForBooleanBinaryOperation1: 12786689 false ) 
	#(168 4 #reduceActionForTypedAndInstantiatedThing2: 4866050 false ) 
	#(168 4 #reduceActionForTypedAndInstantiatedThing3: 4866051 false ) 
	#(167 4 #reduceActionForTypedThing4: 4783108 false ) 
	#(130 5 #reduceActionFormodule2: 1651714 false ) 
	#(157 2 #reduceActionFor_eol__2: 3913730 false ) 
	#(155 2 #reduceActionFor__eol___ModuleStatement__element___1: 3911681 false ) 
	#(191 6 #reduceActionForDeclareSub1: 6832129 false ) 
	#(180 6 #reduceActionForDefineEnum1: 5843969 false ) 
	#(188 3 #reduceActionForParameter9: 6456329 false ) 
	#(188 3 #reduceActionForParameter3: 6456323 false ) 
	#(189 2 #reduceActionFor______Constant__constant___1: 6572033 false ) 
	#(188 3 #reduceActionForParameter2: 6456322 false ) 
	#(188 3 #reduceActionForParameter5: 6456325 false ) 
	#(185 4 #reduceActionForParameterList2: 6354946 false ) 
	#(187 2 #reduceActionFor______Constant__constant____2: 6398978 false ) 
	#(300 3 #reduceActionForOnErrorGoTo1: 17713153 false ) 
	#(302 3 #reduceActionForOnExpressionGo1: 17847297 false ) 
	#(287 3 #reduceActionForLabelSub1: 16955393 false ) 
	#(162 2 #reduceActionFor___eol___EnumEntry__field___2: 4446210 false ) 
	#(196 6 #reduceActionForDefineSub1: 7745537 false ) 
	#(175 6 #reduceActionForDefineType1: 5495809 false ) 
	#(178 2 #reduceActionForTypeEntry1: 5636097 false ) 
	#(254 4 #reduceActionForExplicitAssignement2: 13081602 false ) 
	#(144 1 #reduceActionFor_HEX_INTEGER___1: 2562049 false ) 
	#(231 2 #reduceActionForArgument2: 11401218 false ) 
	#(231 2 #reduceActionForArgument3: 11401219 false ) 
	#(233 2 #reduceActionFor_Argument__argument_________________3: 11517955 false ) 
	#(233 2 #reduceActionFor_Argument__argument_________________4: 11517956 false ) 
	#(232 3 #reduceActionForArgumentList2: 11502594 false ) 
	#(235 1 #reduceActionFor_Argument__argument_________________1: 11578369 false ) 
	#(235 1 #reduceActionFor______________Argument__argument____3: 11578371 false ) 
	#(236 2 #reduceActionFor_Argument__argument__________________2: 11578370 false ) 
	#(230 4 #reduceActionForProcedureCallOrArrayAccess1: 11279361 false ) 
	#(168 5 #reduceActionForTypedAndInstantiatedThing4: 4866052 false ) 
	#(192 7 #reduceActionForDeclareFunction1: 7022593 false ) 
	#(183 3 #reduceActionForEnumEntry2: 5988354 false ) 
	#(188 4 #reduceActionForParameter11: 6456331 false ) 
	#(188 4 #reduceActionForParameter10: 6456330 false ) 
	#(188 4 #reduceActionForParameter13: 6456333 false ) 
	#(188 4 #reduceActionForParameter4: 6456324 false ) 
	#(188 4 #reduceActionForParameter7: 6456327 false ) 
	#(188 4 #reduceActionForParameter6: 6456326 false ) 
	#(186 2 #reduceActionFor______Constant__constant___1: 6398977 false ) 
	#(195 7 #reduceActionForDefineFunction1: 7535617 false ) 
	#(197 7 #reduceActionForModulePropertyGet1: 7924737 false ) 
	#(199 7 #reduceActionForModulePropertyLet1: 8358913 false ) 
	#(198 7 #reduceActionForModulePropertySet1: 8148993 false ) 
	#(261 4 #reduceActionForInfinityLoop1: 13926401 false ) 
	#(272 4 #reduceActionForIfThenColon1: 15636481 false ) 
	#(301 4 #reduceActionForOnErrorResumeNext1: 17770497 false ) 
	#(287 4 #reduceActionForLabelSub2: 16955394 false ) 
	#(287 4 #reduceActionForLabelSub3: 16955395 false ) 
	#(161 2 #reduceActionFor__eol___ModuleStatement__element___1: 4446209 false ) 
	#(196 7 #reduceActionForDefineSub2: 7745538 false ) 
	#(144 2 #reduceActionFor_eol__2: 2562050 false ) 
	#(231 3 #reduceActionForArgument4: 11401220 false ) 
	#(235 2 #reduceActionFor______________Argument__argument____2: 11578370 false ) 
	#(235 2 #reduceActionFor_Argument__argument_________________4: 11578372 false ) 
	#(191 7 #reduceActionForDeclareSub3: 6832131 false ) 
	#(180 7 #reduceActionForDefineEnum2: 5843970 false ) 
	#(196 7 #reduceActionForDefineSub5: 7745541 false ) 
	#(175 7 #reduceActionForDefineType2: 5495810 false ) 
	#(196 7 #reduceActionForDefineSub3: 7745539 false ) 
	#(191 8 #reduceActionForDeclareSub2: 6832130 false ) 
	#(188 5 #reduceActionForParameter12: 6456332 false ) 
	#(188 5 #reduceActionForParameter15: 6456335 false ) 
	#(188 5 #reduceActionForParameter14: 6456334 false ) 
	#(188 5 #reduceActionForParameter8: 6456328 false ) 
	#(195 8 #reduceActionForDefineFunction2: 7535618 false ) 
	#(197 8 #reduceActionForModulePropertyGet2: 7924738 false ) 
	#(197 8 #reduceActionForModulePropertyGet3: 7924739 false ) 
	#(199 8 #reduceActionForModulePropertyLet2: 8358914 false ) 
	#(198 8 #reduceActionForModulePropertySet2: 8148994 false ) 
	#(261 5 #reduceActionForInfinityLoop2: 13926402 false ) 
	#(261 5 #reduceActionForInfinityLoop3: 13926403 false ) 
	#(266 5 #reduceActionForWhileWend1: 14683137 false ) 
	#(287 5 #reduceActionForLabelSub4: 16955396 false ) 
	#(178 4 #reduceActionForTypeEntry2: 5636098 false ) 
	#(192 8 #reduceActionForDeclareFunction3: 7022595 false ) 
	#(195 8 #reduceActionForDefineFunction5: 7535621 false ) 
	#(197 8 #reduceActionForModulePropertyGet9: 7924745 false ) 
	#(199 8 #reduceActionForModulePropertyLet5: 8358917 false ) 
	#(198 8 #reduceActionForModulePropertySet5: 8148997 false ) 
	#(196 8 #reduceActionForDefineSub6: 7745542 false ) 
	#(196 8 #reduceActionForDefineSub7: 7745543 false ) 
	#(195 8 #reduceActionForDefineFunction3: 7535619 false ) 
	#(197 8 #reduceActionForModulePropertyGet5: 7924741 false ) 
	#(199 8 #reduceActionForModulePropertyLet3: 8358915 false ) 
	#(198 8 #reduceActionForModulePropertySet3: 8148995 false ) 
	#(196 8 #reduceActionForDefineSub4: 7745540 false ) 
	#(192 9 #reduceActionForDeclareFunction2: 7022594 false ) 
	#(188 6 #reduceActionForParameter16: 6456336 false ) 
	#(197 9 #reduceActionForModulePropertyGet4: 7924740 false ) 
	#(262 6 #reduceActionForWhileTrue1: 14050305 false ) 
	#(264 6 #reduceActionForDoWhileTrue1: 14354433 false ) 
	#(261 6 #reduceActionForInfinityLoop4: 13926404 false ) 
	#(278 1 #reduceActionFor_HEX_INTEGER___1: 16350209 false ) 
	#(277 1 #liftFirstValue: 16350209 false ) 
	#(280 1 #liftFirstValue: 16596993 false ) 
	#(280 1 #liftFirstValue: 16596994 false ) 
	#(273 6 #reduceActionForIfThenElseOneLine1: 15727617 false ) 
	#(266 6 #reduceActionForWhileWend2: 14683138 false ) 
	#(266 6 #reduceActionForWhileWend3: 14683139 false ) 
	#(304 6 #reduceActionForWith1: 18018305 false ) 
	#(191 9 #reduceActionForDeclareSub4: 6832132 false ) 
	#(195 9 #reduceActionForDefineFunction6: 7535622 false ) 
	#(197 9 #reduceActionForModulePropertyGet10: 7924746 false ) 
	#(197 9 #reduceActionForModulePropertyGet11: 7924747 false ) 
	#(199 9 #reduceActionForModulePropertyLet6: 8358918 false ) 
	#(198 9 #reduceActionForModulePropertySet6: 8148998 false ) 
	#(195 9 #reduceActionForDefineFunction7: 7535623 false ) 
	#(197 9 #reduceActionForModulePropertyGet13: 7924749 false ) 
	#(199 9 #reduceActionForModulePropertyLet7: 8358919 false ) 
	#(198 9 #reduceActionForModulePropertySet7: 8148999 false ) 
	#(196 9 #reduceActionForDefineSub8: 7745544 false ) 
	#(195 9 #reduceActionForDefineFunction4: 7535620 false ) 
	#(197 9 #reduceActionForModulePropertyGet6: 7924742 false ) 
	#(197 9 #reduceActionForModulePropertyGet7: 7924743 false ) 
	#(199 9 #reduceActionForModulePropertyLet4: 8358916 false ) 
	#(198 9 #reduceActionForModulePropertySet4: 8148996 false ) 
	#(263 7 #reduceActionForUntilTrue1: 14204929 false ) 
	#(262 7 #reduceActionForWhileTrue2: 14050306 false ) 
	#(262 7 #reduceActionForWhileTrue3: 14050307 false ) 
	#(264 7 #reduceActionForDoWhileTrue2: 14354434 false ) 
	#(265 7 #reduceActionForDoUntilTrue1: 14511105 false ) 
	#(264 7 #reduceActionForDoWhileTrue3: 14354435 false ) 
	#(274 7 #reduceActionForIfThen1: 15868929 false ) 
	#(278 2 #reduceActionFor_eol__2: 16350210 false ) 
	#(266 7 #reduceActionForWhileWend4: 14683140 false ) 
	#(304 7 #reduceActionForWith2: 18018306 false ) 
	#(304 7 #reduceActionForWith3: 18018307 false ) 
	#(192 10 #reduceActionForDeclareFunction4: 7022596 false ) 
	#(197 10 #reduceActionForModulePropertyGet12: 7924748 false ) 
	#(195 10 #reduceActionForDefineFunction8: 7535624 false ) 
	#(197 10 #reduceActionForModulePropertyGet14: 7924750 false ) 
	#(197 10 #reduceActionForModulePropertyGet15: 7924751 false ) 
	#(199 10 #reduceActionForModulePropertyLet8: 8358920 false ) 
	#(198 10 #reduceActionForModulePropertySet8: 8149000 false ) 
	#(197 10 #reduceActionForModulePropertyGet8: 7924744 false ) 
	#(263 8 #reduceActionForUntilTrue2: 14204930 false ) 
	#(262 8 #reduceActionForWhileTrue4: 14050308 false ) 
	#(265 8 #reduceActionForDoUntilTrue2: 14511106 false ) 
	#(264 8 #reduceActionForDoWhileTrue4: 14354436 false ) 
	#(268 8 #reduceActionForForEach1: 14892033 false ) 
	#(284 0 #reduceActionFor__eol___ModuleStatement__element____1: 16799745 false ) 
	#(274 8 #reduceActionForIfThen2: 15868930 false ) 
	#(279 8 #reduceActionForIfThenElseIf1: 16451585 false ) 
	#(274 8 #reduceActionForIfThen3: 15868931 false ) 
	#(304 8 #reduceActionForWith4: 18018308 false ) 
	#(197 11 #reduceActionForModulePropertyGet16: 7924752 false ) 
	#(268 9 #reduceActionForForEach2: 14892034 false ) 
	#(268 9 #reduceActionForForEach3: 14892035 false ) 
	#(268 9 #reduceActionForForEach5: 14892037 false ) 
	#(269 9 #reduceActionForForNext1: 15089665 false ) 
	#(282 4 #reduceActionForElseIfColon1: 16745473 false ) 
	#(274 9 #reduceActionForIfThen4: 15868932 false ) 
	#(279 9 #reduceActionForIfThenElseIf2: 16451586 false ) 
	#(268 10 #reduceActionForForEach4: 14892036 false ) 
	#(268 10 #reduceActionForForEach6: 14892038 false ) 
	#(268 10 #reduceActionForForEach7: 14892039 false ) 
	#(269 10 #reduceActionForForNext2: 15089666 false ) 
	#(269 10 #reduceActionForForNext3: 15089667 false ) 
	#(275 10 #reduceActionForIfThenElse1: 16020481 false ) 
	#(281 5 #reduceActionForElseIfBlock1: 16634881 false ) 
	#(283 1 #reduceActionFor___Expression__ifMatch__________1: 16799745 false ) 
	#(284 2 #reduceActionFor______Constant__constant____2: 16799746 false ) 
	#(142 11 #reduceActionForGuidLiteral1: 2526209 false ) 
	#(268 11 #reduceActionForForEach8: 14892040 false ) 
	#(270 11 #reduceActionForForStepNext1: 15289345 false ) 
	#(269 11 #reduceActionForForNext4: 15089668 false ) 
	#(275 11 #reduceActionForIfThenElse2: 16020482 false ) 
	#(275 11 #reduceActionForIfThenElse3: 16020483 false ) 
	#(281 6 #reduceActionForElseIfBlock2: 16634882 false ) 
	#(283 2 #reduceActionFor___Expression__ifMatch__________2: 16799746 false ) 
	#(275 11 #reduceActionForIfThenElse5: 16020485 false ) 
	#(276 11 #reduceActionForIfThenElseIfElse1: 16257025 false ) 
	#(275 11 #reduceActionForIfThenElse9: 16020489 false ) 
	#(270 12 #reduceActionForForStepNext2: 15289346 false ) 
	#(270 12 #reduceActionForForStepNext3: 15289347 false ) 
	#(275 12 #reduceActionForIfThenElse4: 16020484 false ) 
	#(275 12 #reduceActionForIfThenElse6: 16020486 false ) 
	#(275 12 #reduceActionForIfThenElse7: 16020487 false ) 
	#(276 12 #reduceActionForIfThenElseIfElse2: 16257026 false ) 
	#(275 12 #reduceActionForIfThenElse10: 16020490 false ) 
	#(275 12 #reduceActionForIfThenElse11: 16020491 false ) 
	#(275 12 #reduceActionForIfThenElse13: 16020493 false ) 
	#(276 12 #reduceActionForIfThenElseIfElse3: 16257027 false ) 
	#(270 13 #reduceActionForForStepNext4: 15289348 false ) 
	#(275 13 #reduceActionForIfThenElse8: 16020488 false ) 
	#(275 13 #reduceActionForIfThenElse12: 16020492 false ) 
	#(275 13 #reduceActionForIfThenElse14: 16020494 false ) 
	#(275 13 #reduceActionForIfThenElse15: 16020495 false ) 
	#(276 13 #reduceActionForIfThenElseIfElse4: 16257028 false ) 
	#(275 14 #reduceActionForIfThenElse16: 16020496 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"!="' '"&"' '"&&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<="' '"<>"' '"="' '">"' '">="' '"AddressOf"' '"Call"' '"Mod"' '"NEW"' '"RaiseEvent"' '"WithEvents"' '"["' '"\"' '"^"' '"alias"' '"and"' '"as"' '"attribute"' '"begin"' '"binary"' '"boolean"' '"byref"' '"byte"' '"byval"' '"class"' '"collection"' '"compare"' '"const"' '"database"' '"date"' '"declare"' '"delete"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"elseif"' '"end"' '"enum"' '"eqv"' '"error"' '"event"' '"exit"' '"explicit"' '"for"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"in"' '"integer"' '"is"' '"let"' '"lib"' '"like"' '"long"' '"loop"' '"module"' '"next"' '"not"' '"object"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"||"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<comment>' 'B e g i n' 'module' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' '<eol>*' 'literal' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' '<HEX_INTEGER>+' 'Identifier' 'HashIdentifier' 'SimpleIdentifier' 'HeadlessIdentifier' 'QualifiedIdentifier' 'header' 'Option' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'ModuleStatement' 'Statement' 'Block' '(<eol>* Statement ''statement''  )' '(<eol>* Statement ''statement''  )*' 'BaseType' 'Visibility' 'ComplexType' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '( "," TypeSizePattern ''size'')' '( "," TypeSizePattern ''size'')*' 'TypeSizePattern' 'AsType' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '( "," Parameter ''parameter'')' '( "," Parameter ''parameter'')*' 'Parameter' '("=" Expression ''default'')' '("=" Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '(","  Variable ''variable'' )' '(","  Variable ''variable'' )+' 'ConstantList' '(","  Constant ''constant'' )' '(","  Constant ''constant'' )+' 'VariableDefinition' 'ValueStatement' 'Expression' 'ParentheseesExpression' 'ValueStatementList' '("," ValueStatement ''value'' )' '("," ValueStatement ''value'' ) *' 'Operation' 'DictionaryAccess' 'MemberAccess' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" ))' '(Argument ''argument'' ? ("," | ";" ))*' '( ("," | ";" )Argument ''argument'' ?)' '( ("," | ";" )Argument ''argument'' ?)*' 'ImplicitCall' 'StateAccess' 'ExplicitCall' 'RaiseEvent' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'ConcatenationOperation' 'AssignementOrEquals' 'ExplicitAssignement' 'ValueClause' 'AddressOfClause' 'NewClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForStepNext' 'If' 'IfThenColon' 'IfThenElseOneLine' 'IfThen' 'IfThenElse' 'IfThenElseIfElse' '(ElseIf ''case'')' '(ElseIf ''case'') +' 'IfThenElseIf' 'ElseIf' 'ElseIfBlock' 'ElseIfColon' '(  Expression ''ifMatch'' ?  ":" )' '(  Expression ''ifMatch'' ?  ":" )*' 'To' 'Label' 'LabelSub' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'GoTo' 'GoToLabel' 'GoToLine' 'GoSub' 'GoSubLabel' 'GoSubLine' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #OrderedCollection #Object #VBHashIdentifierNode #Object #VBHeadlessIdentifierNode #VBQualifiedIdentifierNode #VBHeaderNode #VBProgramNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBComplexTypeNode #Object #VBAsTypeNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #Object #Object #VBParentheseesExpressionNode #VBValueStatementListNode #OrderedCollection #OrderedCollection #Object #VBDictionaryAccessNode #VBMemberAccessNode #VBImplicitParenthesesLessCallNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #Object #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #Object #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBConcatenationOperationNode #VBAssignementOrEqualsNode #Object #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #Object #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForStepNextNode #VBProgramNode #VBIfThenColonNode #VBIfThenColonNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseIfElseNode #VBProgramNode #OrderedCollection #VBIfThenElseIfElseNode #VBProgramNode #VBElseIfBlockNode #VBElseIfColonNode #OrderedCollection #OrderedCollection #VBProgramNode #VBGoToLabelNode #VBGoSubLabelNode #Object #VBResumeLabelNode #VBResumeNextNode #SmaCCToken #VBProgramNode #VBProgramNode #VBGoToLabelNode #VBGoToLineNode #VBProgramNode #VBGoSubLabelNode #VBGoSubLineNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 9 0 11 0 13 0 34 0 17 0 35 0 21 0 44 0 25 0 47 0 29 0 49 0 33 0 56 0 37 0 59 0 145 0 63 0 45 0 64 0 145 0 66 0 53 0 83 0 145 0 88 0 61 0 89 0 145 0 90 0 69 0 91 0 73 0 96 0 77 0 99 0 81 0 100 0 85 0 103 0 89 0 106 0 105 0 124 0 97 0 125 0 101 0 130 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 0 125 0 150 0 141 0 151 0 141 0 153 0 141 0 154 0 141 0 158 0 145 0 164 0 141 0 174 0 141 0 175 0 141 0 179 0 141 0 180 0 141 0 191 0 141 0 192 0 141 0 193 0 177 0 194 0 141 0 195 0 141 0 196 0 141 0 197 0 141 0 198 0 141 0 199 0 141 0 200 0 141 0 201 0 141 0 202 0 141 0 203 0 141 0 204 0 141 0 205 0 225 0 207 0 141 0 208 0 141 0 209 0 141 0 210 0 141 0 211 0 141 0 212 0 141 0 216 0 141 0 219] 
#[1 0 9 0 11 0 81 0 100 1 1 0 124 0 97 0 125 1 1 0 145 1 1 0 146 1 1 0 147 1 1 0 148 1 1 0 149] 
#[1 0 9 0 11 0 81 0 100 1 5 0 124 0 97 0 125 1 5 0 145 1 5 0 146 1 5 0 147 1 5 0 148 1 5 0 149 1 9 0 152] 
#[1 0 6 0 11 0 6 0 100 0 6 0 124 0 6 0 125 0 6 0 127 1 13 0 133] 
#[1 0 9 0 11 0 81 0 100 0 105 0 124 0 97 0 125 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 1 17 0 207 1 21 0 216] 
#[1 1 25 0 64 1 29 0 99] 
#[1 0 9 0 11 1 33 0 27 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 41 0 206 1 45 0 213] 
#[1 0 9 0 11 0 81 0 100 1 49 0 124 0 97 0 125 1 49 0 145 1 49 0 146 1 49 0 147 1 49 0 148 1 49 0 149] 
#[1 0 9 0 11 0 81 0 100 1 53 0 124 0 97 0 125 1 53 0 145 1 53 0 146 1 53 0 147 1 53 0 148 1 53 0 149] 
#[0 0 10 0 11 0 27 0 44 0 47 0 56 0 59 0 64 0 89 0 96 0 99 0 100 0 103 0 124 0 125] 
#[1 0 9 0 11 0 81 0 100 1 57 0 124 0 97 0 125 1 57 0 145 1 57 0 146 1 57 0 147 1 57 0 148 1 57 0 149] 
#[0 0 14 0 11 0 27 0 44 0 47 0 56 0 59 0 64 0 89 0 96 0 99 0 100 0 103 0 124 0 125] 
#[1 1 61 0 43 1 65 0 61 1 69 0 88 1 73 0 119 1 77 0 135] 
#[0 0 18 0 11 0 27 0 44 0 47 0 56 0 59 0 64 0 89 0 96 0 99 0 100 0 103 0 124 0 125] 
#[1 1 81 0 65 1 85 0 73 1 89 0 94] 
#[0 0 22 0 11 0 27 0 44 0 47 0 56 0 59 0 64 0 89 0 96 0 99 0 100 0 103 0 124 0 125] 
#[1 0 9 0 11 1 33 0 27 1 93 0 87 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 97 0 206 1 101 0 213] 
#[1 0 9 0 11 1 33 0 27 0 26 0 64 0 26 0 89 0 26 0 99 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 105 0 206 1 109 0 213] 
#[1 0 9 0 11 0 81 0 100 1 113 0 124 0 97 0 125 1 113 0 145 1 113 0 146 1 113 0 147 1 113 0 148 1 113 0 149] 
#[0 0 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 1 117 0 124 0 97 0 125 1 117 0 145 1 117 0 146 1 117 0 147 1 117 0 148 1 117 0 149] 
#[1 1 121 0 120 1 125 0 138] 
#[0 0 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 0 1 55] 
#[1 1 129 0 5 1 133 0 11 1 137 0 19 1 141 0 33 1 157 0 167 1 157 0 168 1 153 0 169 1 157 0 173] 
#[0 0 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 50 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 6 0 11 0 6 0 34 0 6 0 35 0 6 0 44 0 6 0 47 0 6 0 49 0 6 0 56 0 6 0 59 0 6 0 63 0 6 0 64 0 6 0 66 0 6 0 83 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 96 0 6 0 99 0 6 0 100 0 6 0 103 0 6 0 124 0 6 0 125 0 6 0 127 1 161 0 133] 
#[0 0 58 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 62 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 66 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 0 70 0 11 0 70 0 34 0 70 0 35 0 70 0 44 0 70 0 47 0 70 0 49 0 70 0 56 0 70 0 59 0 70 0 63 0 70 0 64 0 70 0 66 0 70 0 83 0 70 0 88 0 70 0 89 0 70 0 90 0 70 0 91 0 70 0 96 0 70 0 99 0 70 0 100 0 70 0 103 0 70 0 124 0 70 0 125 0 70 0 127 1 165 0 132 0 70 1 55] 
#[1 0 9 0 11 1 33 0 27 1 169 0 44 1 173 0 47 1 177 0 56 1 181 0 59 1 185 0 64 1 189 0 89 1 205 0 96 1 197 0 99 0 81 0 100 1 201 0 103 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 205 0 194 1 209 0 206 1 213 0 213] 
#[0 0 74 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 78 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 82 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 86 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 90 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 94 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 98 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 1 217 0 64 1 221 0 89 1 225 0 99] 
#[0 0 102 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 106 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 110 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 114 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 118 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 122 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 126 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 130 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 134 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 138 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 142 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 229 0 9 1 233 0 217 1 237 0 218] 
#[0 0 146 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 150 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 154 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 158 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 162 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 166 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 170 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 0 174 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 133 0 11 1 241 0 19] 
#[0 0 178 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 1 5 0 124 0 97 0 125 1 245 0 127 1 5 0 145 1 5 0 146 1 5 0 147 1 5 0 148 1 5 0 149 1 249 0 152] 
#[1 0 182 0 5 0 182 0 8 1 229 0 9 0 182 0 10 0 182 0 11 0 182 0 22 0 182 0 23 0 182 0 25 0 182 0 26 0 182 0 34 0 182 0 35 0 182 0 44 0 182 0 47 0 182 0 49 0 182 0 50 0 182 0 53 0 182 0 54 0 182 0 55 0 182 0 56 0 182 0 59 0 182 0 60 0 182 0 62 0 182 0 63 0 182 0 64 0 182 0 66 0 182 0 67 0 182 0 68 0 182 0 69 0 182 0 73 0 182 0 77 0 182 0 79 0 182 0 80 0 182 0 82 0 182 0 83 0 182 0 88 0 182 0 89 0 182 0 90 0 182 0 91 0 182 0 92 0 182 0 93 0 182 0 94 0 182 0 96 0 182 0 99 0 182 0 100 0 182 0 103 0 182 0 107 0 182 0 108 0 182 0 109 0 182 0 111 0 182 0 117 0 182 0 118 0 182 0 119 0 182 0 120 0 182 0 121 0 182 0 122 0 182 0 123 0 182 0 124 0 182 0 125 0 182 0 127 1 233 0 217 1 237 0 218 0 182 1 55] 
#[0 0 186 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 1 253 0 124 0 97 0 125 1 253 0 145 1 253 0 146 1 253 0 147 1 253 0 148 1 253 0 149] 
#[1 0 9 0 11 0 81 0 100 2 1 0 124 0 97 0 125 2 1 0 145 2 1 0 146 2 1 0 147 2 1 0 148 2 1 0 149] 
#[1 0 9 0 11 0 81 0 100 2 5 0 124 0 97 0 125 2 5 0 145 2 5 0 146 2 5 0 147 2 5 0 148 2 5 0 149] 
#[1 1 129 0 5 0 190 0 8 0 190 0 9 0 190 0 10 1 133 0 11 0 190 0 22 0 190 0 23 0 190 0 25 0 190 0 26 1 141 0 33 0 190 0 34 0 190 0 35 0 190 0 44 0 190 0 47 0 190 0 49 0 190 0 50 0 190 0 53 0 190 0 54 0 190 0 55 0 190 0 56 0 190 0 59 0 190 0 60 0 190 0 62 0 190 0 63 0 190 0 64 0 190 0 66 0 190 0 67 0 190 0 68 0 190 0 69 0 190 0 73 0 190 0 77 0 190 0 79 0 190 0 80 0 190 0 82 0 190 0 83 0 190 0 88 0 190 0 89 0 190 0 90 0 190 0 91 0 190 0 92 0 190 0 93 0 190 0 94 0 190 0 96 0 190 0 99 0 190 0 100 0 190 0 103 0 190 0 107 0 190 0 108 0 190 0 109 0 190 0 111 0 190 0 117 0 190 0 118 0 190 0 119 0 190 0 120 0 190 0 121 0 190 0 122 0 190 0 123 0 190 0 124 0 190 0 125 0 190 0 127 2 9 0 167 2 9 0 168 1 153 0 169 2 9 0 173 0 190 1 55] 
#[1 0 194 0 5 0 194 0 8 2 13 0 9 0 194 0 10 0 194 0 11 0 194 0 22 0 194 0 23 0 194 0 25 0 194 0 26 0 194 0 34 0 194 0 35 0 194 0 44 0 194 0 47 0 194 0 49 0 194 0 50 0 194 0 53 0 194 0 54 0 194 0 55 0 194 0 56 0 194 0 59 0 194 0 60 0 194 0 62 0 194 0 63 0 194 0 64 0 194 0 66 0 194 0 67 0 194 0 68 0 194 0 69 0 194 0 73 0 194 0 77 0 194 0 79 0 194 0 80 0 194 0 82 0 194 0 83 0 194 0 88 0 194 0 89 0 194 0 90 0 194 0 91 0 194 0 92 0 194 0 93 0 194 0 94 0 194 0 96 0 194 0 99 0 194 0 100 0 194 0 103 0 194 0 107 0 194 0 108 0 194 0 109 0 194 0 111 0 194 0 117 0 194 0 118 0 194 0 119 0 194 0 120 0 194 0 121 0 194 0 122 0 194 0 123 0 194 0 124 0 194 0 125 0 194 0 127 2 17 0 214 2 21 0 215 0 194 1 55] 
#[0 0 198 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 133 0 11 0 202 0 55 0 202 0 100 0 202 0 124 0 202 0 125 0 202 0 127 2 25 0 182] 
#[1 2 29 0 5 1 133 0 11 2 33 0 185] 
#[1 2 29 0 5 1 133 0 11 2 37 0 185] 
#[1 2 41 0 36 2 45 0 45 2 49 0 100] 
#[0 0 206 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 2 53 0 78] 
#[0 0 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 214 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 2 57 0 124 0 97 0 125 2 57 0 145 2 57 0 146 2 57 0 147 2 57 0 148 2 57 0 149] 
#[1 0 9 0 11 0 81 0 100 2 61 0 124 0 97 0 125 2 61 0 145 2 61 0 146 2 61 0 147 2 61 0 148 2 61 0 149] 
#[1 0 9 0 11 0 81 0 100 2 65 0 124 0 97 0 125 2 65 0 145 2 65 0 146 2 65 0 147 2 65 0 148 2 65 0 149] 
#[1 0 9 0 11 1 33 0 27 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 2 69 0 206 2 73 0 213] 
#[1 0 218 0 5 0 218 0 8 2 13 0 9 0 218 0 10 0 218 0 11 0 218 0 22 0 218 0 23 0 218 0 25 0 218 0 26 0 218 0 34 0 218 0 35 0 218 0 44 0 218 0 47 0 218 0 49 0 218 0 50 0 218 0 53 0 218 0 54 0 218 0 55 0 218 0 56 0 218 0 59 0 218 0 60 0 218 0 62 0 218 0 63 0 218 0 64 0 218 0 66 0 218 0 67 0 218 0 68 0 218 0 69 0 218 0 73 0 218 0 77 0 218 0 79 0 218 0 80 0 218 0 82 0 218 0 83 0 218 0 88 0 218 0 89 0 218 0 90 0 218 0 91 0 218 0 92 0 218 0 93 0 218 0 94 0 218 0 96 0 218 0 99 0 218 0 100 0 218 0 103 0 218 0 107 0 218 0 108 0 218 0 109 0 218 0 111 0 218 0 117 0 218 0 118 0 218 0 119 0 218 0 120 0 218 0 121 0 218 0 122 0 218 0 123 0 218 0 124 0 218 0 125 0 218 0 127 2 17 0 214 2 21 0 215 0 218 1 55] 
#[0 0 222 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 226 0 5 0 226 0 8 2 13 0 9 0 226 0 10 0 226 0 11 0 226 0 22 0 226 0 23 0 226 0 25 0 226 0 26 0 226 0 34 0 226 0 35 0 226 0 44 0 226 0 47 0 226 0 49 0 226 0 50 0 226 0 53 0 226 0 54 0 226 0 55 0 226 0 56 0 226 0 59 0 226 0 60 0 226 0 62 0 226 0 63 0 226 0 64 0 226 0 66 0 226 0 67 0 226 0 68 0 226 0 69 0 226 0 73 0 226 0 77 0 226 0 79 0 226 0 80 0 226 0 82 0 226 0 83 0 226 0 88 0 226 0 89 0 226 0 90 0 226 0 91 0 226 0 92 0 226 0 93 0 226 0 94 0 226 0 96 0 226 0 99 0 226 0 100 0 226 0 103 0 226 0 107 0 226 0 108 0 226 0 109 0 226 0 111 0 226 0 117 0 226 0 118 0 226 0 119 0 226 0 120 0 226 0 121 0 226 0 122 0 226 0 123 0 226 0 124 0 226 0 125 0 226 0 127 2 17 0 214 2 21 0 215 0 226 1 55] 
#[0 0 230 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 2 77 0 133 2 81 0 185] 
#[1 1 133 0 11 0 234 0 55 0 234 0 100 0 234 0 124 0 234 0 125 0 234 0 127 2 85 0 177] 
#[0 0 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 41 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 242 0 11 0 242 0 34 0 242 0 35 2 89 0 41 0 242 0 44 0 242 0 47 0 242 0 49 0 242 0 56 0 242 0 59 0 242 0 63 0 242 0 64 0 242 0 66 0 242 0 83 0 242 0 88 0 242 0 89 0 242 0 90 0 242 0 91 0 242 0 96 0 242 0 99 0 242 0 100 0 242 0 103 0 242 0 124 0 242 0 125 0 242 0 127] 
#[1 2 93 0 5 0 246 0 6 2 97 0 8 0 246 0 9 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 2 213 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 2 213 0 134 2 213 0 135 2 213 0 136 2 213 0 137 2 213 0 138 2 213 0 139 2 213 0 140 2 213 0 141 2 213 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 2 201 0 171 2 205 0 172 2 213 0 220 2 213 0 221 2 213 0 222 2 213 0 226 2 213 0 227 2 213 0 228 2 213 0 229 2 213 0 230 2 213 0 237 2 213 0 238 2 213 0 239 2 213 0 240 2 213 0 241 2 213 0 242 2 213 0 243 2 213 0 244 2 213 0 245 2 213 0 247 2 213 0 249 2 213 0 251 2 213 0 252 2 213 0 253 2 213 0 254 2 213 0 255 2 213 1 0 2 213 1 1 2 213 1 49 2 213 1 50 2 213 1 51 2 213 1 52 2 213 1 53 2 213 1 54] 
#[0 3 81 0 124] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 3 85 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 3 85 0 134 3 85 0 135 3 85 0 136 3 85 0 137 3 85 0 138 3 85 0 139 3 85 0 140 3 85 0 141 3 85 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 3 85 0 220 3 85 0 221 3 85 0 222 3 85 0 226 3 85 0 227 3 85 0 228 3 85 0 229 3 85 0 230 3 85 0 237 3 85 0 238 3 85 0 239 3 85 0 240 3 85 0 241 3 85 0 242 3 85 0 243 3 85 0 244 3 85 0 245 3 85 0 247 3 85 0 249 3 85 0 251 3 85 0 252 3 85 0 253 3 85 0 254 3 85 0 255 3 85 1 0 3 85 1 1 3 85 1 49 3 85 1 50 3 85 1 51 3 85 1 52 3 85 1 53 3 85 1 54] 
#[1 0 9 0 11 3 89 0 25 3 149 0 37 3 149 0 39 3 149 0 42 3 149 0 46 3 149 0 51 3 149 0 71 3 149 0 76 3 149 0 81 3 149 0 95 3 149 0 98 0 81 0 100 3 133 0 105 3 137 0 124 0 97 0 125 3 137 0 145 3 137 0 146 3 137 0 147 3 137 0 148 3 137 0 149 3 149 0 163 3 149 0 165 3 149 0 166] 
#[0 0 250 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 0 254 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 2 0 5 1 2 0 6 1 2 0 7 1 2 0 8 1 2 0 9 1 2 0 10 1 2 0 11 1 2 0 19 1 2 0 22 1 2 0 23 1 2 0 25 1 2 0 26 3 153 0 33 1 2 0 34 1 2 0 35 1 2 0 44 1 2 0 47 1 2 0 49 1 2 0 50 1 2 0 53 1 2 0 54 1 2 0 55 1 2 0 56 1 2 0 59 1 2 0 60 1 2 0 62 1 2 0 63 1 2 0 64 1 2 0 66 1 2 0 67 1 2 0 68 1 2 0 69 1 2 0 73 1 2 0 77 1 2 0 79 1 2 0 80 1 2 0 82 1 2 0 83 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 96 1 2 0 99 1 2 0 100 1 2 0 103 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 111 1 2 0 117 1 2 0 118 1 2 0 119 1 2 0 120 1 2 0 121 1 2 0 122 1 2 0 123 1 2 0 124 1 2 0 125 1 2 0 127 1 2 1 55] 
#[0 3 157 0 19] 
#[1 0 9 0 11 0 13 0 34 0 17 0 35 0 21 0 44 0 25 0 47 0 29 0 49 0 33 0 56 0 37 0 59 0 145 0 63 0 45 0 64 0 145 0 66 0 53 0 83 0 145 0 88 0 61 0 89 0 145 0 90 0 69 0 91 0 73 0 96 0 77 0 99 0 81 0 100 0 85 0 103 0 105 0 124 0 97 0 125 1 245 0 127 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 3 161 0 151 3 161 0 153 3 161 0 154 3 161 0 158 0 145 0 164 3 161 0 174 3 161 0 175 3 161 0 179 3 161 0 180 3 161 0 191 3 161 0 192 3 161 0 193 0 177 0 194 3 161 0 195 3 161 0 196 3 161 0 197 3 161 0 198 3 161 0 199 3 161 0 200 3 161 0 201 3 161 0 202 3 161 0 203 3 161 0 204 3 161 0 205 0 225 0 207 3 161 0 208 3 161 0 209 3 161 0 210 3 161 0 211 3 161 0 212 3 161 0 216 3 161 0 219] 
#[1 0 6 0 11 0 6 0 34 0 6 0 35 0 6 0 44 0 6 0 47 0 6 0 49 0 6 0 56 0 6 0 59 0 6 0 63 0 6 0 64 0 6 0 66 0 6 0 83 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 96 0 6 0 99 0 6 0 100 0 6 0 103 0 6 0 124 0 6 0 125 0 6 0 127 3 165 0 131 3 169 0 133 0 6 1 55] 
#[1 0 9 0 11 0 81 0 100 0 105 0 124 0 97 0 125 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 3 173 0 207 3 177 0 216] 
#[1 3 181 0 64 3 185 0 99] 
#[1 0 9 0 11 0 81 0 100 3 189 0 124 0 97 0 125 3 189 0 145 3 189 0 146 3 189 0 147 3 189 0 148 3 189 0 149] 
#[1 0 9 0 11 0 81 0 100 3 193 0 124 0 97 0 125 3 193 0 145 3 193 0 146 3 193 0 147 3 193 0 148 3 193 0 149] 
#[1 0 9 0 11 0 81 0 100 3 197 0 124 0 97 0 125 3 197 0 145 3 197 0 146 3 197 0 147 3 197 0 148 3 197 0 149] 
#[1 3 201 0 65 3 205 0 73 3 209 0 94] 
#[0 0 26 0 64 0 89 0 99] 
#[1 0 9 0 11 0 81 0 100 3 213 0 124 0 97 0 125 3 213 0 145 3 213 0 146 3 213 0 147 3 213 0 148 3 213 0 149] 
#[1 0 9 0 11 0 81 0 100 3 217 0 124 0 97 0 125 3 217 0 145 3 217 0 146 3 217 0 147 3 217 0 148 3 217 0 149] 
#[1 3 221 0 64 3 225 0 89 3 229 0 99] 
#[1 1 6 0 5 1 6 0 8 2 13 0 9 1 6 0 10 1 6 0 11 1 6 0 22 1 6 0 23 1 6 0 25 1 6 0 26 1 6 0 34 1 6 0 35 1 6 0 44 1 6 0 47 1 6 0 49 1 6 0 50 1 6 0 53 1 6 0 54 1 6 0 55 1 6 0 56 1 6 0 59 1 6 0 60 1 6 0 62 1 6 0 63 1 6 0 64 1 6 0 66 1 6 0 67 1 6 0 68 1 6 0 69 1 6 0 73 1 6 0 77 1 6 0 79 1 6 0 80 1 6 0 82 1 6 0 83 1 6 0 88 1 6 0 89 1 6 0 90 1 6 0 91 1 6 0 92 1 6 0 93 1 6 0 94 1 6 0 96 1 6 0 99 1 6 0 100 1 6 0 103 1 6 0 107 1 6 0 108 1 6 0 109 1 6 0 111 1 6 0 117 1 6 0 118 1 6 0 119 1 6 0 120 1 6 0 121 1 6 0 122 1 6 0 123 1 6 0 124 1 6 0 125 1 6 0 127 2 17 0 214 2 21 0 215 1 6 1 55] 
#[0 1 10 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 3 233 0 124 0 97 0 125 3 233 0 145 3 233 0 146 3 233 0 147 3 233 0 148 3 233 0 149] 
#[1 3 237 0 65 3 241 0 73 3 245 0 94] 
#[1 0 9 0 11 0 81 0 100 3 249 0 124 0 97 0 125 3 249 0 145 3 249 0 146 3 249 0 147 3 249 0 148 3 249 0 149] 
#[1 0 9 0 11 0 81 0 100 0 105 0 124 0 97 0 125 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 3 253 0 207] 
#[0 1 14 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 18 0 5 1 18 0 8 1 229 0 9 1 18 0 10 1 18 0 11 1 18 0 22 1 18 0 23 1 18 0 25 1 18 0 26 1 18 0 34 1 18 0 35 1 18 0 44 1 18 0 47 1 18 0 49 1 18 0 50 1 18 0 53 1 18 0 54 1 18 0 55 1 18 0 56 1 18 0 59 1 18 0 60 1 18 0 62 1 18 0 63 1 18 0 64 1 18 0 66 1 18 0 67 1 18 0 68 1 18 0 69 1 18 0 73 1 18 0 77 1 18 0 79 1 18 0 80 1 18 0 82 1 18 0 83 1 18 0 88 1 18 0 89 1 18 0 90 1 18 0 91 1 18 0 92 1 18 0 93 1 18 0 94 1 18 0 96 1 18 0 99 1 18 0 100 1 18 0 103 1 18 0 107 1 18 0 108 1 18 0 109 1 18 0 111 1 18 0 117 1 18 0 118 1 18 0 119 1 18 0 120 1 18 0 121 1 18 0 122 1 18 0 123 1 18 0 124 1 18 0 125 1 18 0 127 4 1 0 217 1 18 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 4 5 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 4 5 0 134 4 5 0 135 4 5 0 136 4 5 0 137 4 5 0 138 4 5 0 139 4 5 0 140 4 5 0 141 4 5 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 4 5 0 220 4 5 0 221 4 5 0 222 4 5 0 226 4 5 0 227 4 5 0 228 4 5 0 229 4 5 0 230 4 5 0 237 4 5 0 238 4 5 0 239 4 5 0 240 4 5 0 241 4 5 0 242 4 5 0 243 4 5 0 244 4 5 0 245 4 5 0 247 4 5 0 249 4 5 0 251 4 5 0 252 4 5 0 253 4 5 0 254 4 5 0 255 4 5 1 0 4 5 1 1 4 5 1 49 4 5 1 50 4 5 1 51 4 5 1 52 4 5 1 53 4 5 1 54] 
#[0 1 22 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 26 0 55 1 26 0 127 4 9 0 156] 
#[1 1 133 0 11 4 13 0 74] 
#[1 1 133 0 11 4 17 0 74] 
#[1 1 129 0 5 1 30 0 8 1 30 0 9 1 30 0 10 1 133 0 11 1 30 0 22 1 30 0 23 1 30 0 25 1 30 0 26 1 141 0 33 1 30 0 34 1 30 0 35 1 30 0 44 1 30 0 47 1 30 0 49 1 30 0 50 1 30 0 53 1 30 0 54 1 30 0 55 1 30 0 56 1 30 0 59 1 30 0 60 1 30 0 62 1 30 0 63 1 30 0 64 1 30 0 66 1 30 0 67 1 30 0 68 1 30 0 69 1 30 0 73 1 30 0 77 1 30 0 79 1 30 0 80 1 30 0 82 1 30 0 83 1 30 0 88 1 30 0 89 1 30 0 90 1 30 0 91 1 30 0 92 1 30 0 93 1 30 0 94 1 30 0 96 1 30 0 99 1 30 0 100 1 30 0 103 1 30 0 107 1 30 0 108 1 30 0 109 1 30 0 111 1 30 0 117 1 30 0 118 1 30 0 119 1 30 0 120 1 30 0 121 1 30 0 122 1 30 0 123 1 30 0 124 1 30 0 125 1 30 0 127 4 21 0 167 4 21 0 168 1 153 0 169 4 21 0 173 1 30 1 55] 
#[0 1 34 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 1 33 0 27 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 4 25 0 206] 
#[0 1 38 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 42 0 5 1 42 0 8 2 13 0 9 1 42 0 10 1 42 0 11 1 42 0 22 1 42 0 23 1 42 0 25 1 42 0 26 1 42 0 34 1 42 0 35 1 42 0 44 1 42 0 47 1 42 0 49 1 42 0 50 1 42 0 53 1 42 0 54 1 42 0 55 1 42 0 56 1 42 0 59 1 42 0 60 1 42 0 62 1 42 0 63 1 42 0 64 1 42 0 66 1 42 0 67 1 42 0 68 1 42 0 69 1 42 0 73 1 42 0 77 1 42 0 79 1 42 0 80 1 42 0 82 1 42 0 83 1 42 0 88 1 42 0 89 1 42 0 90 1 42 0 91 1 42 0 92 1 42 0 93 1 42 0 94 1 42 0 96 1 42 0 99 1 42 0 100 1 42 0 103 1 42 0 107 1 42 0 108 1 42 0 109 1 42 0 111 1 42 0 117 1 42 0 118 1 42 0 119 1 42 0 120 1 42 0 121 1 42 0 122 1 42 0 123 1 42 0 124 1 42 0 125 1 42 0 127 4 29 0 214 1 42 1 55] 
#[1 0 6 0 11 0 6 0 55 0 6 0 100 0 6 0 124 0 6 0 125 0 6 0 127 4 33 0 133 4 37 0 181] 
#[1 4 41 0 6 0 9 0 11 4 45 0 38 4 65 0 40 4 53 0 84 4 57 0 86 0 81 0 100 4 61 0 124 0 97 0 125 4 61 0 145 4 61 0 146 4 61 0 147 4 61 0 148 4 61 0 149 4 65 0 184 4 69 0 188] 
#[0 1 46 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 4 73 0 133 4 77 0 167 4 77 0 168 1 153 0 169 4 77 0 173] 
#[0 1 50 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 1 54 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 1 58 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 1 62 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 4 81 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 4 85 0 133 4 89 0 167 4 89 0 168 1 153 0 169 4 89 0 173 4 93 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 4 97 0 133 4 101 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 4 105 0 133 4 109 0 185] 
#[1 1 66 0 5 1 66 0 8 2 13 0 9 1 66 0 10 1 66 0 11 1 66 0 22 1 66 0 23 1 66 0 25 1 66 0 26 1 66 0 34 1 66 0 35 1 66 0 44 1 66 0 47 1 66 0 49 1 66 0 50 1 66 0 53 1 66 0 54 1 66 0 55 1 66 0 56 1 66 0 59 1 66 0 60 1 66 0 62 1 66 0 63 1 66 0 64 1 66 0 66 1 66 0 67 1 66 0 68 1 66 0 69 1 66 0 73 1 66 0 77 1 66 0 79 1 66 0 80 1 66 0 82 1 66 0 83 1 66 0 88 1 66 0 89 1 66 0 90 1 66 0 91 1 66 0 92 1 66 0 93 1 66 0 94 1 66 0 96 1 66 0 99 1 66 0 100 1 66 0 103 1 66 0 107 1 66 0 108 1 66 0 109 1 66 0 111 1 66 0 117 1 66 0 118 1 66 0 119 1 66 0 120 1 66 0 121 1 66 0 122 1 66 0 123 1 66 0 124 1 66 0 125 1 66 0 127 2 17 0 214 2 21 0 215 1 66 1 55] 
#[0 1 70 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 4 165 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 5 89 0 133] 
#[1 0 6 0 11 0 6 0 55 0 6 0 100 0 6 0 124 0 6 0 125 0 6 0 127 5 93 0 133 5 97 0 176] 
#[0 1 74 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 101 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 101 0 134 5 101 0 135 5 101 0 136 5 101 0 137 5 101 0 138 5 101 0 139 5 101 0 140 5 101 0 141 5 101 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 101 0 220 5 101 0 221 5 101 0 222 5 101 0 226 5 101 0 227 5 101 0 228 5 101 0 229 5 101 0 230 5 101 0 237 5 101 0 238 5 101 0 239 5 101 0 240 5 101 0 241 5 101 0 242 5 101 0 243 5 101 0 244 5 101 0 245 5 101 0 247 5 101 0 249 5 101 0 251 5 101 0 252 5 101 0 253 5 101 0 254 5 101 0 255 5 101 1 0 5 101 1 1 5 101 1 49 5 101 1 50 5 101 1 51 5 101 1 52 5 101 1 53 5 101 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 105 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 105 0 134 5 105 0 135 5 105 0 136 5 105 0 137 5 105 0 138 5 105 0 139 5 105 0 140 5 105 0 141 5 105 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 105 0 220 5 105 0 221 5 105 0 222 5 105 0 226 5 105 0 227 5 105 0 228 5 105 0 229 5 105 0 230 5 105 0 237 5 105 0 238 5 105 0 239 5 105 0 240 5 105 0 241 5 105 0 242 5 105 0 243 5 105 0 244 5 105 0 245 5 105 0 247 5 105 0 249 5 105 0 251 5 105 0 252 5 105 0 253 5 105 0 254 5 105 0 255 5 105 1 0 5 105 1 1 5 105 1 49 5 105 1 50 5 105 1 51 5 105 1 52 5 105 1 53 5 105 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 109 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 109 0 134 5 109 0 135 5 109 0 136 5 109 0 137 5 109 0 138 5 109 0 139 5 109 0 140 5 109 0 141 5 109 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 109 0 220 5 109 0 221 5 109 0 222 5 109 0 226 5 109 0 227 5 109 0 228 5 109 0 229 5 109 0 230 5 109 0 237 5 109 0 238 5 109 0 239 5 109 0 240 5 109 0 241 5 109 0 242 5 109 0 243 5 109 0 244 5 109 0 245 5 109 0 247 5 109 0 249 5 109 0 251 5 109 0 252 5 109 0 253 5 109 0 254 5 109 0 255 5 109 1 0 5 109 1 1 5 109 1 49 5 109 1 50 5 109 1 51 5 109 1 52 5 109 1 53 5 109 1 54] 
#[1 0 9 0 11 0 81 0 100 5 113 0 124 0 97 0 125 5 113 0 145 5 113 0 146 5 113 0 147 5 113 0 148 5 113 0 149] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 117 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 117 0 220 5 117 0 221 5 117 0 222 5 117 0 226 5 117 0 227 5 117 0 228 5 121 0 229 5 121 0 230 5 121 0 237 5 117 0 238 5 117 0 239 5 117 0 240 5 117 0 241 5 117 0 242 5 117 0 243 5 117 0 244 5 117 0 245 5 117 0 247 5 117 0 249 5 117 0 251 5 117 0 252 5 117 0 253 5 117 0 254 5 117 0 255 5 117 1 0 5 117 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 0 9 0 11 0 81 0 100 5 125 0 124 0 97 0 125 5 125 0 145 5 125 0 146 5 125 0 147 5 125 0 148 5 125 0 149] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 117 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 117 0 220 5 117 0 221 5 117 0 222 5 117 0 226 5 117 0 227 5 117 0 228 5 129 0 229 5 129 0 230 5 129 0 237 5 117 0 238 5 117 0 239 5 117 0 240 5 117 0 241 5 117 0 242 5 117 0 243 5 117 0 244 5 117 0 245 5 117 0 247 5 117 0 249 5 117 0 251 5 117 0 252 5 117 0 253 5 117 0 254 5 117 0 255 5 117 1 0 5 117 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 5 133 0 50 5 137 0 62 5 141 0 64 5 145 0 89 5 149 0 99] 
#[0 1 78 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 153 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 153 0 134 5 153 0 135 5 153 0 136 5 153 0 137 5 153 0 138 5 153 0 139 5 153 0 140 5 153 0 141 5 153 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 153 0 220 5 153 0 221 5 153 0 222 5 153 0 226 5 153 0 227 5 153 0 228 5 153 0 229 5 153 0 230 5 153 0 237 5 153 0 238 5 153 0 239 5 153 0 240 5 153 0 241 5 153 0 242 5 153 0 243 5 153 0 244 5 153 0 245 5 153 0 247 5 153 0 249 5 153 0 251 5 153 0 252 5 153 0 253 5 153 0 254 5 153 0 255 5 153 1 0 5 153 1 1 5 153 1 49 5 153 1 50 5 153 1 51 5 153 1 52 5 153 1 53 5 153 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 5 157 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 157 0 134 5 157 0 135 5 157 0 136 5 157 0 137 5 157 0 138 5 157 0 139 5 157 0 140 5 157 0 141 5 157 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 5 157 0 220 5 157 0 221 5 157 0 222 5 157 0 226 5 157 0 227 5 157 0 228 5 157 0 229 5 157 0 230 5 157 0 237 5 157 0 238 5 157 0 239 5 157 0 240 5 157 0 241 5 157 0 242 5 157 0 243 5 157 0 244 5 157 0 245 5 157 0 247 5 157 0 249 5 157 0 251 5 157 0 252 5 157 0 253 5 157 0 254 5 157 0 255 5 157 1 0 5 157 1 1 5 157 1 49 5 157 1 50 5 157 1 51 5 157 1 52 5 157 1 53 5 157 1 54] 
#[1 5 161 0 116 5 165 0 143] 
#[0 1 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 86 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 90 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 94 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 31 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 98 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 102 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 110 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 134 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 7 0 1 0 7 0 3 0 7 0 5 0 7 0 6 0 7 0 7 0 7 0 8 0 7 0 9 0 7 0 10 0 11 0 11 0 7 0 12 0 7 0 13 0 7 0 14 0 7 0 15 0 7 0 16 0 7 0 17 0 7 0 18 0 7 0 19 0 7 0 20 0 7 0 21 0 7 0 22 0 7 0 23 0 7 0 24 0 7 0 25 0 7 0 26 0 7 0 29 0 7 0 30 0 7 0 32 0 7 0 34 0 7 0 35 1 146 0 38 1 146 0 40 0 7 0 44 0 7 0 47 0 7 0 49 0 7 0 50 0 7 0 53 0 7 0 54 0 7 0 55 0 7 0 56 0 7 0 57 0 7 0 59 0 7 0 60 0 7 0 62 0 7 0 63 0 7 0 64 0 7 0 66 0 7 0 67 0 7 0 68 0 7 0 69 0 7 0 72 0 7 0 73 0 7 0 75 0 7 0 77 0 7 0 79 0 7 0 80 0 7 0 82 0 7 0 83 0 7 0 85 1 146 0 86 0 7 0 88 0 7 0 89 0 7 0 90 0 7 0 91 0 7 0 92 0 7 0 93 0 7 0 94 0 7 0 96 0 7 0 97 0 7 0 99 0 7 0 100 0 7 0 101 0 7 0 102 0 7 0 103 0 7 0 107 0 7 0 108 0 7 0 109 0 7 0 110 0 7 0 111 0 7 0 117 0 7 0 118 0 7 0 119 0 7 0 120 0 7 0 121 0 7 0 122 0 7 0 123 0 7 0 124 0 7 0 125 0 7 0 127 5 169 0 232 5 173 0 234 0 7 1 55] 
#[1 5 177 0 6 5 181 0 9 5 185 0 170] 
#[1 0 246 0 6 0 246 0 9 5 189 0 171] 
#[0 1 150 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 1 154 0 6 5 205 0 7 5 209 0 8 1 154 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 29 0 102 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 1 158 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 162 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 166 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 170 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 174 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 178 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 182 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 186 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 190 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 194 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 198 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 214 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 218 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 226 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 230 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 234 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 242 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 246 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 250 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 1 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 33 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 70 0 72 0 73 0 74 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 2 26 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 2 26 0 22 2 26 0 23 5 253 0 24 2 26 0 25 2 26 0 26 6 1 0 29 6 5 0 30 6 9 0 32 2 26 0 34 2 26 0 35 2 26 0 44 2 26 0 47 2 26 0 49 2 26 0 50 2 26 0 53 2 26 0 54 2 26 0 55 2 26 0 56 6 13 0 57 2 26 0 59 2 26 0 60 2 26 0 62 2 26 0 63 2 26 0 64 2 26 0 66 2 26 0 67 2 26 0 68 2 26 0 69 6 17 0 72 2 26 0 73 6 21 0 75 2 26 0 77 2 26 0 79 2 26 0 80 2 26 0 82 2 26 0 83 6 25 0 85 2 26 0 88 2 26 0 89 2 26 0 90 2 26 0 91 2 26 0 92 2 26 0 93 2 26 0 94 2 26 0 96 2 26 0 99 2 26 0 100 2 26 0 103 2 26 0 107 2 26 0 108 2 26 0 109 6 33 0 110 2 26 0 111 2 26 0 117 2 26 0 118 2 26 0 119 2 26 0 120 2 26 0 121 2 26 0 122 2 26 0 123 2 26 0 124 2 26 0 125 2 26 0 127 6 37 0 246 6 41 0 248 6 45 0 250 2 26 1 55] 
#[1 0 9 0 11 6 49 0 37 6 49 0 39 6 49 0 42 6 49 0 46 6 49 0 51 6 49 0 71 6 49 0 76 6 49 0 81 6 49 0 95 6 49 0 98 0 81 0 100 3 133 0 105 3 137 0 124 0 97 0 125 3 137 0 145 3 137 0 146 3 137 0 147 3 137 0 148 3 137 0 149 6 49 0 163 6 49 0 165 6 49 0 166] 
#[0 2 30 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 34 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 38 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 42 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 46 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 50 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 54 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 58 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 62 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 66 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 70 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 74 0 5 2 74 0 6 2 74 0 7 2 74 0 8 2 74 0 9 2 74 0 10 1 133 0 11 2 74 0 19 2 74 0 22 2 74 0 23 2 74 0 25 2 74 0 26 2 74 0 34 2 74 0 35 2 74 0 44 2 74 0 47 2 74 0 49 2 74 0 50 2 74 0 53 2 74 0 54 2 74 0 55 2 74 0 56 2 74 0 59 2 74 0 60 2 74 0 62 2 74 0 63 2 74 0 64 2 74 0 66 2 74 0 67 2 74 0 68 2 74 0 69 2 74 0 73 2 74 0 77 2 74 0 79 2 74 0 80 2 74 0 82 2 74 0 83 2 74 0 88 2 74 0 89 2 74 0 90 2 74 0 91 2 74 0 92 2 74 0 93 2 74 0 94 2 74 0 96 2 74 0 99 2 74 0 100 2 74 0 103 2 74 0 107 2 74 0 108 2 74 0 109 2 74 0 111 2 74 0 117 2 74 0 118 2 74 0 119 2 74 0 120 2 74 0 121 2 74 0 122 2 74 0 123 2 74 0 124 2 74 0 125 2 74 0 127 2 74 1 55] 
#[0 2 78 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 82 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 129 0 5 2 86 0 6 2 86 0 7 2 86 0 8 2 86 0 9 2 86 0 10 2 86 0 11 2 86 0 19 2 86 0 22 2 86 0 23 2 86 0 25 2 86 0 26 2 86 0 34 2 86 0 35 2 86 0 44 2 86 0 47 2 86 0 49 2 86 0 50 2 86 0 53 2 86 0 54 2 86 0 55 2 86 0 56 2 86 0 59 2 86 0 60 2 86 0 62 2 86 0 63 2 86 0 64 2 86 0 66 2 86 0 67 2 86 0 68 2 86 0 69 2 86 0 73 2 86 0 77 2 86 0 79 2 86 0 80 2 86 0 82 2 86 0 83 2 86 0 88 2 86 0 89 2 86 0 90 2 86 0 91 2 86 0 92 2 86 0 93 2 86 0 94 2 86 0 96 2 86 0 99 2 86 0 100 2 86 0 103 2 86 0 107 2 86 0 108 2 86 0 109 2 86 0 111 2 86 0 117 2 86 0 118 2 86 0 119 2 86 0 120 2 86 0 121 2 86 0 122 2 86 0 123 2 86 0 124 2 86 0 125 2 86 0 127 6 53 0 169 2 86 1 55] 
#[1 0 9 0 11 6 57 0 25 6 61 0 37 6 61 0 39 6 61 0 42 6 61 0 46 6 61 0 51 6 61 0 71 6 61 0 76 6 61 0 81 6 61 0 95 6 61 0 98 0 81 0 100 3 133 0 105 3 137 0 124 0 97 0 125 3 137 0 145 3 137 0 146 3 137 0 147 3 137 0 148 3 137 0 149 6 61 0 163 6 61 0 165 6 61 0 166] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 6 65 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 6 65 0 134 6 65 0 135 6 65 0 136 6 65 0 137 6 65 0 138 6 65 0 139 6 65 0 140 6 65 0 141 6 65 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 6 65 0 220 6 65 0 221 6 65 0 222 6 65 0 226 6 65 0 227 6 65 0 228 6 65 0 229 6 65 0 230 6 65 0 237 6 65 0 238 6 65 0 239 6 65 0 240 6 65 0 241 6 65 0 242 6 65 0 243 6 65 0 244 6 65 0 245 6 65 0 247 6 65 0 249 6 65 0 251 6 65 0 252 6 65 0 253 6 65 0 254 6 65 0 255 6 65 1 0 6 65 1 1 6 65 1 49 6 65 1 50 6 65 1 51 6 65 1 52 6 65 1 53 6 65 1 54] 
#[1 0 70 0 11 0 70 0 34 0 70 0 35 0 70 0 44 0 70 0 47 0 70 0 49 0 70 0 56 0 70 0 59 0 70 0 63 0 70 0 64 0 70 0 66 0 70 0 83 0 70 0 88 0 70 0 89 0 70 0 90 0 70 0 91 0 70 0 96 0 70 0 99 0 70 0 100 0 70 0 103 0 70 0 124 0 70 0 125 0 70 0 127 6 69 0 132 0 70 1 55] 
#[0 2 90 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 13 0 34 0 17 0 35 0 21 0 44 0 25 0 47 0 29 0 49 0 33 0 56 0 37 0 59 0 145 0 63 0 45 0 64 0 145 0 66 0 53 0 83 0 145 0 88 0 61 0 89 0 145 0 90 0 69 0 91 0 73 0 96 0 77 0 99 0 81 0 100 0 85 0 103 0 105 0 124 0 97 0 125 1 245 0 127 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 6 73 0 151 6 73 0 153 6 73 0 154 6 73 0 158 0 145 0 164 6 73 0 174 6 73 0 175 6 73 0 179 6 73 0 180 6 73 0 191 6 73 0 192 6 73 0 193 0 177 0 194 6 73 0 195 6 73 0 196 6 73 0 197 6 73 0 198 6 73 0 199 6 73 0 200 6 73 0 201 6 73 0 202 6 73 0 203 6 73 0 204 6 73 0 205 0 225 0 207 6 73 0 208 6 73 0 209 6 73 0 210 6 73 0 211 6 73 0 212 6 73 0 216 6 73 0 219 2 94 1 55] 
#[1 2 98 0 5 2 98 0 8 1 229 0 9 2 98 0 10 2 98 0 11 2 98 0 22 2 98 0 23 2 98 0 25 2 98 0 26 2 98 0 34 2 98 0 35 2 98 0 44 2 98 0 47 2 98 0 49 2 98 0 50 2 98 0 53 2 98 0 54 2 98 0 55 2 98 0 56 2 98 0 59 2 98 0 60 2 98 0 62 2 98 0 63 2 98 0 64 2 98 0 66 2 98 0 67 2 98 0 68 2 98 0 69 2 98 0 73 2 98 0 77 2 98 0 79 2 98 0 80 2 98 0 82 2 98 0 83 2 98 0 88 2 98 0 89 2 98 0 90 2 98 0 91 2 98 0 92 2 98 0 93 2 98 0 94 2 98 0 96 2 98 0 99 2 98 0 100 2 98 0 103 2 98 0 107 2 98 0 108 2 98 0 109 2 98 0 111 2 98 0 117 2 98 0 118 2 98 0 119 2 98 0 120 2 98 0 121 2 98 0 122 2 98 0 123 2 98 0 124 2 98 0 125 2 98 0 127 1 233 0 217 1 237 0 218 2 98 1 55] 
#[0 2 102 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 81 0 100 6 77 0 124 0 97 0 125 6 77 0 145 6 77 0 146 6 77 0 147 6 77 0 148 6 77 0 149] 
#[1 0 9 0 11 0 81 0 100 6 81 0 124 0 97 0 125 6 81 0 145 6 81 0 146 6 81 0 147 6 81 0 148 6 81 0 149] 
#[1 1 133 0 11 0 202 0 55 0 202 0 100 0 202 0 124 0 202 0 125 0 202 0 127 6 85 0 182] 
#[1 2 29 0 5 1 133 0 11 6 89 0 185] 
#[1 2 29 0 5 1 133 0 11 6 93 0 185] 
#[1 0 9 0 11 0 81 0 100 6 97 0 124 0 97 0 125 6 97 0 145 6 97 0 146 6 97 0 147 6 97 0 148 6 97 0 149] 
#[1 0 9 0 11 0 81 0 100 6 101 0 124 0 97 0 125 6 101 0 145 6 101 0 146 6 101 0 147 6 101 0 148 6 101 0 149] 
#[1 0 9 0 11 0 81 0 100 6 105 0 124 0 97 0 125 6 105 0 145 6 105 0 146 6 105 0 147 6 105 0 148 6 105 0 149] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 6 109 0 133 6 113 0 185] 
#[1 1 133 0 11 0 234 0 55 0 234 0 100 0 234 0 124 0 234 0 125 0 234 0 127 6 117 0 177] 
#[1 0 9 0 11 0 81 0 100 6 121 0 124 0 97 0 125 6 121 0 145 6 121 0 146 6 121 0 147 6 121 0 148 6 121 0 149] 
#[1 6 125 0 65 6 129 0 73 6 133 0 94] 
#[1 0 9 0 11 0 81 0 100 6 137 0 124 0 97 0 125 6 137 0 145 6 137 0 146 6 137 0 147 6 137 0 148 6 137 0 149] 
#[1 2 29 0 5 1 133 0 11 6 141 0 185] 
#[1 0 9 0 11 0 81 0 100 6 145 0 124 0 97 0 125 6 145 0 145 6 145 0 146 6 145 0 147 6 145 0 148 6 145 0 149] 
#[1 0 9 0 11 0 81 0 100 6 149 0 124 0 97 0 125 6 149 0 145 6 149 0 146 6 149 0 147 6 149 0 148 6 149 0 149] 
#[1 0 9 0 11 0 81 0 100 6 153 0 124 0 97 0 125 6 153 0 145 6 153 0 146 6 153 0 147 6 153 0 148 6 153 0 149] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 6 157 0 133 6 161 0 185] 
#[0 2 106 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 110 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 2 114 0 22 2 114 0 23 5 253 0 24 2 114 0 25 2 114 0 26 6 1 0 29 6 5 0 30 6 9 0 32 2 114 0 34 2 114 0 35 2 114 0 44 2 114 0 47 2 114 0 49 2 114 0 50 2 114 0 53 2 114 0 54 2 114 0 55 2 114 0 56 6 13 0 57 2 114 0 59 2 114 0 60 2 114 0 62 2 114 0 63 2 114 0 64 2 114 0 66 2 114 0 67 2 114 0 68 2 114 0 69 6 17 0 72 2 114 0 73 6 21 0 75 2 114 0 77 2 114 0 79 2 114 0 80 2 114 0 82 2 114 0 83 6 25 0 85 2 114 0 88 2 114 0 89 2 114 0 90 2 114 0 91 2 114 0 92 2 114 0 93 2 114 0 94 2 114 0 96 2 114 0 99 2 114 0 100 2 114 0 103 2 114 0 107 2 114 0 108 2 114 0 109 6 33 0 110 2 114 0 111 2 114 0 117 2 114 0 118 2 114 0 119 2 114 0 120 2 114 0 121 2 114 0 122 2 114 0 123 2 114 0 124 2 114 0 125 2 114 0 127 6 37 0 246 6 41 0 248 6 45 0 250 2 114 1 55] 
#[1 6 165 0 55 6 169 0 127 6 173 0 155 6 177 0 157] 
#[1 2 153 0 122 6 181 0 140] 
#[1 2 153 0 122 6 185 0 140] 
#[0 2 118 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 122 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 126 0 5 0 8 0 9 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 6 189 0 55 0 81 0 100 6 193 0 124 0 97 0 125 1 245 0 127 6 193 0 145 6 193 0 146 6 193 0 147 6 193 0 148 6 193 0 149 6 197 0 183] 
#[0 2 130 0 11 0 55 0 100 0 124 0 125 0 127] 
#[0 2 134 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 33 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 2 138 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 86 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 2 142 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 86 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 0 9 0 11 4 45 0 38 6 209 0 40 6 201 0 86 0 81 0 100 6 205 0 124 0 97 0 125 6 205 0 145 6 205 0 146 6 205 0 147 6 205 0 148 6 205 0 149 6 209 0 184] 
#[1 0 9 0 11 0 81 0 100 6 213 0 124 0 97 0 125 6 213 0 145 6 213 0 146 6 213 0 147 6 213 0 148 6 213 0 149] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 6 221 0 167 6 221 0 168 1 153 0 169 6 221 0 173 6 225 0 189 6 229 0 190] 
#[1 0 9 0 11 6 233 0 86 0 81 0 100 6 237 0 124 0 97 0 125 6 237 0 145 6 237 0 146 6 237 0 147 6 237 0 148 6 237 0 149] 
#[1 2 150 0 6 2 150 0 9 6 241 0 187] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 6 245 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 6 249 0 133] 
#[1 2 93 0 5 4 41 0 6 2 97 0 8 0 246 0 9 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 4 45 0 38 4 65 0 40 2 121 0 60 2 213 0 73 2 129 0 80 4 53 0 84 4 57 0 86 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 6 253 0 124 0 97 0 125 2 213 0 134 2 213 0 135 2 213 0 136 2 213 0 137 2 213 0 138 2 213 0 139 2 213 0 140 2 213 0 141 2 213 0 142 6 253 0 145 6 253 0 146 6 253 0 147 6 253 0 148 6 253 0 149 2 201 0 171 2 205 0 172 4 65 0 184 4 69 0 188 2 213 0 220 2 213 0 221 2 213 0 222 2 213 0 226 2 213 0 227 2 213 0 228 2 213 0 229 2 213 0 230 2 213 0 237 2 213 0 238 2 213 0 239 2 213 0 240 2 213 0 241 2 213 0 242 2 213 0 243 2 213 0 244 2 213 0 245 2 213 0 247 2 213 0 249 2 213 0 251 2 213 0 252 2 213 0 253 2 213 0 254 2 213 0 255 2 213 1 0 2 213 1 1 2 213 1 49 2 213 1 50 2 213 1 51 2 213 1 52 2 213 1 53 2 213 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 7 1 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 5 0 133] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 9 0 133 7 13 0 167 7 13 0 168 1 153 0 169 7 13 0 173] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 7 17 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 21 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 7 25 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 29 0 133] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 77 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 7 33 0 104 0 15 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 41 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 7 45 0 52 2 121 0 60 7 49 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 49 0 134 7 49 0 135 7 49 0 136 7 49 0 137 7 49 0 138 7 49 0 139 7 49 0 140 7 49 0 141 7 49 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 49 0 220 7 49 0 221 7 49 0 222 7 49 0 226 7 49 0 227 7 49 0 228 7 49 0 229 7 49 0 230 7 49 0 237 7 49 0 238 7 49 0 239 7 49 0 240 7 49 0 241 7 49 0 242 7 49 0 243 7 49 0 244 7 49 0 245 7 49 0 247 7 49 0 249 7 49 0 251 7 49 0 252 7 49 0 253 7 49 0 254 7 49 0 255 7 49 1 0 7 49 1 1 7 49 1 49 7 49 1 50 7 49 1 51 7 49 1 52 7 49 1 53 7 49 1 54] 
#[1 0 9 0 11 0 81 0 100 1 73 0 119 7 57 0 124 0 97 0 125 7 53 0 135 7 57 0 145 7 57 0 146 7 57 0 147 7 57 0 148 7 57 0 149] 
#[1 0 9 0 11 0 81 0 100 1 73 0 119 7 65 0 124 0 97 0 125 7 61 0 135 7 65 0 145 7 65 0 146 7 65 0 147 7 65 0 148 7 65 0 149] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 69 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 69 0 134 7 69 0 135 7 69 0 136 7 69 0 137 7 69 0 138 7 69 0 139 7 69 0 140 7 69 0 141 7 69 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 69 0 220 7 69 0 221 7 69 0 222 7 69 0 226 7 69 0 227 7 69 0 228 7 69 0 229 7 69 0 230 7 69 0 237 7 69 0 238 7 69 0 239 7 69 0 240 7 69 0 241 7 69 0 242 7 69 0 243 7 69 0 244 7 69 0 245 7 69 0 247 7 69 0 249 7 69 0 251 7 69 0 252 7 69 0 253 7 69 0 254 7 69 0 255 7 69 1 0 7 69 1 1 7 69 1 49 7 69 1 50 7 69 1 51 7 69 1 52 7 69 1 53 7 69 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 7 73 0 58 2 121 0 60 7 77 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 77 0 134 7 77 0 135 7 77 0 136 7 77 0 137 7 77 0 138 7 77 0 139 7 77 0 140 7 77 0 141 7 77 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 77 0 220 7 77 0 221 7 77 0 222 7 77 0 226 7 77 0 227 7 77 0 228 7 77 0 229 7 77 0 230 7 77 0 237 7 77 0 238 7 77 0 239 7 77 0 240 7 77 0 241 7 77 0 242 7 77 0 243 7 77 0 244 7 77 0 245 7 77 0 247 7 77 0 249 7 77 0 251 7 77 0 252 7 77 0 253 7 77 0 254 7 77 0 255 7 77 1 0 7 77 1 1 7 77 1 49 7 77 1 50 7 77 1 51 7 77 1 52 7 77 1 53 7 77 1 54] 
#[1 2 154 0 5 2 154 0 8 2 154 0 10 0 9 0 11 2 154 0 22 2 154 0 23 2 154 0 25 2 154 0 26 2 154 0 34 2 154 0 44 2 154 0 49 2 154 0 50 2 154 0 53 2 154 0 54 2 154 0 55 2 154 0 56 2 154 0 59 2 154 0 60 2 154 0 62 2 154 0 63 2 154 0 66 2 154 0 67 2 154 0 68 2 154 0 69 2 154 0 73 2 154 0 77 0 19 0 79 2 154 0 80 2 154 0 82 2 154 0 88 2 154 0 90 2 154 0 91 2 154 0 92 2 154 0 93 2 154 0 94 2 154 0 96 0 23 0 100 2 154 0 103 2 154 0 107 2 154 0 108 2 154 0 109 2 154 0 111 2 154 0 117 2 154 0 118 2 154 0 119 2 154 0 120 2 154 0 121 2 154 0 122 2 154 0 123 0 27 0 124 0 31 0 125 2 154 0 127 7 85 0 145 7 85 0 146 7 85 0 147 7 85 0 148 7 85 0 149] 
#[1 0 9 0 11 1 33 0 27 0 81 0 100 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 105 0 206 1 109 0 213] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 89 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 89 0 220 5 117 0 221 5 117 0 222 7 89 0 226 7 89 0 227 7 89 0 228 7 89 0 229 7 89 0 230 7 89 0 237 7 89 0 238 7 89 0 239 7 89 0 240 7 89 0 241 7 89 0 242 7 89 0 243 7 89 0 244 7 89 0 245 7 89 0 247 7 89 0 249 7 89 0 251 7 89 0 252 7 89 0 253 7 89 0 254 7 89 0 255 7 89 1 0 7 89 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 0 9 0 11 0 81 0 100 7 93 0 124 0 97 0 125 7 93 0 145 7 93 0 146 7 93 0 147 7 93 0 148 7 93 0 149] 
#[1 0 7 0 1 0 7 0 3 0 35 0 5 0 7 0 7 0 7 0 8 1 146 0 9 0 7 0 10 0 11 0 11 0 7 0 12 7 97 0 13 0 7 0 14 1 146 0 15 0 7 0 16 0 7 0 17 0 7 0 18 0 39 0 19 0 7 0 20 0 7 0 21 0 7 0 22 0 7 0 23 0 7 0 24 0 7 0 25 0 7 0 26 0 7 0 29 0 7 0 30 0 7 0 32 1 141 0 33 0 7 0 34 1 146 0 38 1 146 0 40 0 7 0 44 0 7 0 49 0 7 0 50 0 7 0 53 0 7 0 54 0 7 0 55 0 7 0 56 0 7 0 57 0 7 0 59 0 7 0 60 0 7 0 62 0 7 0 63 0 7 0 66 0 7 0 67 0 7 0 68 0 7 0 69 0 7 0 72 0 7 0 73 0 7 0 75 0 7 0 77 0 7 0 79 0 7 0 80 0 7 0 82 0 7 0 85 1 146 0 86 0 7 0 88 0 7 0 90 0 7 0 91 0 7 0 92 0 7 0 93 0 7 0 94 0 7 0 96 0 7 0 100 0 7 0 103 0 7 0 107 0 7 0 108 0 7 0 109 0 7 0 110 0 7 0 111 0 7 0 117 0 7 0 118 0 7 0 119 0 7 0 120 0 7 0 121 0 7 0 122 0 7 0 123 0 7 0 124 0 7 0 125 0 7 0 127 1 157 0 167 1 157 0 168 1 153 0 169 1 157 0 173 5 169 0 232 5 173 0 234] 
#[0 2 158 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 2 162 0 5 2 162 0 8 2 162 0 10 2 162 0 11 2 162 0 22 2 162 0 23 2 162 0 25 2 162 0 26 2 162 0 34 2 162 0 44 2 162 0 49 2 162 0 50 2 162 0 53 2 162 0 54 2 162 0 55 2 162 0 56 2 162 0 59 2 162 0 60 2 162 0 62 2 162 0 63 2 162 0 66 2 162 0 67 2 162 0 68 2 162 0 69 2 162 0 73 2 162 0 77 2 162 0 79 2 162 0 80 2 162 0 82 2 162 0 88 2 162 0 90 2 162 0 91 2 162 0 92 2 162 0 93 2 162 0 94 2 162 0 96 2 162 0 100 2 162 0 103 2 162 0 107 2 162 0 108 2 162 0 109 2 162 0 111 2 162 0 117 2 162 0 118 2 162 0 119 2 162 0 120 2 162 0 121 2 162 0 122 2 162 0 123 2 162 0 124 2 162 0 125 2 162 0 127 7 101 0 162] 
#[0 7 105 0 55] 
#[1 0 9 0 11 1 33 0 27 1 169 0 44 1 177 0 56 1 181 0 59 0 81 0 100 1 201 0 103 1 37 0 124 0 97 0 125 1 37 0 145 1 37 0 146 1 37 0 147 1 37 0 148 1 37 0 149 1 209 0 206 1 213 0 213] 
#[0 2 166 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 170 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 2 174 0 22 2 174 0 23 5 253 0 24 2 174 0 25 2 174 0 26 6 1 0 29 6 5 0 30 6 9 0 32 2 174 0 34 2 174 0 44 2 174 0 49 2 174 0 50 2 174 0 53 2 174 0 54 2 174 0 55 2 174 0 56 6 13 0 57 2 174 0 59 2 174 0 60 2 174 0 62 2 174 0 63 2 174 0 66 2 174 0 67 2 174 0 68 2 174 0 69 6 17 0 72 2 174 0 73 6 21 0 75 2 174 0 77 2 174 0 79 2 174 0 80 2 174 0 82 6 25 0 85 2 174 0 88 2 174 0 90 2 174 0 91 2 174 0 92 2 174 0 93 2 174 0 94 2 174 0 96 2 174 0 100 2 174 0 103 2 174 0 107 2 174 0 108 2 174 0 109 6 33 0 110 2 174 0 111 2 174 0 117 2 174 0 118 2 174 0 119 2 174 0 120 2 174 0 121 2 174 0 122 2 174 0 123 2 174 0 124 2 174 0 125 2 174 0 127 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 2 178 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 182 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 186 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 190 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 194 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 198 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 202 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 206 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 210 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 214 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 218 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 222 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 226 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 230 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 234 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 238 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 242 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 246 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 250 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 2 254 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 2 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 0 43 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 14 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 18 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 22 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 26 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 30 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 34 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 38 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 42 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 46 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 50 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 54 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 58 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 62 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 66 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 70 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 74 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 3 78 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 1 254 0 1 1 254 0 3 0 47 0 5 1 254 0 7 0 47 0 8 0 47 0 10 0 47 0 11 1 254 0 12 1 254 0 14 1 254 0 16 1 254 0 17 1 254 0 18 1 254 0 19 1 254 0 20 1 254 0 21 0 47 0 22 0 47 0 23 1 254 0 24 0 47 0 25 0 47 0 26 1 254 0 29 1 254 0 30 1 254 0 32 0 47 0 34 0 47 0 44 0 47 0 49 0 47 0 50 0 47 0 53 0 47 0 54 0 47 0 55 0 47 0 56 1 254 0 57 0 47 0 59 0 47 0 60 0 47 0 62 0 47 0 63 0 47 0 66 0 47 0 67 0 47 0 68 0 47 0 69 1 254 0 72 0 47 0 73 1 254 0 75 0 47 0 77 0 47 0 79 0 47 0 80 0 47 0 82 1 254 0 85 0 47 0 88 0 47 0 90 0 47 0 91 0 47 0 92 0 47 0 93 0 47 0 94 0 47 0 96 0 47 0 100 0 47 0 103 0 47 0 107 0 47 0 108 0 47 0 109 1 254 0 110 0 47 0 111 0 47 0 117 0 47 0 118 0 47 0 119 0 47 0 120 0 47 0 121 0 47 0 122 0 47 0 123 0 47 0 124 0 47 0 125 0 47 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 7 109 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 9 0 11 7 113 0 55 0 81 0 100 7 117 0 124 0 97 0 125 1 245 0 127 7 117 0 145 7 117 0 146 7 117 0 147 7 117 0 148 7 117 0 149 7 121 0 178] 
#[0 3 86 0 11 0 55 0 100 0 124 0 125 0 127] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 7 125 0 6 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 5 193 0 1 0 51 0 3 5 201 0 5 3 90 0 6 5 205 0 7 3 90 0 8 3 90 0 9 3 90 0 10 5 217 0 11 5 221 0 12 3 90 0 13 0 55 0 14 3 90 0 15 3 90 0 16 3 90 0 17 3 90 0 18 3 90 0 19 3 90 0 20 3 90 0 21 3 90 0 22 3 90 0 23 5 253 0 24 3 90 0 25 3 90 0 26 0 59 0 29 6 5 0 30 3 90 0 32 3 90 0 34 3 90 0 35 3 90 0 44 3 90 0 47 3 90 0 49 3 90 0 50 3 90 0 53 3 90 0 54 3 90 0 55 3 90 0 56 3 90 0 57 3 90 0 59 3 90 0 60 3 90 0 62 3 90 0 63 3 90 0 64 3 90 0 66 3 90 0 67 3 90 0 68 3 90 0 69 3 90 0 72 3 90 0 73 3 90 0 75 3 90 0 77 3 90 0 79 3 90 0 80 3 90 0 82 3 90 0 83 3 90 0 85 3 90 0 88 3 90 0 89 3 90 0 90 3 90 0 91 3 90 0 92 3 90 0 93 3 90 0 94 3 90 0 96 3 90 0 97 3 90 0 99 3 90 0 100 3 90 0 101 3 90 0 102 3 90 0 103 3 90 0 107 3 90 0 108 3 90 0 109 3 90 0 110 3 90 0 111 3 90 0 117 3 90 0 118 3 90 0 119 3 90 0 120 3 90 0 121 3 90 0 122 3 90 0 123 3 90 0 124 3 90 0 125 3 90 0 127 6 37 0 246 6 41 0 248 6 45 0 250 3 90 1 55] 
#[1 5 193 0 1 0 63 0 3 5 201 0 5 3 94 0 6 5 205 0 7 3 94 0 8 3 94 0 9 3 94 0 10 5 217 0 11 5 221 0 12 3 94 0 13 0 67 0 14 3 94 0 15 3 94 0 16 3 94 0 17 3 94 0 18 3 94 0 19 3 94 0 20 3 94 0 21 3 94 0 22 3 94 0 23 5 253 0 24 3 94 0 25 3 94 0 26 0 71 0 29 6 5 0 30 3 94 0 32 3 94 0 34 3 94 0 35 3 94 0 44 3 94 0 47 3 94 0 49 3 94 0 50 3 94 0 53 3 94 0 54 3 94 0 55 3 94 0 56 3 94 0 57 3 94 0 59 3 94 0 60 3 94 0 62 3 94 0 63 3 94 0 64 3 94 0 66 3 94 0 67 3 94 0 68 3 94 0 69 3 94 0 72 3 94 0 73 3 94 0 75 3 94 0 77 3 94 0 79 3 94 0 80 3 94 0 82 3 94 0 83 3 94 0 85 3 94 0 88 3 94 0 89 3 94 0 90 3 94 0 91 3 94 0 92 3 94 0 93 3 94 0 94 3 94 0 96 3 94 0 97 3 94 0 99 3 94 0 100 3 94 0 101 3 94 0 102 3 94 0 103 3 94 0 107 3 94 0 108 3 94 0 109 3 94 0 110 3 94 0 111 3 94 0 117 3 94 0 118 3 94 0 119 3 94 0 120 3 94 0 121 3 94 0 122 3 94 0 123 3 94 0 124 3 94 0 125 3 94 0 127 6 37 0 246 6 41 0 248 6 45 0 250 3 94 1 55] 
#[1 3 98 0 1 3 98 0 3 3 98 0 5 3 98 0 6 3 98 0 7 3 98 0 8 3 98 0 9 3 98 0 10 1 133 0 11 3 98 0 12 3 98 0 13 3 98 0 14 3 98 0 15 3 98 0 16 3 98 0 17 3 98 0 18 3 98 0 19 3 98 0 20 3 98 0 21 3 98 0 22 3 98 0 23 3 98 0 24 3 98 0 25 3 98 0 26 3 98 0 29 3 98 0 30 3 98 0 32 3 98 0 34 3 98 0 35 3 98 0 44 3 98 0 47 3 98 0 49 3 98 0 50 3 98 0 53 3 98 0 54 3 98 0 55 3 98 0 56 3 98 0 57 3 98 0 59 3 98 0 60 3 98 0 62 3 98 0 63 3 98 0 64 3 98 0 66 3 98 0 67 3 98 0 68 3 98 0 69 3 98 0 72 3 98 0 73 3 98 0 75 3 98 0 77 3 98 0 79 3 98 0 80 3 98 0 82 3 98 0 83 3 98 0 85 3 98 0 88 3 98 0 89 3 98 0 90 3 98 0 91 3 98 0 92 3 98 0 93 3 98 0 94 3 98 0 96 3 98 0 97 3 98 0 99 3 98 0 100 3 98 0 101 3 98 0 102 3 98 0 103 3 98 0 107 3 98 0 108 3 98 0 109 3 98 0 110 3 98 0 111 3 98 0 117 3 98 0 118 3 98 0 119 3 98 0 120 3 98 0 121 3 98 0 122 3 98 0 123 3 98 0 124 3 98 0 125 3 98 0 127 3 98 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 0 75 0 1 0 75 0 3 0 75 0 5 3 102 0 6 0 75 0 7 0 75 0 8 3 102 0 9 0 75 0 10 0 75 0 11 0 75 0 12 3 102 0 13 0 75 0 14 3 102 0 15 0 75 0 16 0 75 0 17 0 75 0 18 0 75 0 19 0 75 0 20 0 75 0 21 3 102 0 22 3 102 0 23 0 75 0 24 3 102 0 25 3 102 0 26 0 75 0 29 0 75 0 30 0 75 0 32 3 102 0 34 3 102 0 35 3 102 0 44 3 102 0 47 3 102 0 49 3 102 0 50 3 102 0 53 3 102 0 54 3 102 0 55 3 102 0 56 0 75 0 57 3 102 0 59 3 102 0 60 3 102 0 62 3 102 0 63 3 102 0 64 3 102 0 66 3 102 0 67 3 102 0 68 3 102 0 69 0 75 0 72 3 102 0 73 0 75 0 75 3 102 0 77 3 102 0 79 3 102 0 80 3 102 0 82 3 102 0 83 0 75 0 85 3 102 0 88 3 102 0 89 3 102 0 90 3 102 0 91 3 102 0 92 3 102 0 93 3 102 0 94 3 102 0 96 3 102 0 97 3 102 0 99 3 102 0 100 3 102 0 101 3 102 0 102 3 102 0 103 3 102 0 107 3 102 0 108 3 102 0 109 0 75 0 110 3 102 0 111 3 102 0 117 3 102 0 118 3 102 0 119 3 102 0 120 3 102 0 121 3 102 0 122 3 102 0 123 3 102 0 124 3 102 0 125 3 102 0 127 3 102 1 55] 
#[1 3 106 0 1 3 106 0 3 3 106 0 5 3 106 0 6 3 106 0 7 3 106 0 8 3 106 0 9 3 106 0 10 1 133 0 11 3 106 0 12 3 106 0 13 3 106 0 14 3 106 0 15 3 106 0 16 3 106 0 17 3 106 0 18 3 106 0 19 3 106 0 20 3 106 0 21 3 106 0 22 3 106 0 23 3 106 0 24 3 106 0 25 3 106 0 26 3 106 0 29 3 106 0 30 3 106 0 32 3 106 0 34 3 106 0 35 3 106 0 44 3 106 0 47 3 106 0 49 3 106 0 50 3 106 0 53 3 106 0 54 3 106 0 55 3 106 0 56 3 106 0 57 3 106 0 59 3 106 0 60 3 106 0 62 3 106 0 63 3 106 0 64 3 106 0 66 3 106 0 67 3 106 0 68 3 106 0 69 3 106 0 72 3 106 0 73 3 106 0 75 3 106 0 77 3 106 0 79 3 106 0 80 3 106 0 82 3 106 0 83 3 106 0 85 3 106 0 88 3 106 0 89 3 106 0 90 3 106 0 91 3 106 0 92 3 106 0 93 3 106 0 94 3 106 0 96 3 106 0 97 3 106 0 99 3 106 0 100 3 106 0 101 3 106 0 102 3 106 0 103 3 106 0 107 3 106 0 108 3 106 0 109 3 106 0 110 3 106 0 111 3 106 0 117 3 106 0 118 3 106 0 119 3 106 0 120 3 106 0 121 3 106 0 122 3 106 0 123 3 106 0 124 3 106 0 125 3 106 0 127 3 106 1 55] 
#[1 0 79 0 1 0 79 0 3 0 79 0 5 3 110 0 6 0 79 0 7 0 79 0 8 3 110 0 9 0 79 0 10 0 79 0 11 0 79 0 12 3 110 0 13 0 79 0 14 3 110 0 15 0 79 0 16 0 79 0 17 0 79 0 18 0 79 0 19 0 79 0 20 0 79 0 21 3 110 0 22 3 110 0 23 0 79 0 24 3 110 0 25 3 110 0 26 0 79 0 29 0 79 0 30 0 79 0 32 3 110 0 34 3 110 0 35 3 110 0 44 3 110 0 47 3 110 0 49 3 110 0 50 3 110 0 53 3 110 0 54 3 110 0 55 3 110 0 56 0 79 0 57 3 110 0 59 3 110 0 60 3 110 0 62 3 110 0 63 3 110 0 64 3 110 0 66 3 110 0 67 3 110 0 68 3 110 0 69 0 79 0 72 3 110 0 73 0 79 0 75 3 110 0 77 3 110 0 79 3 110 0 80 3 110 0 82 3 110 0 83 0 79 0 85 3 110 0 88 3 110 0 89 3 110 0 90 3 110 0 91 3 110 0 92 3 110 0 93 3 110 0 94 3 110 0 96 3 110 0 97 3 110 0 99 3 110 0 100 3 110 0 101 3 110 0 102 3 110 0 103 3 110 0 107 3 110 0 108 3 110 0 109 0 79 0 110 3 110 0 111 3 110 0 117 3 110 0 118 3 110 0 119 3 110 0 120 3 110 0 121 3 110 0 122 3 110 0 123 3 110 0 124 3 110 0 125 3 110 0 127 3 110 1 55] 
#[0 3 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 3 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 3 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 3 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 3 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 0 83 0 3 5 201 0 5 3 134 0 6 5 205 0 7 5 209 0 8 3 134 0 9 5 213 0 10 5 217 0 11 5 221 0 12 3 134 0 13 0 87 0 14 3 134 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 3 134 0 22 3 134 0 23 5 253 0 24 3 134 0 25 3 134 0 26 0 91 0 29 6 5 0 30 6 9 0 32 3 134 0 34 3 134 0 35 3 134 0 44 3 134 0 47 3 134 0 49 3 134 0 50 3 134 0 53 3 134 0 54 3 134 0 55 3 134 0 56 6 13 0 57 3 134 0 59 3 134 0 60 3 134 0 62 3 134 0 63 3 134 0 64 3 134 0 66 3 134 0 67 3 134 0 68 3 134 0 69 6 17 0 72 3 134 0 73 6 21 0 75 3 134 0 77 3 134 0 79 3 134 0 80 3 134 0 82 3 134 0 83 6 25 0 85 3 134 0 88 3 134 0 89 3 134 0 90 3 134 0 91 3 134 0 92 3 134 0 93 3 134 0 94 3 134 0 96 3 134 0 97 3 134 0 99 3 134 0 100 3 134 0 101 3 134 0 102 3 134 0 103 3 134 0 107 3 134 0 108 3 134 0 109 6 33 0 110 3 134 0 111 3 134 0 117 3 134 0 118 3 134 0 119 3 134 0 120 3 134 0 121 3 134 0 122 3 134 0 123 3 134 0 124 3 134 0 125 3 134 0 127 6 37 0 246 6 41 0 248 6 45 0 250 3 134 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 7 129 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 3 138 0 10 0 116] 
#[1 7 133 0 10 7 137 0 116] 
#[0 3 142 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 3 146 0 1 3 146 0 3 2 93 0 5 3 146 0 6 3 146 0 7 2 97 0 8 7 141 0 9 2 101 0 10 0 9 0 11 3 146 0 12 3 146 0 13 3 146 0 14 0 95 0 15 3 146 0 16 3 146 0 17 3 146 0 18 3 146 0 19 3 146 0 20 3 146 0 21 0 99 0 22 0 103 0 23 3 146 0 24 0 107 0 25 0 111 0 26 3 146 0 29 3 146 0 30 3 146 0 32 3 146 0 34 3 146 0 35 4 45 0 38 7 153 0 40 3 146 0 44 3 146 0 47 3 146 0 49 3 146 0 50 3 146 0 53 3 146 0 54 3 146 0 55 3 146 0 56 3 146 0 57 3 146 0 59 0 115 0 60 3 146 0 62 3 146 0 63 3 146 0 64 3 146 0 66 3 146 0 67 3 146 0 68 3 146 0 69 3 146 0 72 0 119 0 73 3 146 0 75 3 146 0 77 3 146 0 79 0 123 0 80 3 146 0 82 3 146 0 83 3 146 0 85 7 149 0 86 3 146 0 88 3 146 0 89 3 146 0 90 3 146 0 91 3 146 0 92 3 146 0 93 0 127 0 94 3 146 0 96 3 146 0 97 3 146 0 99 0 131 0 100 3 146 0 101 3 146 0 102 3 146 0 103 3 146 0 107 3 146 0 108 3 146 0 109 3 146 0 110 0 135 0 111 0 139 0 117 0 143 0 118 0 147 0 119 0 151 0 120 0 155 0 121 0 159 0 122 0 163 0 123 0 167 0 124 0 171 0 125 3 146 0 127 7 157 0 134 7 157 0 135 7 157 0 136 7 157 0 137 7 157 0 138 7 157 0 139 7 157 0 140 7 157 0 141 7 157 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 153 0 184 7 157 0 220 7 157 0 221 7 157 0 222 7 157 0 226 7 157 0 227 7 157 0 228 7 157 0 229 7 157 0 230 7 161 0 231 7 165 0 233 7 169 0 236 7 157 0 237 7 157 0 238 7 157 0 239 7 157 0 240 7 157 0 241 7 157 0 242 7 157 0 243 7 157 0 244 7 157 0 245 7 157 0 247 7 157 0 249 7 157 0 251 7 157 0 252 7 157 0 253 7 157 0 254 7 157 0 255 7 157 1 0 7 157 1 1 7 157 1 49 7 157 1 50 7 157 1 51 7 157 1 52 7 157 1 53 7 157 1 54 3 146 1 55] 
#[0 3 150 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 33 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 2 213 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 2 213 0 134 2 213 0 135 2 213 0 136 2 213 0 137 2 213 0 138 2 213 0 139 2 213 0 140 2 213 0 141 2 213 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 173 0 172 2 213 0 220 2 213 0 221 2 213 0 222 2 213 0 226 2 213 0 227 2 213 0 228 2 213 0 229 2 213 0 230 2 213 0 237 2 213 0 238 2 213 0 239 2 213 0 240 2 213 0 241 2 213 0 242 2 213 0 243 2 213 0 244 2 213 0 245 2 213 0 247 2 213 0 249 2 213 0 251 2 213 0 252 2 213 0 253 2 213 0 254 2 213 0 255 2 213 1 0 2 213 1 1 2 213 1 49 2 213 1 50 2 213 1 51 2 213 1 52 2 213 1 53 2 213 1 54] 
#[0 3 154 0 6 0 9] 
#[1 7 177 0 6 5 181 0 9 5 185 0 170] 
#[1 0 9 0 11 0 81 0 100 7 181 0 124 0 97 0 125 7 181 0 145 7 181 0 146 7 181 0 147 7 181 0 148 7 181 0 149] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 185 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 185 0 134 7 185 0 135 7 185 0 136 7 185 0 137 7 185 0 138 7 185 0 139 7 185 0 140 7 185 0 141 7 185 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 185 0 220 7 185 0 221 7 185 0 222 7 185 0 226 7 185 0 227 7 185 0 228 7 185 0 229 7 185 0 230 7 185 0 237 7 185 0 238 7 185 0 239 7 185 0 240 7 185 0 241 7 185 0 242 7 185 0 243 7 185 0 244 7 185 0 245 7 185 0 247 7 185 0 249 7 185 0 251 7 185 0 252 7 185 0 253 7 185 0 254 7 185 0 255 7 185 1 0 7 185 1 1 7 185 1 49 7 185 1 50 7 185 1 51 7 185 1 52 7 185 1 53 7 185 1 54] 
#[1 1 146 0 5 1 146 0 6 1 146 0 8 1 146 0 9 1 146 0 10 1 146 0 11 1 146 0 15 1 146 0 22 1 146 0 23 1 146 0 25 1 146 0 26 1 146 0 38 1 146 0 40 1 146 0 60 1 146 0 73 1 146 0 80 1 146 0 86 1 146 0 94 1 146 0 100 1 146 0 111 1 146 0 117 1 146 0 118 1 146 0 119 1 146 0 120 1 146 0 121 1 146 0 122 1 146 0 123 1 146 0 124 1 146 0 125 7 189 0 232 5 173 0 234] 
#[0 3 158 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 162 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 166 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 0 9 0 11 0 81 0 100 7 193 0 124 0 97 0 125 7 193 0 145 7 193 0 146 7 193 0 147 7 193 0 148 7 193 0 149] 
#[0 3 170 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 197 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 197 0 134 7 197 0 135 7 197 0 136 7 197 0 137 7 197 0 138 7 197 0 139 7 197 0 140 7 197 0 141 7 197 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 197 0 220 7 197 0 221 7 197 0 222 7 197 0 226 7 197 0 227 7 197 0 228 7 197 0 229 7 197 0 230 7 197 0 237 7 197 0 238 7 197 0 239 7 197 0 240 7 197 0 241 7 197 0 242 7 197 0 243 7 197 0 244 7 197 0 245 7 197 0 247 7 197 0 249 7 197 0 251 7 197 0 252 7 197 0 253 7 197 0 254 7 197 0 255 7 197 1 0 7 197 1 1 7 197 1 49 7 197 1 50 7 197 1 51 7 197 1 52 7 197 1 53 7 197 1 54] 
#[0 3 174 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 178 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 182 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 201 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 201 0 134 7 201 0 135 7 201 0 136 7 201 0 137 7 201 0 138 7 201 0 139 7 201 0 140 7 201 0 141 7 201 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 201 0 220 7 201 0 221 7 201 0 222 7 201 0 226 7 201 0 227 7 201 0 228 7 201 0 229 7 201 0 230 7 201 0 237 7 201 0 238 7 201 0 239 7 201 0 240 7 201 0 241 7 201 0 242 7 201 0 243 7 201 0 244 7 201 0 245 7 201 0 247 7 201 0 249 7 201 0 251 7 201 0 252 7 201 0 253 7 201 0 254 7 201 0 255 7 201 1 0 7 201 1 1 7 201 1 49 7 201 1 50 7 201 1 51 7 201 1 52 7 201 1 53 7 201 1 54] 
#[0 3 186 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 190 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 194 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 198 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 202 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 206 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 210 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 214 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 218 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 3 222 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 205 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 205 0 134 7 205 0 135 7 205 0 136 7 205 0 137 7 205 0 138 7 205 0 139 7 205 0 140 7 205 0 141 7 205 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 205 0 220 7 205 0 221 7 205 0 222 7 205 0 226 7 205 0 227 7 205 0 228 7 205 0 229 7 205 0 230 7 205 0 237 7 205 0 238 7 205 0 239 7 205 0 240 7 205 0 241 7 205 0 242 7 205 0 243 7 205 0 244 7 205 0 245 7 205 0 247 7 205 0 249 7 205 0 251 7 205 0 252 7 205 0 253 7 205 0 254 7 205 0 255 7 205 1 0 7 205 1 1 7 205 1 49 7 205 1 50 7 205 1 51 7 205 1 52 7 205 1 53 7 205 1 54] 
#[0 3 226 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 209 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 209 0 134 7 209 0 135 7 209 0 136 7 209 0 137 7 209 0 138 7 209 0 139 7 209 0 140 7 209 0 141 7 209 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 209 0 220 7 209 0 221 7 209 0 222 7 209 0 226 7 209 0 227 7 209 0 228 7 209 0 229 7 209 0 230 7 209 0 237 7 209 0 238 7 209 0 239 7 209 0 240 7 209 0 241 7 209 0 242 7 209 0 243 7 209 0 244 7 209 0 245 7 209 0 247 7 209 0 249 7 209 0 251 7 209 0 252 7 209 0 253 7 209 0 254 7 209 0 255 7 209 1 0 7 209 1 1 7 209 1 49 7 209 1 50 7 209 1 51 7 209 1 52 7 209 1 53 7 209 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 213 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 213 0 134 7 213 0 135 7 213 0 136 7 213 0 137 7 213 0 138 7 213 0 139 7 213 0 140 7 213 0 141 7 213 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 213 0 220 7 213 0 221 7 213 0 222 7 213 0 226 7 213 0 227 7 213 0 228 7 213 0 229 7 213 0 230 7 213 0 237 7 213 0 238 7 213 0 239 7 213 0 240 7 213 0 241 7 213 0 242 7 213 0 243 7 213 0 244 7 213 0 245 7 213 0 247 7 213 0 249 7 213 0 251 7 213 0 252 7 213 0 253 7 213 0 254 7 213 0 255 7 213 1 0 7 213 1 1 7 213 1 49 7 213 1 50 7 213 1 51 7 213 1 52 7 213 1 53 7 213 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 7 217 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 7 217 0 134 7 217 0 135 7 217 0 136 7 217 0 137 7 217 0 138 7 217 0 139 7 217 0 140 7 217 0 141 7 217 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 217 0 220 7 217 0 221 7 217 0 222 7 217 0 226 7 217 0 227 7 217 0 228 7 217 0 229 7 217 0 230 7 217 0 237 7 217 0 238 7 217 0 239 7 217 0 240 7 217 0 241 7 217 0 242 7 217 0 243 7 217 0 244 7 217 0 245 7 217 0 247 7 217 0 249 7 217 0 251 7 217 0 252 7 217 0 253 7 217 0 254 7 217 0 255 7 217 1 0 7 217 1 1 7 217 1 49 7 217 1 50 7 217 1 51 7 217 1 52 7 217 1 53 7 217 1 54] 
#[1 1 129 0 5 3 230 0 6 3 230 0 7 3 230 0 8 3 230 0 9 3 230 0 10 3 230 0 11 3 230 0 19 3 230 0 22 3 230 0 23 3 230 0 25 3 230 0 26 3 230 0 34 3 230 0 35 3 230 0 44 3 230 0 47 3 230 0 49 3 230 0 50 3 230 0 53 3 230 0 54 3 230 0 55 3 230 0 56 3 230 0 59 3 230 0 60 3 230 0 62 3 230 0 63 3 230 0 64 3 230 0 66 3 230 0 67 3 230 0 68 3 230 0 69 3 230 0 73 3 230 0 77 3 230 0 79 3 230 0 80 3 230 0 82 3 230 0 83 3 230 0 88 3 230 0 89 3 230 0 90 3 230 0 91 3 230 0 92 3 230 0 93 3 230 0 94 3 230 0 96 3 230 0 99 3 230 0 100 3 230 0 103 3 230 0 107 3 230 0 108 3 230 0 109 3 230 0 111 3 230 0 117 3 230 0 118 3 230 0 119 3 230 0 120 3 230 0 121 3 230 0 122 3 230 0 123 3 230 0 124 3 230 0 125 3 230 0 127 7 221 0 169 3 230 1 55] 
#[0 3 234 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 7 225 0 37 7 225 0 39 7 225 0 42 7 225 0 46 7 225 0 51 7 225 0 71 7 225 0 76 7 225 0 81 7 225 0 95 7 225 0 98 0 81 0 100 3 133 0 105 3 137 0 124 0 97 0 125 3 137 0 145 3 137 0 146 3 137 0 147 3 137 0 148 3 137 0 149 7 225 0 163 7 225 0 165 7 225 0 166] 
#[1 1 129 0 5 3 238 0 6 3 238 0 7 3 238 0 8 3 238 0 9 3 238 0 10 3 238 0 11 3 238 0 19 3 238 0 22 3 238 0 23 3 238 0 25 3 238 0 26 3 238 0 34 3 238 0 35 3 238 0 44 3 238 0 47 3 238 0 49 3 238 0 50 3 238 0 53 3 238 0 54 3 238 0 55 3 238 0 56 3 238 0 59 3 238 0 60 3 238 0 62 3 238 0 63 3 238 0 64 3 238 0 66 3 238 0 67 3 238 0 68 3 238 0 69 3 238 0 73 3 238 0 77 3 238 0 79 3 238 0 80 3 238 0 82 3 238 0 83 3 238 0 88 3 238 0 89 3 238 0 90 3 238 0 91 3 238 0 92 3 238 0 93 3 238 0 94 3 238 0 96 3 238 0 99 3 238 0 100 3 238 0 103 3 238 0 107 3 238 0 108 3 238 0 109 3 238 0 111 3 238 0 117 3 238 0 118 3 238 0 119 3 238 0 120 3 238 0 121 3 238 0 122 3 238 0 123 3 238 0 124 3 238 0 125 3 238 0 127 7 229 0 169 3 238 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 3 242 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 3 242 0 22 3 242 0 23 5 253 0 24 3 242 0 25 3 242 0 26 6 1 0 29 6 5 0 30 6 9 0 32 3 242 0 34 3 242 0 35 3 242 0 44 3 242 0 47 3 242 0 49 3 242 0 50 3 242 0 53 3 242 0 54 3 242 0 55 3 242 0 56 6 13 0 57 3 242 0 59 3 242 0 60 3 242 0 62 3 242 0 63 3 242 0 64 3 242 0 66 3 242 0 67 3 242 0 68 3 242 0 69 6 17 0 72 3 242 0 73 6 21 0 75 3 242 0 77 3 242 0 79 3 242 0 80 3 242 0 82 3 242 0 83 6 25 0 85 3 242 0 88 3 242 0 89 3 242 0 90 3 242 0 91 3 242 0 92 3 242 0 93 3 242 0 94 3 242 0 96 3 242 0 99 3 242 0 100 3 242 0 103 3 242 0 107 3 242 0 108 3 242 0 109 6 33 0 110 3 242 0 111 3 242 0 117 3 242 0 118 3 242 0 119 3 242 0 120 3 242 0 121 3 242 0 122 3 242 0 123 3 242 0 124 3 242 0 125 3 242 0 127 6 37 0 246 6 41 0 248 6 45 0 250 3 242 1 55] 
#[1 0 6 0 11 0 6 0 34 0 6 0 35 0 6 0 44 0 6 0 47 0 6 0 49 0 6 0 56 0 6 0 59 0 6 0 63 0 6 0 64 0 6 0 66 0 6 0 83 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 96 0 6 0 99 0 6 0 100 0 6 0 103 0 6 0 124 0 6 0 125 0 6 0 127 3 165 0 131 7 233 0 133 0 6 1 55] 
#[0 3 246 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 1 133 0 11 7 237 0 74] 
#[1 1 133 0 11 7 241 0 74] 
#[1 0 6 0 11 0 6 0 55 0 6 0 100 0 6 0 124 0 6 0 125 0 6 0 127 7 245 0 133 4 37 0 181] 
#[0 3 250 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 7 249 0 133 7 253 0 167 7 253 0 168 1 153 0 169 7 253 0 173] 
#[1 4 81 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 1 0 133 8 5 0 167 8 5 0 168 1 153 0 169 8 5 0 173 8 9 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 13 0 133 8 17 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 21 0 133 8 25 0 185] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 29 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 33 0 133] 
#[1 0 6 0 11 0 6 0 55 0 6 0 100 0 6 0 124 0 6 0 125 0 6 0 127 8 37 0 133 5 97 0 176] 
#[1 2 29 0 5 1 133 0 11 8 41 0 185] 
#[1 0 9 0 11 0 81 0 100 8 45 0 124 0 97 0 125 8 45 0 145 8 45 0 146 8 45 0 147 8 45 0 148 8 45 0 149] 
#[1 0 9 0 11 0 81 0 100 8 49 0 124 0 97 0 125 8 49 0 145 8 49 0 146 8 49 0 147 8 49 0 148 8 49 0 149] 
#[1 0 9 0 11 0 81 0 100 8 53 0 124 0 97 0 125 8 53 0 145 8 53 0 146 8 53 0 147 8 53 0 148 8 53 0 149] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 57 0 133 8 61 0 185] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 65 0 133 8 69 0 167 8 69 0 168 1 153 0 169 8 69 0 173] 
#[1 4 81 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 73 0 133 8 77 0 167 8 77 0 168 1 153 0 169 8 77 0 173 8 81 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 85 0 133 8 89 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 93 0 133 8 97 0 185] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 101 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 105 0 133] 
#[0 3 254 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 4 2 0 11 0 100 0 124 0 125 0 127] 
#[0 4 6 0 55 0 127] 
#[1 0 9 0 11 0 81 0 100 1 5 0 124 0 97 0 125 8 109 0 127 1 5 0 145 1 5 0 146 1 5 0 147 1 5 0 148 1 5 0 149 8 113 0 152] 
#[1 2 29 0 5 8 117 0 31 8 121 0 185] 
#[1 2 29 0 5 8 125 0 31 8 129 0 185] 
#[0 8 133 0 56] 
#[1 1 133 0 11 8 137 0 19 4 10 0 55 4 10 0 100 4 10 0 124 4 10 0 125 4 10 0 127] 
#[0 4 14 0 11 0 55 0 100 0 124 0 125 0 127] 
#[1 0 9 0 11 0 81 0 100 8 141 0 124 0 97 0 125 8 141 0 145 8 141 0 146 8 141 0 147 8 141 0 148 8 141 0 149] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 8 145 0 167 8 145 0 168 1 153 0 169 8 145 0 173 6 225 0 189 8 149 0 190] 
#[1 0 9 0 11 8 153 0 86 0 81 0 100 8 157 0 124 0 97 0 125 8 157 0 145 8 157 0 146 8 157 0 147 8 157 0 148 8 157 0 149] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 8 161 0 167 8 161 0 168 1 153 0 169 8 161 0 173 6 225 0 189 8 165 0 190] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 8 169 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 8 169 0 134 8 169 0 135 8 169 0 136 8 169 0 137 8 169 0 138 8 169 0 139 8 169 0 140 8 169 0 141 8 169 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 8 169 0 220 8 169 0 221 8 169 0 222 8 169 0 226 8 169 0 227 8 169 0 228 8 169 0 229 8 169 0 230 8 169 0 237 8 169 0 238 8 169 0 239 8 169 0 240 8 169 0 241 8 169 0 242 8 169 0 243 8 169 0 244 8 169 0 245 8 169 0 247 8 169 0 249 8 169 0 251 8 169 0 252 8 169 0 253 8 169 0 254 8 169 0 255 8 169 1 0 8 169 1 1 8 169 1 49 8 169 1 50 8 169 1 51 8 169 1 52 8 169 1 53 8 169 1 54] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 8 173 0 190] 
#[0 4 18 0 6 0 9] 
#[0 4 22 0 6 0 9] 
#[1 0 9 0 11 0 81 0 100 8 177 0 124 0 97 0 125 8 177 0 145 8 177 0 146 8 177 0 147 8 177 0 148 8 177 0 149] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 8 181 0 167 8 181 0 168 1 153 0 169 8 181 0 173 6 225 0 189 8 185 0 190] 
#[1 8 189 0 6 8 193 0 9 8 197 0 186] 
#[0 8 201 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 205 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 7 0 1 0 7 0 3 0 35 0 5 0 175 0 6 0 7 0 7 0 7 0 8 0 175 0 9 0 7 0 10 0 11 0 11 0 7 0 12 0 7 0 14 1 146 0 15 0 7 0 16 0 7 0 17 0 7 0 18 0 179 0 19 0 7 0 20 0 7 0 21 1 146 0 22 1 146 0 23 0 7 0 24 1 146 0 25 1 146 0 26 0 7 0 29 0 7 0 30 0 7 0 32 1 141 0 33 1 146 0 38 1 146 0 40 0 7 0 57 1 146 0 60 0 7 0 72 1 146 0 73 0 7 0 75 1 146 0 80 0 7 0 85 1 146 0 86 1 146 0 94 1 146 0 100 0 7 0 102 0 7 0 110 1 146 0 111 1 146 0 117 1 146 0 118 1 146 0 119 1 146 0 120 1 146 0 121 1 146 0 122 1 146 0 123 1 146 0 124 1 146 0 125 6 221 0 167 6 221 0 168 1 153 0 169 6 221 0 173 6 225 0 189 6 229 0 190 5 169 0 232 5 173 0 234] 
#[0 8 209 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 213 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 217 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 8 221 0 133] 
#[0 8 225 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 229 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 8 233 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 237 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 8 241 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 8 241 0 220 5 117 0 221 5 117 0 222 8 241 0 226 8 241 0 227 8 241 0 228 8 241 0 229 8 241 0 230 8 241 0 237 8 241 0 238 8 241 0 239 8 241 0 240 8 241 0 241 8 241 0 242 8 241 0 243 8 241 0 244 8 241 0 245 8 241 0 247 8 241 0 249 8 241 0 251 8 241 0 252 8 241 0 253 8 241 0 254 8 241 0 255 8 241 1 0 8 241 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 8 245 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 8 245 0 220 5 117 0 221 5 117 0 222 8 245 0 226 8 245 0 227 8 245 0 228 8 245 0 229 8 245 0 230 8 245 0 237 8 245 0 238 8 245 0 239 8 245 0 240 8 245 0 241 8 245 0 242 8 245 0 243 8 245 0 244 8 245 0 245 8 245 0 247 8 245 0 249 8 245 0 251 8 245 0 252 8 245 0 253 8 245 0 254 8 245 0 255 8 245 1 0 8 245 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 0 6 0 77 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 8 249 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 8 253 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 9 0 11 0 81 0 100 9 1 0 124 0 97 0 125 9 1 0 145 9 1 0 146 9 1 0 147 9 1 0 148 9 1 0 149] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 9 5 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 4 26 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 4 30 0 5 4 30 0 8 4 30 0 10 1 133 0 11 4 30 0 22 4 30 0 23 4 30 0 25 4 30 0 26 4 30 0 34 4 30 0 44 4 30 0 49 4 30 0 50 4 30 0 53 4 30 0 54 4 30 0 55 4 30 0 56 4 30 0 59 4 30 0 60 4 30 0 62 4 30 0 63 4 30 0 66 4 30 0 67 4 30 0 68 4 30 0 69 4 30 0 73 4 30 0 77 4 30 0 79 4 30 0 80 4 30 0 82 4 30 0 88 4 30 0 90 4 30 0 91 4 30 0 92 4 30 0 93 4 30 0 94 4 30 0 96 4 30 0 100 4 30 0 103 4 30 0 107 4 30 0 108 4 30 0 109 4 30 0 111 4 30 0 117 4 30 0 118 4 30 0 119 4 30 0 120 4 30 0 121 4 30 0 122 4 30 0 123 4 30 0 124 4 30 0 125 4 30 0 127] 
#[0 4 34 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 4 38 0 5 4 38 0 8 4 38 0 10 1 133 0 11 4 38 0 22 4 38 0 23 4 38 0 25 4 38 0 26 4 38 0 34 4 38 0 44 4 38 0 49 4 38 0 50 4 38 0 53 4 38 0 54 4 38 0 55 4 38 0 56 4 38 0 59 4 38 0 60 4 38 0 62 4 38 0 63 4 38 0 66 4 38 0 67 4 38 0 68 4 38 0 69 4 38 0 73 4 38 0 77 4 38 0 79 4 38 0 80 4 38 0 82 4 38 0 88 4 38 0 90 4 38 0 91 4 38 0 92 4 38 0 93 4 38 0 94 4 38 0 96 4 38 0 100 4 38 0 103 4 38 0 107 4 38 0 108 4 38 0 109 4 38 0 111 4 38 0 117 4 38 0 118 4 38 0 119 4 38 0 120 4 38 0 121 4 38 0 122 4 38 0 123 4 38 0 124 4 38 0 125 4 38 0 127] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 9 9 0 101 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 4 125 0 68 9 13 0 92 9 17 1 37 9 17 1 38 9 17 1 39] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 4 121 0 67 4 125 0 68 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250 9 21 1 36 9 21 1 37 9 21 1 38 9 21 1 39 9 21 1 40 9 21 1 41 9 21 1 42] 
#[0 4 42 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 4 46 0 5 4 46 0 8 4 46 0 10 1 133 0 11 4 46 0 22 4 46 0 23 4 46 0 25 4 46 0 26 4 46 0 34 4 46 0 44 4 46 0 49 4 46 0 50 4 46 0 53 4 46 0 54 4 46 0 55 4 46 0 56 4 46 0 59 4 46 0 60 4 46 0 62 4 46 0 63 4 46 0 66 4 46 0 67 4 46 0 68 4 46 0 69 4 46 0 73 4 46 0 77 4 46 0 79 4 46 0 80 4 46 0 82 4 46 0 88 4 46 0 90 4 46 0 91 4 46 0 92 4 46 0 93 4 46 0 94 4 46 0 96 4 46 0 100 4 46 0 103 4 46 0 107 4 46 0 108 4 46 0 109 4 46 0 111 4 46 0 117 4 46 0 118 4 46 0 119 4 46 0 120 4 46 0 121 4 46 0 122 4 46 0 123 4 46 0 124 4 46 0 125 4 46 0 127] 
#[1 1 150 0 1 1 150 0 3 0 191 0 5 1 150 0 7 0 191 0 8 0 191 0 10 0 191 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 0 6 0 22 0 6 0 23 1 150 0 24 0 6 0 25 0 6 0 26 1 150 0 29 1 150 0 30 1 150 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 1 150 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 1 150 0 72 0 6 0 73 1 150 0 75 0 6 0 80 0 6 0 82 1 150 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 107 0 6 0 108 0 6 0 109 1 150 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 25 0 133] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 29 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 0 195 0 22 0 199 0 23 0 203 0 25 0 207 0 26 0 211 0 34 0 215 0 44 0 219 0 49 0 223 0 50 4 50 0 53 4 50 0 54 4 50 0 55 0 227 0 56 0 231 0 59 0 235 0 60 0 239 0 62 0 243 0 63 0 247 0 66 0 251 0 67 0 255 0 68 1 3 0 69 1 7 0 73 4 50 0 77 4 50 0 79 1 11 0 80 1 15 0 82 1 19 0 88 1 23 0 90 1 27 0 91 1 31 0 92 1 35 0 93 1 39 0 94 1 43 0 96 1 47 0 100 1 51 0 103 4 50 0 107 1 55 0 108 1 59 0 109 1 63 0 111 1 67 0 117 1 71 0 118 1 75 0 119 1 79 0 120 1 83 0 121 1 87 0 122 1 91 0 123 1 95 0 124 1 99 0 125 4 50 0 127 4 181 0 134 9 37 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 41 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 4 54 0 53 4 54 0 54 4 54 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 4 54 0 77 4 54 0 79 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 4 54 0 93 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 4 54 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 1 103 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 1 103 0 127 9 45 0 133 9 49 0 161] 
#[0 9 53 0 99] 
#[0 9 57 0 55] 
#[0 9 61 0 103] 
#[1 1 129 0 5 1 133 0 11 1 141 0 33 9 65 0 167 9 65 0 168 1 153 0 169 9 65 0 173] 
#[0 4 58 0 11 0 55 0 100 0 124 0 125 0 127] 
#[0 4 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 9 69 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 9 69 0 134 9 69 0 135 9 69 0 136 9 69 0 137 9 69 0 138 9 69 0 139 9 69 0 140 9 69 0 141 9 69 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 9 69 0 220 9 69 0 221 9 69 0 222 9 69 0 226 9 69 0 227 9 69 0 228 9 69 0 229 9 69 0 230 9 69 0 237 9 69 0 238 9 69 0 239 9 69 0 240 9 69 0 241 9 69 0 242 9 69 0 243 9 69 0 244 9 69 0 245 9 69 0 247 9 69 0 249 9 69 0 251 9 69 0 252 9 69 0 253 9 69 0 254 9 69 0 255 9 69 1 0 9 69 1 1 9 69 1 49 9 69 1 50 9 69 1 51 9 69 1 52 9 69 1 53 9 69 1 54] 
#[1 9 73 0 116 9 77 0 144] 
#[0 4 66 0 10 0 116] 
#[0 4 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 4 74 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 9 81 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 9 81 0 134 9 81 0 135 9 81 0 136 9 81 0 137 9 81 0 138 9 81 0 139 9 81 0 140 9 81 0 141 9 81 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 9 81 0 220 9 81 0 221 9 81 0 222 9 81 0 226 9 81 0 227 9 81 0 228 9 81 0 229 9 81 0 230 9 81 0 237 9 81 0 238 9 81 0 239 9 81 0 240 9 81 0 241 9 81 0 242 9 81 0 243 9 81 0 244 9 81 0 245 9 81 0 247 9 81 0 249 9 81 0 251 9 81 0 252 9 81 0 253 9 81 0 254 9 81 0 255 9 81 1 0 9 81 1 1 9 81 1 49 9 81 1 50 9 81 1 51 9 81 1 52 9 81 1 53 9 81 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 9 89 0 73 2 129 0 80 9 85 0 86 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 9 89 0 134 9 89 0 135 9 89 0 136 9 89 0 137 9 89 0 138 9 89 0 139 9 89 0 140 9 89 0 141 9 89 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 9 89 0 220 9 89 0 221 9 89 0 222 9 89 0 226 9 89 0 227 9 89 0 228 9 89 0 229 9 89 0 230 9 89 0 237 9 89 0 238 9 89 0 239 9 89 0 240 9 89 0 241 9 89 0 242 9 89 0 243 9 89 0 244 9 89 0 245 9 89 0 247 9 89 0 249 9 89 0 251 9 89 0 252 9 89 0 253 9 89 0 254 9 89 0 255 9 89 1 0 9 89 1 1 9 89 1 49 9 89 1 50 9 89 1 51 9 89 1 52 9 89 1 53 9 89 1 54] 
#[1 5 193 0 1 1 107 0 3 5 201 0 5 4 78 0 6 5 205 0 7 5 209 0 8 4 78 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 78 0 13 1 111 0 14 4 78 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 78 0 22 4 78 0 23 5 253 0 24 4 78 0 25 4 78 0 26 1 115 0 29 6 5 0 30 6 9 0 32 4 78 0 34 4 78 0 35 4 78 0 44 4 78 0 47 4 78 0 49 4 78 0 50 4 78 0 53 4 78 0 54 4 78 0 55 4 78 0 56 6 13 0 57 4 78 0 59 4 78 0 60 4 78 0 62 4 78 0 63 4 78 0 64 4 78 0 66 4 78 0 67 4 78 0 68 4 78 0 69 6 17 0 72 4 78 0 73 6 21 0 75 4 78 0 77 4 78 0 79 4 78 0 80 4 78 0 82 4 78 0 83 6 25 0 85 4 78 0 88 4 78 0 89 4 78 0 90 4 78 0 91 4 78 0 92 4 78 0 93 4 78 0 94 4 78 0 96 4 78 0 97 4 78 0 99 4 78 0 100 4 78 0 101 4 78 0 102 4 78 0 103 4 78 0 107 4 78 0 108 4 78 0 109 6 33 0 110 4 78 0 111 4 78 0 117 4 78 0 118 4 78 0 119 4 78 0 120 4 78 0 121 4 78 0 122 4 78 0 123 4 78 0 124 4 78 0 125 4 78 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 78 1 55] 
#[1 3 146 0 1 3 146 0 3 3 146 0 5 3 146 0 6 3 146 0 7 3 146 0 8 9 93 0 9 3 146 0 10 3 146 0 11 3 146 0 12 3 146 0 13 3 146 0 14 1 119 0 15 3 146 0 16 3 146 0 17 3 146 0 18 3 146 0 19 3 146 0 20 3 146 0 21 3 146 0 22 3 146 0 23 3 146 0 24 3 146 0 25 3 146 0 26 3 146 0 29 3 146 0 30 3 146 0 32 3 146 0 34 3 146 0 35 3 146 0 44 3 146 0 47 3 146 0 49 3 146 0 50 3 146 0 53 3 146 0 54 3 146 0 55 3 146 0 56 3 146 0 57 3 146 0 59 3 146 0 60 3 146 0 62 3 146 0 63 3 146 0 64 3 146 0 66 3 146 0 67 3 146 0 68 3 146 0 69 3 146 0 72 3 146 0 73 3 146 0 75 3 146 0 77 3 146 0 79 3 146 0 80 3 146 0 82 3 146 0 83 3 146 0 85 3 146 0 88 3 146 0 89 3 146 0 90 3 146 0 91 3 146 0 92 3 146 0 93 3 146 0 94 3 146 0 96 3 146 0 97 3 146 0 99 3 146 0 100 3 146 0 101 3 146 0 102 3 146 0 103 3 146 0 107 3 146 0 108 3 146 0 109 3 146 0 110 3 146 0 111 3 146 0 117 3 146 0 118 3 146 0 119 3 146 0 120 3 146 0 121 3 146 0 122 3 146 0 123 3 146 0 124 3 146 0 125 3 146 0 127 9 101 0 236 3 146 1 55] 
#[0 4 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 4 86 0 1 4 86 0 3 4 86 0 5 4 86 0 6 4 86 0 7 4 86 0 8 9 105 0 9 4 86 0 10 4 86 0 11 4 86 0 12 4 86 0 13 4 86 0 14 1 123 0 15 4 86 0 16 4 86 0 17 4 86 0 18 4 86 0 19 4 86 0 20 4 86 0 21 4 86 0 22 4 86 0 23 4 86 0 24 4 86 0 25 4 86 0 26 4 86 0 29 4 86 0 30 4 86 0 32 4 86 0 34 4 86 0 35 4 86 0 44 4 86 0 47 4 86 0 49 4 86 0 50 4 86 0 53 4 86 0 54 4 86 0 55 4 86 0 56 4 86 0 57 4 86 0 59 4 86 0 60 4 86 0 62 4 86 0 63 4 86 0 64 4 86 0 66 4 86 0 67 4 86 0 68 4 86 0 69 4 86 0 72 4 86 0 73 4 86 0 75 4 86 0 77 4 86 0 79 4 86 0 80 4 86 0 82 4 86 0 83 4 86 0 85 4 86 0 88 4 86 0 89 4 86 0 90 4 86 0 91 4 86 0 92 4 86 0 93 4 86 0 94 4 86 0 96 4 86 0 97 4 86 0 99 4 86 0 100 4 86 0 101 4 86 0 102 4 86 0 103 4 86 0 107 4 86 0 108 4 86 0 109 4 86 0 110 4 86 0 111 4 86 0 117 4 86 0 118 4 86 0 119 4 86 0 120 4 86 0 121 4 86 0 122 4 86 0 123 4 86 0 124 4 86 0 125 4 86 0 127 9 113 0 235 4 86 1 55] 
#[0 4 90 0 6 0 9] 
#[0 4 94 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 33 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 4 98 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 1 127 0 3 5 201 0 5 4 102 0 6 5 205 0 7 5 209 0 8 4 102 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 102 0 13 1 131 0 14 4 102 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 102 0 22 4 102 0 23 5 253 0 24 4 102 0 25 4 102 0 26 1 135 0 29 6 5 0 30 6 9 0 32 4 102 0 34 4 102 0 35 4 102 0 44 4 102 0 47 4 102 0 49 4 102 0 50 4 102 0 53 4 102 0 54 4 102 0 55 4 102 0 56 6 13 0 57 4 102 0 59 4 102 0 60 4 102 0 62 4 102 0 63 4 102 0 64 4 102 0 66 4 102 0 67 4 102 0 68 4 102 0 69 6 17 0 72 4 102 0 73 6 21 0 75 4 102 0 77 4 102 0 79 4 102 0 80 4 102 0 82 4 102 0 83 6 25 0 85 4 102 0 88 4 102 0 89 4 102 0 90 4 102 0 91 4 102 0 92 4 102 0 93 4 102 0 94 4 102 0 96 4 102 0 97 4 102 0 99 4 102 0 100 4 102 0 101 4 102 0 102 4 102 0 103 4 102 0 107 4 102 0 108 4 102 0 109 6 33 0 110 4 102 0 111 4 102 0 117 4 102 0 118 4 102 0 119 4 102 0 120 4 102 0 121 4 102 0 122 4 102 0 123 4 102 0 124 4 102 0 125 4 102 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 102 1 55] 
#[0 9 117 0 6] 
#[0 4 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 5 193 0 1 1 139 0 3 5 201 0 5 4 110 0 6 5 205 0 7 5 209 0 8 4 110 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 110 0 13 1 143 0 14 4 110 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 110 0 22 4 110 0 23 5 253 0 24 4 110 0 25 4 110 0 26 1 147 0 29 6 5 0 30 6 9 0 32 4 110 0 34 4 110 0 35 4 110 0 44 4 110 0 47 4 110 0 49 4 110 0 50 4 110 0 53 4 110 0 54 4 110 0 55 4 110 0 56 6 13 0 57 4 110 0 59 4 110 0 60 4 110 0 62 4 110 0 63 4 110 0 64 4 110 0 66 4 110 0 67 4 110 0 68 4 110 0 69 6 17 0 72 4 110 0 73 6 21 0 75 4 110 0 77 4 110 0 79 4 110 0 80 4 110 0 82 4 110 0 83 6 25 0 85 4 110 0 88 4 110 0 89 4 110 0 90 4 110 0 91 4 110 0 92 4 110 0 93 4 110 0 94 4 110 0 96 4 110 0 97 4 110 0 99 4 110 0 100 4 110 0 101 4 110 0 102 4 110 0 103 4 110 0 107 4 110 0 108 4 110 0 109 6 33 0 110 4 110 0 111 4 110 0 117 4 110 0 118 4 110 0 119 4 110 0 120 4 110 0 121 4 110 0 122 4 110 0 123 4 110 0 124 4 110 0 125 4 110 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 110 1 55] 
#[1 5 193 0 1 1 151 0 3 5 201 0 5 4 114 0 6 5 205 0 7 5 209 0 8 4 114 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 114 0 13 1 155 0 14 4 114 0 15 5 229 0 16 5 233 0 17 5 237 0 18 4 114 0 19 5 245 0 20 5 249 0 21 4 114 0 22 4 114 0 23 5 253 0 24 4 114 0 25 4 114 0 26 1 159 0 29 6 5 0 30 6 9 0 32 4 114 0 34 4 114 0 35 4 114 0 44 4 114 0 47 4 114 0 49 4 114 0 50 4 114 0 53 4 114 0 54 4 114 0 55 4 114 0 56 6 13 0 57 4 114 0 59 4 114 0 60 4 114 0 62 4 114 0 63 4 114 0 64 4 114 0 66 4 114 0 67 4 114 0 68 4 114 0 69 6 17 0 72 4 114 0 73 6 21 0 75 4 114 0 77 4 114 0 79 4 114 0 80 4 114 0 82 4 114 0 83 6 25 0 85 4 114 0 88 4 114 0 89 4 114 0 90 4 114 0 91 4 114 0 92 4 114 0 93 4 114 0 94 4 114 0 96 4 114 0 97 4 114 0 99 4 114 0 100 4 114 0 101 4 114 0 102 4 114 0 103 4 114 0 107 4 114 0 108 4 114 0 109 6 33 0 110 4 114 0 111 4 114 0 117 4 114 0 118 4 114 0 119 4 114 0 120 4 114 0 121 4 114 0 122 4 114 0 123 4 114 0 124 4 114 0 125 4 114 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 114 1 55] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 4 118 0 6 5 205 0 7 5 209 0 8 4 118 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 5 193 0 1 1 163 0 3 5 201 0 5 4 122 0 6 5 205 0 7 5 209 0 8 4 122 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 122 0 13 1 167 0 14 4 122 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 122 0 22 4 122 0 23 5 253 0 24 4 122 0 25 4 122 0 26 1 171 0 29 6 5 0 30 6 9 0 32 4 122 0 34 4 122 0 35 4 122 0 44 4 122 0 47 4 122 0 49 4 122 0 50 4 122 0 53 4 122 0 54 4 122 0 55 4 122 0 56 6 13 0 57 4 122 0 59 4 122 0 60 4 122 0 62 4 122 0 63 4 122 0 64 4 122 0 66 4 122 0 67 4 122 0 68 4 122 0 69 6 17 0 72 4 122 0 73 6 21 0 75 4 122 0 77 4 122 0 79 4 122 0 80 4 122 0 82 4 122 0 83 6 25 0 85 4 122 0 88 4 122 0 89 4 122 0 90 4 122 0 91 4 122 0 92 4 122 0 93 4 122 0 94 4 122 0 96 4 122 0 97 4 122 0 99 4 122 0 100 4 122 0 101 4 122 0 102 4 122 0 103 4 122 0 107 4 122 0 108 4 122 0 109 6 33 0 110 4 122 0 111 4 122 0 117 4 122 0 118 4 122 0 119 4 122 0 120 4 122 0 121 4 122 0 122 4 122 0 123 4 122 0 124 4 122 0 125 4 122 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 122 1 55] 
#[1 5 193 0 1 1 175 0 3 5 201 0 5 4 126 0 6 5 205 0 7 5 209 0 8 4 126 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 126 0 13 1 179 0 14 4 126 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 126 0 22 4 126 0 23 5 253 0 24 4 126 0 25 4 126 0 26 1 183 0 29 6 5 0 30 6 9 0 32 4 126 0 34 4 126 0 35 4 126 0 44 4 126 0 47 4 126 0 49 4 126 0 50 4 126 0 53 4 126 0 54 4 126 0 55 4 126 0 56 6 13 0 57 4 126 0 59 4 126 0 60 4 126 0 62 4 126 0 63 4 126 0 64 4 126 0 66 4 126 0 67 4 126 0 68 4 126 0 69 6 17 0 72 4 126 0 73 6 21 0 75 4 126 0 77 4 126 0 79 4 126 0 80 4 126 0 82 4 126 0 83 6 25 0 85 4 126 0 88 4 126 0 89 4 126 0 90 4 126 0 91 4 126 0 92 4 126 0 93 4 126 0 94 4 126 0 96 4 126 0 97 4 126 0 99 4 126 0 100 4 126 0 101 4 126 0 102 4 126 0 103 4 126 0 107 4 126 0 108 4 126 0 109 6 33 0 110 4 126 0 111 4 126 0 117 4 126 0 118 4 126 0 119 4 126 0 120 4 126 0 121 4 126 0 122 4 126 0 123 4 126 0 124 4 126 0 125 4 126 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 126 1 55] 
#[1 5 193 0 1 1 187 0 3 5 201 0 5 4 130 0 6 5 205 0 7 5 209 0 8 4 130 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 130 0 13 1 191 0 14 4 130 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 130 0 22 4 130 0 23 5 253 0 24 4 130 0 25 4 130 0 26 1 195 0 29 6 5 0 30 6 9 0 32 4 130 0 34 4 130 0 35 4 130 0 44 4 130 0 47 4 130 0 49 4 130 0 50 4 130 0 53 4 130 0 54 4 130 0 55 4 130 0 56 6 13 0 57 4 130 0 59 4 130 0 60 4 130 0 62 4 130 0 63 4 130 0 64 4 130 0 66 4 130 0 67 4 130 0 68 4 130 0 69 6 17 0 72 4 130 0 73 6 21 0 75 4 130 0 77 4 130 0 79 4 130 0 80 4 130 0 82 4 130 0 83 6 25 0 85 4 130 0 88 4 130 0 89 4 130 0 90 4 130 0 91 4 130 0 92 4 130 0 93 4 130 0 94 4 130 0 96 4 130 0 97 4 130 0 99 4 130 0 100 4 130 0 101 4 130 0 102 4 130 0 103 4 130 0 107 4 130 0 108 4 130 0 109 6 33 0 110 4 130 0 111 4 130 0 117 4 130 0 118 4 130 0 119 4 130 0 120 4 130 0 121 4 130 0 122 4 130 0 123 4 130 0 124 4 130 0 125 4 130 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 130 1 55] 
#[0 4 134 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 1 129 0 5 4 138 0 6 4 138 0 7 4 138 0 8 4 138 0 9 4 138 0 10 4 138 0 11 4 138 0 19 4 138 0 22 4 138 0 23 4 138 0 25 4 138 0 26 4 138 0 34 4 138 0 35 4 138 0 44 4 138 0 47 4 138 0 49 4 138 0 50 4 138 0 53 4 138 0 54 4 138 0 55 4 138 0 56 4 138 0 59 4 138 0 60 4 138 0 62 4 138 0 63 4 138 0 64 4 138 0 66 4 138 0 67 4 138 0 68 4 138 0 69 4 138 0 73 4 138 0 77 4 138 0 79 4 138 0 80 4 138 0 82 4 138 0 83 4 138 0 88 4 138 0 89 4 138 0 90 4 138 0 91 4 138 0 92 4 138 0 93 4 138 0 94 4 138 0 96 4 138 0 99 4 138 0 100 4 138 0 103 4 138 0 107 4 138 0 108 4 138 0 109 4 138 0 111 4 138 0 117 4 138 0 118 4 138 0 119 4 138 0 120 4 138 0 121 4 138 0 122 4 138 0 123 4 138 0 124 4 138 0 125 4 138 0 127 9 121 0 169 4 138 1 55] 
#[0 4 142 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 0 13 0 34 0 17 0 35 0 21 0 44 0 25 0 47 0 29 0 49 0 33 0 56 0 37 0 59 0 145 0 63 0 45 0 64 0 145 0 66 0 53 0 83 0 145 0 88 0 61 0 89 0 145 0 90 0 69 0 91 0 73 0 96 0 77 0 99 0 81 0 100 0 85 0 103 0 105 0 124 0 97 0 125 1 245 0 127 0 105 0 145 0 105 0 146 0 105 0 147 0 105 0 148 0 105 0 149 6 73 0 151 6 73 0 153 6 73 0 154 6 73 0 158 0 145 0 164 6 73 0 174 6 73 0 175 6 73 0 179 6 73 0 180 6 73 0 191 6 73 0 192 6 73 0 193 0 177 0 194 6 73 0 195 6 73 0 196 6 73 0 197 6 73 0 198 6 73 0 199 6 73 0 200 6 73 0 201 6 73 0 202 6 73 0 203 6 73 0 204 6 73 0 205 0 225 0 207 6 73 0 208 6 73 0 209 6 73 0 210 6 73 0 211 6 73 0 212 6 73 0 216 6 73 0 219 4 146 1 55] 
#[1 2 153 0 122 9 125 0 140] 
#[1 2 153 0 122 9 129 0 140] 
#[1 0 9 0 11 9 133 0 55 0 81 0 100 6 193 0 124 0 97 0 125 1 245 0 127 6 193 0 145 6 193 0 146 6 193 0 147 6 193 0 148 6 193 0 149 6 197 0 183] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 137 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 141 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 145 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 149 0 133] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 153 0 133 9 157 0 167 9 157 0 168 1 153 0 169 9 157 0 173] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 161 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 165 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 169 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 173 0 133] 
#[0 9 177 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 181 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 9 0 11 9 185 0 55 0 81 0 100 7 117 0 124 0 97 0 125 1 245 0 127 7 117 0 145 7 117 0 146 7 117 0 147 7 117 0 148 7 117 0 149 7 121 0 178] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 189 0 133 9 193 0 167 9 193 0 168 1 153 0 169 9 193 0 173] 
#[1 4 81 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 197 0 133 9 201 0 167 9 201 0 168 1 153 0 169 9 201 0 173 9 205 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 209 0 133 9 213 0 185] 
#[1 2 29 0 5 0 6 0 8 0 6 0 10 1 133 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 217 0 133 9 221 0 185] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 225 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 229 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 233 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 237 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 9 241 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 245 0 133] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 9 249 0 133 9 253 0 167 9 253 0 168 1 153 0 169 9 253 0 173] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 1 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 10 5 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 9 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 10 13 0 133] 
#[0 10 17 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 21 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 4 150 0 11 0 100 0 124 0 125 0 127] 
#[0 4 154 0 55 0 127] 
#[1 2 153 0 122 10 25 0 140] 
#[1 1 129 0 5 1 141 0 33 10 29 0 167 10 29 0 168 1 153 0 169 10 29 0 173] 
#[1 2 153 0 122 10 33 0 140] 
#[0 4 158 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 4 162 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 10 37 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 10 37 0 134 10 37 0 135 10 37 0 136 10 37 0 137 10 37 0 138 10 37 0 139 10 37 0 140 10 37 0 141 10 37 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 10 37 0 220 10 37 0 221 10 37 0 222 10 37 0 226 10 37 0 227 10 37 0 228 10 37 0 229 10 37 0 230 10 37 0 237 10 37 0 238 10 37 0 239 10 37 0 240 10 37 0 241 10 37 0 242 10 37 0 243 10 37 0 244 10 37 0 245 10 37 0 247 10 37 0 249 10 37 0 251 10 37 0 252 10 37 0 253 10 37 0 254 10 37 0 255 10 37 1 0 10 37 1 1 10 37 1 49 10 37 1 50 10 37 1 51 10 37 1 52 10 37 1 53 10 37 1 54] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 10 41 0 167 10 41 0 168 1 153 0 169 10 41 0 173 6 225 0 189 10 45 0 190] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 10 49 0 190] 
#[0 4 166 0 6 0 9] 
#[1 0 9 0 11 0 81 0 100 10 53 0 124 0 97 0 125 10 53 0 145 10 53 0 146 10 53 0 147 10 53 0 148 10 53 0 149] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 10 57 0 167 10 57 0 168 1 153 0 169 10 57 0 173 6 225 0 189 10 61 0 190] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 10 65 0 190] 
#[0 4 170 0 6 0 9] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 4 174 0 6 5 205 0 7 5 209 0 8 4 174 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 4 178 0 6 0 9] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 10 69 0 167 10 69 0 168 1 153 0 169 10 69 0 173 6 225 0 189 10 73 0 190] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 10 77 0 190] 
#[0 4 182 0 6 0 9] 
#[0 4 186 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 33 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 0 9 0 11 4 45 0 38 4 65 0 40 4 53 0 84 4 57 0 86 0 81 0 100 4 61 0 124 0 97 0 125 4 61 0 145 4 61 0 146 4 61 0 147 4 61 0 148 4 61 0 149 4 65 0 184 10 81 0 188] 
#[0 4 190 0 6 0 9] 
#[0 10 85 0 64] 
#[0 10 89 0 55] 
#[0 10 93 0 89] 
#[0 10 97 0 55] 
#[0 10 101 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 105 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 10 109 0 89] 
#[0 10 113 0 55] 
#[0 10 117 0 89] 
#[0 10 121 0 55] 
#[1 1 150 0 1 1 150 0 3 0 191 0 5 1 150 0 7 0 191 0 8 0 191 0 10 0 191 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 0 6 0 22 0 6 0 23 1 150 0 24 0 6 0 25 0 6 0 26 1 150 0 29 1 150 0 30 1 150 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 1 150 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 1 150 0 72 0 6 0 73 1 150 0 75 0 6 0 80 0 6 0 82 1 150 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 1 150 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 10 125 0 133] 
#[1 1 150 0 1 1 150 0 3 0 191 0 5 1 150 0 7 0 191 0 8 0 191 0 10 0 191 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 0 6 0 22 0 6 0 23 1 150 0 24 0 6 0 25 0 6 0 26 1 150 0 29 1 150 0 30 1 150 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 1 150 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 1 150 0 72 0 6 0 73 1 150 0 75 0 6 0 77 0 6 0 80 0 6 0 82 1 150 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 1 150 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 10 129 0 133] 
#[1 10 133 0 77 1 73 0 119 1 245 0 127 10 137 0 135] 
#[1 0 6 0 77 0 6 0 119 0 6 0 127 10 141 0 133] 
#[1 1 133 0 11 10 145 0 70] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 10 149 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 10 149 0 134 10 149 0 135 10 149 0 136 10 149 0 137 10 149 0 138 10 149 0 139 10 149 0 140 10 149 0 141 10 149 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 10 149 0 220 10 149 0 221 10 149 0 222 10 149 0 226 10 149 0 227 10 149 0 228 10 149 0 229 10 149 0 230 10 149 0 237 10 149 0 238 10 149 0 239 10 149 0 240 10 149 0 241 10 149 0 242 10 149 0 243 10 149 0 244 10 149 0 245 10 149 0 247 10 149 0 249 10 149 0 251 10 149 0 252 10 149 0 253 10 149 0 254 10 149 0 255 10 149 1 0 10 149 1 1 10 149 1 49 10 149 1 50 10 149 1 51 10 149 1 52 10 149 1 53 10 149 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 1 199 0 22 1 203 0 23 1 207 0 25 1 211 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 53 0 6 0 54 0 6 0 55 0 6 0 56 0 6 0 59 1 215 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 1 219 0 73 1 223 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 1 227 0 94 0 6 0 96 1 231 0 100 0 6 0 103 0 6 0 108 0 6 0 109 1 235 0 111 1 239 0 117 1 243 0 118 0 183 0 119 1 247 0 120 1 251 0 121 1 255 0 122 2 3 0 123 2 7 0 124 2 11 0 125 0 6 0 127 10 153 0 133 10 157 0 134 10 157 0 135 10 157 0 136 10 157 0 137 10 157 0 138 10 157 0 139 10 157 0 140 10 157 0 141 10 157 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 10 157 0 220 10 157 0 221 10 157 0 222 10 157 0 226 10 157 0 227 10 157 0 228 10 157 0 229 10 157 0 230 10 157 0 237 10 157 0 238 10 157 0 239 10 157 0 240 10 157 0 241 10 157 0 242 10 157 0 243 10 157 0 244 10 157 0 245 10 157 0 247 10 157 0 249 10 157 0 251 10 157 0 252 10 157 0 253 10 157 0 254 10 157 0 255 10 157 1 0 10 157 1 1 10 157 1 49 10 157 1 50 10 157 1 51 10 157 1 52 10 157 1 53 10 157 1 54] 
#[0 10 161 0 79] 
#[0 4 194 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 4 198 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 0 6 0 107 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 10 165 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 169 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 10 173 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 177 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 4 202 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 1 106 0 1 1 106 0 3 1 106 0 5 1 106 0 7 1 106 0 8 1 106 0 10 1 106 0 11 1 106 0 12 1 106 0 14 1 106 0 16 1 106 0 17 1 106 0 18 1 106 0 19 1 106 0 20 1 106 0 21 1 106 0 22 1 106 0 23 1 106 0 24 1 106 0 25 1 106 0 26 1 106 0 29 1 106 0 30 1 106 0 32 1 106 0 34 1 106 0 44 1 106 0 49 1 106 0 50 1 106 0 56 1 106 0 57 1 106 0 59 1 106 0 60 1 106 0 62 1 106 0 63 1 106 0 66 1 106 0 67 1 106 0 68 1 106 0 69 1 106 0 72 1 106 0 73 1 106 0 75 1 106 0 80 1 106 0 82 1 106 0 85 1 106 0 88 1 106 0 90 1 106 0 91 1 106 0 92 2 15 0 93 1 106 0 94 1 106 0 96 1 106 0 100 1 106 0 103 1 106 0 108 1 106 0 109 1 106 0 110 1 106 0 111 1 106 0 117 1 106 0 118 1 106 0 119 1 106 0 120 1 106 0 121 1 106 0 122 1 106 0 123 1 106 0 124 1 106 0 125 1 106 0 127] 
#[1 10 185 0 93 1 73 0 119 10 189 0 135] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 10 193 0 153 10 193 0 159 4 169 0 164 10 193 0 174 10 193 0 175 10 193 0 179 10 193 0 180 10 193 0 201 10 193 0 202 10 193 0 203 10 193 0 204 10 193 0 205 0 225 0 207 10 193 0 208 10 193 0 209 10 193 0 210 10 193 0 211 10 193 0 212 10 193 0 216 10 193 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 10 193 1 2 10 193 1 3 10 193 1 4 10 193 1 5 10 193 1 6 10 193 1 7 10 193 1 8 10 193 1 9 10 193 1 10 10 193 1 11 10 193 1 12 10 193 1 13 10 193 1 14 10 193 1 15 10 193 1 16 10 193 1 17 10 193 1 18 10 193 1 19 10 193 1 20 10 193 1 23 10 193 1 29 5 13 1 30 10 193 1 31 10 193 1 32 10 193 1 33 10 193 1 34 10 193 1 35 10 193 1 36 10 193 1 37 10 193 1 38 10 193 1 39 10 193 1 40 10 193 1 41 10 193 1 42 10 193 1 43 10 193 1 44 10 193 1 45 10 193 1 46 10 193 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 4 206 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 4 210 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 10 197 0 99] 
#[0 4 214 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 10 201 0 7 4 218 0 11 4 218 0 55 4 218 0 100 4 218 0 124 4 218 0 125 4 218 0 127] 
#[1 2 19 0 1 2 23 0 3 2 27 0 5 4 222 0 6 2 31 0 7 2 35 0 8 4 222 0 9 2 39 0 10 2 43 0 11 2 47 0 12 4 222 0 13 2 51 0 14 4 222 0 15 2 55 0 16 2 59 0 17 2 63 0 18 2 67 0 19 2 71 0 20 2 75 0 21 4 222 0 22 4 222 0 23 2 79 0 24 4 222 0 25 4 222 0 26 2 83 0 29 2 87 0 30 2 91 0 32 4 222 0 34 4 222 0 35 4 222 0 44 4 222 0 47 4 222 0 49 4 222 0 50 4 222 0 53 4 222 0 54 4 222 0 55 4 222 0 56 2 95 0 57 4 222 0 59 4 222 0 60 4 222 0 62 4 222 0 63 4 222 0 64 4 222 0 66 4 222 0 67 4 222 0 68 4 222 0 69 2 99 0 72 4 222 0 73 2 103 0 75 4 222 0 77 4 222 0 79 4 222 0 80 4 222 0 82 4 222 0 83 2 107 0 85 4 222 0 88 4 222 0 89 4 222 0 90 4 222 0 91 4 222 0 92 4 222 0 93 4 222 0 94 4 222 0 96 4 222 0 97 4 222 0 99 4 222 0 100 4 222 0 101 4 222 0 102 4 222 0 103 4 222 0 107 4 222 0 108 4 222 0 109 2 111 0 110 4 222 0 111 4 222 0 117 4 222 0 118 4 222 0 119 4 222 0 120 4 222 0 121 4 222 0 122 4 222 0 123 4 222 0 124 4 222 0 125 4 222 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 222 1 55] 
#[0 4 226 0 10 0 113 0 116] 
#[1 10 205 0 10 10 209 0 116] 
#[1 5 193 0 1 2 115 0 3 5 201 0 5 4 230 0 6 5 205 0 7 5 209 0 8 4 230 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 230 0 13 2 119 0 14 4 230 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 230 0 22 4 230 0 23 5 253 0 24 4 230 0 25 4 230 0 26 2 123 0 29 6 5 0 30 6 9 0 32 4 230 0 34 4 230 0 35 4 230 0 44 4 230 0 47 4 230 0 49 4 230 0 50 4 230 0 53 4 230 0 54 4 230 0 55 4 230 0 56 6 13 0 57 4 230 0 59 4 230 0 60 4 230 0 62 4 230 0 63 4 230 0 64 4 230 0 66 4 230 0 67 4 230 0 68 4 230 0 69 6 17 0 72 4 230 0 73 6 21 0 75 4 230 0 77 4 230 0 79 4 230 0 80 4 230 0 82 4 230 0 83 6 25 0 85 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 96 4 230 0 97 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 107 4 230 0 108 4 230 0 109 6 33 0 110 4 230 0 111 4 230 0 117 4 230 0 118 4 230 0 119 4 230 0 120 4 230 0 121 4 230 0 122 4 230 0 123 4 230 0 124 4 230 0 125 4 230 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 230 1 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 10 213 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 10 213 0 134 10 213 0 135 10 213 0 136 10 213 0 137 10 213 0 138 10 213 0 139 10 213 0 140 10 213 0 141 10 213 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 10 213 0 220 10 213 0 221 10 213 0 222 10 213 0 226 10 213 0 227 10 213 0 228 10 213 0 229 10 213 0 230 10 213 0 237 10 213 0 238 10 213 0 239 10 213 0 240 10 213 0 241 10 213 0 242 10 213 0 243 10 213 0 244 10 213 0 245 10 213 0 247 10 213 0 249 10 213 0 251 10 213 0 252 10 213 0 253 10 213 0 254 10 213 0 255 10 213 1 0 10 213 1 1 10 213 1 49 10 213 1 50 10 213 1 51 10 213 1 52 10 213 1 53 10 213 1 54] 
#[1 5 193 0 1 2 127 0 3 5 201 0 5 4 234 0 6 5 205 0 7 5 209 0 8 4 234 0 9 5 213 0 10 5 217 0 11 5 221 0 12 4 234 0 13 2 131 0 14 4 234 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 4 234 0 22 4 234 0 23 5 253 0 24 4 234 0 25 4 234 0 26 2 135 0 29 6 5 0 30 6 9 0 32 4 234 0 34 4 234 0 35 4 234 0 44 4 234 0 47 4 234 0 49 4 234 0 50 4 234 0 53 4 234 0 54 4 234 0 55 4 234 0 56 6 13 0 57 4 234 0 59 4 234 0 60 4 234 0 62 4 234 0 63 4 234 0 64 4 234 0 66 4 234 0 67 4 234 0 68 4 234 0 69 6 17 0 72 4 234 0 73 6 21 0 75 4 234 0 77 4 234 0 79 4 234 0 80 4 234 0 82 4 234 0 83 6 25 0 85 4 234 0 88 4 234 0 89 4 234 0 90 4 234 0 91 4 234 0 92 4 234 0 93 4 234 0 94 4 234 0 96 4 234 0 97 4 234 0 99 4 234 0 100 4 234 0 101 4 234 0 102 4 234 0 103 4 234 0 107 4 234 0 108 4 234 0 109 6 33 0 110 4 234 0 111 4 234 0 117 4 234 0 118 4 234 0 119 4 234 0 120 4 234 0 121 4 234 0 122 4 234 0 123 4 234 0 124 4 234 0 125 4 234 0 127 6 37 0 246 6 41 0 248 6 45 0 250 4 234 1 55] 
#[0 4 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 4 242 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 38 0 40 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 86 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 4 246 0 1 4 246 0 3 4 246 0 5 4 246 0 6 4 246 0 7 4 246 0 8 9 105 0 9 4 246 0 10 4 246 0 11 4 246 0 12 4 246 0 13 4 246 0 14 2 139 0 15 4 246 0 16 4 246 0 17 4 246 0 18 4 246 0 19 4 246 0 20 4 246 0 21 4 246 0 22 4 246 0 23 4 246 0 24 4 246 0 25 4 246 0 26 4 246 0 29 4 246 0 30 4 246 0 32 4 246 0 34 4 246 0 35 4 246 0 44 4 246 0 47 4 246 0 49 4 246 0 50 4 246 0 53 4 246 0 54 4 246 0 55 4 246 0 56 4 246 0 57 4 246 0 59 4 246 0 60 4 246 0 62 4 246 0 63 4 246 0 64 4 246 0 66 4 246 0 67 4 246 0 68 4 246 0 69 4 246 0 72 4 246 0 73 4 246 0 75 4 246 0 77 4 246 0 79 4 246 0 80 4 246 0 82 4 246 0 83 4 246 0 85 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 96 4 246 0 97 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 117 4 246 0 118 4 246 0 119 4 246 0 120 4 246 0 121 4 246 0 122 4 246 0 123 4 246 0 124 4 246 0 125 4 246 0 127 9 113 0 235 4 246 1 55] 
#[1 4 250 0 1 4 250 0 3 2 93 0 5 4 250 0 6 4 250 0 7 2 97 0 8 4 250 0 9 2 101 0 10 0 9 0 11 4 250 0 12 4 250 0 13 4 250 0 14 4 250 0 15 4 250 0 16 4 250 0 17 4 250 0 18 4 250 0 19 4 250 0 20 4 250 0 21 2 143 0 22 2 147 0 23 4 250 0 24 2 151 0 25 2 155 0 26 4 250 0 29 4 250 0 30 4 250 0 32 4 250 0 34 4 250 0 35 4 45 0 38 7 153 0 40 4 250 0 44 4 250 0 47 4 250 0 49 4 250 0 50 4 250 0 53 4 250 0 54 4 250 0 55 4 250 0 56 4 250 0 57 4 250 0 59 2 159 0 60 4 250 0 62 4 250 0 63 4 250 0 64 4 250 0 66 4 250 0 67 4 250 0 68 4 250 0 69 4 250 0 72 2 163 0 73 4 250 0 75 4 250 0 77 4 250 0 79 2 167 0 80 4 250 0 82 4 250 0 83 4 250 0 85 7 149 0 86 4 250 0 88 4 250 0 89 4 250 0 90 4 250 0 91 4 250 0 92 4 250 0 93 2 171 0 94 4 250 0 96 4 250 0 97 4 250 0 99 2 175 0 100 4 250 0 101 4 250 0 102 4 250 0 103 4 250 0 107 4 250 0 108 4 250 0 109 4 250 0 110 2 179 0 111 2 183 0 117 2 187 0 118 2 191 0 119 2 195 0 120 2 199 0 121 2 203 0 122 2 207 0 123 2 211 0 124 2 215 0 125 4 250 0 127 7 157 0 134 7 157 0 135 7 157 0 136 7 157 0 137 7 157 0 138 7 157 0 139 7 157 0 140 7 157 0 141 7 157 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 153 0 184 7 157 0 220 7 157 0 221 7 157 0 222 7 157 0 226 7 157 0 227 7 157 0 228 7 157 0 229 7 157 0 230 10 217 0 231 7 157 0 237 7 157 0 238 7 157 0 239 7 157 0 240 7 157 0 241 7 157 0 242 7 157 0 243 7 157 0 244 7 157 0 245 7 157 0 247 7 157 0 249 7 157 0 251 7 157 0 252 7 157 0 253 7 157 0 254 7 157 0 255 7 157 1 0 7 157 1 1 7 157 1 49 7 157 1 50 7 157 1 51 7 157 1 52 7 157 1 53 7 157 1 54 4 250 1 55] 
#[1 4 254 0 1 4 254 0 3 2 93 0 5 4 254 0 6 4 254 0 7 2 97 0 8 4 254 0 9 2 101 0 10 0 9 0 11 4 254 0 12 4 254 0 13 4 254 0 14 4 254 0 15 4 254 0 16 4 254 0 17 4 254 0 18 4 254 0 19 4 254 0 20 4 254 0 21 2 219 0 22 2 223 0 23 4 254 0 24 2 227 0 25 2 231 0 26 4 254 0 29 4 254 0 30 4 254 0 32 4 254 0 34 4 254 0 35 4 45 0 38 7 153 0 40 4 254 0 44 4 254 0 47 4 254 0 49 4 254 0 50 4 254 0 53 4 254 0 54 4 254 0 55 4 254 0 56 4 254 0 57 4 254 0 59 2 235 0 60 4 254 0 62 4 254 0 63 4 254 0 64 4 254 0 66 4 254 0 67 4 254 0 68 4 254 0 69 4 254 0 72 2 239 0 73 4 254 0 75 4 254 0 77 4 254 0 79 2 243 0 80 4 254 0 82 4 254 0 83 4 254 0 85 7 149 0 86 4 254 0 88 4 254 0 89 4 254 0 90 4 254 0 91 4 254 0 92 4 254 0 93 2 247 0 94 4 254 0 96 4 254 0 97 4 254 0 99 2 251 0 100 4 254 0 101 4 254 0 102 4 254 0 103 4 254 0 107 4 254 0 108 4 254 0 109 4 254 0 110 2 255 0 111 3 3 0 117 3 7 0 118 3 11 0 119 3 15 0 120 3 19 0 121 3 23 0 122 3 27 0 123 3 31 0 124 3 35 0 125 4 254 0 127 7 157 0 134 7 157 0 135 7 157 0 136 7 157 0 137 7 157 0 138 7 157 0 139 7 157 0 140 7 157 0 141 7 157 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 7 153 0 184 7 157 0 220 7 157 0 221 7 157 0 222 7 157 0 226 7 157 0 227 7 157 0 228 7 157 0 229 7 157 0 230 10 221 0 231 7 157 0 237 7 157 0 238 7 157 0 239 7 157 0 240 7 157 0 241 7 157 0 242 7 157 0 243 7 157 0 244 7 157 0 245 7 157 0 247 7 157 0 249 7 157 0 251 7 157 0 252 7 157 0 253 7 157 0 254 7 157 0 255 7 157 1 0 7 157 1 1 7 157 1 49 7 157 1 50 7 157 1 51 7 157 1 52 7 157 1 53 7 157 1 54 4 254 1 55] 
#[0 5 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 5 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 5 10 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 29 0 5 10 225 0 31 10 229 0 185] 
#[1 2 29 0 5 10 233 0 31 10 237 0 185] 
#[0 10 241 0 56] 
#[0 10 245 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 10 249 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 10 253 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 1 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 5 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 9 0 133] 
#[0 11 13 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 17 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 21 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 25 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 29 0 99] 
#[0 11 33 0 55] 
#[0 11 37 0 103] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 41 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 45 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 49 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 53 0 133] 
#[1 1 129 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 1 141 0 33 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 57 0 133 11 61 0 167 11 61 0 168 1 153 0 169 11 61 0 173] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 65 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 69 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 73 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 77 0 133] 
#[0 11 81 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 85 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 89 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 93 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 97 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 101 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 105 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 11 109 0 133] 
#[0 11 113 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 117 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 121 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 125 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 11 129 0 99] 
#[0 11 133 0 55] 
#[1 2 29 0 5 11 137 0 185] 
#[0 5 14 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 2 29 0 5 11 141 0 185] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 5 18 0 55 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 5 18 0 100 6 33 0 110 5 18 0 124 5 18 0 125 5 18 0 127 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 11 145 0 190] 
#[0 5 22 0 6 0 9] 
#[0 5 26 0 6 0 9] 
#[1 1 129 0 5 2 146 0 6 2 146 0 9 1 133 0 11 6 217 0 19 1 141 0 33 11 149 0 167 11 149 0 168 1 153 0 169 11 149 0 173 6 225 0 189 11 153 0 190] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 11 157 0 190] 
#[0 5 30 0 6 0 9] 
#[0 5 34 0 6 0 9] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 11 161 0 190] 
#[0 5 38 0 6 0 9] 
#[0 5 42 0 6 0 9] 
#[0 5 46 0 6 0 9] 
#[0 5 50 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 11 165 0 64] 
#[0 5 54 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 11 169 0 89] 
#[0 11 173 0 89] 
#[0 11 177 0 55] 
#[0 5 58 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 11 181 0 89] 
#[0 5 62 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 11 185 0 89] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 189 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 0 6 0 77 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 11 193 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 197 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 5 66 0 5 5 66 0 8 5 66 0 10 5 66 0 11 5 66 0 22 5 66 0 23 5 66 0 25 5 66 0 26 5 66 0 34 5 66 0 44 5 66 0 49 5 66 0 50 5 66 0 53 5 66 0 54 5 66 0 55 5 66 0 56 5 66 0 59 5 66 0 60 5 66 0 62 5 66 0 63 5 66 0 66 5 66 0 67 5 66 0 68 5 66 0 69 5 66 0 73 5 66 0 77 5 66 0 79 5 66 0 80 5 66 0 82 5 66 0 88 5 66 0 90 5 66 0 91 5 66 0 92 5 66 0 93 5 66 0 94 5 66 0 96 5 66 0 100 5 66 0 103 5 66 0 107 3 39 0 108 5 66 0 109 5 66 0 111 5 66 0 117 5 66 0 118 5 66 0 119 5 66 0 120 5 66 0 121 5 66 0 122 5 66 0 123 5 66 0 124 5 66 0 125 5 66 0 127] 
#[0 11 205 0 77] 
#[1 11 209 0 77 1 73 0 119 1 245 0 127 11 213 0 135] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 11 217 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 11 217 0 134 11 217 0 135 11 217 0 136 11 217 0 137 11 217 0 138 11 217 0 139 11 217 0 140 11 217 0 141 11 217 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 11 217 0 220 11 217 0 221 11 217 0 222 11 217 0 226 11 217 0 227 11 217 0 228 11 217 0 229 11 217 0 230 11 217 0 237 11 217 0 238 11 217 0 239 11 217 0 240 11 217 0 241 11 217 0 242 11 217 0 243 11 217 0 244 11 217 0 245 11 217 0 247 11 217 0 249 11 217 0 251 11 217 0 252 11 217 0 253 11 217 0 254 11 217 0 255 11 217 1 0 11 217 1 1 11 217 1 49 11 217 1 50 11 217 1 51 11 217 1 52 11 217 1 53 11 217 1 54] 
#[1 5 193 0 1 1 151 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 1 155 0 14 5 229 0 16 5 233 0 17 5 237 0 18 4 114 0 19 5 245 0 20 5 249 0 21 5 253 0 24 1 159 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 11 221 0 102 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 53 0 6 0 54 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 11 225 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 11 229 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 70 0 22 5 70 0 23 5 253 0 24 5 70 0 25 5 70 0 26 6 1 0 29 6 5 0 30 6 9 0 32 5 70 0 34 5 70 0 44 5 70 0 49 5 70 0 50 3 43 0 53 5 70 0 54 5 70 0 55 5 70 0 56 6 13 0 57 5 70 0 59 5 70 0 60 5 70 0 62 5 70 0 63 5 70 0 66 5 70 0 67 5 70 0 68 5 70 0 69 6 17 0 72 5 70 0 73 6 21 0 75 5 70 0 77 5 70 0 79 5 70 0 80 5 70 0 82 6 25 0 85 5 70 0 88 5 70 0 90 5 70 0 91 5 70 0 92 5 70 0 93 5 70 0 94 5 70 0 96 5 70 0 100 5 70 0 103 5 70 0 107 5 70 0 108 5 70 0 109 6 33 0 110 5 70 0 111 5 70 0 117 5 70 0 118 5 70 0 119 5 70 0 120 5 70 0 121 5 70 0 122 5 70 0 123 5 70 0 124 5 70 0 125 5 70 0 127 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 5 74 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 11 237 0 107 1 73 0 119 1 245 0 127 11 241 0 135] 
#[1 0 6 0 107 0 6 0 119 0 6 0 127 11 245 0 133] 
#[1 11 249 0 55 1 73 0 119 1 245 0 127 11 253 0 135] 
#[1 0 6 0 55 0 6 0 119 0 6 0 127 12 1 0 133] 
#[0 5 78 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 5 82 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 12 5 0 93] 
#[0 5 86 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 5 90 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 1 73 0 119 12 9 0 135] 
#[1 9 73 0 116 12 13 0 144] 
#[0 5 94 0 10 0 113 0 116] 
#[1 5 193 0 1 3 47 0 3 5 201 0 5 5 98 0 6 5 205 0 7 5 209 0 8 5 98 0 9 5 213 0 10 5 217 0 11 5 221 0 12 5 98 0 13 3 51 0 14 5 98 0 15 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 98 0 22 5 98 0 23 5 253 0 24 5 98 0 25 5 98 0 26 3 55 0 29 6 5 0 30 6 9 0 32 5 98 0 34 5 98 0 35 5 98 0 44 5 98 0 47 5 98 0 49 5 98 0 50 5 98 0 53 5 98 0 54 5 98 0 55 5 98 0 56 6 13 0 57 5 98 0 59 5 98 0 60 5 98 0 62 5 98 0 63 5 98 0 64 5 98 0 66 5 98 0 67 5 98 0 68 5 98 0 69 6 17 0 72 5 98 0 73 6 21 0 75 5 98 0 77 5 98 0 79 5 98 0 80 5 98 0 82 5 98 0 83 6 25 0 85 5 98 0 88 5 98 0 89 5 98 0 90 5 98 0 91 5 98 0 92 5 98 0 93 5 98 0 94 5 98 0 96 5 98 0 97 5 98 0 99 5 98 0 100 5 98 0 101 5 98 0 102 5 98 0 103 5 98 0 107 5 98 0 108 5 98 0 109 6 33 0 110 5 98 0 111 5 98 0 117 5 98 0 118 5 98 0 119 5 98 0 120 5 98 0 121 5 98 0 122 5 98 0 123 5 98 0 124 5 98 0 125 5 98 0 127 6 37 0 246 6 41 0 248 6 45 0 250 5 98 1 55] 
#[0 5 102 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 5 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 2 153 0 122 12 17 0 140] 
#[1 1 129 0 5 1 141 0 33 12 21 0 167 12 21 0 168 1 153 0 169 12 21 0 173] 
#[1 2 153 0 122 12 25 0 140] 
#[0 5 110 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 114 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 12 29 0 64] 
#[0 12 33 0 55] 
#[0 12 37 0 89] 
#[0 12 41 0 55] 
#[0 12 45 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 49 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 12 53 0 89] 
#[0 12 57 0 55] 
#[0 12 61 0 89] 
#[0 12 65 0 55] 
#[0 5 118 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 12 69 0 99] 
#[0 5 122 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 83 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 99 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[0 12 73 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 77 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 12 81 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 85 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 89 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 12 93 0 133] 
#[0 12 97 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 101 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 12 105 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 109 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 12 113 0 99] 
#[0 12 117 0 55] 
#[0 12 121 0 64] 
#[0 12 125 0 55] 
#[0 12 129 0 89] 
#[0 12 133 0 55] 
#[0 12 137 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 12 141 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 12 145 0 89] 
#[0 12 149 0 55] 
#[0 12 153 0 89] 
#[0 12 157 0 55] 
#[0 5 126 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 12 161 0 99] 
#[1 1 129 0 5 1 141 0 33 12 165 0 167 12 165 0 168 1 153 0 169 12 165 0 173] 
#[0 5 130 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 134 0 6 0 9] 
#[1 2 146 0 6 2 146 0 9 6 217 0 19 6 225 0 189 12 169 0 190] 
#[0 5 138 0 6 0 9] 
#[0 5 142 0 6 0 9] 
#[0 5 146 0 6 0 9] 
#[0 5 150 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 154 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 158 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 12 173 0 89] 
#[0 5 162 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 166 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 0 6 0 77 0 6 0 119 0 6 0 127 12 177 0 133] 
#[1 12 181 0 77 1 73 0 119 1 245 0 127 12 185 0 135] 
#[1 0 6 0 77 0 6 0 119 0 6 0 127 12 189 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 12 193 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 12 193 0 220 5 117 0 221 5 117 0 222 12 193 0 226 12 193 0 227 12 193 0 228 12 193 0 229 12 193 0 230 12 193 0 237 12 193 0 238 12 193 0 239 12 193 0 240 12 193 0 241 12 193 0 242 12 193 0 243 12 193 0 244 12 193 0 245 12 193 0 247 12 193 0 249 12 193 0 251 12 193 0 252 12 193 0 253 12 193 0 254 12 193 0 255 12 193 1 0 12 193 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 5 170 0 5 5 170 0 8 5 170 0 10 5 170 0 11 5 170 0 22 5 170 0 23 5 170 0 25 5 170 0 26 5 170 0 34 5 170 0 44 5 170 0 49 5 170 0 50 5 170 0 53 5 170 0 54 5 170 0 55 5 170 0 56 5 170 0 59 5 170 0 60 5 170 0 62 5 170 0 63 5 170 0 66 5 170 0 67 5 170 0 68 5 170 0 69 5 170 0 73 5 170 0 77 5 170 0 79 5 170 0 80 5 170 0 82 5 170 0 88 5 170 0 90 5 170 0 91 5 170 0 92 5 170 0 93 5 170 0 94 5 170 0 96 5 170 0 100 5 170 0 103 5 170 0 107 3 59 0 108 5 170 0 109 5 170 0 111 5 170 0 117 5 170 0 118 5 170 0 119 5 170 0 120 5 170 0 121 5 170 0 122 5 170 0 123 5 170 0 124 5 170 0 125 5 170 0 127] 
#[1 5 174 0 5 5 174 0 8 5 174 0 10 5 174 0 11 5 174 0 22 5 174 0 23 5 174 0 25 5 174 0 26 5 174 0 34 5 174 0 44 5 174 0 49 5 174 0 50 5 174 0 53 5 174 0 54 5 174 0 55 5 174 0 56 5 174 0 59 5 174 0 60 5 174 0 62 5 174 0 63 5 174 0 66 5 174 0 67 5 174 0 68 5 174 0 69 5 174 0 73 5 174 0 77 5 174 0 79 5 174 0 80 5 174 0 82 5 174 0 88 5 174 0 90 5 174 0 91 5 174 0 92 5 174 0 93 5 174 0 94 5 174 0 96 5 174 0 100 5 174 0 103 12 201 0 104 5 174 0 107 3 63 0 108 5 174 0 109 5 174 0 111 5 174 0 117 5 174 0 118 5 174 0 119 5 174 0 120 5 174 0 121 5 174 0 122 5 174 0 123 5 174 0 124 5 174 0 125 5 174 0 127] 
#[0 12 209 0 77] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 0 6 0 22 0 6 0 23 5 253 0 24 0 6 0 25 0 6 0 26 6 1 0 29 6 5 0 30 6 9 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 6 13 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 6 17 0 72 0 6 0 73 6 21 0 75 0 6 0 79 0 6 0 80 0 6 0 82 6 25 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 6 33 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 12 213 0 133 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 12 217 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 12 217 0 134 12 217 0 135 12 217 0 136 12 217 0 137 12 217 0 138 12 217 0 139 12 217 0 140 12 217 0 141 12 217 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 12 217 0 220 12 217 0 221 12 217 0 222 12 217 0 226 12 217 0 227 12 217 0 228 12 217 0 229 12 217 0 230 12 217 0 237 12 217 0 238 12 217 0 239 12 217 0 240 12 217 0 241 12 217 0 242 12 217 0 243 12 217 0 244 12 217 0 245 12 217 0 247 12 217 0 249 12 217 0 251 12 217 0 252 12 217 0 253 12 217 0 254 12 217 0 255 12 217 1 0 12 217 1 1 12 217 1 49 12 217 1 50 12 217 1 51 12 217 1 52 12 217 1 53 12 217 1 54] 
#[1 12 221 0 53 12 225 0 54 12 229 0 55 1 73 0 119 1 245 0 127 12 233 0 135 12 237 1 21 12 241 1 22 12 237 1 24 12 237 1 25 12 237 1 26] 
#[1 0 6 0 53 0 6 0 54 0 6 0 55 0 6 0 119 0 6 0 127 13 1 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 13 5 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 13 5 0 134 13 5 0 135 13 5 0 136 13 5 0 137 13 5 0 138 13 5 0 139 13 5 0 140 13 5 0 141 13 5 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 13 5 0 220 13 5 0 221 13 5 0 222 13 5 0 226 13 5 0 227 13 5 0 228 13 5 0 229 13 5 0 230 13 5 0 237 13 5 0 238 13 5 0 239 13 5 0 240 13 5 0 241 13 5 0 242 13 5 0 243 13 5 0 244 13 5 0 245 13 5 0 247 13 5 0 249 13 5 0 251 13 5 0 252 13 5 0 253 13 5 0 254 13 5 0 255 13 5 1 0 13 5 1 1 13 5 1 49 13 5 1 50 13 5 1 51 13 5 1 52 13 5 1 53 13 5 1 54] 
#[0 5 178 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 13 9 0 107] 
#[1 13 13 0 107 1 73 0 119 1 245 0 127 13 17 0 135] 
#[0 13 21 0 109] 
#[0 13 25 0 55] 
#[1 13 29 0 55 1 73 0 119 1 245 0 127 13 33 0 135] 
#[0 5 182 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 5 186 0 11 0 55 0 100 0 124 0 125 0 127] 
#[1 13 37 0 10 10 209 0 116] 
#[1 2 29 0 5 13 41 0 185] 
#[0 5 190 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 2 29 0 5 13 45 0 185] 
#[0 5 194 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 49 0 64] 
#[0 5 198 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 53 0 89] 
#[0 13 57 0 89] 
#[0 13 61 0 55] 
#[0 5 202 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 65 0 89] 
#[0 5 206 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 69 0 89] 
#[0 5 210 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 73 0 64] 
#[0 13 77 0 55] 
#[0 13 81 0 89] 
#[0 13 85 0 55] 
#[0 13 89 0 55] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 1 245 0 127 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 13 93 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 13 97 0 89] 
#[0 13 101 0 55] 
#[0 13 105 0 89] 
#[0 13 109 0 55] 
#[0 5 214 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 113 0 99] 
#[0 5 218 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 117 0 64] 
#[0 5 222 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 121 0 89] 
#[0 13 125 0 89] 
#[0 13 129 0 55] 
#[0 5 226 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 133 0 89] 
#[0 5 230 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 13 137 0 89] 
#[0 5 234 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 238 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 5 242 0 6 0 9] 
#[0 5 246 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 13 141 0 77 1 73 0 119 1 245 0 127 13 145 0 135] 
#[0 5 250 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 13 149 0 77] 
#[1 13 153 0 77 1 73 0 119 1 245 0 127 13 157 0 135] 
#[1 1 150 0 1 1 150 0 3 3 67 0 5 1 150 0 7 3 67 0 8 3 67 0 10 3 67 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 5 254 0 22 5 254 0 23 1 150 0 24 5 254 0 25 5 254 0 26 1 150 0 29 1 150 0 30 1 150 0 32 5 254 0 34 5 254 0 44 5 254 0 49 5 254 0 50 5 254 0 53 5 254 0 54 5 254 0 55 5 254 0 56 1 150 0 57 5 254 0 59 5 254 0 60 5 254 0 62 5 254 0 63 5 254 0 66 5 254 0 67 5 254 0 68 5 254 0 69 1 150 0 72 5 254 0 73 1 150 0 75 5 254 0 77 5 254 0 79 5 254 0 80 5 254 0 82 1 150 0 85 5 254 0 88 5 254 0 90 5 254 0 91 5 254 0 92 5 254 0 93 5 254 0 94 5 254 0 96 5 254 0 100 5 254 0 103 5 254 0 107 5 254 0 108 5 254 0 109 1 150 0 110 5 254 0 111 5 254 0 117 5 254 0 118 5 254 0 119 5 254 0 120 5 254 0 121 5 254 0 122 5 254 0 123 5 254 0 124 5 254 0 125 5 254 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 13 161 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 13 161 0 220 5 117 0 221 5 117 0 222 13 161 0 226 13 161 0 227 13 161 0 228 13 161 0 229 13 161 0 230 13 161 0 237 13 161 0 238 13 161 0 239 13 161 0 240 13 161 0 241 13 161 0 242 13 161 0 243 13 161 0 244 13 161 0 245 13 161 0 247 13 161 0 249 13 161 0 251 13 161 0 252 13 161 0 253 13 161 0 254 13 161 0 255 13 161 1 0 13 161 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 13 165 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 13 165 0 220 5 117 0 221 5 117 0 222 13 165 0 226 13 165 0 227 13 165 0 228 13 165 0 229 13 165 0 230 13 165 0 237 13 165 0 238 13 165 0 239 13 165 0 240 13 165 0 241 13 165 0 242 13 165 0 243 13 165 0 244 13 165 0 245 13 165 0 247 13 165 0 249 13 165 0 251 13 165 0 252 13 165 0 253 13 165 0 254 13 165 0 255 13 165 1 0 13 165 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 13 169 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 13 169 0 220 5 117 0 221 5 117 0 222 13 169 0 226 13 169 0 227 13 169 0 228 13 169 0 229 13 169 0 230 13 169 0 237 13 169 0 238 13 169 0 239 13 169 0 240 13 169 0 241 13 169 0 242 13 169 0 243 13 169 0 244 13 169 0 245 13 169 0 247 13 169 0 249 13 169 0 251 13 169 0 252 13 169 0 253 13 169 0 254 13 169 0 255 13 169 1 0 13 169 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 6 2 0 5 6 2 0 8 6 2 0 10 6 2 0 11 6 2 0 22 6 2 0 23 6 2 0 25 6 2 0 26 6 2 0 34 6 2 0 44 6 2 0 49 6 2 0 50 6 2 0 53 6 2 0 54 6 2 0 55 6 2 0 56 6 2 0 59 6 2 0 60 6 2 0 62 6 2 0 63 6 2 0 66 6 2 0 67 6 2 0 68 6 2 0 69 6 2 0 73 6 2 0 77 6 2 0 79 6 2 0 80 6 2 0 82 6 2 0 88 6 2 0 90 6 2 0 91 6 2 0 92 6 2 0 93 6 2 0 94 6 2 0 96 6 2 0 100 6 2 0 103 13 173 0 104 6 2 0 107 3 71 0 108 6 2 0 109 6 2 0 111 6 2 0 117 6 2 0 118 6 2 0 119 6 2 0 120 6 2 0 121 6 2 0 122 6 2 0 123 6 2 0 124 6 2 0 125 6 2 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 0 6 0 79 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 13 181 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 13 185 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 0 6 0 22 0 6 0 23 5 253 0 24 0 6 0 25 0 6 0 26 6 1 0 29 6 5 0 30 6 9 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 6 13 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 6 17 0 72 0 6 0 73 6 21 0 75 0 6 0 79 0 6 0 80 0 6 0 82 6 25 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 13 189 0 97 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 6 33 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 13 193 0 133 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 13 197 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 13 201 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 13 201 0 134 13 201 0 135 13 201 0 136 13 201 0 137 13 201 0 138 13 201 0 139 13 201 0 140 13 201 0 141 13 201 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 13 201 0 220 13 201 0 221 13 201 0 222 13 201 0 226 13 201 0 227 13 201 0 228 13 201 0 229 13 201 0 230 13 201 0 237 13 201 0 238 13 201 0 239 13 201 0 240 13 201 0 241 13 201 0 242 13 201 0 243 13 201 0 244 13 201 0 245 13 201 0 247 13 201 0 249 13 201 0 251 13 201 0 252 13 201 0 253 13 201 0 254 13 201 0 255 13 201 1 0 13 201 1 1 13 201 1 49 13 201 1 50 13 201 1 51 13 201 1 52 13 201 1 53 13 201 1 54] 
#[0 13 205 0 69] 
#[1 13 209 0 53 13 213 0 55] 
#[0 6 6 0 53 0 54 0 55] 
#[1 13 217 0 53 12 225 0 54 13 221 0 55 13 225 1 21 13 225 1 24 13 225 1 25 13 225 1 26] 
#[0 6 10 0 53 0 54 0 55] 
#[0 6 14 0 53 0 54 0 55] 
#[0 6 18 0 53 0 54 0 55] 
#[1 13 229 0 53 12 225 0 54 13 233 0 55 1 73 0 119 1 245 0 127 13 237 0 135 12 237 1 21 13 241 1 22 12 237 1 24 12 237 1 25 12 237 1 26] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 6 22 0 22 6 22 0 23 5 253 0 24 6 22 0 25 6 22 0 26 6 1 0 29 6 5 0 30 6 9 0 32 6 22 0 34 6 22 0 44 6 22 0 49 6 22 0 50 6 22 0 53 6 22 0 54 6 22 0 55 6 22 0 56 6 13 0 57 6 22 0 59 6 22 0 60 6 22 0 62 6 22 0 63 6 22 0 66 6 22 0 67 6 22 0 68 6 22 0 69 6 17 0 72 6 22 0 73 6 21 0 75 6 22 0 77 6 22 0 79 6 22 0 80 6 22 0 82 6 25 0 85 6 22 0 88 6 22 0 90 6 22 0 91 6 22 0 92 6 22 0 93 6 22 0 94 6 22 0 96 6 22 0 100 6 22 0 103 6 22 0 107 6 22 0 108 6 22 0 109 6 33 0 110 6 22 0 111 6 22 0 117 6 22 0 118 6 22 0 119 6 22 0 120 6 22 0 121 6 22 0 122 6 22 0 123 6 22 0 124 6 22 0 125 6 22 0 127 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 6 26 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 6 30 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 13 245 0 107] 
#[0 6 34 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 13 249 0 109] 
#[0 13 253 0 109] 
#[0 14 1 0 55] 
#[1 9 73 0 116 14 5 0 144] 
#[1 1 129 0 5 1 141 0 33 14 9 0 167 14 9 0 168 1 153 0 169 14 9 0 173] 
#[0 6 38 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 42 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 46 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 50 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 13 0 89] 
#[0 6 54 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 58 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 62 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 17 0 64] 
#[0 6 66 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 21 0 89] 
#[0 14 25 0 89] 
#[0 14 29 0 55] 
#[0 6 70 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 33 0 89] 
#[0 6 74 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 37 0 89] 
#[0 6 78 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 82 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 86 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 90 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 41 0 89] 
#[0 6 94 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 98 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 102 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 14 45 0 77] 
#[0 6 106 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 6 110 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 14 49 0 77] 
#[1 1 150 0 1 1 150 0 3 3 75 0 5 1 150 0 7 3 75 0 8 3 75 0 10 3 75 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 6 114 0 22 6 114 0 23 1 150 0 24 6 114 0 25 6 114 0 26 1 150 0 29 1 150 0 30 1 150 0 32 6 114 0 34 6 114 0 44 6 114 0 49 6 114 0 50 6 114 0 53 6 114 0 54 6 114 0 55 6 114 0 56 1 150 0 57 6 114 0 59 6 114 0 60 6 114 0 62 6 114 0 63 6 114 0 66 6 114 0 67 6 114 0 68 6 114 0 69 1 150 0 72 6 114 0 73 1 150 0 75 6 114 0 77 6 114 0 79 6 114 0 80 6 114 0 82 1 150 0 85 6 114 0 88 6 114 0 90 6 114 0 91 6 114 0 92 6 114 0 93 6 114 0 94 6 114 0 96 6 114 0 100 6 114 0 103 6 114 0 107 6 114 0 108 6 114 0 109 1 150 0 110 6 114 0 111 6 114 0 117 6 114 0 118 6 114 0 119 6 114 0 120 6 114 0 121 6 114 0 122 6 114 0 123 6 114 0 124 6 114 0 125 6 114 0 127] 
#[1 1 150 0 1 1 150 0 3 3 79 0 5 1 150 0 7 3 79 0 8 3 79 0 10 3 79 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 6 118 0 22 6 118 0 23 1 150 0 24 6 118 0 25 6 118 0 26 1 150 0 29 1 150 0 30 1 150 0 32 6 118 0 34 6 118 0 44 6 118 0 49 6 118 0 50 6 118 0 53 6 118 0 54 6 118 0 55 6 118 0 56 1 150 0 57 6 118 0 59 6 118 0 60 6 118 0 62 6 118 0 63 6 118 0 66 6 118 0 67 6 118 0 68 6 118 0 69 1 150 0 72 6 118 0 73 1 150 0 75 6 118 0 77 6 118 0 79 6 118 0 80 6 118 0 82 1 150 0 85 6 118 0 88 6 118 0 90 6 118 0 91 6 118 0 92 6 118 0 93 6 118 0 94 6 118 0 96 6 118 0 100 6 118 0 103 6 118 0 107 6 118 0 108 6 118 0 109 1 150 0 110 6 118 0 111 6 118 0 117 6 118 0 118 6 118 0 119 6 118 0 120 6 118 0 121 6 118 0 122 6 118 0 123 6 118 0 124 6 118 0 125 6 118 0 127] 
#[1 1 150 0 1 1 150 0 3 3 83 0 5 1 150 0 7 3 83 0 8 3 83 0 10 3 83 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 6 122 0 22 6 122 0 23 1 150 0 24 6 122 0 25 6 122 0 26 1 150 0 29 1 150 0 30 1 150 0 32 6 122 0 34 6 122 0 44 6 122 0 49 6 122 0 50 6 122 0 53 6 122 0 54 6 122 0 55 6 122 0 56 1 150 0 57 6 122 0 59 6 122 0 60 6 122 0 62 6 122 0 63 6 122 0 66 6 122 0 67 6 122 0 68 6 122 0 69 1 150 0 72 6 122 0 73 1 150 0 75 6 122 0 77 6 122 0 79 6 122 0 80 6 122 0 82 1 150 0 85 6 122 0 88 6 122 0 90 6 122 0 91 6 122 0 92 6 122 0 93 6 122 0 94 6 122 0 96 6 122 0 100 6 122 0 103 6 122 0 107 6 122 0 108 6 122 0 109 1 150 0 110 6 122 0 111 6 122 0 117 6 122 0 118 6 122 0 119 6 122 0 120 6 122 0 121 6 122 0 122 6 122 0 123 6 122 0 124 6 122 0 125 6 122 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 14 53 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 14 53 0 220 5 117 0 221 5 117 0 222 14 53 0 226 14 53 0 227 14 53 0 228 14 53 0 229 14 53 0 230 14 53 0 237 14 53 0 238 14 53 0 239 14 53 0 240 14 53 0 241 14 53 0 242 14 53 0 243 14 53 0 244 14 53 0 245 14 53 0 247 14 53 0 249 14 53 0 251 14 53 0 252 14 53 0 253 14 53 0 254 14 53 0 255 14 53 1 0 14 53 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 14 57 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 5 117 0 134 5 117 0 135 5 117 0 136 5 117 0 137 5 117 0 138 5 117 0 139 5 117 0 140 5 117 0 141 5 117 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 14 57 0 220 5 117 0 221 5 117 0 222 14 57 0 226 14 57 0 227 14 57 0 228 14 57 0 229 14 57 0 230 14 57 0 237 14 57 0 238 14 57 0 239 14 57 0 240 14 57 0 241 14 57 0 242 14 57 0 243 14 57 0 244 14 57 0 245 14 57 0 247 14 57 0 249 14 57 0 251 14 57 0 252 14 57 0 253 14 57 0 254 14 57 0 255 14 57 1 0 14 57 1 1 5 117 1 49 5 117 1 50 5 117 1 51 5 117 1 52 5 117 1 53 5 117 1 54] 
#[1 14 61 0 79 1 73 0 119 1 245 0 127 14 65 0 135] 
#[1 0 6 0 79 0 6 0 119 0 6 0 127 14 69 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 2 121 0 60 14 73 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 14 73 0 134 14 73 0 135 14 73 0 136 14 73 0 137 14 73 0 138 14 73 0 139 14 73 0 140 14 73 0 141 14 73 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 14 73 0 220 14 73 0 221 14 73 0 222 14 73 0 226 14 73 0 227 14 73 0 228 14 73 0 229 14 73 0 230 14 73 0 237 14 73 0 238 14 73 0 239 14 73 0 240 14 73 0 241 14 73 0 242 14 73 0 243 14 73 0 244 14 73 0 245 14 73 0 247 14 73 0 249 14 73 0 251 14 73 0 252 14 73 0 253 14 73 0 254 14 73 0 255 14 73 1 0 14 73 1 1 14 73 1 49 14 73 1 50 14 73 1 51 14 73 1 52 14 73 1 53 14 73 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 0 6 0 79 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 14 77 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 14 81 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 14 85 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 14 89 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 14 93 0 101 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 6 126 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 97 0 133] 
#[0 14 101 0 69] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 105 0 133] 
#[0 14 109 0 69] 
#[0 6 130 0 53 0 54 0 55] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 113 0 133] 
#[0 14 117 0 69] 
#[1 14 121 0 53 14 125 0 55] 
#[1 14 129 0 53 12 225 0 54 14 133 0 55 13 225 1 21 13 225 1 24 13 225 1 25 13 225 1 26] 
#[0 6 134 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 6 138 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 6 142 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 14 137 0 109] 
#[1 14 141 0 10 10 209 0 116] 
#[0 6 146 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 150 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 154 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 158 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 162 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 14 145 0 89] 
#[0 6 166 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 170 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 174 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[0 6 178 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 6 182 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 1 150 0 1 1 150 0 3 3 87 0 5 1 150 0 7 3 87 0 8 3 87 0 10 3 87 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 6 186 0 22 6 186 0 23 1 150 0 24 6 186 0 25 6 186 0 26 1 150 0 29 1 150 0 30 1 150 0 32 6 186 0 34 6 186 0 44 6 186 0 49 6 186 0 50 6 186 0 53 6 186 0 54 6 186 0 55 6 186 0 56 1 150 0 57 6 186 0 59 6 186 0 60 6 186 0 62 6 186 0 63 6 186 0 66 6 186 0 67 6 186 0 68 6 186 0 69 1 150 0 72 6 186 0 73 1 150 0 75 6 186 0 77 6 186 0 79 6 186 0 80 6 186 0 82 1 150 0 85 6 186 0 88 6 186 0 90 6 186 0 91 6 186 0 92 6 186 0 93 6 186 0 94 6 186 0 96 6 186 0 100 6 186 0 103 6 186 0 107 6 186 0 108 6 186 0 109 1 150 0 110 6 186 0 111 6 186 0 117 6 186 0 118 6 186 0 119 6 186 0 120 6 186 0 121 6 186 0 122 6 186 0 123 6 186 0 124 6 186 0 125 6 186 0 127] 
#[1 1 150 0 1 1 150 0 3 3 91 0 5 1 150 0 7 3 91 0 8 3 91 0 10 3 91 0 11 1 150 0 12 1 150 0 14 1 150 0 16 1 150 0 17 1 150 0 18 1 150 0 19 1 150 0 20 1 150 0 21 6 190 0 22 6 190 0 23 1 150 0 24 6 190 0 25 6 190 0 26 1 150 0 29 1 150 0 30 1 150 0 32 6 190 0 34 6 190 0 44 6 190 0 49 6 190 0 50 6 190 0 53 6 190 0 54 6 190 0 55 6 190 0 56 1 150 0 57 6 190 0 59 6 190 0 60 6 190 0 62 6 190 0 63 6 190 0 66 6 190 0 67 6 190 0 68 6 190 0 69 1 150 0 72 6 190 0 73 1 150 0 75 6 190 0 77 6 190 0 79 6 190 0 80 6 190 0 82 1 150 0 85 6 190 0 88 6 190 0 90 6 190 0 91 6 190 0 92 6 190 0 93 6 190 0 94 6 190 0 96 6 190 0 100 6 190 0 103 6 190 0 107 6 190 0 108 6 190 0 109 1 150 0 110 6 190 0 111 6 190 0 117 6 190 0 118 6 190 0 119 6 190 0 120 6 190 0 121 6 190 0 122 6 190 0 123 6 190 0 124 6 190 0 125 6 190 0 127] 
#[1 6 194 0 5 6 194 0 8 6 194 0 10 0 9 0 11 6 194 0 22 6 194 0 23 6 194 0 25 6 194 0 26 6 194 0 34 6 194 0 44 6 194 0 49 6 194 0 50 6 194 0 53 6 194 0 54 6 194 0 55 6 194 0 56 6 194 0 59 6 194 0 60 6 194 0 62 6 194 0 63 6 194 0 66 6 194 0 67 6 194 0 68 6 194 0 69 6 194 0 73 6 194 0 77 6 194 0 79 6 194 0 80 6 194 0 82 6 194 0 88 6 194 0 90 6 194 0 91 6 194 0 92 6 194 0 93 6 194 0 94 6 194 0 96 3 95 0 100 6 194 0 103 6 194 0 107 6 194 0 108 6 194 0 109 6 194 0 111 6 194 0 117 6 194 0 118 6 194 0 119 6 194 0 120 6 194 0 121 6 194 0 122 6 194 0 123 3 99 0 124 3 103 0 125 6 194 0 127 14 149 0 145 14 149 0 146 14 149 0 147 14 149 0 148 14 149 0 149] 
#[0 14 153 0 79] 
#[1 14 157 0 79 1 73 0 119 1 245 0 127 14 161 0 135] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 0 6 0 22 0 6 0 23 5 253 0 24 0 6 0 25 0 6 0 26 6 1 0 29 6 5 0 30 6 9 0 32 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 56 6 13 0 57 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 6 17 0 72 0 6 0 73 6 21 0 75 0 6 0 79 0 6 0 80 0 6 0 82 6 25 0 85 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 6 33 0 110 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 165 0 133 6 37 0 246 6 41 0 248 6 45 0 250] 
#[1 14 169 0 79 1 73 0 119 1 245 0 127 14 173 0 135] 
#[1 0 6 0 79 0 6 0 119 0 6 0 127 14 177 0 133] 
#[1 14 181 0 55 1 73 0 119 1 245 0 127 14 185 0 135] 
#[1 0 6 0 55 0 6 0 119 0 6 0 127 14 189 0 133] 
#[1 3 107 0 5 3 107 0 8 3 107 0 10 3 107 0 11 6 198 0 13 3 107 0 22 3 107 0 23 3 107 0 25 3 107 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 3 107 0 53 3 107 0 54 3 107 0 55 0 6 0 56 0 6 0 59 3 107 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 3 107 0 73 3 107 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 3 107 0 94 0 6 0 96 3 107 0 100 0 6 0 103 0 6 0 108 0 6 0 109 3 107 0 111 3 107 0 117 3 107 0 118 3 107 0 119 3 107 0 120 3 107 0 121 3 107 0 122 3 107 0 123 3 107 0 124 3 107 0 125 0 6 0 127 14 193 0 133 14 197 1 28] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 14 201 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 14 205 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 202 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 14 209 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 14 213 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 206 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 14 217 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 14 221 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 210 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 225 0 133] 
#[0 14 229 0 69] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 22 0 6 0 23 0 6 0 25 0 6 0 26 0 6 0 34 0 6 0 44 0 6 0 49 0 6 0 50 0 6 0 55 0 6 0 56 0 6 0 59 0 6 0 60 0 6 0 62 0 6 0 63 0 6 0 66 0 6 0 67 0 6 0 68 0 6 0 69 0 6 0 73 0 6 0 80 0 6 0 82 0 6 0 88 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 100 0 6 0 103 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 117 0 6 0 118 0 6 0 119 0 6 0 120 0 6 0 121 0 6 0 122 0 6 0 123 0 6 0 124 0 6 0 125 0 6 0 127 14 233 0 133] 
#[0 14 237 0 69] 
#[0 6 214 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 9 73 0 116 14 241 0 144] 
#[0 6 218 0 11 0 34 0 35 0 44 0 47 0 49 0 56 0 59 0 63 0 64 0 66 0 83 0 88 0 89 0 90 0 91 0 96 0 99 0 100 0 103 0 124 0 125 0 127 1 55] 
#[1 6 222 0 5 6 222 0 8 6 222 0 10 1 133 0 11 6 222 0 22 6 222 0 23 6 222 0 25 6 222 0 26 6 222 0 34 6 222 0 44 6 222 0 49 6 222 0 50 6 222 0 53 6 222 0 54 6 222 0 55 6 222 0 56 6 222 0 59 6 222 0 60 6 222 0 62 6 222 0 63 6 222 0 66 6 222 0 67 6 222 0 68 6 222 0 69 6 222 0 73 6 222 0 77 6 222 0 79 6 222 0 80 6 222 0 82 6 222 0 88 6 222 0 90 6 222 0 91 6 222 0 92 6 222 0 93 6 222 0 94 6 222 0 96 6 222 0 100 6 222 0 103 6 222 0 107 6 222 0 108 6 222 0 109 6 222 0 111 6 222 0 117 6 222 0 118 6 222 0 119 6 222 0 120 6 222 0 121 6 222 0 122 6 222 0 123 6 222 0 124 6 222 0 125 6 222 0 127] 
#[1 6 226 0 5 6 226 0 8 6 226 0 10 0 9 0 11 6 226 0 22 6 226 0 23 6 226 0 25 6 226 0 26 6 226 0 34 6 226 0 44 6 226 0 49 6 226 0 50 6 226 0 53 6 226 0 54 6 226 0 55 6 226 0 56 6 226 0 59 6 226 0 60 6 226 0 62 6 226 0 63 6 226 0 66 6 226 0 67 6 226 0 68 6 226 0 69 6 226 0 73 6 226 0 77 6 226 0 79 6 226 0 80 6 226 0 82 6 226 0 88 6 226 0 90 6 226 0 91 6 226 0 92 6 226 0 93 6 226 0 94 6 226 0 96 3 111 0 100 6 226 0 103 6 226 0 107 6 226 0 108 6 226 0 109 6 226 0 111 6 226 0 117 6 226 0 118 6 226 0 119 6 226 0 120 6 226 0 121 6 226 0 122 6 226 0 123 3 115 0 124 3 119 0 125 6 226 0 127 14 245 0 145 14 245 0 146 14 245 0 147 14 245 0 148 14 245 0 149] 
#[1 6 230 0 5 6 230 0 8 6 230 0 10 0 9 0 11 6 230 0 22 6 230 0 23 6 230 0 25 6 230 0 26 6 230 0 34 6 230 0 44 6 230 0 49 6 230 0 50 6 230 0 53 6 230 0 54 6 230 0 55 6 230 0 56 6 230 0 59 6 230 0 60 6 230 0 62 6 230 0 63 6 230 0 66 6 230 0 67 6 230 0 68 6 230 0 69 6 230 0 73 6 230 0 77 6 230 0 79 6 230 0 80 6 230 0 82 6 230 0 88 6 230 0 90 6 230 0 91 6 230 0 92 6 230 0 93 6 230 0 94 6 230 0 96 3 123 0 100 6 230 0 103 6 230 0 107 6 230 0 108 6 230 0 109 6 230 0 111 6 230 0 117 6 230 0 118 6 230 0 119 6 230 0 120 6 230 0 121 6 230 0 122 6 230 0 123 3 127 0 124 3 131 0 125 6 230 0 127 14 249 0 145 14 249 0 146 14 249 0 147 14 249 0 148 14 249 0 149] 
#[0 14 253 0 79] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 0 6 0 79 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 15 1 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 15 5 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 234 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 9 0 79] 
#[1 15 13 0 79 1 73 0 119 1 245 0 127 15 17 0 135] 
#[0 15 21 0 69] 
#[0 15 25 0 55] 
#[1 15 29 0 55 1 73 0 119 1 245 0 127 15 33 0 135] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 53 0 6 0 54 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 15 37 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 15 41 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 15 45 0 13 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 6 238 0 53 6 238 0 54 6 238 0 55 2 121 0 60 15 49 0 73 2 129 0 80 2 133 0 94 0 81 0 100 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 2 197 0 124 0 97 0 125 15 49 0 134 15 49 0 135 15 49 0 136 15 49 0 137 15 49 0 138 15 49 0 139 15 49 0 140 15 49 0 141 15 49 0 142 2 197 0 145 2 197 0 146 2 197 0 147 2 197 0 148 2 197 0 149 15 49 0 220 15 49 0 221 15 49 0 222 15 49 0 226 15 49 0 227 15 49 0 228 15 49 0 229 15 49 0 230 15 49 0 237 15 49 0 238 15 49 0 239 15 49 0 240 15 49 0 241 15 49 0 242 15 49 0 243 15 49 0 244 15 49 0 245 15 49 0 247 15 49 0 249 15 49 0 251 15 49 0 252 15 49 0 253 15 49 0 254 15 49 0 255 15 49 1 0 15 49 1 1 15 53 1 27 15 49 1 49 15 49 1 50 15 49 1 51 15 49 1 52 15 49 1 53 15 49 1 54] 
#[1 15 57 0 55 1 73 0 119 1 245 0 127 15 61 0 135] 
#[1 0 6 0 55 0 6 0 119 0 6 0 127 15 65 0 133] 
#[1 15 69 0 55 1 245 0 127] 
#[1 0 6 0 55 0 6 0 127 15 73 0 133] 
#[1 15 77 0 55 1 73 0 119 1 245 0 127 15 81 0 135] 
#[1 0 6 0 55 0 6 0 119 0 6 0 127 15 85 0 133] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 0 183 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 15 89 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 15 93 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 242 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 2 93 0 5 2 97 0 8 2 101 0 10 0 9 0 11 2 105 0 22 2 109 0 23 2 113 0 25 2 117 0 26 0 13 0 34 0 21 0 44 0 29 0 49 4 113 0 50 0 6 0 55 0 33 0 56 0 37 0 59 2 121 0 60 4 117 0 62 4 169 0 63 4 169 0 66 4 121 0 67 4 125 0 68 4 129 0 69 4 181 0 73 2 129 0 80 4 133 0 82 4 169 0 88 4 169 0 90 0 69 0 91 4 137 0 92 2 133 0 94 4 141 0 96 0 81 0 100 0 85 0 103 4 145 0 108 4 149 0 109 2 137 0 111 2 141 0 117 2 145 0 118 1 73 0 119 1 121 0 120 2 149 0 121 2 153 0 122 2 157 0 123 4 153 0 124 0 97 0 125 0 187 0 127 15 97 0 133 4 181 0 134 4 181 0 135 4 181 0 136 4 181 0 137 4 181 0 138 4 181 0 139 4 181 0 140 4 181 0 141 4 181 0 142 4 153 0 145 4 153 0 146 4 153 0 147 4 153 0 148 4 153 0 149 4 161 0 153 4 161 0 159 15 101 0 160 4 169 0 164 4 161 0 174 4 161 0 175 4 161 0 179 4 161 0 180 4 161 0 201 4 161 0 202 4 161 0 203 4 161 0 204 4 161 0 205 0 225 0 207 4 161 0 208 4 161 0 209 4 161 0 210 4 161 0 211 4 161 0 212 4 161 0 216 4 161 0 219 4 181 0 220 4 181 0 221 4 181 0 222 4 181 0 226 4 181 0 227 4 181 0 228 4 181 0 229 4 181 0 230 4 181 0 237 4 181 0 238 4 181 0 239 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 243 4 181 0 244 4 181 0 245 4 181 0 247 4 181 0 249 4 181 0 251 4 181 0 252 4 181 0 253 4 181 0 254 4 181 0 255 4 181 1 0 4 181 1 1 4 161 1 2 4 161 1 3 4 161 1 4 4 161 1 5 4 161 1 6 4 161 1 7 4 161 1 8 4 161 1 9 4 161 1 10 4 161 1 11 4 161 1 12 4 161 1 13 4 161 1 14 4 161 1 15 4 161 1 16 4 161 1 17 4 161 1 18 4 161 1 19 4 161 1 20 4 161 1 23 4 161 1 29 5 13 1 30 4 161 1 31 4 161 1 32 4 161 1 33 4 161 1 34 4 161 1 35 4 161 1 36 4 161 1 37 4 161 1 38 4 161 1 39 4 161 1 40 4 161 1 41 4 161 1 42 4 161 1 43 4 161 1 44 4 161 1 45 4 161 1 46 4 161 1 48 5 85 1 49 5 85 1 50 5 85 1 51 5 85 1 52 5 85 1 53 5 85 1 54] 
#[0 6 246 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[1 15 105 0 113 10 209 0 116] 
#[1 6 250 0 5 6 250 0 8 6 250 0 10 1 133 0 11 6 250 0 22 6 250 0 23 6 250 0 25 6 250 0 26 6 250 0 34 6 250 0 44 6 250 0 49 6 250 0 50 6 250 0 53 6 250 0 54 6 250 0 55 6 250 0 56 6 250 0 59 6 250 0 60 6 250 0 62 6 250 0 63 6 250 0 66 6 250 0 67 6 250 0 68 6 250 0 69 6 250 0 73 6 250 0 77 6 250 0 79 6 250 0 80 6 250 0 82 6 250 0 88 6 250 0 90 6 250 0 91 6 250 0 92 6 250 0 93 6 250 0 94 6 250 0 96 6 250 0 100 6 250 0 103 6 250 0 107 6 250 0 108 6 250 0 109 6 250 0 111 6 250 0 117 6 250 0 118 6 250 0 119 6 250 0 120 6 250 0 121 6 250 0 122 6 250 0 123 6 250 0 124 6 250 0 125 6 250 0 127] 
#[1 6 254 0 5 6 254 0 8 6 254 0 10 1 133 0 11 6 254 0 22 6 254 0 23 6 254 0 25 6 254 0 26 6 254 0 34 6 254 0 44 6 254 0 49 6 254 0 50 6 254 0 53 6 254 0 54 6 254 0 55 6 254 0 56 6 254 0 59 6 254 0 60 6 254 0 62 6 254 0 63 6 254 0 66 6 254 0 67 6 254 0 68 6 254 0 69 6 254 0 73 6 254 0 77 6 254 0 79 6 254 0 80 6 254 0 82 6 254 0 88 6 254 0 90 6 254 0 91 6 254 0 92 6 254 0 93 6 254 0 94 6 254 0 96 6 254 0 100 6 254 0 103 6 254 0 107 6 254 0 108 6 254 0 109 6 254 0 111 6 254 0 117 6 254 0 118 6 254 0 119 6 254 0 120 6 254 0 121 6 254 0 122 6 254 0 123 6 254 0 124 6 254 0 125 6 254 0 127] 
#[1 7 2 0 5 7 2 0 8 7 2 0 10 0 9 0 11 7 2 0 22 7 2 0 23 7 2 0 25 7 2 0 26 7 2 0 34 7 2 0 44 7 2 0 49 7 2 0 50 7 2 0 53 7 2 0 54 7 2 0 55 7 2 0 56 7 2 0 59 7 2 0 60 7 2 0 62 7 2 0 63 7 2 0 66 7 2 0 67 7 2 0 68 7 2 0 69 7 2 0 73 7 2 0 77 7 2 0 79 7 2 0 80 7 2 0 82 7 2 0 88 7 2 0 90 7 2 0 91 7 2 0 92 7 2 0 93 7 2 0 94 7 2 0 96 3 135 0 100 7 2 0 103 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 111 7 2 0 117 7 2 0 118 7 2 0 119 7 2 0 120 7 2 0 121 7 2 0 122 7 2 0 123 3 139 0 124 3 143 0 125 7 2 0 127 15 109 0 145 15 109 0 146 15 109 0 147 15 109 0 148 15 109 0 149] 
#[1 15 113 0 79 1 73 0 119 1 245 0 127 15 117 0 135] 
#[1 0 6 0 79 0 6 0 119 0 6 0 127 15 121 0 133] 
#[0 7 6 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 10 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 125 0 79] 
#[0 7 14 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 129 0 69] 
#[0 15 133 0 69] 
#[0 15 137 0 55] 
#[1 7 18 0 53 7 18 0 54 7 18 0 55 1 245 0 127] 
#[1 0 6 0 53 0 6 0 54 0 6 0 55 0 6 0 127 15 141 0 133] 
#[0 7 22 0 5 0 8 0 10 0 11 0 13 0 22 0 23 0 25 0 26 0 53 0 54 0 55 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[1 5 193 0 1 5 197 0 3 5 201 0 5 5 205 0 7 5 209 0 8 5 213 0 10 5 217 0 11 5 221 0 12 15 145 0 13 5 225 0 14 5 229 0 16 5 233 0 17 5 237 0 18 5 241 0 19 5 245 0 20 5 249 0 21 5 253 0 24 6 1 0 29 6 5 0 30 6 9 0 32 6 13 0 57 6 17 0 72 6 21 0 75 6 25 0 85 6 33 0 110 6 37 0 246 6 41 0 248 6 45 0 250] 
#[0 7 26 0 5 0 8 0 10 0 11 0 13 0 22 0 23 0 25 0 26 0 53 0 54 0 55 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 15 149 0 69] 
#[0 15 153 0 55] 
#[1 15 157 0 55 1 73 0 119 1 245 0 127 15 161 0 135] 
#[0 15 165 0 69] 
#[1 15 169 0 55 1 245 0 127] 
#[0 15 173 0 69] 
#[0 15 177 0 55] 
#[1 15 181 0 55 1 73 0 119 1 245 0 127 15 185 0 135] 
#[1 15 189 0 55 1 73 0 119 1 245 0 127 15 193 0 135] 
#[1 0 6 0 55 0 6 0 119 0 6 0 127 15 197 0 133] 
#[1 15 201 0 55 1 245 0 127] 
#[1 0 6 0 55 0 6 0 127 15 205 0 133] 
#[0 7 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 29 0 30 0 32 0 34 0 35 0 44 0 47 0 49 0 50 0 53 0 54 0 55 0 56 0 57 0 59 0 60 0 62 0 63 0 64 0 66 0 67 0 68 0 69 0 72 0 73 0 75 0 77 0 79 0 80 0 82 0 83 0 85 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 96 0 97 0 99 0 100 0 101 0 102 0 103 0 107 0 108 0 109 0 110 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127 1 55] 
#[1 7 34 0 5 7 34 0 8 7 34 0 10 1 133 0 11 7 34 0 22 7 34 0 23 7 34 0 25 7 34 0 26 7 34 0 34 7 34 0 44 7 34 0 49 7 34 0 50 7 34 0 53 7 34 0 54 7 34 0 55 7 34 0 56 7 34 0 59 7 34 0 60 7 34 0 62 7 34 0 63 7 34 0 66 7 34 0 67 7 34 0 68 7 34 0 69 7 34 0 73 7 34 0 77 7 34 0 79 7 34 0 80 7 34 0 82 7 34 0 88 7 34 0 90 7 34 0 91 7 34 0 92 7 34 0 93 7 34 0 94 7 34 0 96 7 34 0 100 7 34 0 103 7 34 0 107 7 34 0 108 7 34 0 109 7 34 0 111 7 34 0 117 7 34 0 118 7 34 0 119 7 34 0 120 7 34 0 121 7 34 0 122 7 34 0 123 7 34 0 124 7 34 0 125 7 34 0 127] 
#[0 7 38 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 209 0 79] 
#[1 15 213 0 79 1 73 0 119 1 245 0 127 15 217 0 135] 
#[0 7 42 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 46 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 50 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 221 0 69] 
#[1 7 54 0 53 7 54 0 54 7 54 0 55 1 245 0 127] 
#[0 7 58 0 5 0 8 0 10 0 11 0 13 0 22 0 23 0 25 0 26 0 53 0 54 0 55 0 60 0 73 0 80 0 94 0 100 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125] 
#[0 7 62 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 225 0 69] 
#[0 15 229 0 69] 
#[0 15 233 0 55] 
#[0 7 66 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 237 0 69] 
#[0 7 70 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 15 241 0 69] 
#[0 15 245 0 69] 
#[0 15 249 0 55] 
#[0 15 253 0 69] 
#[0 16 1 0 55] 
#[1 16 5 0 55 1 73 0 119 1 245 0 127 16 9 0 135] 
#[0 16 13 0 69] 
#[1 16 17 0 55 1 245 0 127] 
#[0 7 74 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 78 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 21 0 79] 
#[0 7 82 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 86 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 90 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 25 0 69] 
#[0 7 94 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 98 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 102 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 29 0 69] 
#[0 7 106 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 33 0 69] 
#[0 16 37 0 69] 
#[0 16 41 0 55] 
#[0 7 110 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 45 0 69] 
#[0 7 114 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 118 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 122 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 126 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 130 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 16 49 0 69] 
#[0 7 134 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127] 
#[0 7 138 0 5 0 8 0 10 0 11 0 22 0 23 0 25 0 26 0 34 0 44 0 49 0 50 0 53 0 54 0 55 0 56 0 59 0 60 0 62 0 63 0 66 0 67 0 68 0 69 0 73 0 77 0 79 0 80 0 82 0 88 0 90 0 91 0 92 0 93 0 94 0 96 0 100 0 103 0 107 0 108 0 109 0 111 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 127]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument1: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument3: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result timesToken: ((nodes at: 2) at: 1).
	result plusToken: ((nodes at: 2) at: 2).
	result minusToken: ((nodes at: 2) at: 3).
	result divideToken: ((nodes at: 2) at: 4).
	result upArrowToken: ((nodes at: 2) at: 5).
	result _Token: ((nodes at: 2) at: 6).
	result modToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignementOrEquals1: nodes [
	| result |
	result := VBAssignementOrEqualsNode new.
	result left: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result setting: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType11: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result andToken: ((nodes at: 2) at: 1).
	result orToken: ((nodes at: 2) at: 2).
	result xorToken: ((nodes at: 2) at: 3).
	result eqvToken: ((nodes at: 2) at: 4).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result greaterThanToken: ((nodes at: 2) at: 1).
	result lessThanToken: ((nodes at: 2) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 2) at: 3).
	result lessThanEqualToken: ((nodes at: 2) at: 4).
	result greaterThanEqualToken: ((nodes at: 2) at: 5).
	result isToken: ((nodes at: 2) at: 6).
	result likeToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result andToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result endToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result value: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	result type: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	result type: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result enumTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result typeTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result untilToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result untilToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	result whileToken: (nodes at: 5).
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result whileToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result ifMatch: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfColon1: nodes [
	| result |
	result := VBElseIfColonNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 4) at: 2) to: result ifMatches.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result eventToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result doToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result forToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result propertyToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result setToken: (nodes at: 1).
	result left: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result right: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement3: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result left: (nodes at: 1).
	result colonEqualToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	result addObject: (nodes at: 9) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result forToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addObject: (nodes at: 11) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result forToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSubLabel1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result gosubToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSubLine1: nodes [
	| result |
	result := VBGoSubLineNode new.
	result gosubToken: (nodes at: 1).
	result lineNumber: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToLabel1: nodes [
	| result |
	result := VBGoToLabelNode new.
	result gotoToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToLine1: nodes [
	| result |
	result := VBGoToLineNode new.
	result gotoToken: (nodes at: 1).
	result lineNumber: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHeadlessIdentifier1: nodes [
	| result |
	result := VBHeadlessIdentifierNode new.
	result periodToken: (nodes at: 1).
	result token: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenColon1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse10: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse11: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse12: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse13: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse14: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse15: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse16: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse7: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse8: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse9: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	result elseToken: (nodes at: 5).
	result
		ifFalse: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result identifier: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabel1: nodes [
	| result |
	result := VBGoToLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result returnToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub2: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result returnToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub3: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result block: (nodes at: 3).
	result returnToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub4: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result block: (nodes at: 3).
	result endLineNumber: (nodes at: 4).
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result constant: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result constants: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet13: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet14: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet15: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet16: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation1: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result typeName: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation1: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result errorToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result errorToken: (nodes at: 2).
	result resumeToken: (nodes at: 3).
	result nextToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result integerExpression: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result databaseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result binaryToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result compare: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result explicitToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result privateToken: (nodes at: 2).
	result moduleToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result type: (nodes at: 5).
	result equalToken: ((nodes at: 6) at: 1).
	result default: ((nodes at: 6) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result equalToken: ((nodes at: 2) at: 1).
	result default: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation1: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result receiver: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForQualifiedIdentifier1: nodes [
	| result |
	result := VBQualifiedIdentifierNode new.
	result token: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result nextToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier2: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSizePattern1: nodes [
	| result |
	result := VBSimpleSizeNode new.
	result _size: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSizePattern2: nodes [
	| result |
	result := VBIntervalSizeNode new.
	result from: (nodes at: 1).
	result toToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result asToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing2: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result asToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing3: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result asToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing4: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result asToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBAsTypeNode new.
	result asToken: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBAsTypeNode new.
	result asToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result asToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result asToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith3: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith4: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________2: nodes [
	| result |
	result := Array new: 3.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________2: nodes [
	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___EnumEntry__field___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	result classToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addNode: (nodes at: 1) to: result elements.
	result addNodes: ((nodes at: 2) at: 1) to: result elements.
	result addTokens: ((nodes at: 2) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result header: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result elements.
	result addNodes: ((nodes at: 4) at: 1) to: result elements.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]
