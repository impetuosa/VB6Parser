Class {
	#name : #VBParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_VB6Parser'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 0 34 1 98] 
#[ 0 38 2 113] 
#[ 0 38 2 117] 
#[ 0 21 0 38] 
#[ 0 38 2 121] 
#[ 0 38 2 125] 
#[ 0 38 2 129] 
#[ 0 37 0 38] 
#[ 0 38 2 133] 
#[ 0 38 0 65] 
#[ 0 38 2 137] 
#[ 0 38 2 141] 
#[ 0 38 0 77] 
#[ 0 38 2 145] 
#[ 0 38 2 149] 
#[ 0 38 2 153] 
#[ 0 38 0 93] 
#[ 0 38 2 157] 
#[ 0 38 0 125] 
#[ 0 38 2 161] 
#[ 0 38 2 165] 
#[ 0 38 2 169] 
#[ 0 38 1 137] 
#[ 0 38 1 185] 
#[ 0 38 2 173] 
#[ 0 38 2 177] 
#[ 0 38 2 181] 
#[ 0 38 0 137] 
#[ 0 38 2 185] 
#[ 0 38 0 141] 
#[ 0 54 1 102] 
#[ 1 170 1 174 1 178] 
#[ 1 170 1 174 1 178 1 197] 
#[ 0 14 2 126] 
#[ 0 6 7 53] 
#[ 2 238 5 41] 
#[ 2 238 5 69] 
#[ 2 238 5 101] 
#[ 2 238 5 129] 
#[ 2 242 5 41] 
#[ 2 242 5 69] 
#[ 2 242 5 101] 
#[ 2 242 5 129] 
#[ 2 62 2 250] 
#[ 2 62 3 2] 
#[ 3 46 5 41] 
#[ 3 46 5 69] 
#[ 3 46 5 101] 
#[ 3 46 5 129] 
#[ 3 58 7 169] 
#[ 2 113 3 58] 
#[ 2 117 3 58] 
#[ 0 21 3 58] 
#[ 2 121 3 58] 
#[ 2 125 3 58] 
#[ 2 129 3 58] 
#[ 0 37 3 58] 
#[ 2 133 3 58] 
#[ 0 65 3 58] 
#[ 2 137 3 58] 
#[ 2 141 3 58] 
#[ 0 77 3 58] 
#[ 2 145 3 58] 
#[ 2 149 3 58] 
#[ 2 153 3 58] 
#[ 0 93 3 58] 
#[ 2 157 3 58] 
#[ 0 125 3 58] 
#[ 2 161 3 58] 
#[ 2 165 3 58] 
#[ 2 169 3 58] 
#[ 1 137 3 58] 
#[ 1 185 3 58] 
#[ 2 173 3 58] 
#[ 2 177 3 58] 
#[ 2 181 3 58] 
#[ 0 137 3 58] 
#[ 2 185 3 58] 
#[ 0 141 3 58] 
#[ 0 6 8 33] 
#[ 3 142 8 53] 
#[ 1 170 1 174 1 178 1 193] 
#[ 1 170 1 174 1 178 1 201] 
#[ 0 6 3 146] 
#[ 2 22 4 54] 
#[ 4 138 5 41] 
#[ 4 138 5 69] 
#[ 4 138 5 101] 
#[ 4 138 5 129] 
#[ 3 58 9 181] 
#[ 4 146 9 193] 
#[ 4 154 5 41] 
#[ 4 154 5 69] 
#[ 4 154 5 101] 
#[ 4 154 5 129] 
#[ 4 162 5 41] 
#[ 4 162 5 69] 
#[ 4 162 5 101] 
#[ 4 162 5 129] 
#[ 4 166 5 41] 
#[ 4 166 5 69] 
#[ 4 166 5 101] 
#[ 4 166 5 129] 
#[ 4 170 5 41] 
#[ 4 170 5 69] 
#[ 4 170 5 101] 
#[ 4 170 5 129] 
#[ 4 174 5 41] 
#[ 4 174 5 69] 
#[ 4 174 5 101] 
#[ 4 174 5 129] 
#[ 4 178 5 41] 
#[ 4 178 5 69] 
#[ 4 178 5 101] 
#[ 4 178 5 129] 
#[ 1 170 1 174 1 178 2 230] 
#[ 1 170 1 174 1 178 7 105] 
#[ 0 6 1 137] 
#[ 0 6 0 145] 
#[ 0 6 1 182] 
#[ 4 198 7 53] 
#[ 5 41 5 50] 
#[ 5 50 5 69] 
#[ 5 50 5 101] 
#[ 5 50 5 129] 
#[ 5 41 5 58] 
#[ 5 58 5 69] 
#[ 5 58 5 101] 
#[ 5 58 5 129] 
#[ 5 41 5 62] 
#[ 5 62 5 69] 
#[ 5 62 5 101] 
#[ 5 62 5 129] 
#[ 5 74 9 193] 
#[ 2 113 5 78] 
#[ 2 117 5 78] 
#[ 0 21 5 78] 
#[ 2 121 5 78] 
#[ 2 125 5 78] 
#[ 2 129 5 78] 
#[ 0 37 5 78] 
#[ 2 133 5 78] 
#[ 0 65 5 78] 
#[ 2 137 5 78] 
#[ 2 141 5 78] 
#[ 0 77 5 78] 
#[ 2 145 5 78] 
#[ 2 149 5 78] 
#[ 2 153 5 78] 
#[ 0 93 5 78] 
#[ 2 157 5 78] 
#[ 0 125 5 78] 
#[ 2 161 5 78] 
#[ 2 165 5 78] 
#[ 2 169 5 78] 
#[ 1 137 5 78] 
#[ 1 185 5 78] 
#[ 2 173 5 78] 
#[ 2 177 5 78] 
#[ 2 181 5 78] 
#[ 0 137 5 78] 
#[ 2 185 5 78] 
#[ 0 141 5 78] 
#[ 2 113 5 82] 
#[ 2 117 5 82] 
#[ 0 21 5 82] 
#[ 2 121 5 82] 
#[ 2 125 5 82] 
#[ 2 129 5 82] 
#[ 0 37 5 82] 
#[ 2 133 5 82] 
#[ 0 65 5 82] 
#[ 2 137 5 82] 
#[ 2 141 5 82] 
#[ 0 77 5 82] 
#[ 2 145 5 82] 
#[ 2 149 5 82] 
#[ 2 153 5 82] 
#[ 0 93 5 82] 
#[ 2 157 5 82] 
#[ 0 125 5 82] 
#[ 2 161 5 82] 
#[ 2 165 5 82] 
#[ 2 169 5 82] 
#[ 1 137 5 82] 
#[ 1 185 5 82] 
#[ 2 173 5 82] 
#[ 2 177 5 82] 
#[ 2 181 5 82] 
#[ 0 137 5 82] 
#[ 2 185 5 82] 
#[ 0 141 5 82] 
#[ 5 41 5 94] 
#[ 5 69 5 94] 
#[ 5 94 5 101] 
#[ 5 94 5 129] 
#[ 2 113 3 94] 
#[ 2 117 3 94] 
#[ 0 21 3 94] 
#[ 2 121 3 94] 
#[ 2 125 3 94] 
#[ 2 129 3 94] 
#[ 0 37 3 94] 
#[ 2 133 3 94] 
#[ 0 65 3 94] 
#[ 2 137 3 94] 
#[ 2 141 3 94] 
#[ 0 77 3 94] 
#[ 2 145 3 94] 
#[ 2 149 3 94] 
#[ 2 153 3 94] 
#[ 0 93 3 94] 
#[ 2 157 3 94] 
#[ 0 125 3 94] 
#[ 2 161 3 94] 
#[ 2 165 3 94] 
#[ 2 169 3 94] 
#[ 1 137 3 94] 
#[ 1 185 3 94] 
#[ 2 173 3 94] 
#[ 2 177 3 94] 
#[ 2 181 3 94] 
#[ 0 137 3 94] 
#[ 2 185 3 94] 
#[ 0 141 3 94] 
#[ 0 6 2 113] 
#[ 0 6 2 117] 
#[ 0 6 0 21] 
#[ 0 6 2 121] 
#[ 0 6 2 125] 
#[ 0 6 2 129] 
#[ 0 6 0 37] 
#[ 0 6 2 133] 
#[ 0 6 0 65] 
#[ 0 6 2 137] 
#[ 0 6 2 141] 
#[ 0 6 0 77] 
#[ 0 6 2 145] 
#[ 0 6 2 149] 
#[ 0 6 2 153] 
#[ 0 6 0 93] 
#[ 0 6 2 157] 
#[ 0 6 0 125] 
#[ 0 6 2 161] 
#[ 0 6 2 165] 
#[ 0 6 2 169] 
#[ 0 6 1 185] 
#[ 0 6 2 173] 
#[ 0 6 2 177] 
#[ 0 6 2 181] 
#[ 0 6 0 137] 
#[ 0 6 2 185] 
#[ 0 6 0 141] 
#[ 0 74 4 94] 
#[ 5 41 5 206] 
#[ 5 69 5 206] 
#[ 5 101 5 206] 
#[ 5 129 5 206] 
#[ 5 222 13 69] 
#[ 5 41 6 38] 
#[ 5 69 6 38] 
#[ 2 113 6 38] 
#[ 2 117 6 38] 
#[ 0 21 6 38] 
#[ 2 121 6 38] 
#[ 2 125 6 38] 
#[ 2 129 6 38] 
#[ 5 101 6 38] 
#[ 0 37 6 38] 
#[ 2 133 6 38] 
#[ 0 65 6 38] 
#[ 2 137 6 38] 
#[ 2 141 6 38] 
#[ 0 77 6 38] 
#[ 2 145 6 38] 
#[ 2 149 6 38] 
#[ 2 153 6 38] 
#[ 0 93 6 38] 
#[ 2 157 6 38] 
#[ 0 125 6 38] 
#[ 5 129 6 38] 
#[ 2 161 6 38] 
#[ 2 165 6 38] 
#[ 2 169 6 38] 
#[ 1 137 6 38] 
#[ 1 185 6 38] 
#[ 2 173 6 38] 
#[ 2 177 6 38] 
#[ 2 181 6 38] 
#[ 0 137 6 38] 
#[ 2 185 6 38] 
#[ 0 141 6 38] 
#[ 1 170 2 113] 
#[ 1 170 2 117] 
#[ 0 21 1 170] 
#[ 1 170 2 121] 
#[ 1 170 2 125] 
#[ 1 170 2 129] 
#[ 0 37 1 170] 
#[ 1 170 2 133] 
#[ 0 65 1 170] 
#[ 1 170 2 137] 
#[ 1 170 2 141] 
#[ 0 77 1 170] 
#[ 1 170 2 145] 
#[ 1 170 2 149] 
#[ 1 170 2 153] 
#[ 0 93 1 170] 
#[ 1 170 2 157] 
#[ 0 125 1 170] 
#[ 1 170 2 161] 
#[ 1 170 2 165] 
#[ 1 170 2 169] 
#[ 1 137 1 170] 
#[ 1 170 1 185] 
#[ 1 170 2 173] 
#[ 1 170 2 177] 
#[ 1 170 2 181] 
#[ 0 137 1 170] 
#[ 1 170 2 185] 
#[ 0 141 1 170] 
#[ 2 113 3 66] 
#[ 2 117 3 66] 
#[ 0 21 3 66] 
#[ 2 121 3 66] 
#[ 2 125 3 66] 
#[ 2 129 3 66] 
#[ 0 37 3 66] 
#[ 2 133 3 66] 
#[ 0 65 3 66] 
#[ 2 137 3 66] 
#[ 2 141 3 66] 
#[ 0 77 3 66] 
#[ 2 145 3 66] 
#[ 2 149 3 66] 
#[ 2 153 3 66] 
#[ 0 93 3 66] 
#[ 2 157 3 66] 
#[ 0 125 3 66] 
#[ 2 161 3 66] 
#[ 2 165 3 66] 
#[ 2 169 3 66] 
#[ 1 137 3 66] 
#[ 1 185 3 66] 
#[ 2 173 3 66] 
#[ 2 177 3 66] 
#[ 2 181 3 66] 
#[ 0 137 3 66] 
#[ 2 185 3 66] 
#[ 0 141 3 66] 
#[ 2 113 3 70] 
#[ 2 117 3 70] 
#[ 0 21 3 70] 
#[ 2 121 3 70] 
#[ 2 125 3 70] 
#[ 2 129 3 70] 
#[ 0 37 3 70] 
#[ 2 133 3 70] 
#[ 0 65 3 70] 
#[ 2 137 3 70] 
#[ 2 141 3 70] 
#[ 0 77 3 70] 
#[ 2 145 3 70] 
#[ 2 149 3 70] 
#[ 2 153 3 70] 
#[ 0 93 3 70] 
#[ 2 157 3 70] 
#[ 0 125 3 70] 
#[ 2 161 3 70] 
#[ 2 165 3 70] 
#[ 2 169 3 70] 
#[ 1 137 3 70] 
#[ 1 185 3 70] 
#[ 2 173 3 70] 
#[ 2 177 3 70] 
#[ 2 181 3 70] 
#[ 0 137 3 70] 
#[ 2 185 3 70] 
#[ 0 141 3 70] 
#[ 1 238 6 122] 
#[ 5 41 6 126] 
#[ 5 69 6 126] 
#[ 2 113 6 126] 
#[ 2 117 6 126] 
#[ 0 21 6 126] 
#[ 2 121 6 126] 
#[ 2 125 6 126] 
#[ 2 129 6 126] 
#[ 5 101 6 126] 
#[ 0 37 6 126] 
#[ 2 133 6 126] 
#[ 0 65 6 126] 
#[ 2 137 6 126] 
#[ 2 141 6 126] 
#[ 0 77 6 126] 
#[ 2 145 6 126] 
#[ 2 149 6 126] 
#[ 2 153 6 126] 
#[ 0 93 6 126] 
#[ 2 157 6 126] 
#[ 0 125 6 126] 
#[ 5 129 6 126] 
#[ 2 161 6 126] 
#[ 2 165 6 126] 
#[ 2 169 6 126] 
#[ 1 137 6 126] 
#[ 1 185 6 126] 
#[ 2 173 6 126] 
#[ 2 177 6 126] 
#[ 2 181 6 126] 
#[ 0 137 6 126] 
#[ 2 185 6 126] 
#[ 0 141 6 126] 
#[ 5 41 6 130] 
#[ 5 69 6 130] 
#[ 2 113 6 130] 
#[ 2 117 6 130] 
#[ 0 21 6 130] 
#[ 2 121 6 130] 
#[ 2 125 6 130] 
#[ 2 129 6 130] 
#[ 5 101 6 130] 
#[ 0 37 6 130] 
#[ 2 133 6 130] 
#[ 0 65 6 130] 
#[ 2 137 6 130] 
#[ 2 141 6 130] 
#[ 0 77 6 130] 
#[ 2 145 6 130] 
#[ 2 149 6 130] 
#[ 2 153 6 130] 
#[ 0 93 6 130] 
#[ 2 157 6 130] 
#[ 0 125 6 130] 
#[ 5 129 6 130] 
#[ 2 161 6 130] 
#[ 2 165 6 130] 
#[ 2 169 6 130] 
#[ 1 137 6 130] 
#[ 1 185 6 130] 
#[ 2 173 6 130] 
#[ 2 177 6 130] 
#[ 2 181 6 130] 
#[ 0 137 6 130] 
#[ 2 185 6 130] 
#[ 0 141 6 130] 
#[ 0 6 4 162 5 45] 
#[ 0 6 4 162 5 53] 
#[ 0 6 4 162 5 57] 
#[ 0 6 4 162 5 61] 
#[ 0 222 4 158] 
#[ 0 222 1 197 4 158] 
#[ 1 238 6 246] 
#[ 5 41 6 250] 
#[ 5 69 6 250] 
#[ 2 113 6 250] 
#[ 2 117 6 250] 
#[ 0 21 6 250] 
#[ 2 121 6 250] 
#[ 2 125 6 250] 
#[ 2 129 6 250] 
#[ 5 101 6 250] 
#[ 0 37 6 250] 
#[ 2 133 6 250] 
#[ 0 65 6 250] 
#[ 2 137 6 250] 
#[ 2 141 6 250] 
#[ 0 77 6 250] 
#[ 2 145 6 250] 
#[ 2 149 6 250] 
#[ 2 153 6 250] 
#[ 0 93 6 250] 
#[ 2 157 6 250] 
#[ 0 125 6 250] 
#[ 5 129 6 250] 
#[ 2 161 6 250] 
#[ 2 165 6 250] 
#[ 2 169 6 250] 
#[ 1 137 6 250] 
#[ 1 185 6 250] 
#[ 2 173 6 250] 
#[ 2 177 6 250] 
#[ 2 181 6 250] 
#[ 0 137 6 250] 
#[ 2 185 6 250] 
#[ 0 141 6 250] 
#[ 1 238 6 254] 
#[ 7 38 9 21] 
#[ 1 238 7 122] 
#[ 0 6 7 146] 
#[ 7 166 9 21] 
#[ 1 137 7 222]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2020-09-02T15:13:47.445422+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
%ignorecase;
%annotate_tokens;

#expression operators -- lowest precedence are first.
%left "")""  ;
%left  ""="";
%left "","";
%right "":"";
%left ""eqv"" ;
%left ""||"" ""or"" ""xor"";
%left ""&&"" ""and"";
%left ""is"" ""like"" ""!="" ""<>"";
%left ""<"" ""<="" "">"" "">="";
%left ""+"" ""-"";
%left ""*"" ""/"" ""Mod"";
%right ""^"";
%right ""delete"" ""~"";
%right ""["" ""("";
%left ""."" ""!"" ;
%prefix VB;
%root Program;
%suffix Node;
%start module;

<lineContinuation>
   :    (_) <whitespace> * ( \r | \n | \r\n | \x2028 ) <whitespace> ?
   ;
<DECIMAL_INTEGER>
	: 0 | [1-9] [0-9]*	
	;
<HEX_INTEGER>
	: 0[xX][0-9a-fA-F]+	
	;
<OCTAL_INTEGER>
	: 0[0-7]+	
	;
	
<EXPONENT>
	: [eE] [\-\+]? [0-9]+ 	
	;
<FLOAT_TYPE>
	: [fFdD]	
	;

<DATE_LITERAL>
   : (\#) ([^\#\r\n])* (\#)
   ;
<COLOR_LITERAL>
   : \&H <HEX_INTEGER>+ ""&""?
   ;

<INTEGER_LITERAL>
	: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
	;
<FLOATING_POINT_LITERAL>
	: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
	| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
	| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
	| [0-9]+ <FLOAT_TYPE>	
	| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
	;
<BOOLEAN_LITERAL>
	: true
	| false
	;
<STRING_LITERAL>
   : \"" ([^\""\r\n] | \""\"")* \""
   ;
<NULL_LITERAL>
	: Nothing	
	;
<IDENTIFIER>
	: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
	;
<HASH_NUMBER>
	: ( \#) (<DECIMAL_INTEGER>)
	;
<HASH_IDENTIFIER>
	: ( \#) (<isLetter>|\w|$)*
	;
<whitespace> : ( \x20 | \xA0 | \x9) + ; 

<eol>
   :  ( \r | \n | \r\n | \x2028 | : \ ) <whitespace> ?
   ;
# <LABEL> : <IDENTIFIER> (:) <whitespace> ?  ;
<comment>
   :  (\' | :?  REM  \ ) ( [^\n\r])* 
   ;

###################################################### 
########## Basic module
###################################################### 

module: <eol>* (header 'header' <eol>*)? ModuleStatement 'element'  (<eol>* ModuleStatement 'element' )*   <eol>* {{Module}};

###################################################### 
########## Literals
###################################################### 
literal 
	: 
	  FileDescriptorLiteral
	| IntegerLiteral
	| ColorLiteral
	| DateLiteral
	| FloatLiteral
	| BooleanLiteral
	| StringLiteral
	| Null
	| GuidLiteral
;

FileDescriptorLiteral : <HASH_NUMBER> 'token' {{FileDescriptorLiteral}};
IntegerLiteral :  <INTEGER_LITERAL> 'token' {{IntegerLiteral}};
ColorLiteral: <COLOR_LITERAL> 'token' {{ColorLiteral}} ; 
DateLiteral:  <DATE_LITERAL> 'token' {{DateLiteral}};
FloatLiteral: <FLOATING_POINT_LITERAL> 'token' {{FloatLiteral}};
BooleanLiteral: <BOOLEAN_LITERAL> 'token' {{BooleanLiteral}};
StringLiteral:  <STRING_LITERAL> 'token' {{StringLiteral}};
Null: <NULL_LITERAL> 'token' {{Null}};
GuidLiteral: ""{""<HEX_INTEGER> + ""-""<HEX_INTEGER>+""-"" <HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""}"" {{GuidLiteral}};

Identifier : 
	  SimpleIdentifier 
	| HashIdentifier
	| QualifiedIdentifier 
	| HeadlessIdentifier;


UsableKeywords : ""text"" | ""date"" | ""len""  | ""get"" | ""set""  | ""let"" | ""input"" | ""name"" | ""print"" ;
HashIdentifier :  <HASH_IDENTIFIER> 'token'   {{HashIdentifier}};
SimpleIdentifier : <IDENTIFIER> | UsableKeywords 'token'  {{SimpleIdentifier}};
HeadlessIdentifier  : "".""  Identifier 'token'  {{HeadlessIdentifier}};
QualifiedIdentifier : Identifier 'token'  "".""  <IDENTIFIER> 'member' {{QualifiedIdentifier}};

LabelTag : <IDENTIFIER> 'name' "":"" <whitespace> ?  {{LabelTag}};

###################################################### 
########## Module header and configuration
###################################################### 

header: ""version""   FloatLiteral  'version'  (""class"")?  {{}};
Option
   :   ""option"" IntegerLiteral 'value' {{OptionValue}}
   |   ""option"" ""compare"" ""database"" {{OptionCompareDatabase}}
   |   ""option"" ""compare""  (""binary""| ""text"" 'compare') {{OptionCompare}}
   |   ""option"" ""explicit"" {{OptionExplicit}}
   |   ""option"" ""private"" ""module""{{OptionPrivateModule}}
   | OptionBase
   ;
OptionBase : ""option"" ""base"" Expression 'value' {{OptionBase}} ;
SetUpAssignation :  
	Identifier  'identifier' ""="" Expression 'value' {{SetUpAssignation}} 
;
Attribute
 : ""attribute"" SetUpAssignation 'setting' {{ModuleAttribute}}
 ;
Configuration 
:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* <eol>*""end"" {{Configuration}};

Implements : ""implements"" Identifier 'interface' {{Implements}}; 
ModuleStatement :  
	Option  | Configuration | Attribute | DeclareExternal | VariableDefinition | BehaviourDefinition | Types | Implements
 ;

###################################################### 
########## Body statements
###################################################### 

Statement :   VariableDefinition | Attribute | OptionBase | Expression | ControlFlowStatement | Types | Label;
Block: Statement 'statement' (<eol>+ Statement 'statement'  )* {{Block}};

BaseType: ""boolean"" | ""byte"" | ""collection"" | ""date"" | ""double"" | ""integer"" | ""long"" | ""object"" | ""single"" | ""string"" | ""variant"" {{BaseType}};
Visibility: ""private"" | ""public"" | ""friend"" | ""global"" ; 

ComplexType: Identifier 'name' {{ComplexType}};
Type: BaseType | ComplexType ;

TypedThing: (TypeSize 'size')? ""as""  Type 'type' (TypeSize 'size')? (""*"" Expression 'fixedSize')?  {{AsType}}; 
TypedAndInstantiatedThing: (TypeSize 'size')? ""as"" ""new""  Type 'type' (TypeSize 'size')?  (""*"" Expression 'fixedSize')? {{AsTypeAndNew}}; 

TypeSize : (""("" Expression 'size'? ( "","" Expression 'size')* "")"") {{TypeSize}} ;

AsType: TypedThing | TypedAndInstantiatedThing | TypeSize;

###################################################### 
########## Types
###################################################### 

Types : DefineEnum | DefineType | Event ;

DefineType : 	 (Visibility 'visibility')? ""type"" Identifier 'name' ( <eol>* TypeEntry 'field' )* <eol>* ""end"" ""type"" {{DefineType}}    ;
TypeEntry    : Identifier 'name' AsType 'type' (""*"" IntegerLiteral 'size' )? {{TypeEntry}}     ;
Event  : (Visibility 'visibility')?  ""event"" Identifier 'selector' ParameterList 'parameters' {{Event}} ;
DefineEnum    :  (Visibility 'visibility')?  ""enum"" Identifier 'name'  ( <eol>* EnumEntry 'field')* <eol>*  ""end"" ""enum"" {{DefineEnum}}    ;
EnumEntry    : Identifier 'name'  ( ""=""  Expression 'value')? {{EnumEntry}}    ;

###################################################### 
########## Parameters
###################################################### 

ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
ParameterList:  ""("" (Parameter 'parameter' ( "","" Parameter 'parameter')* )? "")"" {{ParameterList}};
Parameter: ""optional"" ? (ParameterPassingStrategy 'strategy')? ""paramarray""? Identifier 'name'  (AsType 'type')? (""="" Expression 'default')? {{Parameter}};

###################################################### 
########## External declaration
###################################################### 

DeclareSub: (Visibility 'visibility')? ""declare""  ""sub"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  {{ExternalSub}};
DeclareFunction: (Visibility 'visibility')? ""declare""  ""function"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  AsType 'type' {{ExternalFunction}};
DeclareExternal : DeclareSub|DeclareFunction; 

###################################################### 
########## Function / Sub Definition 
###################################################### 

Modifier: ""static"" ;
DefineFunction: (Visibility 'visibility')? (Modifier 'modifier')? ""function"" Identifier 'selector' ParameterList 'parameters' (AsType 'type')? 
	<eol>* Block 'block' <eol>* ""end"" ""function"" 
{{FunctionDefinition}};
DefineSub:  (Visibility 'visibility')? (Modifier 'modifier')? ""sub"" Identifier 'selector' (ParameterList 'parameters') ? 
	<eol>* Block 'block' <eol>*
""end"" ""sub"" 
{{SubDefinition}};

ModulePropertyGet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""get"" Identifier 'selector' (ParameterList 'parameters') ? (AsType 'type')? 
	<eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 
ModulePropertySet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""set"" Identifier 'selector'  (ParameterList 'parameters') ?   
	<eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 
ModulePropertyLet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""let"" Identifier 'selector' (ParameterList 'parameters') ?   
	 <eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 

BehaviourDefinition:  DefineFunction | DefineSub | ModulePropertyGet | ModulePropertySet | ModulePropertyLet ;

###################################################### 
########## Variable / And Multiple Variables
###################################################### 

ModuleProperty : Visibility 'visibility' Variable 'variable' {{ModuleProperty}};
ModuleConstant : (Visibility 'visibility')? ""const"" Constant 'constant' {{ModuleConstant}};
DefineVariable : ""dim"" Variable 'variable' {{DimVariable}};
ReDefineVariable : ""redim"" ""preserve""? Variable 'variable' {{ReDimVariable}};
StaticVariable : ""static"" Variable 'variable' {{StaticVariable}};
Variable : ""WithEvents"" ? Identifier 'name' (AsType 'type') ? {{Variable}};
Constant :  Identifier 'constant' (AsType 'type')?  ""="" Expression 'value' {{Constant}} ;

ModuleProperties : Visibility 'visibility' VariableList 'variables' {{ModuleMultipleProperties}};
ModuleConstants : Visibility 'visibility'? ""const"" ConstantList 'constants' {{ModuleMultipleConstants}};
DefineVariables : ""dim"" VariableList 'variables' {{DimMultipleVariables}};
ReDefineVariables : ""redim""  ""preserve""?  VariableList 'variables' {{ReDimMultipleVariables}};
StaticVariables : ""static"" VariableList 'variables' {{StaticMultipleVariables}};
VariableList : Variable 'variable' ("",""  Variable 'variable' )+ {{VariableList}};
ConstantList : Constant 'constant' ("",""  Constant 'constant' )+ {{ConstantList}};

VariableDefinition : ModuleProperties | ModuleProperty | ModuleConstant | ModuleConstants | ConstantList | DefineVariable | ReDefineVariable |  DefineVariables |  ReDefineVariables | StaticVariable | StaticVariables ;

###################################################### 
########## Value Statements
###################################################### 

ValueStatement :  Operation | ValueClause  | StateAccess | ExplicitCall | RaiseEvent | ImplicitCall  ;
Expression :  ValueStatement |  Identifier | literal | Exits | Go | ParentheseesExpression |IntervalExpression | OpenFileClause ; 


ParentheseesExpression : ""("" Expression 'expression' "")"" {{ParentheseesExpression}};
ValueStatementList : ValueStatement 'value' ("","" ValueStatement 'value' ) * {{ValueStatementList}} ; 
IntervalExpression : Expression 'from' ""to"" Expression 'to'  {{IntervalExpression}} ; 


##########
### Ops
##########

Operation : UnaryOperation | BinaryOperation | Rename;

####################
### Unary Ops 
####################

UnaryOperation:  NegatedOperation | PositiveOperation |  NotOperation ; 

NegatedOperation : ""-""  Expression 'value' {{NegatedOperation}} ;
PositiveOperation : ""+"" Expression 'value' {{PositiveOperation}} ;
NotOperation : ""not""  Expression 'value'  {{NotOperation}};


####################
### Binary Ops 
####################

BinaryOperation : ComparisonOperation  
				| ArithmeticOperation | BooleanBinaryOperation 
				| ExplicitAssignement | AssignementOrEquals  | ConcatenationOperation ;

ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like""  ;
ComparisonOperation : Expression 'left' ComparisonOperator Expression 'right' {{ComparisonOperation}};
ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";
ArithmeticOperation : Expression 'left' ArithmeticOperator Expression 'right' {{ArithmeticOperation}};
BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
BooleanBinaryOperation : Expression 'left' BooleanOperator Expression 'right' {{ArithmeticOperation}};
ConcatenationOperation : Expression 'left' ""&"" Expression 'right' {{ConcatenationOperation}}; 
AssignOperator :  ""="" |  "":=""  ;
ExplicitLetSet: ""let"" | ""set"" ; 
AssignementOrEquals : Expression 'left' AssignOperator 'operator' Expression  'right' {{AssignementOrEquals}}; 
ExplicitAssignement : ExplicitLetSet 'kind'  Identifier 'left' AssignOperator 'operator'  Expression 'right' {{ExplicitAssignement}};
 
Rename : ""name"" Expression 'oldName' ""as""  Expression 'newName'  {{Rename}} ;

####################
### Value Clause 
####################

ValueClause: AddressOfClause | NewClause ;
AddressOfClause : ""AddressOf"" Identifier 'name'  {{AddressOfClause}}; 
NewClause : ""New"" Identifier 'typeName' {{NewClause}};


OpenMode :  ""Append"" |  ""Binary"" |  ""Input"" |  ""Output"" |  ""Random"" ;
OpenAccess : ""Read"" | ""Write"" | ""Read"" ""Write"" ;
Lock :  ""Shared"" | ""Lock Read"" | ""Lock Write"" | ""Lock Read Write"";

OpenFileClause : ""Open"" Expression 'filepath'  ""For"" OpenMode 'mode' (OpenAccess 'access')? (Lock 'lock')? ""As"" Expression 'fileDescriptor' (AssignementOrEquals 'length')? {{OpenClause}};


###################################################### 
########## Control flow statements
###################################################### 


ControlFlowStatement : Exits| Loops | If  | On | Resume | To | With | RaiseError | Select ; 

####################
#### Loops
####################


Loops : DoLoop | WhileWend | ForLoop ;

####################
########## Do
####################

DoLoop : InfinityLoop | WhileTrue | UntilTrue | DoWhileTrue | DoUntilTrue; 
InfinityLoop : 
	""do""  
		<eol>* (Block 'body')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{InfinityLoop}} ;

WhileTrue :  
	""do"" ""while"" ValueStatement 'condition' 
		<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{WhileTrue}}; 
UntilTrue : 
	""do"" ""until"" ValueStatement 'condition'
		 <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')?""loop"" 
 {{UntilTrue}}; 

DoWhileTrue :  
	""do""<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""loop""  ""while"" ValueStatement 'condition' 
{{DoWhileTrue}}; 

DoUntilTrue : 
	""do"" <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop"" ""until"" ValueStatement 'condition'
 {{DoUntilTrue}}; 


####################
########## WhileWend
####################

WhileWend: 
	""while"" ValueStatement 'condition'
		 <eol>* ( Block 'body')? <eol>*  (IntegerLiteral 'endLineNumber')? 
	""wend""  {{WhileWend}}; 

####################
########## For 
####################

ForLoop : ForEach | ForNext | ForStepNext;

ForEach :  
	""for"" ""each"" Identifier 'element' ""in"" Expression 'group' 
		 <eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
{{ForEach}} ;
 
ForNext :   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit'   
		<eol>*  ( Block 'body')? <eol>* 
	 (IntegerLiteral 'endLineNumber')? 	""next"" (Identifier 'element' )? 
{{ForNext}} ;
ForStepNext:   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit' ""step"" Expression 'step'   
		<eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
 {{ForStepNext}} ;

####################
########## If
####################

If : IfThenColon | IfThenElseOneLine | IfThen | IfThenElse | IfThenElseIfElse | IfThenElseIf ; 

IfThenColon : ""if"" Expression 'condition' ""then"" Expression  'ifTrue' {{IfThenColon}} ;

IfThenElseOneLine : 
	""if"" Expression 'condition' ""then"" 
		 Expression  'ifTrue' 
	""else"" 
		 Expression  'ifFalse'  
{{IfThenColon}};


IfThen : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""end"" ""if"" 
{{IfThenElse}};

IfThenElse : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>* 
	(IntegerLiteral 'elseLineNumber')? ""else"" 
		 <eol>* (Block 'ifFalse')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElse}};

IfThenElseIfElse  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
""else""  
	<eol>* (Block 'otherwise')? <eol>*
(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElseIfElse}};

IfThenElseIf  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElseIfElse}};


ElseIf: ElseIfBlock | ElseIfColon ;

ElseIfBlock : ""elseif"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifMatch')? <eol>*  {{ElseIfBlock}};
	
ElseIfColon : ""elseif"" Expression 'condition' ""then"" (  Expression 'ifMatch' ?  "":"" )* {{ElseIfColon}} ;

####################
###### Error 
####################

	RaiseError : ""Error"" Expression 'errorCode'  {{RaiseError}} ;
	
##########################
###### Label / LabelSub
##########################

	To : LabelSub ;
	
	Label : LabelTag 'label'; 
	LabelSub : LabelTag 'label'
		<eol>*(Block 'block' )? <eol>+ 
	(IntegerLiteral 'endLineNumber')? ""return"" 
	{{GoSubLabel}};
	
	Return : ""return"" {{Return}} ;
	
	
	
	
####################
###### Select Case 
####################

	Case :  ""case""  Expression 'expression'  <eol>+ (Expression 'expression')? {{Case}};
	CaseOtherwise :""case"" ""else""  <eol>+ (Expression 'expression')?  {{Case}};
	Select : ""select"" ""case"" Expression 'expression'     (<eol>+ Case 'case') +  (<eol>+  CaseOtherwise 'otherwise')? <eol>+ 
	(IntegerLiteral 'endLineNumber')? ""end"" ""select"" 
	{{Select}} ;

####################
###### Resume
####################

	Resume : ResumeLabel | ResumeNext | ResumeEmpty ;
	
	ResumeLabel : ""resume"" Identifier 'label' {{ResumeLabel}} ; 
	ResumeNext : ""resume"" ""next"" {{ResumeNext}} ; 
	ResumeEmpty : ""resume"" ; 

####################
###### GoTo / GoSub 
####################

Go: GoTo | GoSub ;


Destination : Identifier | IntegerLiteral ;
DestinationList :  Destination 'label' ("","" Destination 'label')* {{DestinationList}};

GoTo  : ""goto"" DestinationList 'destination'   {{GoTo}}  ;
GoSub  :  ""gosub""  DestinationList 'destination'  {{GoSub}} ;

####################
########## On 
####################

On: OnErrorGoTo | OnErrorResumeNext |  OnExpressionGo  ; 

OnErrorGoTo : ""on"" ""error"" GoTo 'to' {{OnErrorGoTo}}  ;
OnErrorResumeNext : ""on"" ""error"" ""resume""  ""next"" {{OnErrorResumeNext }} ;
OnExpressionGo : ""on"" Expression 'integerExpression' Go 'to' {{OnExpressionGo}} ;

####################
########## Error
####################

Error: ""error"" Expression 'errorCode' {{Error}} ;

####################
########## With
####################
With : ""with"" Identifier 'with' <eol>* (Block 'block' )? <eol>*  (IntegerLiteral 'endLineNumber')?""end"" ""with"" {{With}} ;

####################
########## Exits
####################

Exits : ExitFunction | ExitSub | ExitProperty | ExitDo |ExitFor ; 
ExitFunction : ""exit"" ""function"" {{Exits}} ; 
ExitSub : ""exit"" ""sub"" {{Exits}} ; 
ExitDo : ""exit"" ""do"" {{Exits}} ; 
ExitFor : ""exit"" ""for"" {{Exits}} ; 
ExitProperty : ""exit"" ""property"" {{Exits}} ;

####################
### Calls and accesses 
####################

DictionaryAccess :   Expression 'receiver' ""!"" Identifier 'member' {{DictionaryAccess}} ;
MemberAccess : Expression 'receiver' ""."" Identifier 'member' {{MemberAccess}} ;
ImplicitParenthesesLessCall : Identifier 'identifier' ArgumentList 'arguments' {{ImplicitParenthesesLessCall}} ;
ProcedureCallOrArrayAccess :  Expression 'receiver' ""("" ArgumentList 'arguments' "")"" {{ProcedureCallOrArrayAccess}} ;

Argument : (ParameterPassingStrategy 'strategy')?  ""paramarray""?  Expression 'value' {{Argument}};
ArgumentList : (Argument 'argument' ? ("","" | "";"" ))* Argument 'argument'? ( ("","" | "";"" )Argument 'argument' ?)* {{ArgumentList}};

ImplicitCall : Identifier | ProcedureCallOrArrayAccess | ImplicitParenthesesLessCall ;
StateAccess : DictionaryAccess | MemberAccess ;

ExplicitCall : ""Call""  ImplicitCall 'call'  {{ExplicitCall}}; 
RaiseEvent : ""RaiseEvent""  ImplicitCall 'call'  {{RaiseEvent}};"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(150 0 #reduceActionFor_eol__1: 1786881 false ) 
	#(166 1 #liftFirstValue: 2931719 false ) 
	#(166 1 #liftFirstValue: 2931714 false ) 
	#(188 1 #liftFirstValue: 5043203 false ) 
	#(166 1 #liftFirstValue: 2931716 false ) 
	#(188 1 #liftFirstValue: 5043204 false ) 
	#(166 1 #liftFirstValue: 2931715 false ) 
	#(166 1 #liftFirstValue: 2931718 false ) 
	#(166 1 #liftFirstValue: 2931720 false ) 
	#(166 1 #liftFirstValue: 2931721 false ) 
	#(188 1 #liftFirstValue: 5043201 false ) 
	#(188 1 #liftFirstValue: 5043202 false ) 
	#(166 1 #liftFirstValue: 2931717 false ) 
	#(217 1 #liftFirstValue: 7583745 false ) 
	#(166 1 #liftFirstValue: 2931713 false ) 
	#(168 1 #liftFirstValue: 3099649 false ) 
	#(167 1 #reduceActionForHashIdentifier1: 3032065 false ) 
	#(150 2 #reduceActionFor_eol__2: 1786882 false ) 
	#(168 1 #reduceActionForSimpleIdentifier2: 3099650 false ) 
	#(165 1 #liftFirstValue: 2827266 false ) 
	#(165 1 #liftFirstValue: 2827265 false ) 
	#(165 1 #liftFirstValue: 2827268 false ) 
	#(165 1 #liftFirstValue: 2827267 false ) 
	#(182 1 #liftFirstValue: 4415489 false ) 
	#(173 1 #liftFirstValue: 3643399 false ) 
	#(182 1 #liftFirstValue: 4415491 false ) 
	#(182 1 #liftFirstValue: 4415490 false ) 
	#(182 1 #liftFirstValue: 4415496 false ) 
	#(152 0 #reduceActionFor__eol___ModuleStatement__element____1: 1848321 false ) 
	#(182 1 #liftFirstValue: 4415495 false ) 
	#(197 1 #liftFirstValue: 5722114 false ) 
	#(197 1 #liftFirstValue: 5722115 false ) 
	#(197 1 #liftFirstValue: 5722113 false ) 
	#(216 1 #liftFirstValue: 7379969 false ) 
	#(216 1 #liftFirstValue: 7379970 false ) 
	#(182 1 #liftFirstValue: 4415492 false ) 
	#(223 1 #liftFirstValue: 8689665 false ) 
	#(223 1 #liftFirstValue: 8689666 false ) 
	#(223 1 #liftFirstValue: 8689667 false ) 
	#(223 1 #liftFirstValue: 8689668 false ) 
	#(223 1 #liftFirstValue: 8689669 false ) 
	#(182 1 #liftFirstValue: 4415494 false ) 
	#(242 1 #liftFirstValue: 10157058 false ) 
	#(242 1 #liftFirstValue: 10157059 false ) 
	#(242 1 #liftFirstValue: 10157062 false ) 
	#(242 1 #liftFirstValue: 10157063 false ) 
	#(242 1 #liftFirstValue: 10157066 false ) 
	#(242 1 #liftFirstValue: 10157057 false ) 
	#(242 1 #liftFirstValue: 10157060 false ) 
	#(242 1 #liftFirstValue: 10157064 false ) 
	#(242 1 #liftFirstValue: 10157065 false ) 
	#(242 1 #liftFirstValue: 10157067 false ) 
	#(242 1 #liftFirstValue: 10157061 false ) 
	#(182 1 #liftFirstValue: 4415493 false ) 
	#(169 2 #reduceActionForHeadlessIdentifier1: 3181569 false ) 
	#(176 2 #reduceActionForAttribute1: 4137985 false ) 
	#(225 2 #reduceActionForModuleConstant1: 9049089 false ) 
	#(232 2 #reduceActionForModuleConstants1: 9623553 false ) 
	#(229 1 #reduceActionForVariable1: 9352193 false ) 
	#(226 2 #reduceActionForDefineVariable1: 9143297 false ) 
	#(233 2 #reduceActionForDefineVariables1: 9731073 false ) 
	#(205 0 #reduceActionFor__eol___ModuleStatement__element____1: 6187009 false ) 
	#(181 2 #reduceActionForImplements1: 4347905 false ) 
	#(173 2 #reduceActionForOption5: 3643397 false ) 
	#(155 1 #reduceActionForIntegerLiteral1: 2286593 false ) 
	#(173 2 #reduceActionForOption1: 3643393 false ) 
	#(227 2 #reduceActionForReDefineVariable1: 9204737 false ) 
	#(234 2 #reduceActionForReDefineVariables1: 9807873 false ) 
	#(228 2 #reduceActionForStaticVariable1: 9284609 false ) 
	#(235 2 #reduceActionForStaticVariables1: 9905153 false ) 
	#(200 0 #reduceActionFor__eol___ModuleStatement__element____1: 5834753 false ) 
	#(158 1 #reduceActionForFloatLiteral1: 2466817 false ) 
	#(172 2 #reduceActionForheader1: 3578881 false ) 
	#(195 0 #reduceActionFor__eol___ModuleStatement__element____1: 5479425 false ) 
	#(196 1 #liftFirstValue: 5527553 false ) 
	#(196 1 #liftFirstValue: 5527554 false ) 
	#(196 1 #liftFirstValue: 5527555 false ) 
	#(224 2 #reduceActionForModuleProperty1: 8966145 false ) 
	#(231 2 #reduceActionForModuleProperties1: 9523201 false ) 
	#(241 1 #reduceActionFor______Constant__constant____1: 10107905 false ) 
	#(239 2 #reduceActionForConstantList1: 10072065 false ) 
	#(179 0 #reduceActionFor__eol___ModuleStatement__element____1: 4276225 false ) 
	#(229 2 #reduceActionForVariable3: 9352195 false ) 
	#(229 2 #reduceActionForVariable2: 9352194 false ) 
	#(238 1 #reduceActionFor______Constant__constant____1: 10023937 false ) 
	#(236 2 #reduceActionForVariableList1: 9988097 false ) 
	#(202 3 #reduceActionForEvent1: 6005761 false ) 
	#(264 1 #liftFirstValue: 12344321 false ) 
	#(264 1 #liftFirstValue: 12344322 false ) 
	#(157 1 #reduceActionForDateLiteral1: 2411521 false ) 
	#(156 1 #reduceActionForColorLiteral1: 2352129 false ) 
	#(159 1 #reduceActionForBooleanLiteral1: 2533377 false ) 
	#(160 1 #reduceActionForStringLiteral1: 2596865 false ) 
	#(161 1 #reduceActionForNull1: 2658305 false ) 
	#(154 1 #reduceActionForFileDescriptorLiteral1: 2211841 false ) 
	#(244 1 #liftFirstValue: 10631171 false ) 
	#(153 1 #liftFirstValue: 2043905 false ) 
	#(153 1 #liftFirstValue: 2043906 false ) 
	#(153 1 #liftFirstValue: 2043907 false ) 
	#(153 1 #liftFirstValue: 2043908 false ) 
	#(153 1 #liftFirstValue: 2043909 false ) 
	#(153 1 #liftFirstValue: 2043910 false ) 
	#(153 1 #liftFirstValue: 2043911 false ) 
	#(153 1 #liftFirstValue: 2043912 false ) 
	#(153 1 #liftFirstValue: 2043913 false ) 
	#(342 0 #reduceActionFor_Argument__argument__________________1: 20018177 false ) 
	#(345 1 #liftFirstValue: 20136961 false ) 
	#(244 1 #liftFirstValue: 10631170 false ) 
	#(244 1 #liftFirstValue: 10631169 false ) 
	#(174 3 #reduceActionForOptionBase1: 3975169 false ) 
	#(244 1 #liftFirstValue: 10631174 false ) 
	#(244 1 #liftFirstValue: 10631175 false ) 
	#(243 1 #liftFirstValue: 10525697 false ) 
	#(250 1 #liftFirstValue: 11081729 false ) 
	#(251 1 #liftFirstValue: 11198465 false ) 
	#(251 1 #liftFirstValue: 11198466 false ) 
	#(251 1 #liftFirstValue: 11198467 false ) 
	#(250 1 #liftFirstValue: 11081730 false ) 
	#(255 1 #liftFirstValue: 11534337 false ) 
	#(255 1 #liftFirstValue: 11534338 false ) 
	#(255 1 #liftFirstValue: 11534339 false ) 
	#(255 1 #liftFirstValue: 11534342 false ) 
	#(255 1 #liftFirstValue: 11534341 false ) 
	#(255 1 #liftFirstValue: 11534340 false ) 
	#(250 1 #liftFirstValue: 11081731 false ) 
	#(243 1 #liftFirstValue: 10525698 false ) 
	#(268 1 #liftFirstValue: 12775425 false ) 
	#(268 1 #liftFirstValue: 12775426 false ) 
	#(244 1 #liftFirstValue: 10631176 false ) 
	#(244 1 #liftFirstValue: 10631173 false ) 
	#(316 1 #liftFirstValue: 18168833 false ) 
	#(316 1 #liftFirstValue: 18168834 false ) 
	#(244 1 #liftFirstValue: 10631172 false ) 
	#(329 1 #liftFirstValue: 19149825 false ) 
	#(329 1 #liftFirstValue: 19149826 false ) 
	#(329 1 #liftFirstValue: 19149828 false ) 
	#(329 1 #liftFirstValue: 19149829 false ) 
	#(329 1 #liftFirstValue: 19149827 false ) 
	#(346 1 #liftFirstValue: 20226049 false ) 
	#(346 1 #liftFirstValue: 20226050 false ) 
	#(345 1 #liftFirstValue: 20136963 false ) 
	#(345 1 #liftFirstValue: 20136962 false ) 
	#(243 1 #liftFirstValue: 10525702 false ) 
	#(243 1 #liftFirstValue: 10525699 false ) 
	#(243 1 #liftFirstValue: 10525700 false ) 
	#(243 1 #liftFirstValue: 10525701 false ) 
	#(173 3 #reduceActionForOption3: 3643395 false ) 
	#(173 3 #reduceActionForOption2: 3643394 false ) 
	#(173 3 #reduceActionForOption4: 3643396 false ) 
	#(173 3 #reduceActionForOption6: 3643398 false ) 
	#(227 3 #reduceActionForReDefineVariable2: 9204738 false ) 
	#(234 3 #reduceActionForReDefineVariables2: 9807874 false ) 
	#(172 3 #reduceActionForheader2: 3578882 false ) 
	#(170 3 #reduceActionForQualifiedIdentifier1: 3254273 false ) 
	#(230 3 #reduceActionForConstant1: 9430017 false ) 
	#(187 1 #liftFirstValue: 4895745 false ) 
	#(187 1 #liftFirstValue: 4895746 false ) 
	#(187 1 #liftFirstValue: 4895747 false ) 
	#(187 1 #liftFirstValue: 4895748 false ) 
	#(187 1 #liftFirstValue: 4895749 false ) 
	#(187 1 #liftFirstValue: 4895750 false ) 
	#(187 1 #liftFirstValue: 4895751 false ) 
	#(187 1 #liftFirstValue: 4895752 false ) 
	#(187 1 #liftFirstValue: 4895753 false ) 
	#(187 1 #liftFirstValue: 4895754 false ) 
	#(187 1 #reduceActionForBaseType11: 4895755 false ) 
	#(189 1 #reduceActionForComplexType1: 5103617 false ) 
	#(190 1 #liftFirstValue: 5152769 false ) 
	#(190 1 #liftFirstValue: 5152770 false ) 
	#(191 2 #reduceActionForTypedThing1: 5185537 false ) 
	#(149 4 #reduceActionFormodule1: 1778689 false ) 
	#(152 2 #reduceActionFor__eol___ModuleStatement__element____2: 1848322 false ) 
	#(225 3 #reduceActionForModuleConstant2: 9049090 false ) 
	#(232 3 #reduceActionForModuleConstants2: 9623554 false ) 
	#(240 2 #reduceActionFor______Constant__constant___1: 10107905 false ) 
	#(241 2 #reduceActionFor______Constant__constant____2: 10107906 false ) 
	#(175 3 #reduceActionForSetUpAssignation1: 4041729 false ) 
	#(229 3 #reduceActionForVariable4: 9352196 false ) 
	#(237 2 #reduceActionFor______Constant__constant___1: 10023937 false ) 
	#(238 2 #reduceActionFor______Constant__constant____2: 10023938 false ) 
	#(205 2 #reduceActionFor__eol___ModuleStatement__element____2: 6187010 false ) 
	#(208 2 #reduceActionForParameterList1: 6558721 false ) 
	#(207 1 #reduceActionForParameterPassingStrategy2: 6480898 false ) 
	#(207 1 #liftFirstValue: 6480897 false ) 
	#(213 0 #reduceActionFor_____Expression__default___1: 6775809 false ) 
	#(210 0 #reduceActionFor__eol___ModuleStatement__element____1: 6602753 false ) 
	#(253 2 #reduceActionForPositiveOperation1: 11341825 false ) 
	#(252 2 #reduceActionForNegatedOperation1: 11274241 false ) 
	#(269 2 #reduceActionForAddressOfClause1: 12819457 false ) 
	#(347 2 #reduceActionForExplicitCall1: 20276225 false ) 
	#(270 2 #reduceActionForNewClause1: 12892161 false ) 
	#(348 2 #reduceActionForRaiseEvent1: 20340737 false ) 
	#(333 2 #reduceActionForExitFor1: 19337217 false ) 
	#(332 2 #reduceActionForExitDo1: 19302401 false ) 
	#(330 2 #reduceActionForExitFunction1: 19218433 false ) 
	#(334 2 #reduceActionForExitProperty1: 19374081 false ) 
	#(331 2 #reduceActionForExitSub1: 19265537 false ) 
	#(317 1 #liftFirstValue: 18190338 false ) 
	#(317 1 #liftFirstValue: 18190337 false ) 
	#(320 0 #reduceActionFor__eol___ModuleStatement__element____1: 18275329 false ) 
	#(322 2 #reduceActionForGoSub1: 18385921 false ) 
	#(321 2 #reduceActionForGoTo1: 18325505 false ) 
	#(254 2 #reduceActionForNotOperation1: 11410433 false ) 
	#(163 1 #reduceActionFor_HEX_INTEGER___1: 2714625 false ) 
	#(337 2 #reduceActionForImplicitParenthesesLessCall1: 19663873 false ) 
	#(344 0 #reduceActionFor_Argument__argument__________________1: 20078593 false ) 
	#(258 1 #reduceActionForArithmeticOperator1: 11887617 false ) 
	#(258 1 #reduceActionForArithmeticOperator2: 11887618 false ) 
	#(258 1 #reduceActionForArithmeticOperator3: 11887619 false ) 
	#(258 1 #reduceActionForArithmeticOperator4: 11887620 false ) 
	#(263 1 #liftFirstValue: 12310530 false ) 
	#(256 1 #reduceActionForArithmeticOperator2: 11707394 false ) 
	#(256 1 #reduceActionForArithmeticOperator4: 11707396 false ) 
	#(256 1 #reduceActionForArithmeticOperator3: 11707395 false ) 
	#(263 1 #liftFirstValue: 12310529 false ) 
	#(256 1 #reduceActionForArithmeticOperator1: 11707393 false ) 
	#(256 1 #reduceActionForComparisonOperator5: 11707397 false ) 
	#(258 1 #reduceActionForArithmeticOperator7: 11887623 false ) 
	#(258 1 #reduceActionForArithmeticOperator6: 11887622 false ) 
	#(258 1 #reduceActionForComparisonOperator5: 11887621 false ) 
	#(260 1 #reduceActionForBooleanOperator1: 12058625 false ) 
	#(260 1 #reduceActionForBooleanOperator4: 12058628 false ) 
	#(256 1 #reduceActionForArithmeticOperator6: 11707398 false ) 
	#(256 1 #reduceActionForArithmeticOperator7: 11707399 false ) 
	#(260 1 #reduceActionForBooleanOperator2: 12058626 false ) 
	#(260 1 #reduceActionForBooleanOperator3: 12058627 false ) 
	#(315 1 #liftFirstValue: 18075649 false ) 
	#(304 1 #liftFirstValue: 17226753 false ) 
	#(183 1 #liftFirstValue: 4705283 false ) 
	#(183 1 #liftFirstValue: 4705282 false ) 
	#(186 0 #reduceActionFor__eol___ModuleStatement__element____1: 4848641 false ) 
	#(183 1 #liftFirstValue: 4705286 false ) 
	#(183 1 #liftFirstValue: 4705281 false ) 
	#(183 1 #liftFirstValue: 4705284 false ) 
	#(183 1 #liftFirstValue: 4705285 false ) 
	#(275 1 #liftFirstValue: 13489154 false ) 
	#(276 1 #liftFirstValue: 13641729 false ) 
	#(277 1 #liftFirstValue: 13741057 false ) 
	#(277 1 #liftFirstValue: 13741058 false ) 
	#(277 1 #liftFirstValue: 13741059 false ) 
	#(277 1 #liftFirstValue: 13741060 false ) 
	#(277 1 #liftFirstValue: 13741061 false ) 
	#(276 1 #liftFirstValue: 13641730 false ) 
	#(276 1 #liftFirstValue: 13641731 false ) 
	#(284 1 #liftFirstValue: 14828545 false ) 
	#(284 1 #liftFirstValue: 14828546 false ) 
	#(284 1 #liftFirstValue: 14828547 false ) 
	#(275 1 #liftFirstValue: 13489155 false ) 
	#(288 1 #liftFirstValue: 15613953 false ) 
	#(288 1 #liftFirstValue: 15613954 false ) 
	#(288 1 #liftFirstValue: 15613955 false ) 
	#(288 1 #liftFirstValue: 15613956 false ) 
	#(288 1 #liftFirstValue: 15613957 false ) 
	#(288 1 #liftFirstValue: 15613958 false ) 
	#(275 1 #liftFirstValue: 13489160 false ) 
	#(275 1 #liftFirstValue: 13489158 false ) 
	#(183 1 #liftFirstValue: 4705287 false ) 
	#(303 1 #liftFirstValue: 17207297 false ) 
	#(275 1 #liftFirstValue: 13489161 false ) 
	#(275 1 #liftFirstValue: 13489157 false ) 
	#(312 1 #liftFirstValue: 17908737 false ) 
	#(312 1 #liftFirstValue: 17908738 false ) 
	#(312 1 #liftFirstValue: 17908739 false ) 
	#(275 1 #liftFirstValue: 13489156 false ) 
	#(323 1 #liftFirstValue: 18509825 false ) 
	#(323 1 #liftFirstValue: 18509826 false ) 
	#(323 1 #liftFirstValue: 18509827 false ) 
	#(275 1 #liftFirstValue: 13489159 false ) 
	#(275 1 #liftFirstValue: 13489153 false ) 
	#(200 2 #reduceActionFor__eol___ModuleStatement__element____2: 5834754 false ) 
	#(193 3 #reduceActionForTypeSize1: 5443585 false ) 
	#(195 2 #reduceActionFor______Constant__constant____2: 5479426 false ) 
	#(192 3 #reduceActionForTypedAndInstantiatedThing1: 5300225 false ) 
	#(191 3 #reduceActionForTypedThing3: 5185539 false ) 
	#(191 3 #reduceActionForTypedThing5: 5185541 false ) 
	#(230 4 #reduceActionForConstant2: 9430018 false ) 
	#(151 2 #reduceActionFor__eol___ModuleStatement__element___1: 1848321 false ) 
	#(202 4 #reduceActionForEvent2: 6005762 false ) 
	#(180 1 #reduceActionFor_HEX_INTEGER___1: 4278273 false ) 
	#(179 2 #reduceActionFor___eol___SetUpAssignation__setting___2: 4276226 false ) 
	#(206 1 #reduceActionForEnumEntry1: 6258689 false ) 
	#(204 2 #reduceActionFor__eol___ModuleStatement__element___1: 6187009 false ) 
	#(213 1 #reduceActionFor_____Expression__default___2: 6775810 false ) 
	#(211 2 #reduceActionForParameter1: 6660097 false ) 
	#(245 3 #reduceActionForParentheseesExpression1: 10767361 false ) 
	#(318 2 #reduceActionForDestinationList1: 18235393 false ) 
	#(163 2 #reduceActionFor_eol__2: 2714626 false ) 
	#(341 1 #reduceActionFor_Argument__argument_________________1: 20018177 false ) 
	#(341 1 #reduceActionFor_Argument__argument_________________2: 20018178 false ) 
	#(339 1 #reduceActionForArgument1: 19901441 false ) 
	#(342 2 #reduceActionFor_Argument__argument__________________2: 20018178 false ) 
	#(340 2 #reduceActionForArgumentList1: 20002817 false ) 
	#(335 3 #reduceActionForDictionaryAccess1: 19489793 false ) 
	#(262 3 #reduceActionForConcatenationOperation1: 12213249 false ) 
	#(336 3 #reduceActionForMemberAccess1: 19581953 false ) 
	#(249 3 #reduceActionForIntervalExpression1: 10958849 false ) 
	#(257 3 #reduceActionForComparisonOperation1: 11782145 false ) 
	#(259 3 #reduceActionForArithmeticOperation1: 11953153 false ) 
	#(261 3 #reduceActionForBooleanBinaryOperation1: 12107777 false ) 
	#(265 3 #reduceActionForAssignementOrEquals1: 12378113 false ) 
	#(302 2 #reduceActionForRaiseError1: 17059841 false ) 
	#(314 2 #reduceActionForResumeNext1: 18026497 false ) 
	#(313 2 #reduceActionForResumeLabel1: 17963009 false ) 
	#(171 2 #reduceActionForLabelTag1: 3351553 false ) 
	#(184 2 #reduceActionForBlock1: 4818945 false ) 
	#(199 2 #reduceActionFor__eol___ModuleStatement__element___1: 5834753 false ) 
	#(194 2 #reduceActionFor______Constant__constant___1: 5479425 false ) 
	#(193 4 #reduceActionForTypeSize2: 5443586 false ) 
	#(192 4 #reduceActionForTypedAndInstantiatedThing3: 5300227 false ) 
	#(191 4 #reduceActionForTypedThing2: 5185538 false ) 
	#(192 4 #reduceActionForTypedAndInstantiatedThing5: 5300229 false ) 
	#(191 4 #reduceActionForTypedThing7: 5185543 false ) 
	#(149 6 #reduceActionFormodule2: 1778690 false ) 
	#(177 6 #reduceActionForConfiguration1: 4214785 false ) 
	#(180 2 #reduceActionFor_eol__2: 4278274 false ) 
	#(178 2 #reduceActionFor__eol___ModuleStatement__element___1: 4276225 false ) 
	#(214 6 #reduceActionForDeclareSub1: 6969345 false ) 
	#(203 6 #reduceActionForDefineEnum1: 6114305 false ) 
	#(211 3 #reduceActionForParameter9: 6660105 false ) 
	#(211 3 #reduceActionForParameter3: 6660099 false ) 
	#(212 2 #reduceActionFor______Constant__constant___1: 6775809 false ) 
	#(211 3 #reduceActionForParameter2: 6660098 false ) 
	#(211 3 #reduceActionForParameter5: 6660101 false ) 
	#(208 4 #reduceActionForParameterList2: 6558722 false ) 
	#(210 2 #reduceActionFor______Constant__constant____2: 6602754 false ) 
	#(271 1 #liftFirstValue: 12950529 false ) 
	#(271 1 #liftFirstValue: 12950530 false ) 
	#(271 1 #liftFirstValue: 12950531 false ) 
	#(271 1 #liftFirstValue: 12950532 false ) 
	#(271 1 #liftFirstValue: 12950533 false ) 
	#(320 2 #reduceActionFor______Constant__constant____2: 18275330 false ) 
	#(267 4 #reduceActionForRename1: 12632065 false ) 
	#(164 1 #reduceActionFor_HEX_INTEGER___1: 2734081 false ) 
	#(339 2 #reduceActionForArgument2: 19901442 false ) 
	#(339 2 #reduceActionForArgument3: 19901443 false ) 
	#(341 2 #reduceActionFor_Argument__argument_________________3: 20018179 false ) 
	#(341 2 #reduceActionFor_Argument__argument_________________4: 20018180 false ) 
	#(340 3 #reduceActionForArgumentList2: 20002818 false ) 
	#(343 1 #reduceActionFor_Argument__argument_________________1: 20078593 false ) 
	#(343 1 #reduceActionFor______________Argument__argument____3: 20078595 false ) 
	#(344 2 #reduceActionFor_Argument__argument__________________2: 20078594 false ) 
	#(338 4 #reduceActionForProcedureCallOrArrayAccess1: 19779585 false ) 
	#(266 4 #reduceActionForExplicitAssignement1: 12492801 false ) 
	#(324 3 #reduceActionForOnErrorGoTo1: 18570241 false ) 
	#(326 3 #reduceActionForOnExpressionGo1: 18704385 false ) 
	#(171 3 #reduceActionForLabelTag2: 3351554 false ) 
	#(186 2 #reduceActionFor__eol___ModuleStatement__element____2: 4848642 false ) 
	#(198 6 #reduceActionForDefineType1: 5766145 false ) 
	#(201 2 #reduceActionForTypeEntry1: 5906433 false ) 
	#(192 5 #reduceActionForTypedAndInstantiatedThing2: 5300226 false ) 
	#(191 5 #reduceActionForTypedThing4: 5185540 false ) 
	#(192 5 #reduceActionForTypedAndInstantiatedThing7: 5300231 false ) 
	#(191 5 #reduceActionForTypedThing6: 5185542 false ) 
	#(215 7 #reduceActionForDeclareFunction1: 7159809 false ) 
	#(206 3 #reduceActionForEnumEntry2: 6258690 false ) 
	#(211 4 #reduceActionForParameter11: 6660107 false ) 
	#(211 4 #reduceActionForParameter10: 6660106 false ) 
	#(211 4 #reduceActionForParameter13: 6660109 false ) 
	#(211 4 #reduceActionForParameter4: 6660100 false ) 
	#(211 4 #reduceActionForParameter7: 6660103 false ) 
	#(211 4 #reduceActionForParameter6: 6660102 false ) 
	#(209 2 #reduceActionFor______Constant__constant___1: 6602753 false ) 
	#(273 1 #liftFirstValue: 13072388 false ) 
	#(273 1 #liftFirstValue: 13072386 false ) 
	#(273 1 #liftFirstValue: 13072387 false ) 
	#(272 1 #liftFirstValue: 13022209 false ) 
	#(273 1 #liftFirstValue: 13072385 false ) 
	#(272 1 #liftFirstValue: 13022210 false ) 
	#(319 2 #reduceActionFor______Constant__constant___1: 18275329 false ) 
	#(164 2 #reduceActionFor_eol__2: 2734082 false ) 
	#(339 3 #reduceActionForArgument4: 19901444 false ) 
	#(343 2 #reduceActionFor______________Argument__argument____2: 20078594 false ) 
	#(343 2 #reduceActionFor_Argument__argument_________________4: 20078596 false ) 
	#(278 4 #reduceActionForInfinityLoop1: 13818881 false ) 
	#(289 4 #reduceActionForIfThenColon1: 15713281 false ) 
	#(325 4 #reduceActionForOnErrorResumeNext1: 18627585 false ) 
	#(311 1 #reduceActionFor__eol___Case__case____1: 17711105 false ) 
	#(305 4 #reduceActionForLabelSub1: 17255425 false ) 
	#(185 2 #reduceActionFor__eol___ModuleStatement__element___1: 4848641 false ) 
	#(219 7 #reduceActionForDefineSub1: 7825409 false ) 
	#(192 6 #reduceActionForTypedAndInstantiatedThing4: 5300228 false ) 
	#(192 6 #reduceActionForTypedAndInstantiatedThing6: 5300230 false ) 
	#(191 6 #reduceActionForTypedThing8: 5185544 false ) 
	#(214 7 #reduceActionForDeclareSub3: 6969347 false ) 
	#(203 7 #reduceActionForDefineEnum2: 6114306 false ) 
	#(198 7 #reduceActionForDefineType2: 5766146 false ) 
	#(214 8 #reduceActionForDeclareSub2: 6969346 false ) 
	#(211 5 #reduceActionForParameter12: 6660108 false ) 
	#(211 5 #reduceActionForParameter15: 6660111 false ) 
	#(211 5 #reduceActionForParameter14: 6660110 false ) 
	#(211 5 #reduceActionForParameter8: 6660104 false ) 
	#(218 8 #reduceActionForDefineFunction1: 7605249 false ) 
	#(274 6 #reduceActionForOpenFileClause1: 13142017 false ) 
	#(272 2 #liftFirstValue: 13022211 false ) 
	#(220 8 #reduceActionForModulePropertyGet1: 8013825 false ) 
	#(222 8 #reduceActionForModulePropertyLet1: 8468481 false ) 
	#(221 8 #reduceActionForModulePropertySet1: 8248321 false ) 
	#(278 5 #reduceActionForInfinityLoop2: 13818882 false ) 
	#(278 5 #reduceActionForInfinityLoop3: 13818883 false ) 
	#(310 2 #reduceActionFor__eol___ModuleStatement__element___1: 17711105 false ) 
	#(311 2 #reduceActionFor__eol___ModuleStatement__element____2: 17711106 false ) 
	#(283 5 #reduceActionForWhileWend1: 14620673 false ) 
	#(305 5 #reduceActionForLabelSub2: 17255426 false ) 
	#(305 5 #reduceActionForLabelSub3: 17255427 false ) 
	#(219 8 #reduceActionForDefineSub2: 7825410 false ) 
	#(201 4 #reduceActionForTypeEntry2: 5906434 false ) 
	#(192 7 #reduceActionForTypedAndInstantiatedThing8: 5300232 false ) 
	#(215 8 #reduceActionForDeclareFunction3: 7159811 false ) 
	#(219 8 #reduceActionForDefineSub5: 7825413 false ) 
	#(219 8 #reduceActionForDefineSub3: 7825411 false ) 
	#(215 9 #reduceActionForDeclareFunction2: 7159810 false ) 
	#(211 6 #reduceActionForParameter16: 6660112 false ) 
	#(218 9 #reduceActionForDefineFunction2: 7605250 false ) 
	#(274 7 #reduceActionForOpenFileClause2: 13142018 false ) 
	#(274 7 #reduceActionForOpenFileClause5: 13142021 false ) 
	#(274 7 #reduceActionForOpenFileClause3: 13142019 false ) 
	#(220 9 #reduceActionForModulePropertyGet2: 8013826 false ) 
	#(220 9 #reduceActionForModulePropertyGet3: 8013827 false ) 
	#(222 9 #reduceActionForModulePropertyLet2: 8468482 false ) 
	#(221 9 #reduceActionForModulePropertySet2: 8248322 false ) 
	#(279 6 #reduceActionForWhileTrue1: 13942785 false ) 
	#(281 6 #reduceActionForDoWhileTrue1: 14246913 false ) 
	#(278 6 #reduceActionForInfinityLoop4: 13818884 false ) 
	#(295 1 #reduceActionFor_HEX_INTEGER___1: 16427009 false ) 
	#(294 1 #liftFirstValue: 16427009 false ) 
	#(297 1 #liftFirstValue: 16743425 false ) 
	#(297 1 #liftFirstValue: 16743426 false ) 
	#(290 6 #reduceActionForIfThenElseOneLine1: 15804417 false ) 
	#(283 6 #reduceActionForWhileWend2: 14620674 false ) 
	#(283 6 #reduceActionForWhileWend3: 14620675 false ) 
	#(328 6 #reduceActionForWith1: 18962433 false ) 
	#(305 6 #reduceActionForLabelSub4: 17255428 false ) 
	#(214 9 #reduceActionForDeclareSub4: 6969348 false ) 
	#(218 9 #reduceActionForDefineFunction5: 7605253 false ) 
	#(220 9 #reduceActionForModulePropertyGet9: 8013833 false ) 
	#(222 9 #reduceActionForModulePropertyLet5: 8468485 false ) 
	#(221 9 #reduceActionForModulePropertySet5: 8248325 false ) 
	#(219 9 #reduceActionForDefineSub6: 7825414 false ) 
	#(219 9 #reduceActionForDefineSub7: 7825415 false ) 
	#(218 9 #reduceActionForDefineFunction3: 7605251 false ) 
	#(220 9 #reduceActionForModulePropertyGet5: 8013829 false ) 
	#(222 9 #reduceActionForModulePropertyLet3: 8468483 false ) 
	#(221 9 #reduceActionForModulePropertySet3: 8248323 false ) 
	#(219 9 #reduceActionForDefineSub4: 7825412 false ) 
	#(274 8 #reduceActionForOpenFileClause6: 13142022 false ) 
	#(274 8 #reduceActionForOpenFileClause7: 13142023 false ) 
	#(274 8 #reduceActionForOpenFileClause4: 13142020 false ) 
	#(220 10 #reduceActionForModulePropertyGet4: 8013828 false ) 
	#(280 7 #reduceActionForUntilTrue1: 14097409 false ) 
	#(279 7 #reduceActionForWhileTrue2: 13942786 false ) 
	#(279 7 #reduceActionForWhileTrue3: 13942787 false ) 
	#(281 7 #reduceActionForDoWhileTrue2: 14246914 false ) 
	#(282 7 #reduceActionForDoUntilTrue1: 14403585 false ) 
	#(281 7 #reduceActionForDoWhileTrue3: 14246915 false ) 
	#(291 7 #reduceActionForIfThen1: 15945729 false ) 
	#(295 2 #reduceActionFor_eol__2: 16427010 false ) 
	#(307 3 #reduceActionForCase1: 17490945 false ) 
	#(309 7 #reduceActionForSelect1: 17656833 false ) 
	#(283 7 #reduceActionForWhileWend4: 14620676 false ) 
	#(328 7 #reduceActionForWith2: 18962434 false ) 
	#(328 7 #reduceActionForWith3: 18962435 false ) 
	#(215 10 #reduceActionForDeclareFunction4: 7159812 false ) 
	#(218 10 #reduceActionForDefineFunction6: 7605254 false ) 
	#(220 10 #reduceActionForModulePropertyGet10: 8013834 false ) 
	#(220 10 #reduceActionForModulePropertyGet11: 8013835 false ) 
	#(222 10 #reduceActionForModulePropertyLet6: 8468486 false ) 
	#(221 10 #reduceActionForModulePropertySet6: 8248326 false ) 
	#(218 10 #reduceActionForDefineFunction7: 7605255 false ) 
	#(220 10 #reduceActionForModulePropertyGet13: 8013837 false ) 
	#(222 10 #reduceActionForModulePropertyLet7: 8468487 false ) 
	#(221 10 #reduceActionForModulePropertySet7: 8248327 false ) 
	#(219 10 #reduceActionForDefineSub8: 7825416 false ) 
	#(218 10 #reduceActionForDefineFunction4: 7605252 false ) 
	#(220 10 #reduceActionForModulePropertyGet6: 8013830 false ) 
	#(220 10 #reduceActionForModulePropertyGet7: 8013831 false ) 
	#(222 10 #reduceActionForModulePropertyLet4: 8468484 false ) 
	#(221 10 #reduceActionForModulePropertySet4: 8248324 false ) 
	#(274 9 #reduceActionForOpenFileClause8: 13142024 false ) 
	#(285 8 #reduceActionForForEach1: 14873601 false ) 
	#(280 8 #reduceActionForUntilTrue2: 14097410 false ) 
	#(279 8 #reduceActionForWhileTrue4: 13942788 false ) 
	#(282 8 #reduceActionForDoUntilTrue2: 14403586 false ) 
	#(281 8 #reduceActionForDoWhileTrue4: 14246916 false ) 
	#(301 0 #reduceActionFor__eol___ModuleStatement__element____1: 16946177 false ) 
	#(291 8 #reduceActionForIfThen2: 15945730 false ) 
	#(296 8 #reduceActionForIfThenElseIf1: 16563201 false ) 
	#(291 8 #reduceActionForIfThen3: 15945731 false ) 
	#(307 4 #reduceActionForCase2: 17490946 false ) 
	#(308 3 #reduceActionForCaseOtherwise1: 17579009 false ) 
	#(309 8 #reduceActionForSelect2: 17656834 false ) 
	#(328 8 #reduceActionForWith4: 18962436 false ) 
	#(220 11 #reduceActionForModulePropertyGet12: 8013836 false ) 
	#(218 11 #reduceActionForDefineFunction8: 7605256 false ) 
	#(220 11 #reduceActionForModulePropertyGet14: 8013838 false ) 
	#(220 11 #reduceActionForModulePropertyGet15: 8013839 false ) 
	#(222 11 #reduceActionForModulePropertyLet8: 8468488 false ) 
	#(221 11 #reduceActionForModulePropertySet8: 8248328 false ) 
	#(220 11 #reduceActionForModulePropertyGet8: 8013832 false ) 
	#(285 9 #reduceActionForForEach2: 14873602 false ) 
	#(285 9 #reduceActionForForEach3: 14873603 false ) 
	#(285 9 #reduceActionForForEach5: 14873605 false ) 
	#(286 9 #reduceActionForForNext1: 15071233 false ) 
	#(299 4 #reduceActionForElseIfColon1: 16891905 false ) 
	#(296 9 #reduceActionForIfThenElseIf2: 16563202 false ) 
	#(291 9 #reduceActionForIfThen4: 15945732 false ) 
	#(296 9 #reduceActionForIfThenElseIf3: 16563203 false ) 
	#(308 4 #reduceActionForCaseOtherwise2: 17579010 false ) 
	#(309 9 #reduceActionForSelect3: 17656835 false ) 
	#(220 12 #reduceActionForModulePropertyGet16: 8013840 false ) 
	#(162 11 #reduceActionForGuidLiteral1: 2698241 false ) 
	#(285 10 #reduceActionForForEach4: 14873604 false ) 
	#(285 10 #reduceActionForForEach6: 14873606 false ) 
	#(285 10 #reduceActionForForEach7: 14873607 false ) 
	#(286 10 #reduceActionForForNext2: 15071234 false ) 
	#(286 10 #reduceActionForForNext3: 15071235 false ) 
	#(286 10 #reduceActionForForNext5: 15071237 false ) 
	#(292 10 #reduceActionForIfThenElse1: 16097281 false ) 
	#(298 5 #reduceActionForElseIfBlock1: 16781313 false ) 
	#(300 1 #reduceActionFor___Expression__ifMatch__________1: 16946177 false ) 
	#(301 2 #reduceActionFor______Constant__constant____2: 16946178 false ) 
	#(296 10 #reduceActionForIfThenElseIf4: 16563204 false ) 
	#(309 10 #reduceActionForSelect4: 17656836 false ) 
	#(285 11 #reduceActionForForEach8: 14873608 false ) 
	#(287 11 #reduceActionForForStepNext1: 15296513 false ) 
	#(286 11 #reduceActionForForNext4: 15071236 false ) 
	#(286 11 #reduceActionForForNext6: 15071238 false ) 
	#(286 11 #reduceActionForForNext7: 15071239 false ) 
	#(292 11 #reduceActionForIfThenElse2: 16097282 false ) 
	#(292 11 #reduceActionForIfThenElse3: 16097283 false ) 
	#(298 6 #reduceActionForElseIfBlock2: 16781314 false ) 
	#(300 2 #reduceActionFor___Expression__ifMatch__________2: 16946178 false ) 
	#(292 11 #reduceActionForIfThenElse5: 16097285 false ) 
	#(293 11 #reduceActionForIfThenElseIfElse1: 16333825 false ) 
	#(292 11 #reduceActionForIfThenElse9: 16097289 false ) 
	#(287 12 #reduceActionForForStepNext2: 15296514 false ) 
	#(287 12 #reduceActionForForStepNext3: 15296515 false ) 
	#(287 12 #reduceActionForForStepNext5: 15296517 false ) 
	#(286 12 #reduceActionForForNext8: 15071240 false ) 
	#(292 12 #reduceActionForIfThenElse4: 16097284 false ) 
	#(292 12 #reduceActionForIfThenElse6: 16097286 false ) 
	#(292 12 #reduceActionForIfThenElse7: 16097287 false ) 
	#(293 12 #reduceActionForIfThenElseIfElse2: 16333826 false ) 
	#(293 12 #reduceActionForIfThenElseIfElse3: 16333827 false ) 
	#(292 12 #reduceActionForIfThenElse10: 16097290 false ) 
	#(292 12 #reduceActionForIfThenElse11: 16097291 false ) 
	#(292 12 #reduceActionForIfThenElse13: 16097293 false ) 
	#(293 12 #reduceActionForIfThenElseIfElse5: 16333829 false ) 
	#(287 13 #reduceActionForForStepNext4: 15296516 false ) 
	#(287 13 #reduceActionForForStepNext6: 15296518 false ) 
	#(287 13 #reduceActionForForStepNext7: 15296519 false ) 
	#(292 13 #reduceActionForIfThenElse8: 16097288 false ) 
	#(293 13 #reduceActionForIfThenElseIfElse4: 16333828 false ) 
	#(292 13 #reduceActionForIfThenElse12: 16097292 false ) 
	#(292 13 #reduceActionForIfThenElse14: 16097294 false ) 
	#(292 13 #reduceActionForIfThenElse15: 16097295 false ) 
	#(293 13 #reduceActionForIfThenElseIfElse6: 16333830 false ) 
	#(293 13 #reduceActionForIfThenElseIfElse7: 16333831 false ) 
	#(287 14 #reduceActionForForStepNext8: 15296520 false ) 
	#(292 14 #reduceActionForIfThenElse16: 16097296 false ) 
	#(293 14 #reduceActionForIfThenElseIfElse8: 16333832 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"!="' '"&"' '"&&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<="' '"<>"' '"="' '">"' '">="' '"AS"' '"AddressOf"' '"Append"' '"BINARY"' '"Call"' '"ERROR"' '"FOR"' '"INPUT"' '"Lock Read Write"' '"Lock Read"' '"Lock Write"' '"Mod"' '"NEW"' '"Open"' '"Output"' '"RaiseEvent"' '"Random"' '"Read"' '"Shared"' '"WithEvents"' '"Write"' '"["' '"\"' '"^"' '"alias"' '"and"' '"attribute"' '"base"' '"begin"' '"boolean"' '"byref"' '"byte"' '"byval"' '"case"' '"class"' '"collection"' '"compare"' '"const"' '"database"' '"date"' '"declare"' '"delete"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"elseif"' '"end"' '"enum"' '"eqv"' '"event"' '"exit"' '"explicit"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"implements"' '"in"' '"integer"' '"is"' '"len"' '"let"' '"lib"' '"like"' '"long"' '"loop"' '"module"' '"name"' '"next"' '"not"' '"object"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"print"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"select"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"||"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<HASH_NUMBER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<comment>' 'B e g i n' 'module' '<eol>*' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' 'literal' 'FileDescriptorLiteral' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' '<HEX_INTEGER>+' 'Identifier' 'UsableKeywords' 'HashIdentifier' 'SimpleIdentifier' 'HeadlessIdentifier' 'QualifiedIdentifier' 'LabelTag' 'header' 'Option' 'OptionBase' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'Implements' 'ModuleStatement' 'Statement' 'Block' '(<eol>+ Statement ''statement''  )' '(<eol>+ Statement ''statement''  )*' 'BaseType' 'Visibility' 'ComplexType' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '( "," Expression ''size'')' '( "," Expression ''size'')*' 'AsType' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '( "," Parameter ''parameter'')' '( "," Parameter ''parameter'')*' 'Parameter' '("=" Expression ''default'')' '("=" Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '(","  Variable ''variable'' )' '(","  Variable ''variable'' )+' 'ConstantList' '(","  Constant ''constant'' )' '(","  Constant ''constant'' )+' 'VariableDefinition' 'ValueStatement' 'Expression' 'ParentheseesExpression' 'ValueStatementList' '("," ValueStatement ''value'' )' '("," ValueStatement ''value'' ) *' 'IntervalExpression' 'Operation' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'ConcatenationOperation' 'AssignOperator' 'ExplicitLetSet' 'AssignementOrEquals' 'ExplicitAssignement' 'Rename' 'ValueClause' 'AddressOfClause' 'NewClause' 'OpenMode' 'OpenAccess' 'Lock' 'OpenFileClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForStepNext' 'If' 'IfThenColon' 'IfThenElseOneLine' 'IfThen' 'IfThenElse' 'IfThenElseIfElse' '(ElseIf ''case'')' '(ElseIf ''case'') +' 'IfThenElseIf' 'ElseIf' 'ElseIfBlock' 'ElseIfColon' '(  Expression ''ifMatch'' ?  ":" )' '(  Expression ''ifMatch'' ?  ":" )*' 'RaiseError' 'To' 'Label' 'LabelSub' 'Return' 'Case' 'CaseOtherwise' 'Select' '(<eol>+ Case ''case'')' '(<eol>+ Case ''case'') +' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'Destination' 'DestinationList' '("," Destination ''label'')' '("," Destination ''label'')*' 'GoTo' 'GoSub' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'DictionaryAccess' 'MemberAccess' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" ))' '(Argument ''argument'' ? ("," | ";" ))*' '( ("," | ";" )Argument ''argument'' ?)' '( ("," | ";" )Argument ''argument'' ?)*' 'ImplicitCall' 'StateAccess' 'ExplicitCall' 'RaiseEvent' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBFileDescriptorLiteralNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBHashIdentifierNode #Object #VBHeadlessIdentifierNode #VBQualifiedIdentifierNode #VBLabelTagNode #VBHeaderNode #VBProgramNode #VBOptionBaseNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBImplementsNode #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBComplexTypeNode #Object #VBAsTypeNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #Object #Object #VBParentheseesExpressionNode #VBValueStatementListNode #OrderedCollection #OrderedCollection #VBIntervalExpressionNode #VBProgramNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #VBProgramNode #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBConcatenationOperationNode #SmaCCToken #SmaCCToken #VBAssignementOrEqualsNode #VBExplicitAssignementNode #VBRenameNode #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #SmaCCToken #SmaCCToken #SmaCCToken #VBOpenClauseNode #Object #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForStepNextNode #VBProgramNode #VBIfThenColonNode #VBIfThenColonNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseIfElseNode #VBProgramNode #OrderedCollection #VBIfThenElseIfElseNode #VBProgramNode #VBElseIfBlockNode #VBElseIfColonNode #OrderedCollection #OrderedCollection #VBRaiseErrorNode #VBGoSubLabelNode #VBLabelTagNode #VBGoSubLabelNode #VBReturnNode #VBCaseNode #VBCaseNode #VBSelectNode #OrderedCollection #OrderedCollection #Object #VBResumeLabelNode #VBResumeNextNode #SmaCCToken #VBProgramNode #Object #VBDestinationListNode #OrderedCollection #OrderedCollection #VBGoToNode #VBGoSubNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBDictionaryAccessNode #VBMemberAccessNode #VBImplicitParenthesesLessCallNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #Object #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 124 0 6 0 142 0 6 0 144 0 6 0 146 0 9 0 149 0 13 0 150] 
#[0 0 0 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 133 0 124 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 173 0 172 0 197 0 173 0 197 0 174 0 197 0 176 0 197 0 177 0 197 0 181 0 197 0 182 0 201 0 188 0 197 0 197 0 197 0 198 0 197 0 202 0 197 0 203 0 197 0 214 0 197 0 215 0 197 0 216 0 233 0 217 0 197 0 218 0 197 0 219 0 197 0 220 0 197 0 221 0 197 0 222 0 197 0 223 0 197 0 224 0 197 0 225 0 197 0 226 0 197 0 227 0 197 0 228 1 25 0 230 0 197 0 231 0 197 0 232 0 197 0 233 0 197 0 234 0 197 0 235 0 197 0 239 0 197 0 242] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 57 0 142 0 141 0 144 1 57 0 165 0 153 0 166 1 57 0 167 1 57 0 168 1 57 0 169 1 57 0 170] 
#[0 0 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 1 61 0 165 0 153 0 166 1 61 0 167 1 61 0 168 1 61 0 169 1 61 0 170 1 65 0 175] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 1 69 0 150] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 1 73 0 230 1 77 0 239] 
#[0 0 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 81 0 77 1 85 0 117] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 97 0 229 1 101 0 236] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 105 0 142 0 141 0 144 1 105 0 165 0 153 0 166 1 105 0 167 1 105 0 168 1 105 0 169 1 105 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 109 0 142 0 141 0 144 1 109 0 165 0 153 0 166 1 109 0 167 1 109 0 168 1 109 0 169 1 109 0 170] 
#[0 0 18 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 113 0 142 0 141 0 144 1 113 0 165 0 153 0 166 1 113 0 167 1 113 0 168 1 113 0 169 1 113 0 170] 
#[0 0 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 26 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 117 0 142 0 141 0 144 1 117 0 165 0 153 0 166 1 117 0 167 1 117 0 168 1 117 0 169 1 117 0 170] 
#[0 0 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 121 0 49 1 125 0 58 1 129 0 75 1 133 0 105 1 137 0 137 1 141 0 155] 
#[0 0 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 46 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 1 145 0 78 1 149 0 88 1 153 0 112] 
#[0 0 50 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 1 157 0 103 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 161 0 229 1 165 0 236] 
#[0 0 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 58 0 77 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 58 0 106 0 153 0 112 0 58 0 117 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 169 0 229 1 173 0 236] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 177 0 142 0 141 0 144 1 177 0 165 0 153 0 166 1 177 0 167 1 177 0 168 1 177 0 169 1 177 0 170] 
#[0 0 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 181 0 142 0 141 0 144 1 181 0 165 0 153 0 166 1 181 0 167 1 181 0 168 1 181 0 169 1 181 0 170] 
#[1 1 185 0 138 1 189 0 158] 
#[0 0 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 74 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 124 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 193 0 5 1 197 0 11 1 201 0 19 1 205 0 22 1 221 0 191 1 221 0 192 1 217 0 193 1 221 0 196] 
#[0 0 78 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 86 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 90 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 94 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 1 225 0 150] 
#[0 0 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 0 118 0 11 0 118 0 29 0 118 0 48 0 118 0 50 0 118 0 59 0 118 0 61 0 118 0 62 0 118 0 64 0 118 0 71 0 118 0 73 0 118 0 76 0 118 0 77 0 118 0 78 0 118 0 79 0 118 0 83 0 118 0 87 0 118 0 88 0 118 0 94 0 118 0 99 0 118 0 104 0 118 0 105 0 118 0 106 0 118 0 107 0 118 0 108 0 118 0 112 0 118 0 114 0 118 0 117 0 118 0 118 0 118 0 121 0 118 0 142 0 118 0 144 0 118 0 146 1 229 0 152 0 118 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 1 233 0 59 0 153 0 61 1 237 0 62 1 241 0 71 1 245 0 73 1 249 0 77 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 1 253 0 106 0 153 0 112 2 13 0 114 2 5 0 117 0 153 0 118 2 9 0 121 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 2 13 0 217 2 17 0 229 2 21 0 236] 
#[0 0 122 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 126 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 130 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 134 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 138 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 142 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 146 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 25 0 77 2 29 0 106 2 33 0 117] 
#[0 0 150 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 154 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 158 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 162 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 166 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 170 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 174 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 178 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 182 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 190 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 2 41 0 240 2 45 0 241] 
#[0 0 194 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 198 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 206 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 210 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 214 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 218 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 197 0 11 2 49 0 19] 
#[0 0 226 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 0 145 0 146 1 61 0 165 0 153 0 166 1 61 0 167 1 61 0 168 1 61 0 169 1 61 0 170 2 53 0 175] 
#[1 2 37 0 9 0 230 0 11 0 230 0 29 0 230 0 48 0 230 0 50 0 230 0 59 0 230 0 61 0 230 0 62 0 230 0 64 0 230 0 68 0 230 0 69 0 230 0 70 0 230 0 71 0 230 0 73 0 230 0 76 0 230 0 77 0 230 0 78 0 230 0 79 0 230 0 83 0 230 0 87 0 230 0 88 0 230 0 92 0 230 0 94 0 230 0 95 0 230 0 99 0 230 0 104 0 230 0 105 0 230 0 106 0 230 0 107 0 230 0 108 0 230 0 112 0 230 0 114 0 230 0 117 0 230 0 118 0 230 0 121 0 230 0 125 0 230 0 137 0 230 0 142 0 230 0 144 0 230 0 146 2 41 0 240 2 45 0 241 0 230 1 93] 
#[0 0 234 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 57 0 142 0 141 0 144 2 57 0 165 0 153 0 166 2 57 0 167 2 57 0 168 2 57 0 169 2 57 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 61 0 142 0 141 0 144 2 61 0 165 0 153 0 166 2 61 0 167 2 61 0 168 2 61 0 169 2 61 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 65 0 142 0 141 0 144 2 65 0 165 0 153 0 166 2 65 0 167 2 65 0 168 2 65 0 169 2 65 0 170] 
#[1 1 193 0 5 0 238 0 9 1 197 0 11 1 205 0 22 0 238 0 29 0 238 0 48 0 238 0 50 0 238 0 59 0 238 0 61 0 238 0 62 0 238 0 64 0 238 0 68 0 238 0 69 0 238 0 70 0 238 0 71 0 238 0 73 0 238 0 76 0 238 0 77 0 238 0 78 0 238 0 79 0 238 0 83 0 238 0 87 0 238 0 88 0 238 0 92 0 238 0 94 0 238 0 95 0 238 0 99 0 238 0 104 0 238 0 105 0 238 0 106 0 238 0 107 0 238 0 108 0 238 0 112 0 238 0 114 0 238 0 117 0 238 0 118 0 238 0 121 0 238 0 125 0 238 0 137 0 238 0 142 0 238 0 144 0 238 0 146 2 69 0 191 2 69 0 192 1 217 0 193 2 69 0 196 0 238 1 93] 
#[1 2 73 0 9 0 242 0 11 0 242 0 29 0 242 0 48 0 242 0 50 0 242 0 59 0 242 0 61 0 242 0 62 0 242 0 64 0 242 0 68 0 242 0 69 0 242 0 70 0 242 0 71 0 242 0 73 0 242 0 76 0 242 0 77 0 242 0 78 0 242 0 79 0 242 0 83 0 242 0 87 0 242 0 88 0 242 0 92 0 242 0 94 0 242 0 95 0 242 0 99 0 242 0 104 0 242 0 105 0 242 0 106 0 242 0 107 0 242 0 108 0 242 0 112 0 242 0 114 0 242 0 117 0 242 0 118 0 242 0 121 0 242 0 125 0 242 0 137 0 242 0 142 0 242 0 144 0 242 0 146 2 77 0 237 2 81 0 238 0 242 1 93] 
#[0 0 246 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 197 0 11 0 250 0 29 0 250 0 61 0 250 0 70 0 250 0 78 0 250 0 87 0 250 0 88 0 250 0 94 0 250 0 104 0 250 0 112 0 250 0 118 0 250 0 142 0 250 0 144 0 250 0 146 2 85 0 205] 
#[1 2 89 0 5 1 197 0 11 2 93 0 208] 
#[1 2 89 0 5 1 197 0 11 2 97 0 208] 
#[1 1 197 0 11 0 254 0 29 0 254 0 48 0 254 0 50 0 254 0 59 0 254 0 61 0 254 0 62 0 254 0 64 0 254 0 71 0 254 0 73 0 254 0 76 0 254 0 77 0 254 0 78 0 254 0 79 0 254 0 83 0 254 0 87 0 254 0 88 0 254 0 94 0 254 0 99 0 254 0 104 0 254 0 105 0 254 0 106 0 254 0 107 0 254 0 108 0 254 0 112 0 254 0 114 0 254 0 117 0 254 0 118 0 254 0 121 0 254 0 142 0 254 0 144 0 254 0 146 0 254 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 2 237 0 153 2 237 0 154 2 237 0 155 2 237 0 156 2 237 0 157 2 237 0 158 2 237 0 159 2 237 0 160 2 237 0 161 2 237 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 237 0 243 2 237 0 244 2 237 0 245 2 237 0 249 2 237 0 250 2 237 0 251 2 237 0 252 2 237 0 253 2 237 0 254 2 237 0 255 2 237 1 1 2 237 1 3 2 237 1 5 2 237 1 6 3 33 1 8 2 237 1 9 2 237 1 10 2 237 1 11 2 237 1 12 2 237 1 13 2 237 1 14 2 237 1 18 2 237 1 60 2 237 1 65 2 237 1 66 2 237 1 73 2 237 1 74 2 237 1 75 2 237 1 76 2 237 1 77 2 237 1 78 2 237 1 79 2 237 1 80 2 237 1 81 2 237 1 82 2 237 1 89 2 237 1 90 2 237 1 91 2 237 1 92] 
#[1 3 133 0 25 3 137 0 60 3 141 0 118] 
#[0 1 2 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 3 145 0 93] 
#[0 1 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 10 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 149 0 142 0 141 0 144 3 149 0 165 0 153 0 166 3 149 0 167 3 149 0 168 3 149 0 169 3 149 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 153 0 142 0 141 0 144 3 153 0 165 0 153 0 166 3 153 0 167 3 153 0 168 3 153 0 169 3 153 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 157 0 142 0 141 0 144 3 157 0 165 0 153 0 166 3 157 0 167 3 157 0 168 3 157 0 169 3 157 0 170] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 3 161 0 229 3 165 0 236] 
#[1 2 73 0 9 1 14 0 11 1 14 0 29 1 14 0 48 1 14 0 50 1 14 0 59 1 14 0 61 1 14 0 62 1 14 0 64 1 14 0 68 1 14 0 69 1 14 0 70 1 14 0 71 1 14 0 73 1 14 0 76 1 14 0 77 1 14 0 78 1 14 0 79 1 14 0 83 1 14 0 87 1 14 0 88 1 14 0 92 1 14 0 94 1 14 0 95 1 14 0 99 1 14 0 104 1 14 0 105 1 14 0 106 1 14 0 107 1 14 0 108 1 14 0 112 1 14 0 114 1 14 0 117 1 14 0 118 1 14 0 121 1 14 0 125 1 14 0 137 1 14 0 142 1 14 0 144 1 14 0 146 2 77 0 237 2 81 0 238 1 14 1 93] 
#[0 1 18 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 73 0 9 1 22 0 11 1 22 0 29 1 22 0 48 1 22 0 50 1 22 0 59 1 22 0 61 1 22 0 62 1 22 0 64 1 22 0 68 1 22 0 69 1 22 0 70 1 22 0 71 1 22 0 73 1 22 0 76 1 22 0 77 1 22 0 78 1 22 0 79 1 22 0 83 1 22 0 87 1 22 0 88 1 22 0 92 1 22 0 94 1 22 0 95 1 22 0 99 1 22 0 104 1 22 0 105 1 22 0 106 1 22 0 107 1 22 0 108 1 22 0 112 1 22 0 114 1 22 0 117 1 22 0 118 1 22 0 121 1 22 0 125 1 22 0 137 1 22 0 142 1 22 0 144 1 22 0 146 2 77 0 237 2 81 0 238 1 22 1 93] 
#[0 1 26 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 3 169 0 150 3 173 0 208] 
#[1 1 197 0 11 1 30 0 29 1 30 0 61 1 30 0 70 1 30 0 78 1 30 0 87 1 30 0 88 1 30 0 94 1 30 0 104 1 30 0 112 1 30 0 118 1 30 0 142 1 30 0 144 1 30 0 146 3 177 0 200] 
#[0 1 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 56 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 38 0 11 1 38 0 29 1 38 0 48 1 38 0 50 3 181 0 56 1 38 0 59 1 38 0 61 1 38 0 62 1 38 0 64 1 38 0 71 1 38 0 73 1 38 0 76 1 38 0 77 1 38 0 78 1 38 0 79 1 38 0 83 1 38 0 87 1 38 0 88 1 38 0 94 1 38 0 99 1 38 0 104 1 38 0 105 1 38 0 106 1 38 0 107 1 38 0 108 1 38 0 112 1 38 0 114 1 38 0 117 1 38 0 118 1 38 0 121 1 38 0 142 1 38 0 144 1 38 0 146] 
#[1 2 101 0 5 1 42 0 6 2 105 0 8 1 42 0 9 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 3 189 0 153 3 189 0 154 3 189 0 155 3 189 0 156 3 189 0 157 3 189 0 158 3 189 0 159 3 189 0 160 3 189 0 161 3 189 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 3 185 0 195 3 189 0 243 3 189 0 244 3 189 0 245 3 189 0 249 3 189 0 250 3 189 0 251 3 189 0 252 3 189 0 253 3 189 0 254 3 189 0 255 3 189 1 1 3 189 1 3 3 189 1 5 3 189 1 6 3 33 1 8 3 189 1 9 3 189 1 10 3 189 1 11 3 189 1 12 3 189 1 13 3 189 1 14 3 189 1 18 3 189 1 60 3 189 1 65 3 189 1 66 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 89 3 189 1 90 3 189 1 91 3 189 1 92] 
#[0 3 193 0 142] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 3 197 0 153 3 197 0 154 3 197 0 155 3 197 0 156 3 197 0 157 3 197 0 158 3 197 0 159 3 197 0 160 3 197 0 161 3 197 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 3 197 0 243 3 197 0 244 3 197 0 245 3 197 0 249 3 197 0 250 3 197 0 251 3 197 0 252 3 197 0 253 3 197 0 254 3 197 0 255 3 197 1 1 3 197 1 3 3 197 1 5 3 197 1 6 3 33 1 8 3 197 1 9 3 197 1 10 3 197 1 11 3 197 1 12 3 197 1 13 3 197 1 14 3 197 1 18 3 197 1 60 3 197 1 65 3 197 1 66 3 197 1 73 3 197 1 74 3 197 1 75 3 197 1 76 3 197 1 77 3 197 1 78 3 197 1 79 3 197 1 80 3 197 1 81 3 197 1 82 3 197 1 89 3 197 1 90 3 197 1 91 3 197 1 92] 
#[1 0 17 0 11 0 153 0 29 3 201 0 34 4 5 0 51 4 5 0 53 4 5 0 57 3 217 0 61 4 5 0 66 0 153 0 78 4 5 0 85 0 153 0 87 0 153 0 88 4 5 0 91 0 153 0 94 4 5 0 97 0 153 0 104 0 153 0 112 4 5 0 113 4 5 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 165 0 153 0 166 3 249 0 167 3 249 0 168 3 249 0 169 3 249 0 170 4 5 0 187 4 5 0 189 4 5 0 190] 
#[0 1 46 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 50 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 54 0 5 1 54 0 6 1 54 0 7 1 54 0 8 1 54 0 9 1 54 0 10 1 54 0 11 1 54 0 19 4 9 0 22 1 54 0 23 1 54 0 26 1 54 0 27 1 54 0 28 1 54 0 29 1 54 0 34 1 54 0 35 1 54 0 37 1 54 0 48 1 54 0 50 1 54 0 59 1 54 0 61 1 54 0 62 1 54 0 64 1 54 0 65 1 54 0 68 1 54 0 69 1 54 0 70 1 54 0 71 1 54 0 73 1 54 0 74 1 54 0 76 1 54 0 77 1 54 0 78 1 54 0 79 1 54 0 80 1 54 0 81 1 54 0 82 1 54 0 83 1 54 0 87 1 54 0 88 1 54 0 92 1 54 0 94 1 54 0 95 1 54 0 96 1 54 0 98 1 54 0 99 1 54 0 104 1 54 0 105 1 54 0 106 1 54 0 107 1 54 0 108 1 54 0 109 1 54 0 111 1 54 0 112 1 54 0 114 1 54 0 117 1 54 0 118 1 54 0 121 1 54 0 125 1 54 0 126 1 54 0 127 1 54 0 129 1 54 0 135 1 54 0 136 1 54 0 137 1 54 0 138 1 54 0 139 1 54 0 140 1 54 0 141 1 54 0 142 1 54 0 143 1 54 0 144 1 54 0 146 1 54 1 93] 
#[0 4 13 0 19] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 4 17 0 173 4 17 0 174 4 17 0 176 4 17 0 177 4 17 0 181 4 17 0 182 0 201 0 188 4 17 0 197 4 17 0 198 4 17 0 202 4 17 0 203 4 17 0 214 4 17 0 215 4 17 0 216 0 233 0 217 4 17 0 218 4 17 0 219 4 17 0 220 4 17 0 221 4 17 0 222 4 17 0 223 4 17 0 224 4 17 0 225 4 17 0 226 4 17 0 227 4 17 0 228 1 25 0 230 4 17 0 231 4 17 0 232 4 17 0 233 4 17 0 234 4 17 0 235 4 17 0 239 4 17 0 242] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 4 21 0 150 4 25 0 151 0 6 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 4 29 0 230 4 33 0 239] 
#[1 4 37 0 77 4 41 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 45 0 142 0 141 0 144 4 45 0 165 0 153 0 166 4 45 0 167 4 45 0 168 4 45 0 169 4 45 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 49 0 142 0 141 0 144 4 49 0 165 0 153 0 166 4 49 0 167 4 49 0 168 4 49 0 169 4 49 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 53 0 142 0 141 0 144 4 53 0 165 0 153 0 166 4 53 0 167 4 53 0 168 4 53 0 169 4 53 0 170] 
#[1 4 57 0 78 4 61 0 88 4 65 0 112] 
#[0 0 58 0 77 0 106 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 69 0 142 0 141 0 144 4 69 0 165 0 153 0 166 4 69 0 167 4 69 0 168 4 69 0 169 4 69 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 73 0 142 0 141 0 144 4 73 0 165 0 153 0 166 4 73 0 167 4 73 0 168 4 73 0 169 4 73 0 170] 
#[1 4 77 0 77 4 81 0 106 4 85 0 117] 
#[1 2 73 0 9 1 58 0 11 1 58 0 29 1 58 0 48 1 58 0 50 1 58 0 59 1 58 0 61 1 58 0 62 1 58 0 64 1 58 0 68 1 58 0 69 1 58 0 70 1 58 0 71 1 58 0 73 1 58 0 76 1 58 0 77 1 58 0 78 1 58 0 79 1 58 0 83 1 58 0 87 1 58 0 88 1 58 0 92 1 58 0 94 1 58 0 95 1 58 0 99 1 58 0 104 1 58 0 105 1 58 0 106 1 58 0 107 1 58 0 108 1 58 0 112 1 58 0 114 1 58 0 117 1 58 0 118 1 58 0 121 1 58 0 125 1 58 0 137 1 58 0 142 1 58 0 144 1 58 0 146 2 77 0 237 2 81 0 238 1 58 1 93] 
#[0 1 62 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 89 0 142 0 141 0 144 4 89 0 165 0 153 0 166 4 89 0 167 4 89 0 168 4 89 0 169 4 89 0 170] 
#[1 4 93 0 78 4 97 0 88 4 101 0 112] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 105 0 142 0 141 0 144 4 105 0 165 0 153 0 166 4 105 0 167 4 105 0 168 4 105 0 169 4 105 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 4 109 0 230] 
#[0 1 66 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 1 70 0 11 1 70 0 29 1 70 0 48 1 70 0 50 1 70 0 59 1 70 0 61 1 70 0 62 1 70 0 64 1 70 0 68 1 70 0 69 1 70 0 70 1 70 0 71 1 70 0 73 1 70 0 76 1 70 0 77 1 70 0 78 1 70 0 79 1 70 0 83 1 70 0 87 1 70 0 88 1 70 0 92 1 70 0 94 1 70 0 95 1 70 0 99 1 70 0 104 1 70 0 105 1 70 0 106 1 70 0 107 1 70 0 108 1 70 0 112 1 70 0 114 1 70 0 117 1 70 0 118 1 70 0 121 1 70 0 125 1 70 0 137 1 70 0 142 1 70 0 144 1 70 0 146 4 113 0 240 1 70 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 117 0 153 4 117 0 154 4 117 0 155 4 117 0 156 4 117 0 157 4 117 0 158 4 117 0 159 4 117 0 160 4 117 0 161 4 117 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 117 0 243 4 117 0 244 4 117 0 245 4 117 0 249 4 117 0 250 4 117 0 251 4 117 0 252 4 117 0 253 4 117 0 254 4 117 0 255 4 117 1 1 4 117 1 3 4 117 1 5 4 117 1 6 3 33 1 8 4 117 1 9 4 117 1 10 4 117 1 11 4 117 1 12 4 117 1 13 4 117 1 14 4 117 1 18 4 117 1 60 4 117 1 65 4 117 1 66 4 117 1 73 4 117 1 74 4 117 1 75 4 117 1 76 4 117 1 77 4 117 1 78 4 117 1 79 4 117 1 80 4 117 1 81 4 117 1 82 4 117 1 89 4 117 1 90 4 117 1 91 4 117 1 92] 
#[1 1 74 0 70 1 74 0 146 4 121 0 179] 
#[1 1 197 0 11 4 125 0 89] 
#[1 1 197 0 11 4 129 0 89] 
#[1 1 193 0 5 1 78 0 9 1 197 0 11 1 205 0 22 1 78 0 29 1 78 0 48 1 78 0 50 1 78 0 59 1 78 0 61 1 78 0 62 1 78 0 64 1 78 0 68 1 78 0 69 1 78 0 70 1 78 0 71 1 78 0 73 1 78 0 76 1 78 0 77 1 78 0 78 1 78 0 79 1 78 0 83 1 78 0 87 1 78 0 88 1 78 0 92 1 78 0 94 1 78 0 95 1 78 0 99 1 78 0 104 1 78 0 105 1 78 0 106 1 78 0 107 1 78 0 108 1 78 0 112 1 78 0 114 1 78 0 117 1 78 0 118 1 78 0 121 1 78 0 125 1 78 0 137 1 78 0 142 1 78 0 144 1 78 0 146 4 133 0 191 4 133 0 192 1 217 0 193 4 133 0 196 1 78 1 93] 
#[0 1 82 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 4 137 0 229] 
#[0 1 86 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 73 0 9 1 90 0 11 1 90 0 29 1 90 0 48 1 90 0 50 1 90 0 59 1 90 0 61 1 90 0 62 1 90 0 64 1 90 0 68 1 90 0 69 1 90 0 70 1 90 0 71 1 90 0 73 1 90 0 76 1 90 0 77 1 90 0 78 1 90 0 79 1 90 0 83 1 90 0 87 1 90 0 88 1 90 0 92 1 90 0 94 1 90 0 95 1 90 0 99 1 90 0 104 1 90 0 105 1 90 0 106 1 90 0 107 1 90 0 108 1 90 0 112 1 90 0 114 1 90 0 117 1 90 0 118 1 90 0 121 1 90 0 125 1 90 0 137 1 90 0 142 1 90 0 144 1 90 0 146 4 141 0 237 1 90 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 4 145 0 150 4 149 0 204] 
#[1 4 153 0 6 0 17 0 11 0 153 0 29 4 157 0 52 4 177 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 4 165 0 100 4 169 0 102 0 153 0 104 0 153 0 112 0 153 0 118 4 173 0 142 0 141 0 144 4 173 0 165 0 153 0 166 4 173 0 167 4 173 0 168 4 173 0 169 4 173 0 170 4 177 0 207 4 181 0 211] 
#[0 1 94 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 4 185 0 150 4 189 0 191 4 189 0 192 1 217 0 193 4 189 0 196] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 193 0 153 4 193 0 154 4 193 0 155 4 193 0 156 4 193 0 157 4 193 0 158 4 193 0 159 4 193 0 160 4 193 0 161 4 193 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 193 0 243 4 193 0 244 4 193 0 245 4 193 0 249 4 193 0 250 4 193 0 251 4 193 0 252 4 193 0 253 4 193 0 254 4 193 0 255 4 193 1 1 4 193 1 3 4 193 1 5 4 193 1 6 3 33 1 8 4 193 1 9 4 193 1 10 4 193 1 11 4 193 1 12 4 193 1 13 4 193 1 14 4 193 1 18 4 193 1 60 4 193 1 65 4 193 1 66 4 193 1 73 4 193 1 74 4 193 1 75 4 193 1 76 4 193 1 77 4 193 1 78 4 193 1 79 4 193 1 80 4 193 1 81 4 193 1 82 4 193 1 89 4 193 1 90 4 193 1 91 4 193 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 4 197 0 161 4 197 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 197 0 243 4 197 0 244 4 197 0 245 4 197 0 249 4 197 0 250 4 197 0 251 4 197 0 252 4 197 0 253 4 197 0 254 4 197 0 255 4 197 1 1 4 197 1 3 4 197 1 5 4 197 1 6 3 33 1 8 4 197 1 9 4 197 1 10 4 197 1 11 4 197 1 12 4 197 1 13 4 197 1 14 4 197 1 18 4 197 1 60 4 197 1 65 4 197 1 66 4 197 1 73 4 197 1 74 4 197 1 75 4 197 1 76 4 197 1 77 4 197 1 78 4 197 1 79 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 89 4 197 1 90 4 197 1 91 4 197 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 201 0 153 4 201 0 154 4 201 0 155 4 201 0 156 4 201 0 157 4 201 0 158 4 201 0 159 4 201 0 160 4 201 0 161 4 201 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 201 0 243 4 201 0 244 4 201 0 245 4 201 0 249 4 201 0 250 4 201 0 251 4 201 0 252 4 201 0 253 4 201 0 254 4 201 0 255 4 201 1 1 4 201 1 3 4 201 1 5 4 201 1 6 3 33 1 8 4 201 1 9 4 201 1 10 4 201 1 11 4 201 1 12 4 201 1 13 4 201 1 14 4 201 1 18 4 201 1 60 4 201 1 65 4 201 1 66 4 201 1 73 4 201 1 74 4 201 1 75 4 201 1 76 4 201 1 77 4 201 1 78 4 201 1 79 4 201 1 80 4 201 1 81 4 201 1 82 4 201 1 89 4 201 1 90 4 201 1 91 4 201 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 205 0 142 0 141 0 144 4 205 0 165 0 153 0 166 4 205 0 167 4 205 0 168 4 205 0 169 4 205 0 170] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 1 4 209 1 3 4 209 1 5 4 209 1 6 3 33 1 8 4 209 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 213 1 81 4 213 1 82 4 213 1 89 4 209 1 90 4 209 1 91 4 209 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 217 0 142 0 141 0 144 4 217 0 165 0 153 0 166 4 217 0 167 4 217 0 168 4 217 0 169 4 217 0 170] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 221 0 153 4 221 0 154 4 221 0 155 4 221 0 156 4 221 0 157 4 221 0 158 4 221 0 159 4 221 0 160 4 221 0 161 4 221 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 221 0 243 4 221 0 244 4 221 0 245 4 221 0 249 4 221 0 250 4 221 0 251 4 221 0 252 4 221 0 253 4 221 0 254 4 221 0 255 4 221 1 1 4 221 1 3 4 221 1 5 4 221 1 6 3 33 1 8 4 221 1 9 4 221 1 10 4 221 1 11 4 221 1 12 4 221 1 13 4 221 1 14 4 221 1 18 4 221 1 60 4 221 1 65 4 221 1 66 4 221 1 73 4 221 1 74 4 221 1 75 4 221 1 76 4 221 1 77 4 221 1 78 4 221 1 79 4 221 1 80 4 221 1 81 4 221 1 82 4 221 1 89 4 221 1 90 4 221 1 91 4 221 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 1 4 209 1 3 4 209 1 5 4 209 1 6 3 33 1 8 4 209 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 225 1 81 4 225 1 82 4 225 1 89 4 209 1 90 4 209 1 91 4 209 1 92] 
#[1 4 229 0 28 4 233 0 65 4 237 0 77 4 241 0 106 4 245 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 5 1 0 155 4 253 0 165 0 153 0 166 4 253 0 167 4 253 0 168 4 253 0 169 4 253 0 170 5 1 1 61 5 5 1 62] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 5 1 0 155 4 253 0 165 0 153 0 166 4 253 0 167 4 253 0 168 4 253 0 169 4 253 0 170 5 1 1 61 5 9 1 62] 
#[1 0 34 0 1 0 34 0 3 0 34 0 5 0 34 0 6 0 34 0 7 0 34 0 8 0 34 0 9 0 34 0 10 0 7 0 11 0 34 0 12 0 34 0 13 0 34 0 14 0 34 0 15 0 34 0 16 0 34 0 17 0 34 0 18 0 34 0 19 0 34 0 20 0 34 0 21 0 34 0 22 0 34 0 23 0 34 0 26 0 34 0 27 0 34 0 28 0 7 0 29 0 34 0 33 0 34 0 34 0 34 0 35 0 34 0 37 0 34 0 44 0 34 0 45 0 34 0 47 0 34 0 48 0 34 0 50 0 34 0 52 0 34 0 54 0 34 0 59 0 7 0 61 0 34 0 62 0 34 0 64 0 34 0 65 0 34 0 68 0 34 0 69 0 34 0 70 0 34 0 71 0 34 0 72 0 34 0 73 0 34 0 74 0 34 0 76 0 34 0 77 0 7 0 78 0 34 0 79 0 34 0 80 0 34 0 81 0 34 0 82 0 34 0 83 0 34 0 86 0 7 0 87 0 7 0 88 0 34 0 90 0 34 0 92 0 7 0 94 0 34 0 95 0 34 0 96 0 34 0 98 0 34 0 99 0 34 0 101 0 34 0 102 0 7 0 104 0 34 0 105 0 34 0 106 0 34 0 107 0 34 0 108 0 34 0 109 0 34 0 111 0 7 0 112 0 34 0 114 0 34 0 115 0 34 0 117 0 7 0 118 0 34 0 119 0 34 0 120 0 34 0 121 0 34 0 125 0 34 0 126 0 34 0 127 0 34 0 128 0 34 0 129 0 34 0 135 0 34 0 136 0 34 0 137 0 34 0 138 0 34 0 139 0 34 0 140 0 34 0 141 0 7 0 142 0 34 0 143 0 7 0 144 0 34 0 146 0 34 1 93] 
#[1 0 38 0 1 0 38 0 3 2 101 0 5 0 38 0 6 0 38 0 7 2 105 0 8 0 38 0 9 2 109 0 10 0 17 0 11 0 38 0 12 0 38 0 13 0 38 0 14 0 38 0 15 0 38 0 16 0 38 0 17 0 38 0 18 0 38 0 19 0 38 0 20 0 38 0 21 0 38 0 22 0 11 0 23 0 15 0 26 0 38 0 27 0 38 0 28 0 19 0 29 0 38 0 33 0 23 0 34 0 27 0 35 0 31 0 37 0 38 0 44 0 38 0 45 0 38 0 47 0 38 0 48 0 38 0 50 0 38 0 52 0 38 0 54 0 38 0 59 0 35 0 61 0 38 0 62 0 38 0 64 0 38 0 65 0 38 0 68 0 38 0 69 0 38 0 70 0 38 0 71 0 38 0 72 0 38 0 73 0 39 0 74 0 38 0 76 0 38 0 77 0 43 0 78 0 38 0 79 0 47 0 80 0 51 0 81 0 38 0 82 0 38 0 83 0 38 0 86 0 55 0 87 0 59 0 88 0 38 0 90 0 38 0 92 0 63 0 94 0 38 0 95 0 67 0 96 0 38 0 98 0 38 0 99 0 38 0 101 0 38 0 102 0 71 0 104 0 38 0 105 0 38 0 106 0 38 0 107 0 38 0 108 0 38 0 109 0 38 0 111 0 75 0 112 0 38 0 114 0 38 0 115 0 38 0 117 0 79 0 118 0 38 0 119 0 38 0 120 0 38 0 121 0 38 0 125 0 38 0 126 0 38 0 127 0 38 0 128 0 83 0 129 0 87 0 135 0 91 0 136 0 95 0 137 0 99 0 138 0 103 0 139 0 107 0 140 0 111 0 141 0 115 0 142 0 119 0 143 0 123 0 144 0 38 0 146 5 13 0 153 5 13 0 154 5 13 0 155 5 13 0 156 5 13 0 157 5 13 0 158 5 13 0 159 5 13 0 160 5 13 0 161 5 13 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 5 13 0 243 5 13 0 244 5 13 0 245 5 13 0 249 5 13 0 250 5 13 0 251 5 13 0 252 5 13 0 253 5 13 0 254 5 13 0 255 5 13 1 1 5 13 1 3 5 13 1 5 5 13 1 6 3 33 1 8 5 13 1 9 5 13 1 10 5 13 1 11 5 13 1 12 5 13 1 13 5 13 1 14 5 13 1 18 5 13 1 60 5 13 1 65 5 13 1 66 5 13 1 73 5 13 1 74 5 13 1 75 5 13 1 76 5 13 1 77 5 13 1 78 5 13 1 79 5 13 1 80 5 13 1 81 5 13 1 82 5 13 1 89 5 13 1 90 5 13 1 91 5 13 1 92 0 38 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 5 17 0 153 5 17 0 154 5 17 0 155 5 17 0 156 5 17 0 157 5 17 0 158 5 17 0 159 5 17 0 160 5 17 0 161 5 17 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 5 17 0 243 5 17 0 244 5 17 0 245 5 17 0 249 5 17 0 250 5 17 0 251 5 17 0 252 5 17 0 253 5 17 0 254 5 17 0 255 5 17 1 1 5 17 1 3 5 17 1 5 5 17 1 6 3 33 1 8 5 17 1 9 5 17 1 10 5 17 1 11 5 17 1 12 5 17 1 13 5 17 1 14 5 17 1 18 5 17 1 60 5 17 1 65 5 17 1 66 5 17 1 73 5 17 1 74 5 17 1 75 5 17 1 76 5 17 1 77 5 17 1 78 5 17 1 79 5 17 1 80 5 17 1 81 5 17 1 82 5 17 1 89 5 17 1 90 5 17 1 91 5 17 1 92] 
#[1 0 54 0 1 0 54 0 3 0 54 0 5 0 54 0 6 0 54 0 7 0 54 0 8 0 54 0 9 0 54 0 10 0 127 0 11 0 54 0 12 0 54 0 13 0 54 0 14 0 54 0 15 0 54 0 16 0 54 0 17 0 54 0 18 0 54 0 19 0 54 0 20 0 54 0 21 0 54 0 22 0 54 0 23 0 54 0 26 0 54 0 27 0 54 0 28 0 127 0 29 0 54 0 33 0 54 0 34 0 54 0 35 0 54 0 37 0 54 0 44 0 54 0 45 0 54 0 47 0 54 0 48 0 54 0 50 0 54 0 52 0 54 0 54 0 54 0 59 0 127 0 61 0 54 0 62 0 54 0 64 0 54 0 65 0 54 0 68 0 54 0 69 0 54 0 70 0 54 0 71 0 54 0 72 0 54 0 73 0 54 0 74 0 54 0 76 0 54 0 77 0 127 0 78 0 54 0 79 0 54 0 80 0 54 0 81 0 54 0 82 0 54 0 83 0 54 0 86 0 127 0 87 0 127 0 88 0 54 0 90 0 54 0 92 0 127 0 94 0 54 0 95 0 54 0 96 0 54 0 98 0 54 0 99 0 54 0 101 0 54 0 102 0 127 0 104 0 54 0 105 0 54 0 106 0 54 0 107 0 54 0 108 0 54 0 109 0 54 0 111 0 127 0 112 0 54 0 114 0 54 0 115 0 54 0 117 0 127 0 118 0 54 0 119 0 54 0 120 0 54 0 121 0 54 0 125 0 54 0 126 0 54 0 127 0 54 0 128 0 54 0 129 0 54 0 135 0 54 0 136 0 54 0 137 0 54 0 138 0 54 0 139 0 54 0 140 0 54 0 141 0 127 0 142 0 54 0 143 0 127 0 144 0 54 0 146 0 54 1 93] 
#[1 5 21 0 134 5 25 0 163] 
#[0 1 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 110 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 46 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 134 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 138 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 142 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 146 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 150 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 154 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 158 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 162 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 166 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 131 0 1 0 131 0 3 0 131 0 5 0 131 0 6 0 131 0 7 0 131 0 8 0 131 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 13 0 131 0 14 0 131 0 15 0 131 0 16 0 131 0 17 0 131 0 18 0 131 0 19 0 131 0 20 0 131 0 21 0 131 0 22 0 131 0 23 0 131 0 26 0 131 0 27 0 131 0 28 0 131 0 29 0 131 0 33 0 131 0 34 0 131 0 35 0 131 0 37 0 131 0 44 0 131 0 45 0 131 0 47 0 131 0 48 0 131 0 50 1 170 0 52 1 170 0 54 0 131 0 59 0 131 0 61 0 131 0 62 0 131 0 64 0 131 0 65 0 131 0 68 0 131 0 69 0 131 0 70 0 131 0 71 0 131 0 72 0 131 0 73 0 131 0 74 0 131 0 76 0 131 0 77 0 131 0 78 0 131 0 79 0 131 0 80 0 131 0 81 0 131 0 82 0 131 0 83 0 131 0 86 0 131 0 87 0 131 0 88 0 131 0 90 0 131 0 92 0 131 0 94 0 131 0 95 0 131 0 96 0 131 0 98 0 131 0 99 0 131 0 101 1 170 0 102 0 131 0 104 0 131 0 105 0 131 0 106 0 131 0 107 0 131 0 108 0 131 0 109 0 131 0 111 0 131 0 112 0 131 0 114 0 131 0 115 0 131 0 117 0 131 0 118 0 131 0 119 0 131 0 120 0 131 0 121 0 131 0 125 0 131 0 126 0 131 0 127 0 131 0 128 0 131 0 129 0 131 0 135 0 131 0 136 0 131 0 137 0 131 0 138 0 131 0 139 0 131 0 140 0 131 0 141 0 131 0 142 0 131 0 143 0 131 0 144 0 131 0 146 5 29 1 84 5 33 1 86 0 131 1 93] 
#[0 1 182 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 1 186 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 1 186 0 48 1 186 0 50 1 186 0 59 1 186 0 61 1 186 0 62 1 186 0 64 1 186 0 68 1 186 0 69 1 186 0 70 1 186 0 71 5 113 0 72 1 186 0 73 1 186 0 76 1 186 0 77 1 186 0 78 1 186 0 79 1 186 0 83 5 117 0 86 1 186 0 87 1 186 0 88 5 121 0 90 1 186 0 92 1 186 0 94 1 186 0 95 1 186 0 99 5 125 0 101 1 186 0 104 1 186 0 105 1 186 0 106 1 186 0 107 1 186 0 108 1 186 0 112 1 186 0 114 1 186 0 117 1 186 0 118 5 129 0 120 1 186 0 121 1 186 0 125 5 133 0 128 1 186 0 137 1 186 0 142 1 186 0 144 1 186 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 1 186 1 93] 
#[0 1 190 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 194 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 198 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 214 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 218 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 226 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 230 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 234 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 5 153 0 142 0 141 0 144 5 153 0 165 0 153 0 166 5 153 0 167 5 153 0 168 5 153 0 169 5 153 0 170] 
#[0 1 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 242 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 246 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 250 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 1 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 50 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 58 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 74 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 78 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 82 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 5 161 0 150 5 165 0 191 5 165 0 192 1 217 0 193 5 165 0 196 5 169 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 5 173 0 150 5 177 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 5 181 0 150 5 185 0 208] 
#[1 2 73 0 9 2 94 0 11 2 94 0 29 2 94 0 48 2 94 0 50 2 94 0 59 2 94 0 61 2 94 0 62 2 94 0 64 2 94 0 68 2 94 0 69 2 94 0 70 2 94 0 71 2 94 0 73 2 94 0 76 2 94 0 77 2 94 0 78 2 94 0 79 2 94 0 83 2 94 0 87 2 94 0 88 2 94 0 92 2 94 0 94 2 94 0 95 2 94 0 99 2 94 0 104 2 94 0 105 2 94 0 106 2 94 0 107 2 94 0 108 2 94 0 112 2 94 0 114 2 94 0 117 2 94 0 118 2 94 0 121 2 94 0 125 2 94 0 137 2 94 0 142 2 94 0 144 2 94 0 146 2 77 0 237 2 81 0 238 2 94 1 93] 
#[0 2 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 6 1 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 6 161 0 150] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 6 165 0 150 6 169 0 199] 
#[0 2 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146] 
#[1 6 173 0 6 6 177 0 9 6 181 0 194] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 1 42 0 6 5 49 0 7 5 53 0 8 1 42 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 6 185 0 195 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 2 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 2 110 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 2 110 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 2 110 0 48 2 110 0 50 2 110 0 59 2 110 0 61 2 110 0 62 2 110 0 64 2 110 0 68 2 110 0 69 2 110 0 70 2 110 0 71 5 113 0 72 2 110 0 73 2 110 0 76 2 110 0 77 2 110 0 78 2 110 0 79 2 110 0 83 5 117 0 86 2 110 0 87 2 110 0 88 5 121 0 90 2 110 0 92 2 110 0 94 2 110 0 95 2 110 0 99 5 125 0 101 2 110 0 104 2 110 0 105 2 110 0 106 2 110 0 107 2 110 0 108 2 110 0 112 2 110 0 114 2 110 0 117 2 110 0 118 5 129 0 120 2 110 0 121 2 110 0 125 5 133 0 128 2 110 0 137 2 110 0 142 2 110 0 144 2 110 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 2 110 1 93] 
#[1 0 17 0 11 0 153 0 29 6 189 0 51 6 189 0 53 6 189 0 57 3 217 0 61 6 189 0 66 0 153 0 78 6 189 0 85 0 153 0 87 0 153 0 88 6 189 0 91 0 153 0 94 6 189 0 97 0 153 0 104 0 153 0 112 6 189 0 113 6 189 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 165 0 153 0 166 3 249 0 167 3 249 0 168 3 249 0 169 3 249 0 170 6 189 0 187 6 189 0 189 6 189 0 190] 
#[0 2 114 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 118 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 122 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 0 139 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 130 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 134 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 138 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 142 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 146 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 150 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 154 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 2 158 0 5 2 158 0 6 2 158 0 7 2 158 0 8 2 158 0 9 2 158 0 10 1 197 0 11 2 158 0 19 2 158 0 23 2 158 0 26 2 158 0 27 2 158 0 28 2 158 0 29 2 158 0 34 2 158 0 35 2 158 0 37 2 158 0 48 2 158 0 50 2 158 0 59 2 158 0 61 2 158 0 62 2 158 0 64 2 158 0 65 2 158 0 68 2 158 0 69 2 158 0 70 2 158 0 71 2 158 0 73 2 158 0 74 2 158 0 76 2 158 0 77 2 158 0 78 2 158 0 79 2 158 0 80 2 158 0 81 2 158 0 82 2 158 0 83 2 158 0 87 2 158 0 88 2 158 0 92 2 158 0 94 2 158 0 95 2 158 0 96 2 158 0 98 2 158 0 99 2 158 0 104 2 158 0 105 2 158 0 106 2 158 0 107 2 158 0 108 2 158 0 109 2 158 0 111 2 158 0 112 2 158 0 114 2 158 0 117 2 158 0 118 2 158 0 121 2 158 0 125 2 158 0 126 2 158 0 127 2 158 0 129 2 158 0 135 2 158 0 136 2 158 0 137 2 158 0 138 2 158 0 139 2 158 0 140 2 158 0 141 2 158 0 142 2 158 0 143 2 158 0 144 2 158 0 146 2 158 1 93] 
#[0 2 162 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 166 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 193 0 5 2 170 0 6 6 193 0 7 2 170 0 8 2 170 0 9 2 170 0 10 2 170 0 11 2 170 0 19 2 170 0 23 2 170 0 26 2 170 0 27 2 170 0 28 2 170 0 29 2 170 0 34 2 170 0 35 2 170 0 37 2 170 0 48 2 170 0 50 2 170 0 59 2 170 0 61 2 170 0 62 2 170 0 64 2 170 0 65 2 170 0 68 2 170 0 69 2 170 0 70 2 170 0 71 2 170 0 73 2 170 0 74 2 170 0 76 2 170 0 77 2 170 0 78 2 170 0 79 2 170 0 80 2 170 0 81 2 170 0 82 2 170 0 83 2 170 0 87 2 170 0 88 2 170 0 92 2 170 0 94 2 170 0 95 2 170 0 96 2 170 0 98 2 170 0 99 2 170 0 104 2 170 0 105 2 170 0 106 2 170 0 107 2 170 0 108 2 170 0 109 2 170 0 111 2 170 0 112 2 170 0 114 2 170 0 117 2 170 0 118 2 170 0 121 2 170 0 125 2 170 0 126 2 170 0 127 2 170 0 129 2 170 0 135 2 170 0 136 2 170 0 137 2 170 0 138 2 170 0 139 2 170 0 140 2 170 0 141 2 170 0 142 2 170 0 143 2 170 0 144 2 170 0 146 6 197 0 193 2 170 1 93] 
#[1 0 17 0 11 0 153 0 29 6 201 0 34 6 205 0 51 6 205 0 53 6 205 0 57 3 217 0 61 6 205 0 66 0 153 0 78 6 205 0 85 0 153 0 87 0 153 0 88 6 205 0 91 0 153 0 94 6 205 0 97 0 153 0 104 0 153 0 112 6 205 0 113 6 205 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 165 0 153 0 166 3 249 0 167 3 249 0 168 3 249 0 169 3 249 0 170 6 205 0 187 6 205 0 189 6 205 0 190] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 6 209 0 153 6 209 0 154 6 209 0 155 6 209 0 156 6 209 0 157 6 209 0 158 6 209 0 159 6 209 0 160 6 209 0 161 6 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 6 209 0 243 6 209 0 244 6 209 0 245 6 209 0 249 6 209 0 250 6 209 0 251 6 209 0 252 6 209 0 253 6 209 0 254 6 209 0 255 6 209 1 1 6 209 1 3 6 209 1 5 6 209 1 6 3 33 1 8 6 209 1 9 6 209 1 10 6 209 1 11 6 209 1 12 6 209 1 13 6 209 1 14 6 209 1 18 6 209 1 60 6 209 1 65 6 209 1 66 6 209 1 73 6 209 1 74 6 209 1 75 6 209 1 76 6 209 1 77 6 209 1 78 6 209 1 79 6 209 1 80 6 209 1 81 6 209 1 82 6 209 1 89 6 209 1 90 6 209 1 91 6 209 1 92] 
#[1 0 118 0 11 0 118 0 29 0 118 0 48 0 118 0 50 0 118 0 59 0 118 0 61 0 118 0 62 0 118 0 64 0 118 0 71 0 118 0 73 0 118 0 76 0 118 0 77 0 118 0 78 0 118 0 79 0 118 0 83 0 118 0 87 0 118 0 88 0 118 0 94 0 118 0 99 0 118 0 104 0 118 0 105 0 118 0 106 0 118 0 107 0 118 0 108 0 118 0 112 0 118 0 114 0 118 0 117 0 118 0 118 0 118 0 121 0 118 0 142 0 118 0 144 0 118 0 146 6 213 0 152 0 118 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 6 217 0 173 6 217 0 174 6 217 0 176 6 217 0 177 6 217 0 181 6 217 0 182 0 201 0 188 6 217 0 197 6 217 0 198 6 217 0 202 6 217 0 203 6 217 0 214 6 217 0 215 6 217 0 216 0 233 0 217 6 217 0 218 6 217 0 219 6 217 0 220 6 217 0 221 6 217 0 222 6 217 0 223 6 217 0 224 6 217 0 225 6 217 0 226 6 217 0 227 6 217 0 228 1 25 0 230 6 217 0 231 6 217 0 232 6 217 0 233 6 217 0 234 6 217 0 235 6 217 0 239 6 217 0 242 2 174 1 93] 
#[0 2 178 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 2 182 0 11 2 182 0 29 2 182 0 48 2 182 0 50 2 182 0 59 2 182 0 61 2 182 0 62 2 182 0 64 2 182 0 68 2 182 0 69 2 182 0 70 2 182 0 71 2 182 0 73 2 182 0 76 2 182 0 77 2 182 0 78 2 182 0 79 2 182 0 83 2 182 0 87 2 182 0 88 2 182 0 92 2 182 0 94 2 182 0 95 2 182 0 99 2 182 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 112 2 182 0 114 2 182 0 117 2 182 0 118 2 182 0 121 2 182 0 125 2 182 0 137 2 182 0 142 2 182 0 144 2 182 0 146 2 41 0 240 2 45 0 241 2 182 1 93] 
#[0 2 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 221 0 142 0 141 0 144 6 221 0 165 0 153 0 166 6 221 0 167 6 221 0 168 6 221 0 169 6 221 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 225 0 142 0 141 0 144 6 225 0 165 0 153 0 166 6 225 0 167 6 225 0 168 6 225 0 169 6 225 0 170] 
#[1 1 197 0 11 0 250 0 29 0 250 0 61 0 250 0 70 0 250 0 78 0 250 0 87 0 250 0 88 0 250 0 94 0 250 0 104 0 250 0 112 0 250 0 118 0 250 0 142 0 250 0 144 0 250 0 146 6 229 0 205] 
#[1 2 89 0 5 1 197 0 11 6 233 0 208] 
#[1 2 89 0 5 1 197 0 11 6 237 0 208] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 241 0 142 0 141 0 144 6 241 0 165 0 153 0 166 6 241 0 167 6 241 0 168 6 241 0 169 6 241 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 245 0 142 0 141 0 144 6 245 0 165 0 153 0 166 6 245 0 167 6 245 0 168 6 245 0 169 6 245 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 249 0 142 0 141 0 144 6 249 0 165 0 153 0 166 6 249 0 167 6 249 0 168 6 249 0 169 6 249 0 170] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 6 253 0 150 7 1 0 208] 
#[1 1 197 0 11 1 30 0 29 1 30 0 61 1 30 0 70 1 30 0 78 1 30 0 87 1 30 0 88 1 30 0 94 1 30 0 104 1 30 0 112 1 30 0 118 1 30 0 142 1 30 0 144 1 30 0 146 7 5 0 200] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 9 0 142 0 141 0 144 7 9 0 165 0 153 0 166 7 9 0 167 7 9 0 168 7 9 0 169 7 9 0 170] 
#[1 7 13 0 78 7 17 0 88 7 21 0 112] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 25 0 142 0 141 0 144 7 25 0 165 0 153 0 166 7 25 0 167 7 25 0 168 7 25 0 169 7 25 0 170] 
#[1 2 89 0 5 1 197 0 11 7 29 0 208] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 33 0 142 0 141 0 144 7 33 0 165 0 153 0 166 7 33 0 167 7 33 0 168 7 33 0 169 7 33 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 37 0 142 0 141 0 144 7 37 0 165 0 153 0 166 7 37 0 167 7 37 0 168 7 37 0 169 7 37 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 41 0 142 0 141 0 144 7 41 0 165 0 153 0 166 7 41 0 167 7 41 0 168 7 41 0 169 7 41 0 170] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 7 45 0 150 7 49 0 208] 
#[0 2 190 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 194 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 2 198 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 2 198 0 48 2 198 0 50 2 198 0 59 2 198 0 61 2 198 0 62 2 198 0 64 2 198 0 68 2 198 0 69 2 198 0 70 2 198 0 71 5 113 0 72 2 198 0 73 2 198 0 76 2 198 0 77 2 198 0 78 2 198 0 79 2 198 0 83 5 117 0 86 2 198 0 87 2 198 0 88 5 121 0 90 2 198 0 92 2 198 0 94 2 198 0 95 2 198 0 99 5 125 0 101 2 198 0 104 2 198 0 105 2 198 0 106 2 198 0 107 2 198 0 108 2 198 0 112 2 198 0 114 2 198 0 117 2 198 0 118 5 129 0 120 2 198 0 121 2 198 0 125 5 133 0 128 2 198 0 137 2 198 0 142 2 198 0 144 2 198 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 2 198 1 93] 
#[1 0 6 0 70 0 143 0 146 7 57 0 150 7 61 0 178 7 65 0 180] 
#[1 2 177 0 140 7 69 0 160] 
#[1 2 177 0 140 7 73 0 160] 
#[0 2 202 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 206 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 210 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 77 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 81 0 142 0 141 0 144 0 145 0 146 7 81 0 165 0 153 0 166 7 81 0 167 7 81 0 168 7 81 0 169 7 81 0 170 7 85 0 206] 
#[0 2 214 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[0 2 218 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 2 222 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 102 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 2 226 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 102 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 0 17 0 11 0 153 0 29 4 157 0 52 7 97 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 7 89 0 102 0 153 0 104 0 153 0 112 0 153 0 118 7 93 0 142 0 141 0 144 7 93 0 165 0 153 0 166 7 93 0 167 7 93 0 168 7 93 0 169 7 93 0 170 7 97 0 207] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 101 0 142 0 141 0 144 7 101 0 165 0 153 0 166 7 101 0 167 7 101 0 168 7 101 0 169 7 101 0 170] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 7 109 0 191 7 109 0 192 1 217 0 193 7 109 0 196 7 113 0 212 7 117 0 213] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 7 121 0 102 0 153 0 104 0 153 0 112 0 153 0 118 7 125 0 142 0 141 0 144 7 125 0 165 0 153 0 166 7 125 0 167 7 125 0 168 7 125 0 169 7 125 0 170] 
#[1 2 234 0 6 2 234 0 9 7 129 0 210] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 7 133 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 7 137 0 150] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 7 141 0 6 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 5 37 0 1 0 147 0 3 5 45 0 5 2 238 0 6 5 49 0 7 2 238 0 8 2 238 0 9 2 238 0 10 5 61 0 11 5 65 0 12 2 238 0 13 0 151 0 14 2 238 0 15 2 238 0 16 2 238 0 17 2 238 0 18 2 238 0 19 2 238 0 20 2 238 0 21 2 238 0 22 2 238 0 23 2 238 0 26 2 238 0 27 2 238 0 28 2 238 0 29 5 97 0 33 2 238 0 34 2 238 0 35 2 238 0 37 0 155 0 44 5 105 0 45 2 238 0 47 2 238 0 48 2 238 0 50 2 238 0 59 2 238 0 61 2 238 0 62 2 238 0 64 2 238 0 65 2 238 0 68 2 238 0 69 2 238 0 70 2 238 0 71 2 238 0 72 2 238 0 73 2 238 0 74 2 238 0 76 2 238 0 77 2 238 0 78 2 238 0 79 2 238 0 80 2 238 0 81 2 238 0 82 2 238 0 83 2 238 0 86 2 238 0 87 2 238 0 88 2 238 0 90 2 238 0 92 2 238 0 94 2 238 0 95 2 238 0 96 2 238 0 98 2 238 0 99 2 238 0 101 2 238 0 104 2 238 0 105 2 238 0 106 2 238 0 107 2 238 0 108 2 238 0 109 2 238 0 111 2 238 0 112 2 238 0 114 2 238 0 115 2 238 0 117 2 238 0 118 2 238 0 119 0 159 0 120 2 238 0 121 2 238 0 125 2 238 0 126 2 238 0 127 2 238 0 128 2 238 0 129 2 238 0 135 2 238 0 136 2 238 0 137 2 238 0 138 2 238 0 139 2 238 0 140 2 238 0 141 2 238 0 142 2 238 0 143 2 238 0 144 2 238 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 2 238 1 93] 
#[1 5 37 0 1 0 163 0 3 5 45 0 5 2 242 0 6 5 49 0 7 2 242 0 8 2 242 0 9 2 242 0 10 5 61 0 11 5 65 0 12 2 242 0 13 0 167 0 14 2 242 0 15 2 242 0 16 2 242 0 17 2 242 0 18 2 242 0 19 2 242 0 20 2 242 0 21 2 242 0 22 2 242 0 23 2 242 0 26 2 242 0 27 2 242 0 28 2 242 0 29 5 97 0 33 2 242 0 34 2 242 0 35 2 242 0 37 0 171 0 44 5 105 0 45 2 242 0 47 2 242 0 48 2 242 0 50 2 242 0 59 2 242 0 61 2 242 0 62 2 242 0 64 2 242 0 65 2 242 0 68 2 242 0 69 2 242 0 70 2 242 0 71 2 242 0 72 2 242 0 73 2 242 0 74 2 242 0 76 2 242 0 77 2 242 0 78 2 242 0 79 2 242 0 80 2 242 0 81 2 242 0 82 2 242 0 83 2 242 0 86 2 242 0 87 2 242 0 88 2 242 0 90 2 242 0 92 2 242 0 94 2 242 0 95 2 242 0 96 2 242 0 98 2 242 0 99 2 242 0 101 2 242 0 104 2 242 0 105 2 242 0 106 2 242 0 107 2 242 0 108 2 242 0 109 2 242 0 111 2 242 0 112 2 242 0 114 2 242 0 115 2 242 0 117 2 242 0 118 2 242 0 119 0 175 0 120 2 242 0 121 2 242 0 125 2 242 0 126 2 242 0 127 2 242 0 128 2 242 0 129 2 242 0 135 2 242 0 136 2 242 0 137 2 242 0 138 2 242 0 139 2 242 0 140 2 242 0 141 2 242 0 142 2 242 0 143 2 242 0 144 2 242 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 2 242 1 93] 
#[1 2 246 0 1 2 246 0 3 2 246 0 5 2 246 0 6 2 246 0 7 2 246 0 8 2 246 0 9 2 246 0 10 1 197 0 11 2 246 0 12 2 246 0 13 2 246 0 14 2 246 0 15 2 246 0 16 2 246 0 17 2 246 0 18 2 246 0 19 2 246 0 20 2 246 0 21 2 246 0 22 2 246 0 23 2 246 0 26 2 246 0 27 2 246 0 28 2 246 0 29 2 246 0 33 2 246 0 34 2 246 0 35 2 246 0 37 2 246 0 44 2 246 0 45 2 246 0 47 2 246 0 48 2 246 0 50 2 246 0 59 2 246 0 61 2 246 0 62 2 246 0 64 2 246 0 65 2 246 0 68 2 246 0 69 2 246 0 70 2 246 0 71 2 246 0 72 2 246 0 73 2 246 0 74 2 246 0 76 2 246 0 77 2 246 0 78 2 246 0 79 2 246 0 80 2 246 0 81 2 246 0 82 2 246 0 83 2 246 0 86 2 246 0 87 2 246 0 88 2 246 0 90 2 246 0 92 2 246 0 94 2 246 0 95 2 246 0 96 2 246 0 98 2 246 0 99 2 246 0 101 2 246 0 104 2 246 0 105 2 246 0 106 2 246 0 107 2 246 0 108 2 246 0 109 2 246 0 111 2 246 0 112 2 246 0 114 2 246 0 115 2 246 0 117 2 246 0 118 2 246 0 119 2 246 0 120 2 246 0 121 2 246 0 125 2 246 0 126 2 246 0 127 2 246 0 128 2 246 0 129 2 246 0 135 2 246 0 136 2 246 0 137 2 246 0 138 2 246 0 139 2 246 0 140 2 246 0 141 2 246 0 142 2 246 0 143 2 246 0 144 2 246 0 146 2 246 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 0 179 0 1 0 179 0 3 0 179 0 5 2 250 0 6 0 179 0 7 0 179 0 8 2 250 0 9 0 179 0 10 0 179 0 11 0 179 0 12 2 250 0 13 0 179 0 14 2 250 0 15 0 179 0 16 0 179 0 17 0 179 0 18 0 179 0 19 0 179 0 20 0 179 0 21 2 250 0 22 2 250 0 23 2 250 0 26 2 250 0 27 2 250 0 28 2 250 0 29 0 179 0 33 2 250 0 34 2 250 0 35 2 250 0 37 0 179 0 44 0 179 0 45 0 179 0 47 2 250 0 48 2 250 0 50 2 250 0 59 2 250 0 61 2 250 0 62 2 250 0 64 2 250 0 65 2 250 0 68 2 250 0 69 2 250 0 70 2 250 0 71 0 179 0 72 2 250 0 73 2 250 0 74 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 0 179 0 86 2 250 0 87 2 250 0 88 0 179 0 90 2 250 0 92 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 98 2 250 0 99 0 179 0 101 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 111 2 250 0 112 2 250 0 114 2 250 0 115 2 250 0 117 2 250 0 118 2 250 0 119 0 179 0 120 2 250 0 121 2 250 0 125 2 250 0 126 2 250 0 127 0 179 0 128 2 250 0 129 2 250 0 135 2 250 0 136 2 250 0 137 2 250 0 138 2 250 0 139 2 250 0 140 2 250 0 141 2 250 0 142 2 250 0 143 2 250 0 144 2 250 0 146 2 250 1 93] 
#[1 2 254 0 1 2 254 0 3 2 254 0 5 2 254 0 6 2 254 0 7 2 254 0 8 2 254 0 9 2 254 0 10 1 197 0 11 2 254 0 12 2 254 0 13 2 254 0 14 2 254 0 15 2 254 0 16 2 254 0 17 2 254 0 18 2 254 0 19 2 254 0 20 2 254 0 21 2 254 0 22 2 254 0 23 2 254 0 26 2 254 0 27 2 254 0 28 2 254 0 29 2 254 0 33 2 254 0 34 2 254 0 35 2 254 0 37 2 254 0 44 2 254 0 45 2 254 0 47 2 254 0 48 2 254 0 50 2 254 0 59 2 254 0 61 2 254 0 62 2 254 0 64 2 254 0 65 2 254 0 68 2 254 0 69 2 254 0 70 2 254 0 71 2 254 0 72 2 254 0 73 2 254 0 74 2 254 0 76 2 254 0 77 2 254 0 78 2 254 0 79 2 254 0 80 2 254 0 81 2 254 0 82 2 254 0 83 2 254 0 86 2 254 0 87 2 254 0 88 2 254 0 90 2 254 0 92 2 254 0 94 2 254 0 95 2 254 0 96 2 254 0 98 2 254 0 99 2 254 0 101 2 254 0 104 2 254 0 105 2 254 0 106 2 254 0 107 2 254 0 108 2 254 0 109 2 254 0 111 2 254 0 112 2 254 0 114 2 254 0 115 2 254 0 117 2 254 0 118 2 254 0 119 2 254 0 120 2 254 0 121 2 254 0 125 2 254 0 126 2 254 0 127 2 254 0 128 2 254 0 129 2 254 0 135 2 254 0 136 2 254 0 137 2 254 0 138 2 254 0 139 2 254 0 140 2 254 0 141 2 254 0 142 2 254 0 143 2 254 0 144 2 254 0 146 2 254 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 7 145 0 28 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 0 183 0 1 0 183 0 3 0 183 0 5 3 2 0 6 0 183 0 7 0 183 0 8 3 2 0 9 0 183 0 10 0 183 0 11 0 183 0 12 3 2 0 13 0 183 0 14 3 2 0 15 0 183 0 16 0 183 0 17 0 183 0 18 0 183 0 19 0 183 0 20 0 183 0 21 3 2 0 22 3 2 0 23 3 2 0 26 3 2 0 27 3 2 0 28 3 2 0 29 0 183 0 33 3 2 0 34 3 2 0 35 3 2 0 37 0 183 0 44 0 183 0 45 0 183 0 47 3 2 0 48 3 2 0 50 3 2 0 59 3 2 0 61 3 2 0 62 3 2 0 64 3 2 0 65 3 2 0 68 3 2 0 69 3 2 0 70 3 2 0 71 0 183 0 72 3 2 0 73 3 2 0 74 3 2 0 76 3 2 0 77 3 2 0 78 3 2 0 79 3 2 0 80 3 2 0 81 3 2 0 82 3 2 0 83 0 183 0 86 3 2 0 87 3 2 0 88 0 183 0 90 3 2 0 92 3 2 0 94 3 2 0 95 3 2 0 96 3 2 0 98 3 2 0 99 0 183 0 101 3 2 0 104 3 2 0 105 3 2 0 106 3 2 0 107 3 2 0 108 3 2 0 109 3 2 0 111 3 2 0 112 3 2 0 114 3 2 0 115 3 2 0 117 3 2 0 118 3 2 0 119 0 183 0 120 3 2 0 121 3 2 0 125 3 2 0 126 3 2 0 127 0 183 0 128 3 2 0 129 3 2 0 135 3 2 0 136 3 2 0 137 3 2 0 138 3 2 0 139 3 2 0 140 3 2 0 141 3 2 0 142 3 2 0 143 3 2 0 144 3 2 0 146 3 2 1 93] 
#[0 3 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 3 30 0 1 3 30 0 3 3 30 0 5 3 30 0 6 3 30 0 7 3 30 0 8 3 30 0 9 3 30 0 10 1 197 0 11 3 30 0 12 3 30 0 13 3 30 0 14 3 30 0 15 3 30 0 16 3 30 0 17 3 30 0 18 3 30 0 19 3 30 0 20 3 30 0 21 3 30 0 22 3 30 0 23 3 30 0 26 3 30 0 27 3 30 0 28 3 30 0 29 3 30 0 33 3 30 0 34 3 30 0 35 3 30 0 37 3 30 0 44 3 30 0 45 3 30 0 47 3 30 0 48 3 30 0 50 3 30 0 59 3 30 0 61 3 30 0 62 3 30 0 64 3 30 0 65 3 30 0 68 3 30 0 69 3 30 0 70 3 30 0 71 3 30 0 72 3 30 0 73 3 30 0 74 3 30 0 76 3 30 0 77 3 30 0 78 3 30 0 79 3 30 0 80 3 30 0 81 3 30 0 82 3 30 0 83 3 30 0 86 3 30 0 87 3 30 0 88 3 30 0 90 3 30 0 92 3 30 0 94 3 30 0 95 3 30 0 96 3 30 0 98 3 30 0 99 3 30 0 101 3 30 0 104 3 30 0 105 3 30 0 106 3 30 0 107 3 30 0 108 3 30 0 109 3 30 0 111 3 30 0 112 3 30 0 114 3 30 0 115 3 30 0 117 3 30 0 118 3 30 0 119 3 30 0 120 3 30 0 121 3 30 0 125 3 30 0 126 3 30 0 127 3 30 0 128 3 30 0 129 3 30 0 135 3 30 0 136 3 30 0 137 3 30 0 138 3 30 0 139 3 30 0 140 3 30 0 141 3 30 0 142 3 30 0 143 3 30 0 144 3 30 0 146 3 30 1 93] 
#[1 3 34 0 1 3 34 0 3 3 34 0 5 3 34 0 6 3 34 0 7 3 34 0 8 3 34 0 9 3 34 0 10 3 34 0 11 3 34 0 12 3 34 0 13 3 34 0 14 3 34 0 15 3 34 0 16 3 34 0 17 3 34 0 18 3 34 0 19 3 34 0 20 3 34 0 21 3 34 0 22 3 34 0 23 3 34 0 26 3 34 0 27 3 34 0 28 3 34 0 29 3 34 0 33 3 34 0 34 3 34 0 35 3 34 0 37 3 34 0 44 3 34 0 45 3 34 0 47 3 34 0 48 3 34 0 50 3 34 0 59 3 34 0 61 3 34 0 62 3 34 0 64 3 34 0 65 3 34 0 68 3 34 0 69 3 34 0 70 3 34 0 71 3 34 0 72 3 34 0 73 3 34 0 74 3 34 0 76 3 34 0 77 3 34 0 78 3 34 0 79 3 34 0 80 3 34 0 81 3 34 0 82 3 34 0 83 3 34 0 86 3 34 0 87 3 34 0 88 3 34 0 90 3 34 0 92 3 34 0 94 3 34 0 95 3 34 0 96 3 34 0 98 3 34 0 99 3 34 0 101 3 34 0 104 3 34 0 105 3 34 0 106 3 34 0 107 3 34 0 108 3 34 0 109 3 34 0 111 3 34 0 112 3 34 0 114 3 34 0 115 3 34 0 117 3 34 0 118 3 34 0 119 3 34 0 120 3 34 0 121 3 34 0 125 3 34 0 126 3 34 0 127 3 34 0 128 3 34 0 129 3 34 0 135 3 34 0 136 3 34 0 137 3 34 0 138 3 34 0 139 3 34 0 140 3 34 0 141 3 34 0 142 3 34 0 143 3 34 0 144 3 34 0 146 7 149 1 64 3 34 1 93] 
#[0 3 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 3 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 7 153 0 22 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 5 37 0 1 0 187 0 3 5 45 0 5 3 46 0 6 5 49 0 7 5 53 0 8 3 46 0 9 5 57 0 10 5 61 0 11 5 65 0 12 3 46 0 13 0 191 0 14 3 46 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 3 46 0 22 3 46 0 23 3 46 0 26 3 46 0 27 3 46 0 28 3 46 0 29 5 97 0 33 3 46 0 34 3 46 0 35 3 46 0 37 0 195 0 44 5 105 0 45 5 109 0 47 3 46 0 48 3 46 0 50 3 46 0 59 3 46 0 61 3 46 0 62 3 46 0 64 3 46 0 65 3 46 0 68 3 46 0 69 3 46 0 70 3 46 0 71 5 113 0 72 3 46 0 73 3 46 0 74 3 46 0 76 3 46 0 77 3 46 0 78 3 46 0 79 3 46 0 80 3 46 0 81 3 46 0 82 3 46 0 83 5 117 0 86 3 46 0 87 3 46 0 88 5 121 0 90 3 46 0 92 3 46 0 94 3 46 0 95 3 46 0 96 3 46 0 98 3 46 0 99 5 125 0 101 3 46 0 104 3 46 0 105 3 46 0 106 3 46 0 107 3 46 0 108 3 46 0 109 3 46 0 111 3 46 0 112 3 46 0 114 3 46 0 115 3 46 0 117 3 46 0 118 3 46 0 119 0 199 0 120 3 46 0 121 3 46 0 125 3 46 0 126 3 46 0 127 5 133 0 128 3 46 0 129 3 46 0 135 3 46 0 136 3 46 0 137 3 46 0 138 3 46 0 139 3 46 0 140 3 46 0 141 3 46 0 142 3 46 0 143 3 46 0 144 3 46 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 3 46 1 93] 
#[0 3 50 0 10 0 134] 
#[1 7 157 0 10 7 161 0 134] 
#[0 3 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 3 58 0 1 3 58 0 3 2 101 0 5 3 58 0 6 3 58 0 7 2 105 0 8 7 165 0 9 2 109 0 10 0 17 0 11 3 58 0 12 3 58 0 13 3 58 0 14 0 203 0 15 3 58 0 16 3 58 0 17 3 58 0 18 3 58 0 19 3 58 0 20 3 58 0 21 3 58 0 22 0 207 0 23 0 211 0 26 3 58 0 27 3 58 0 28 0 215 0 29 3 58 0 33 0 219 0 34 0 223 0 35 0 227 0 37 3 58 0 44 3 58 0 45 3 58 0 47 3 58 0 48 3 58 0 50 4 157 0 52 7 177 0 54 3 58 0 59 0 231 0 61 3 58 0 62 3 58 0 64 3 58 0 65 3 58 0 68 3 58 0 69 3 58 0 70 3 58 0 71 3 58 0 72 3 58 0 73 0 235 0 74 3 58 0 76 3 58 0 77 0 239 0 78 3 58 0 79 0 243 0 80 0 247 0 81 3 58 0 82 3 58 0 83 3 58 0 86 0 251 0 87 0 255 0 88 3 58 0 90 3 58 0 92 1 3 0 94 3 58 0 95 1 7 0 96 3 58 0 98 3 58 0 99 3 58 0 101 7 173 0 102 1 11 0 104 3 58 0 105 3 58 0 106 3 58 0 107 3 58 0 108 3 58 0 109 3 58 0 111 1 15 0 112 3 58 0 114 3 58 0 115 3 58 0 117 1 19 0 118 3 58 0 119 3 58 0 120 3 58 0 121 3 58 0 125 3 58 0 126 3 58 0 127 3 58 0 128 1 23 0 129 1 27 0 135 1 31 0 136 1 35 0 137 1 39 0 138 1 43 0 139 1 47 0 140 1 51 0 141 1 55 0 142 1 59 0 143 1 63 0 144 3 58 0 146 7 181 0 153 7 181 0 154 7 181 0 155 7 181 0 156 7 181 0 157 7 181 0 158 7 181 0 159 7 181 0 160 7 181 0 161 7 181 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 177 0 207 7 181 0 243 7 181 0 244 7 181 0 245 7 181 0 249 7 181 0 250 7 181 0 251 7 181 0 252 7 181 0 253 7 181 0 254 7 181 0 255 7 181 1 1 7 181 1 3 7 181 1 5 7 181 1 6 3 33 1 8 7 181 1 9 7 181 1 10 7 181 1 11 7 181 1 12 7 181 1 13 7 181 1 14 7 181 1 18 7 181 1 60 7 181 1 65 7 181 1 66 7 181 1 73 7 181 1 74 7 181 1 75 7 181 1 76 7 181 1 77 7 181 1 78 7 181 1 79 7 181 1 80 7 181 1 81 7 181 1 82 7 185 1 83 7 189 1 85 7 193 1 88 7 181 1 89 7 181 1 90 7 181 1 91 7 181 1 92 3 58 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 197 0 142 0 141 0 144 7 197 0 165 0 153 0 166 7 197 0 167 7 197 0 168 7 197 0 169 7 197 0 170] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 201 0 153 7 201 0 154 7 201 0 155 7 201 0 156 7 201 0 157 7 201 0 158 7 201 0 159 7 201 0 160 7 201 0 161 7 201 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 201 0 243 7 201 0 244 7 201 0 245 7 201 0 249 7 201 0 250 7 201 0 251 7 201 0 252 7 201 0 253 7 201 0 254 7 201 0 255 7 201 1 1 7 201 1 3 7 201 1 5 7 201 1 6 3 33 1 8 7 201 1 9 7 201 1 10 7 201 1 11 7 201 1 12 7 201 1 13 7 201 1 14 7 201 1 18 7 201 1 60 7 201 1 65 7 201 1 66 7 201 1 73 7 201 1 74 7 201 1 75 7 201 1 76 7 201 1 77 7 201 1 78 7 201 1 79 7 201 1 80 7 201 1 81 7 201 1 82 7 201 1 89 7 201 1 90 7 201 1 91 7 201 1 92] 
#[1 1 170 0 5 1 170 0 6 1 170 0 8 1 170 0 9 1 170 0 10 1 170 0 11 1 170 0 15 1 170 0 23 1 170 0 26 1 170 0 29 1 170 0 34 1 170 0 35 1 170 0 37 1 170 0 52 1 170 0 54 1 170 0 61 1 170 0 74 1 170 0 78 1 170 0 80 1 170 0 81 1 170 0 87 1 170 0 88 1 170 0 94 1 170 0 96 1 170 0 102 1 170 0 104 1 170 0 112 1 170 0 118 1 170 0 129 1 170 0 135 1 170 0 136 1 170 0 137 1 170 0 138 1 170 0 139 1 170 0 140 1 170 0 141 1 170 0 142 1 170 0 143 1 170 0 144 7 205 1 84 5 33 1 86] 
#[0 3 62 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 66 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 70 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 209 0 142 0 141 0 144 7 209 0 165 0 153 0 166 7 209 0 167 7 209 0 168 7 209 0 169 7 209 0 170] 
#[0 3 74 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 78 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 82 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 86 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 90 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 94 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 98 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 102 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 106 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 110 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 114 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 118 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 122 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 126 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 130 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 134 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 213 0 153 7 213 0 154 7 213 0 155 7 213 0 156 7 213 0 157 7 213 0 158 7 213 0 159 7 213 0 160 7 213 0 161 7 213 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 213 0 243 7 213 0 244 7 213 0 245 7 213 0 249 7 213 0 250 7 213 0 251 7 213 0 252 7 213 0 253 7 213 0 254 7 213 0 255 7 213 1 1 7 213 1 3 7 213 1 5 7 213 1 6 3 33 1 8 7 213 1 9 7 213 1 10 7 213 1 11 7 213 1 12 7 213 1 13 7 213 1 14 7 213 1 18 7 213 1 60 7 213 1 65 7 213 1 66 7 213 1 73 7 213 1 74 7 213 1 75 7 213 1 76 7 213 1 77 7 213 1 78 7 213 1 79 7 213 1 80 7 213 1 81 7 213 1 82 7 213 1 89 7 213 1 90 7 213 1 91 7 213 1 92] 
#[0 3 138 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 217 0 153 7 217 0 154 7 217 0 155 7 217 0 156 7 217 0 157 7 217 0 158 7 217 0 159 7 217 0 160 7 217 0 161 7 217 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 217 0 243 7 217 0 244 7 217 0 245 7 217 0 249 7 217 0 250 7 217 0 251 7 217 0 252 7 217 0 253 7 217 0 254 7 217 0 255 7 217 1 1 7 217 1 3 7 217 1 5 7 217 1 6 3 33 1 8 7 217 1 9 7 217 1 10 7 217 1 11 7 217 1 12 7 217 1 13 7 217 1 14 7 217 1 18 7 217 1 60 7 217 1 65 7 217 1 66 7 217 1 73 7 217 1 74 7 217 1 75 7 217 1 76 7 217 1 77 7 217 1 78 7 217 1 79 7 217 1 80 7 217 1 81 7 217 1 82 7 217 1 89 7 217 1 90 7 217 1 91 7 217 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 221 0 153 7 221 0 154 7 221 0 155 7 221 0 156 7 221 0 157 7 221 0 158 7 221 0 159 7 221 0 160 7 221 0 161 7 221 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 221 0 243 7 221 0 244 7 221 0 245 7 221 0 249 7 221 0 250 7 221 0 251 7 221 0 252 7 221 0 253 7 221 0 254 7 221 0 255 7 221 1 1 7 221 1 3 7 221 1 5 7 221 1 6 3 33 1 8 7 221 1 9 7 221 1 10 7 221 1 11 7 221 1 12 7 221 1 13 7 221 1 14 7 221 1 18 7 221 1 60 7 221 1 65 7 221 1 66 7 221 1 73 7 221 1 74 7 221 1 75 7 221 1 76 7 221 1 77 7 221 1 78 7 221 1 79 7 221 1 80 7 221 1 81 7 221 1 82 7 221 1 89 7 221 1 90 7 221 1 91 7 221 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 225 0 153 7 225 0 154 7 225 0 155 7 225 0 156 7 225 0 157 7 225 0 158 7 225 0 159 7 225 0 160 7 225 0 161 7 225 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 225 0 243 7 225 0 244 7 225 0 245 7 225 0 249 7 225 0 250 7 225 0 251 7 225 0 252 7 225 0 253 7 225 0 254 7 225 0 255 7 225 1 1 7 225 1 3 7 225 1 5 7 225 1 6 3 33 1 8 7 225 1 9 7 225 1 10 7 225 1 11 7 225 1 12 7 225 1 13 7 225 1 14 7 225 1 18 7 225 1 60 7 225 1 65 7 225 1 66 7 225 1 73 7 225 1 74 7 225 1 75 7 225 1 76 7 225 1 77 7 225 1 78 7 225 1 79 7 225 1 80 7 225 1 81 7 225 1 82 7 225 1 89 7 225 1 90 7 225 1 91 7 225 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 229 0 153 7 229 0 154 7 229 0 155 7 229 0 156 7 229 0 157 7 229 0 158 7 229 0 159 7 229 0 160 7 229 0 161 7 229 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 229 0 243 7 229 0 244 7 229 0 245 7 229 0 249 7 229 0 250 7 229 0 251 7 229 0 252 7 229 0 253 7 229 0 254 7 229 0 255 7 229 1 1 7 229 1 3 7 229 1 5 7 229 1 6 3 33 1 8 7 229 1 9 7 229 1 10 7 229 1 11 7 229 1 12 7 229 1 13 7 229 1 14 7 229 1 18 7 229 1 60 7 229 1 65 7 229 1 66 7 229 1 73 7 229 1 74 7 229 1 75 7 229 1 76 7 229 1 77 7 229 1 78 7 229 1 79 7 229 1 80 7 229 1 81 7 229 1 82 7 229 1 89 7 229 1 90 7 229 1 91 7 229 1 92] 
#[1 1 197 0 11 7 233 0 14 7 233 0 19 7 233 1 7] 
#[1 2 101 0 5 4 153 0 6 2 105 0 8 1 42 0 9 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 4 157 0 52 4 177 0 54 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 4 165 0 100 4 169 0 102 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 7 237 0 142 2 185 0 143 0 141 0 144 3 189 0 153 3 189 0 154 3 189 0 155 3 189 0 156 3 189 0 157 3 189 0 158 3 189 0 159 3 189 0 160 3 189 0 161 3 189 0 162 7 237 0 165 0 153 0 166 7 237 0 167 7 237 0 168 7 237 0 169 7 237 0 170 3 185 0 195 4 177 0 207 4 181 0 211 3 189 0 243 3 189 0 244 3 189 0 245 3 189 0 249 3 189 0 250 3 189 0 251 3 189 0 252 3 189 0 253 3 189 0 254 3 189 0 255 3 189 1 1 3 189 1 3 3 189 1 5 3 189 1 6 3 33 1 8 3 189 1 9 3 189 1 10 3 189 1 11 3 189 1 12 3 189 1 13 3 189 1 14 3 189 1 18 3 189 1 60 3 189 1 65 3 189 1 66 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 89 3 189 1 90 3 189 1 91 3 189 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 7 241 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 7 245 0 150] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 7 249 0 150 7 253 0 191 7 253 0 192 1 217 0 193 7 253 0 196] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 8 1 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 5 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 8 9 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 13 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 17 0 153 8 17 0 154 8 17 0 155 8 17 0 156 8 17 0 157 8 17 0 158 8 17 0 159 8 17 0 160 8 17 0 161 8 17 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 17 0 243 8 17 0 244 8 17 0 245 8 17 0 249 8 17 0 250 8 17 0 251 8 17 0 252 8 17 0 253 8 17 0 254 8 17 0 255 8 17 1 1 8 17 1 3 8 17 1 5 8 17 1 6 3 33 1 8 8 17 1 9 8 17 1 10 8 17 1 11 8 17 1 12 8 17 1 13 8 17 1 14 8 17 1 18 8 17 1 60 8 17 1 65 8 17 1 66 8 17 1 73 8 17 1 74 8 17 1 75 8 17 1 76 8 17 1 77 8 17 1 78 8 17 1 79 8 17 1 80 8 17 1 81 8 17 1 82 8 17 1 89 8 17 1 90 8 17 1 91 8 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 8 21 0 67 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 25 0 153 8 25 0 154 8 25 0 155 8 25 0 156 8 25 0 157 8 25 0 158 8 25 0 159 8 25 0 160 8 25 0 161 8 25 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 25 0 243 8 25 0 244 8 25 0 245 8 25 0 249 8 25 0 250 8 25 0 251 8 25 0 252 8 25 0 253 8 25 0 254 8 25 0 255 8 25 1 1 8 25 1 3 8 25 1 5 8 25 1 6 3 33 1 8 8 25 1 9 8 25 1 10 8 25 1 11 8 25 1 12 8 25 1 13 8 25 1 14 8 25 1 18 8 25 1 60 8 25 1 65 8 25 1 66 8 25 1 73 8 25 1 74 8 25 1 75 8 25 1 76 8 25 1 77 8 25 1 78 8 25 1 79 8 25 1 80 8 25 1 81 8 25 1 82 8 25 1 89 8 25 1 90 8 25 1 91 8 25 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 8 29 0 122 1 67 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 37 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 41 0 153 8 41 0 154 8 41 0 155 8 41 0 156 8 41 0 157 8 41 0 158 8 41 0 159 8 41 0 160 8 41 0 161 8 41 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 41 0 243 8 41 0 244 8 41 0 245 8 41 0 249 8 41 0 250 8 41 0 251 8 41 0 252 8 41 0 253 8 41 0 254 8 41 0 255 8 41 1 1 8 41 1 3 8 41 1 5 8 41 1 6 3 33 1 8 8 41 1 9 8 41 1 10 8 41 1 11 8 41 1 12 8 41 1 13 8 41 1 14 8 41 1 18 8 41 1 60 8 41 1 65 8 41 1 66 8 41 1 73 8 41 1 74 8 41 1 75 8 41 1 76 8 41 1 77 8 41 1 78 8 41 1 79 8 41 1 80 8 41 1 81 8 41 1 82 8 41 1 89 8 41 1 90 8 41 1 91 8 41 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 8 45 0 27 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 49 0 153 8 49 0 154 8 49 0 155 8 49 0 156 8 49 0 157 8 49 0 158 8 49 0 159 8 49 0 160 8 49 0 161 8 49 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 49 0 243 8 49 0 244 8 49 0 245 8 49 0 249 8 49 0 250 8 49 0 251 8 49 0 252 8 49 0 253 8 49 0 254 8 49 0 255 8 49 1 1 8 49 1 3 8 49 1 5 8 49 1 6 3 33 1 8 8 49 1 9 8 49 1 10 8 49 1 11 8 49 1 12 8 49 1 13 8 49 1 14 8 49 1 18 8 49 1 60 8 49 1 65 8 49 1 66 8 49 1 73 8 49 1 74 8 49 1 75 8 49 1 76 8 49 1 77 8 49 1 78 8 49 1 79 8 49 1 80 8 49 1 81 8 49 1 82 8 49 1 89 8 49 1 90 8 49 1 91 8 49 1 92] 
#[0 1 121 0 49] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 3 142 0 68 3 142 0 69 3 142 0 70 0 153 0 78 0 153 0 87 0 153 0 88 3 142 0 92 0 153 0 94 1 71 0 95 0 153 0 104 0 153 0 112 0 153 0 118 3 142 0 125 3 142 0 137 8 57 0 142 0 141 0 144 3 142 0 146 8 57 0 165 0 153 0 166 8 57 0 167 8 57 0 168 8 57 0 169 8 57 0 170] 
#[0 8 61 0 55] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 169 0 229 1 173 0 236] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 65 0 243 4 209 0 244 4 209 0 245 4 209 0 249 8 65 0 250 8 65 0 251 8 65 0 252 8 65 0 253 8 65 0 254 8 65 0 255 8 65 1 1 8 65 1 3 8 65 1 5 8 65 1 6 3 33 1 8 8 65 1 9 8 65 1 10 8 65 1 11 8 65 1 12 8 65 1 13 8 65 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 8 65 1 79 8 65 1 80 8 65 1 81 8 65 1 82 8 65 1 89 8 65 1 90 8 65 1 91 8 65 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 69 0 142 0 141 0 144 8 69 0 165 0 153 0 166 8 69 0 167 8 69 0 168 8 69 0 169 8 69 0 170] 
#[1 0 66 0 1 0 66 0 3 0 66 0 5 0 66 0 7 0 66 0 8 0 66 0 9 0 66 0 10 0 66 0 11 0 66 0 12 8 73 0 13 0 66 0 14 0 66 0 15 0 66 0 16 0 66 0 17 0 66 0 18 0 66 0 19 0 66 0 20 0 66 0 21 0 66 0 22 0 66 0 23 0 66 0 26 0 66 0 29 0 66 0 33 0 66 0 34 0 66 0 35 0 66 0 37 0 66 0 44 0 66 0 45 0 66 0 47 0 66 0 52 0 66 0 54 0 66 0 61 0 66 0 68 0 66 0 69 0 66 0 70 0 66 0 72 0 66 0 74 0 66 0 78 0 66 0 80 0 66 0 81 0 66 0 86 0 66 0 87 0 66 0 88 0 66 0 90 0 66 0 92 0 66 0 94 0 66 0 95 0 66 0 96 0 66 0 101 0 66 0 102 0 66 0 104 0 66 0 112 0 66 0 118 0 66 0 120 0 66 0 125 0 66 0 128 0 66 0 129 0 66 0 135 0 66 0 136 0 66 0 137 0 66 0 138 0 66 0 139 0 66 0 140 0 66 0 141 0 66 0 142 0 66 0 143 0 66 0 144 0 66 0 146] 
#[1 0 131 0 1 0 131 0 3 1 75 0 5 0 131 0 7 0 131 0 8 1 170 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 14 1 170 0 15 0 131 0 16 0 131 0 17 0 131 0 18 1 79 0 19 0 131 0 20 0 131 0 21 1 205 0 22 1 170 0 23 1 170 0 26 1 170 0 29 0 131 0 33 1 170 0 34 1 170 0 35 1 170 0 37 0 131 0 44 0 131 0 45 0 131 0 47 1 170 0 52 1 170 0 54 1 170 0 61 0 131 0 68 0 131 0 69 0 131 0 70 0 131 0 72 1 170 0 74 1 170 0 78 1 170 0 80 1 170 0 81 0 131 0 86 1 170 0 87 1 170 0 88 0 131 0 90 0 131 0 92 1 170 0 94 0 131 0 95 1 170 0 96 0 131 0 101 1 170 0 102 1 170 0 104 1 170 0 112 1 170 0 118 0 131 0 120 0 131 0 125 0 131 0 128 1 170 0 129 1 170 0 135 1 170 0 136 0 131 0 137 1 170 0 138 1 170 0 139 1 170 0 140 1 170 0 141 1 170 0 142 1 170 0 143 1 170 0 144 0 131 0 146 1 221 0 191 1 221 0 192 1 217 0 193 1 221 0 196 5 29 1 84 5 33 1 86] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 3 146 0 68 3 146 0 69 3 146 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 3 146 0 92 0 6 0 94 3 146 0 95 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 3 146 0 125 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 1 83 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 1 83 0 146 8 77 0 150] 
#[0 3 150 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 154 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 3 158 0 68 3 158 0 69 3 158 0 70 3 158 0 92 3 158 0 95 3 158 0 125 3 158 0 137 3 158 0 146 8 81 0 186] 
#[1 0 6 0 70 0 6 0 146 8 85 0 150] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 1 233 0 59 0 153 0 61 1 241 0 71 1 245 0 73 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 9 0 121 1 93 0 142 0 141 0 144 1 93 0 165 0 153 0 166 1 93 0 167 1 93 0 168 1 93 0 169 1 93 0 170 2 17 0 229 2 21 0 236] 
#[0 3 162 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 166 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 3 170 0 68 3 170 0 69 3 170 0 70 5 113 0 72 5 117 0 86 5 121 0 90 3 170 0 92 3 170 0 95 5 125 0 101 5 129 0 120 3 170 0 125 5 133 0 128 3 170 0 137 3 170 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 3 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 178 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 190 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 198 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 202 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 206 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 210 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 214 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 218 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 222 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 226 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 230 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 234 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 238 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 242 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 246 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 250 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 254 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 2 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 6 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 10 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 14 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 18 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 22 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 26 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 30 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 34 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 38 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 42 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 46 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 50 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 22 0 1 2 22 0 3 2 22 0 5 2 22 0 7 2 22 0 8 2 22 0 10 2 22 0 11 2 22 0 12 2 22 0 14 2 22 0 16 2 22 0 17 2 22 0 18 2 22 0 19 2 22 0 20 2 22 0 21 2 22 0 33 2 22 0 44 2 22 0 45 2 22 0 47 1 87 0 68 1 87 0 69 1 87 0 70 2 22 0 72 2 22 0 86 2 22 0 90 1 87 0 92 1 87 0 95 2 22 0 101 2 22 0 120 1 87 0 125 2 22 0 128 1 87 0 137 1 87 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 8 89 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 93 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 97 0 142 0 141 0 144 0 145 0 146 8 97 0 165 0 153 0 166 8 97 0 167 8 97 0 168 8 97 0 169 8 97 0 170 8 101 0 201] 
#[0 4 58 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[0 4 62 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 105 0 153 8 105 0 154 8 105 0 155 8 105 0 156 8 105 0 157 8 105 0 158 8 105 0 159 8 105 0 160 8 105 0 161 8 105 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 105 0 243 8 105 0 244 8 105 0 245 8 105 0 249 8 105 0 250 8 105 0 251 8 105 0 252 8 105 0 253 8 105 0 254 8 105 0 255 8 105 1 1 8 105 1 3 8 105 1 5 8 105 1 6 3 33 1 8 8 105 1 9 8 105 1 10 8 105 1 11 8 105 1 12 8 105 1 13 8 105 1 14 8 105 1 18 8 105 1 60 8 105 1 65 8 105 1 66 8 105 1 73 8 105 1 74 8 105 1 75 8 105 1 76 8 105 1 77 8 105 1 78 8 105 1 79 8 105 1 80 8 105 1 81 8 105 1 82 8 105 1 89 8 105 1 90 8 105 1 91 8 105 1 92] 
#[0 4 66 0 6 0 9] 
#[1 8 109 0 6 6 177 0 9 6 181 0 194] 
#[1 1 193 0 5 4 70 0 6 8 113 0 7 4 70 0 8 4 70 0 9 4 70 0 10 4 70 0 11 4 70 0 19 4 70 0 23 4 70 0 26 4 70 0 27 4 70 0 28 4 70 0 29 4 70 0 34 4 70 0 35 4 70 0 37 4 70 0 48 4 70 0 50 4 70 0 59 4 70 0 61 4 70 0 62 4 70 0 64 4 70 0 65 4 70 0 68 4 70 0 69 4 70 0 70 4 70 0 71 4 70 0 73 4 70 0 74 4 70 0 76 4 70 0 77 4 70 0 78 4 70 0 79 4 70 0 80 4 70 0 81 4 70 0 82 4 70 0 83 4 70 0 87 4 70 0 88 4 70 0 92 4 70 0 94 4 70 0 95 4 70 0 96 4 70 0 98 4 70 0 99 4 70 0 104 4 70 0 105 4 70 0 106 4 70 0 107 4 70 0 108 4 70 0 109 4 70 0 111 4 70 0 112 4 70 0 114 4 70 0 117 4 70 0 118 4 70 0 121 4 70 0 125 4 70 0 126 4 70 0 127 4 70 0 129 4 70 0 135 4 70 0 136 4 70 0 137 4 70 0 138 4 70 0 139 4 70 0 140 4 70 0 141 4 70 0 142 4 70 0 143 4 70 0 144 4 70 0 146 8 117 0 193 4 70 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 121 0 153 8 121 0 154 8 121 0 155 8 121 0 156 8 121 0 157 8 121 0 158 8 121 0 159 8 121 0 160 8 121 0 161 8 121 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 8 121 0 243 8 121 0 244 8 121 0 245 8 121 0 249 8 121 0 250 8 121 0 251 8 121 0 252 8 121 0 253 8 121 0 254 8 121 0 255 8 121 1 1 8 121 1 3 8 121 1 5 8 121 1 6 3 33 1 8 8 121 1 9 8 121 1 10 8 121 1 11 8 121 1 12 8 121 1 13 8 121 1 14 8 121 1 18 8 121 1 60 8 121 1 65 8 121 1 66 8 121 1 73 8 121 1 74 8 121 1 75 8 121 1 76 8 121 1 77 8 121 1 78 8 121 1 79 8 121 1 80 8 121 1 81 8 121 1 82 8 121 1 89 8 121 1 90 8 121 1 91 8 121 1 92] 
#[1 4 74 0 5 4 74 0 6 8 125 0 7 4 74 0 8 4 74 0 9 4 74 0 10 4 74 0 11 4 74 0 19 4 74 0 23 4 74 0 26 4 74 0 27 4 74 0 28 4 74 0 29 4 74 0 34 4 74 0 35 4 74 0 37 4 74 0 48 4 74 0 50 4 74 0 59 4 74 0 61 4 74 0 62 4 74 0 64 4 74 0 65 4 74 0 68 4 74 0 69 4 74 0 70 4 74 0 71 4 74 0 73 4 74 0 74 4 74 0 76 4 74 0 77 4 74 0 78 4 74 0 79 4 74 0 80 4 74 0 81 4 74 0 82 4 74 0 83 4 74 0 87 4 74 0 88 4 74 0 92 4 74 0 94 4 74 0 95 4 74 0 96 4 74 0 98 4 74 0 99 4 74 0 104 4 74 0 105 4 74 0 106 4 74 0 107 4 74 0 108 4 74 0 109 4 74 0 111 4 74 0 112 4 74 0 114 4 74 0 117 4 74 0 118 4 74 0 121 4 74 0 125 4 74 0 126 4 74 0 127 4 74 0 129 4 74 0 135 4 74 0 136 4 74 0 137 4 74 0 138 4 74 0 139 4 74 0 140 4 74 0 141 4 74 0 142 4 74 0 143 4 74 0 144 4 74 0 146 4 74 1 93] 
#[1 0 17 0 11 0 153 0 29 8 129 0 51 8 129 0 53 8 129 0 57 3 217 0 61 8 129 0 66 0 153 0 78 8 129 0 85 0 153 0 87 0 153 0 88 8 129 0 91 0 153 0 94 8 129 0 97 0 153 0 104 0 153 0 112 8 129 0 113 8 129 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 165 0 153 0 166 3 249 0 167 3 249 0 168 3 249 0 169 3 249 0 170 8 129 0 187 8 129 0 189 8 129 0 190] 
#[1 1 193 0 5 4 78 0 6 8 133 0 7 4 78 0 8 4 78 0 9 4 78 0 10 4 78 0 11 4 78 0 19 4 78 0 23 4 78 0 26 4 78 0 27 4 78 0 28 4 78 0 29 4 78 0 34 4 78 0 35 4 78 0 37 4 78 0 48 4 78 0 50 4 78 0 59 4 78 0 61 4 78 0 62 4 78 0 64 4 78 0 65 4 78 0 68 4 78 0 69 4 78 0 70 4 78 0 71 4 78 0 73 4 78 0 74 4 78 0 76 4 78 0 77 4 78 0 78 4 78 0 79 4 78 0 80 4 78 0 81 4 78 0 82 4 78 0 83 4 78 0 87 4 78 0 88 4 78 0 92 4 78 0 94 4 78 0 95 4 78 0 96 4 78 0 98 4 78 0 99 4 78 0 104 4 78 0 105 4 78 0 106 4 78 0 107 4 78 0 108 4 78 0 109 4 78 0 111 4 78 0 112 4 78 0 114 4 78 0 117 4 78 0 118 4 78 0 121 4 78 0 125 4 78 0 126 4 78 0 127 4 78 0 129 4 78 0 135 4 78 0 136 4 78 0 137 4 78 0 138 4 78 0 139 4 78 0 140 4 78 0 141 4 78 0 142 4 78 0 143 4 78 0 144 4 78 0 146 8 137 0 193 4 78 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 4 82 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 82 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 82 0 48 4 82 0 50 4 82 0 59 4 82 0 61 4 82 0 62 4 82 0 64 4 82 0 68 4 82 0 69 4 82 0 70 4 82 0 71 5 113 0 72 4 82 0 73 4 82 0 76 4 82 0 77 4 82 0 78 4 82 0 79 4 82 0 83 5 117 0 86 4 82 0 87 4 82 0 88 5 121 0 90 4 82 0 92 4 82 0 94 4 82 0 95 4 82 0 99 5 125 0 101 4 82 0 104 4 82 0 105 4 82 0 106 4 82 0 107 4 82 0 108 4 82 0 112 4 82 0 114 4 82 0 117 4 82 0 118 5 129 0 120 4 82 0 121 4 82 0 125 5 133 0 128 4 82 0 137 4 82 0 142 4 82 0 144 4 82 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 82 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 8 141 0 150 4 25 0 151 0 6 1 93] 
#[0 4 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 1 197 0 11 8 145 0 89] 
#[1 1 197 0 11 8 149 0 89] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 8 153 0 150 4 149 0 204] 
#[0 4 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 157 0 150 8 161 0 191 8 161 0 192 1 217 0 193 8 161 0 196] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 165 0 150 8 169 0 191 8 169 0 192 1 217 0 193 8 169 0 196 8 173 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 177 0 150 8 181 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 185 0 150 8 189 0 208] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 8 193 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 197 0 150] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 8 201 0 150 6 169 0 199] 
#[1 2 89 0 5 1 197 0 11 8 205 0 208] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 209 0 142 0 141 0 144 8 209 0 165 0 153 0 166 8 209 0 167 8 209 0 168 8 209 0 169 8 209 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 213 0 142 0 141 0 144 8 213 0 165 0 153 0 166 8 213 0 167 8 213 0 168 8 213 0 169 8 213 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 217 0 142 0 141 0 144 8 217 0 165 0 153 0 166 8 217 0 167 8 217 0 168 8 217 0 169 8 217 0 170] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 221 0 150 8 225 0 208] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 229 0 150 8 233 0 191 8 233 0 192 1 217 0 193 8 233 0 196] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 237 0 150 8 241 0 191 8 241 0 192 1 217 0 193 8 241 0 196 8 245 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 8 249 0 150 8 253 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 9 1 0 150 9 5 0 208] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 9 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 9 13 0 150] 
#[0 4 94 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 94 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 118 0 121 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146] 
#[1 9 17 0 70 0 145 0 146] 
#[0 4 98 0 70 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 9 21 0 146 1 61 0 165 0 153 0 166 1 61 0 167 1 61 0 168 1 61 0 169 1 61 0 170 9 25 0 175] 
#[1 2 89 0 5 9 29 0 46 9 33 0 208] 
#[1 2 89 0 5 9 37 0 46 9 41 0 208] 
#[0 9 45 0 71] 
#[1 1 197 0 11 9 49 0 19 4 102 0 29 4 102 0 61 4 102 0 70 4 102 0 78 4 102 0 87 4 102 0 88 4 102 0 94 4 102 0 104 4 102 0 112 4 102 0 118 4 102 0 142 4 102 0 144 4 102 0 146] 
#[0 4 106 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 53 0 142 0 141 0 144 9 53 0 165 0 153 0 166 9 53 0 167 9 53 0 168 9 53 0 169 9 53 0 170] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 9 57 0 191 9 57 0 192 1 217 0 193 9 57 0 196 7 113 0 212 9 61 0 213] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 9 65 0 102 0 153 0 104 0 153 0 112 0 153 0 118 9 69 0 142 0 141 0 144 9 69 0 165 0 153 0 166 9 69 0 167 9 69 0 168 9 69 0 169 9 69 0 170] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 9 73 0 191 9 73 0 192 1 217 0 193 9 73 0 196 7 113 0 212 9 77 0 213] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 81 0 153 9 81 0 154 9 81 0 155 9 81 0 156 9 81 0 157 9 81 0 158 9 81 0 159 9 81 0 160 9 81 0 161 9 81 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 81 0 243 9 81 0 244 9 81 0 245 9 81 0 249 9 81 0 250 9 81 0 251 9 81 0 252 9 81 0 253 9 81 0 254 9 81 0 255 9 81 1 1 9 81 1 3 9 81 1 5 9 81 1 6 3 33 1 8 9 81 1 9 9 81 1 10 9 81 1 11 9 81 1 12 9 81 1 13 9 81 1 14 9 81 1 18 9 81 1 60 9 81 1 65 9 81 1 66 9 81 1 73 9 81 1 74 9 81 1 75 9 81 1 76 9 81 1 77 9 81 1 78 9 81 1 79 9 81 1 80 9 81 1 81 9 81 1 82 9 81 1 89 9 81 1 90 9 81 1 91 9 81 1 92] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 9 85 0 213] 
#[0 4 110 0 6 0 9] 
#[0 4 114 0 6 0 9] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 89 0 142 0 141 0 144 9 89 0 165 0 153 0 166 9 89 0 167 9 89 0 168 9 89 0 169 9 89 0 170] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 9 93 0 191 9 93 0 192 1 217 0 193 9 93 0 196 7 113 0 212 9 97 0 213] 
#[1 9 101 0 6 9 105 0 9 9 109 0 209] 
#[1 0 6 0 70 0 6 0 146 9 113 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 117 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 4 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 9 141 0 24 0 25 0 29 0 36 0 38 1 15] 
#[1 4 122 0 1 4 122 0 3 4 122 0 5 4 122 0 6 4 122 0 7 4 122 0 8 9 145 0 9 4 122 0 10 4 122 0 11 4 122 0 12 4 122 0 13 4 122 0 14 4 122 0 15 4 122 0 16 4 122 0 17 4 122 0 18 4 122 0 19 4 122 0 20 4 122 0 21 4 122 0 22 4 122 0 23 4 122 0 26 4 122 0 27 4 122 0 28 4 122 0 29 4 122 0 33 4 122 0 34 4 122 0 35 4 122 0 37 4 122 0 44 4 122 0 45 4 122 0 47 4 122 0 48 4 122 0 50 4 122 0 59 4 122 0 61 4 122 0 62 4 122 0 64 4 122 0 65 4 122 0 68 4 122 0 69 4 122 0 70 4 122 0 71 4 122 0 72 4 122 0 73 4 122 0 74 4 122 0 76 4 122 0 77 4 122 0 78 4 122 0 79 4 122 0 80 4 122 0 81 4 122 0 82 4 122 0 83 4 122 0 86 4 122 0 87 4 122 0 88 4 122 0 90 4 122 0 92 4 122 0 94 4 122 0 95 4 122 0 96 4 122 0 98 4 122 0 99 4 122 0 101 4 122 0 104 4 122 0 105 4 122 0 106 4 122 0 107 4 122 0 108 4 122 0 109 4 122 0 111 4 122 0 112 4 122 0 114 4 122 0 115 4 122 0 117 4 122 0 118 4 122 0 119 4 122 0 120 4 122 0 121 4 122 0 125 4 122 0 126 4 122 0 127 4 122 0 128 4 122 0 129 4 122 0 135 4 122 0 136 4 122 0 137 4 122 0 138 4 122 0 139 4 122 0 140 4 122 0 141 4 122 0 142 4 122 0 143 4 122 0 144 4 122 0 146 9 149 1 63 4 122 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 153 0 153 9 153 0 154 9 153 0 155 9 153 0 156 9 153 0 157 9 153 0 158 9 153 0 159 9 153 0 160 9 153 0 161 9 153 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 153 0 243 9 153 0 244 9 153 0 245 9 153 0 249 9 153 0 250 9 153 0 251 9 153 0 252 9 153 0 253 9 153 0 254 9 153 0 255 9 153 1 1 9 153 1 3 9 153 1 5 9 153 1 6 3 33 1 8 9 153 1 9 9 153 1 10 9 153 1 11 9 153 1 12 9 153 1 13 9 153 1 14 9 153 1 18 9 153 1 60 9 153 1 65 9 153 1 66 9 153 1 73 9 153 1 74 9 153 1 75 9 153 1 76 9 153 1 77 9 153 1 78 9 153 1 79 9 153 1 80 9 153 1 81 9 153 1 82 9 153 1 89 9 153 1 90 9 153 1 91 9 153 1 92] 
#[1 9 157 0 134 9 161 0 164] 
#[0 4 126 0 10 0 134] 
#[0 4 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 4 134 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 165 0 153 9 165 0 154 9 165 0 155 9 165 0 156 9 165 0 157 9 165 0 158 9 165 0 159 9 165 0 160 9 165 0 161 9 165 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 165 0 243 9 165 0 244 9 165 0 245 9 165 0 249 9 165 0 250 9 165 0 251 9 165 0 252 9 165 0 253 9 165 0 254 9 165 0 255 9 165 1 1 9 165 1 3 9 165 1 5 9 165 1 6 3 33 1 8 9 165 1 9 9 165 1 10 9 165 1 11 9 165 1 12 9 165 1 13 9 165 1 14 9 165 1 18 9 165 1 60 9 165 1 65 9 165 1 66 9 165 1 73 9 165 1 74 9 165 1 75 9 165 1 76 9 165 1 77 9 165 1 78 9 165 1 79 9 165 1 80 9 165 1 81 9 165 1 82 9 165 1 89 9 165 1 90 9 165 1 91 9 165 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 9 169 0 102 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 173 0 153 9 173 0 154 9 173 0 155 9 173 0 156 9 173 0 157 9 173 0 158 9 173 0 159 9 173 0 160 9 173 0 161 9 173 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 173 0 243 9 173 0 244 9 173 0 245 9 173 0 249 9 173 0 250 9 173 0 251 9 173 0 252 9 173 0 253 9 173 0 254 9 173 0 255 9 173 1 1 9 173 1 3 9 173 1 5 9 173 1 6 3 33 1 8 9 173 1 9 9 173 1 10 9 173 1 11 9 173 1 12 9 173 1 13 9 173 1 14 9 173 1 18 9 173 1 60 9 173 1 65 9 173 1 66 9 173 1 73 9 173 1 74 9 173 1 75 9 173 1 76 9 173 1 77 9 173 1 78 9 173 1 79 9 173 1 80 9 173 1 81 9 173 1 82 9 173 1 89 9 173 1 90 9 173 1 91 9 173 1 92] 
#[1 5 37 0 1 1 91 0 3 5 45 0 5 4 138 0 6 5 49 0 7 5 53 0 8 4 138 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 138 0 13 1 95 0 14 4 138 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 138 0 22 4 138 0 23 4 138 0 26 4 138 0 27 4 138 0 28 4 138 0 29 5 97 0 33 4 138 0 34 4 138 0 35 4 138 0 37 1 99 0 44 5 105 0 45 5 109 0 47 4 138 0 48 4 138 0 50 4 138 0 59 4 138 0 61 4 138 0 62 4 138 0 64 4 138 0 65 4 138 0 68 4 138 0 69 4 138 0 70 4 138 0 71 5 113 0 72 4 138 0 73 4 138 0 74 4 138 0 76 4 138 0 77 4 138 0 78 4 138 0 79 4 138 0 80 4 138 0 81 4 138 0 82 4 138 0 83 5 117 0 86 4 138 0 87 4 138 0 88 5 121 0 90 4 138 0 92 4 138 0 94 4 138 0 95 4 138 0 96 4 138 0 98 4 138 0 99 5 125 0 101 4 138 0 104 4 138 0 105 4 138 0 106 4 138 0 107 4 138 0 108 4 138 0 109 4 138 0 111 4 138 0 112 4 138 0 114 4 138 0 115 4 138 0 117 4 138 0 118 4 138 0 119 1 103 0 120 4 138 0 121 4 138 0 125 4 138 0 126 4 138 0 127 5 133 0 128 4 138 0 129 4 138 0 135 4 138 0 136 4 138 0 137 4 138 0 138 4 138 0 139 4 138 0 140 4 138 0 141 4 138 0 142 4 138 0 143 4 138 0 144 4 138 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 138 1 93] 
#[1 3 58 0 1 3 58 0 3 3 58 0 5 3 58 0 6 3 58 0 7 3 58 0 8 9 177 0 9 3 58 0 10 3 58 0 11 3 58 0 12 3 58 0 13 3 58 0 14 1 107 0 15 3 58 0 16 3 58 0 17 3 58 0 18 3 58 0 19 3 58 0 20 3 58 0 21 3 58 0 22 3 58 0 23 3 58 0 26 3 58 0 27 3 58 0 28 3 58 0 29 3 58 0 33 3 58 0 34 3 58 0 35 3 58 0 37 3 58 0 44 3 58 0 45 3 58 0 47 3 58 0 48 3 58 0 50 3 58 0 59 3 58 0 61 3 58 0 62 3 58 0 64 3 58 0 65 3 58 0 68 3 58 0 69 3 58 0 70 3 58 0 71 3 58 0 72 3 58 0 73 3 58 0 74 3 58 0 76 3 58 0 77 3 58 0 78 3 58 0 79 3 58 0 80 3 58 0 81 3 58 0 82 3 58 0 83 3 58 0 86 3 58 0 87 3 58 0 88 3 58 0 90 3 58 0 92 3 58 0 94 3 58 0 95 3 58 0 96 3 58 0 98 3 58 0 99 3 58 0 101 3 58 0 104 3 58 0 105 3 58 0 106 3 58 0 107 3 58 0 108 3 58 0 109 3 58 0 111 3 58 0 112 3 58 0 114 3 58 0 115 3 58 0 117 3 58 0 118 3 58 0 119 3 58 0 120 3 58 0 121 3 58 0 125 3 58 0 126 3 58 0 127 3 58 0 128 3 58 0 129 3 58 0 135 3 58 0 136 3 58 0 137 3 58 0 138 3 58 0 139 3 58 0 140 3 58 0 141 3 58 0 142 3 58 0 143 3 58 0 144 3 58 0 146 9 185 1 88 3 58 1 93] 
#[0 4 142 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 4 146 0 1 4 146 0 3 4 146 0 5 4 146 0 6 4 146 0 7 4 146 0 8 9 189 0 9 4 146 0 10 4 146 0 11 4 146 0 12 4 146 0 13 4 146 0 14 1 111 0 15 4 146 0 16 4 146 0 17 4 146 0 18 4 146 0 19 4 146 0 20 4 146 0 21 4 146 0 22 4 146 0 23 4 146 0 26 4 146 0 27 4 146 0 28 4 146 0 29 4 146 0 33 4 146 0 34 4 146 0 35 4 146 0 37 4 146 0 44 4 146 0 45 4 146 0 47 4 146 0 48 4 146 0 50 4 146 0 59 4 146 0 61 4 146 0 62 4 146 0 64 4 146 0 65 4 146 0 68 4 146 0 69 4 146 0 70 4 146 0 71 4 146 0 72 4 146 0 73 4 146 0 74 4 146 0 76 4 146 0 77 4 146 0 78 4 146 0 79 4 146 0 80 4 146 0 81 4 146 0 82 4 146 0 83 4 146 0 86 4 146 0 87 4 146 0 88 4 146 0 90 4 146 0 92 4 146 0 94 4 146 0 95 4 146 0 96 4 146 0 98 4 146 0 99 4 146 0 101 4 146 0 104 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 111 4 146 0 112 4 146 0 114 4 146 0 115 4 146 0 117 4 146 0 118 4 146 0 119 4 146 0 120 4 146 0 121 4 146 0 125 4 146 0 126 4 146 0 127 4 146 0 128 4 146 0 129 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 138 4 146 0 139 4 146 0 140 4 146 0 141 4 146 0 142 4 146 0 143 4 146 0 144 4 146 0 146 9 197 1 87 4 146 1 93] 
#[0 4 150 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 1 115 0 3 5 45 0 5 4 154 0 6 5 49 0 7 5 53 0 8 4 154 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 154 0 13 1 119 0 14 4 154 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 154 0 22 4 154 0 23 4 154 0 26 4 154 0 27 4 154 0 28 4 154 0 29 5 97 0 33 4 154 0 34 4 154 0 35 4 154 0 37 1 123 0 44 5 105 0 45 5 109 0 47 4 154 0 48 4 154 0 50 4 154 0 59 4 154 0 61 4 154 0 62 4 154 0 64 4 154 0 65 4 154 0 68 4 154 0 69 4 154 0 70 4 154 0 71 5 113 0 72 4 154 0 73 4 154 0 74 4 154 0 76 4 154 0 77 4 154 0 78 4 154 0 79 4 154 0 80 4 154 0 81 4 154 0 82 4 154 0 83 5 117 0 86 4 154 0 87 4 154 0 88 5 121 0 90 4 154 0 92 4 154 0 94 4 154 0 95 4 154 0 96 4 154 0 98 4 154 0 99 5 125 0 101 4 154 0 104 4 154 0 105 4 154 0 106 4 154 0 107 4 154 0 108 4 154 0 109 4 154 0 111 4 154 0 112 4 154 0 114 4 154 0 115 4 154 0 117 4 154 0 118 4 154 0 119 1 127 0 120 4 154 0 121 4 154 0 125 4 154 0 126 4 154 0 127 5 133 0 128 4 154 0 129 4 154 0 135 4 154 0 136 4 154 0 137 4 154 0 138 4 154 0 139 4 154 0 140 4 154 0 141 4 154 0 142 4 154 0 143 4 154 0 144 4 154 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 154 1 93] 
#[0 9 201 0 6] 
#[0 4 158 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 1 131 0 3 5 45 0 5 4 162 0 6 5 49 0 7 5 53 0 8 4 162 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 162 0 13 1 135 0 14 4 162 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 162 0 22 4 162 0 23 4 162 0 26 4 162 0 27 4 162 0 28 4 162 0 29 5 97 0 33 4 162 0 34 4 162 0 35 4 162 0 37 1 139 0 44 5 105 0 45 5 109 0 47 4 162 0 48 4 162 0 50 4 162 0 59 4 162 0 61 4 162 0 62 4 162 0 64 4 162 0 65 4 162 0 68 4 162 0 69 4 162 0 70 4 162 0 71 5 113 0 72 4 162 0 73 4 162 0 74 4 162 0 76 4 162 0 77 4 162 0 78 4 162 0 79 4 162 0 80 4 162 0 81 4 162 0 82 4 162 0 83 5 117 0 86 4 162 0 87 4 162 0 88 5 121 0 90 4 162 0 92 4 162 0 94 4 162 0 95 4 162 0 96 4 162 0 98 4 162 0 99 5 125 0 101 4 162 0 104 4 162 0 105 4 162 0 106 4 162 0 107 4 162 0 108 4 162 0 109 4 162 0 111 4 162 0 112 4 162 0 114 4 162 0 115 4 162 0 117 4 162 0 118 4 162 0 119 1 143 0 120 4 162 0 121 4 162 0 125 4 162 0 126 4 162 0 127 5 133 0 128 4 162 0 129 4 162 0 135 4 162 0 136 4 162 0 137 4 162 0 138 4 162 0 139 4 162 0 140 4 162 0 141 4 162 0 142 4 162 0 143 4 162 0 144 4 162 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 162 1 93] 
#[1 5 37 0 1 1 147 0 3 5 45 0 5 4 166 0 6 5 49 0 7 5 53 0 8 4 166 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 166 0 13 1 151 0 14 4 166 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 166 0 22 4 166 0 23 4 166 0 26 4 166 0 27 4 166 0 28 4 166 0 29 5 97 0 33 4 166 0 34 4 166 0 35 4 166 0 37 1 155 0 44 5 105 0 45 5 109 0 47 4 166 0 48 4 166 0 50 4 166 0 59 4 166 0 61 4 166 0 62 4 166 0 64 4 166 0 65 4 166 0 68 4 166 0 69 4 166 0 70 4 166 0 71 5 113 0 72 4 166 0 73 4 166 0 74 4 166 0 76 4 166 0 77 4 166 0 78 4 166 0 79 4 166 0 80 4 166 0 81 4 166 0 82 4 166 0 83 5 117 0 86 4 166 0 87 4 166 0 88 5 121 0 90 4 166 0 92 4 166 0 94 4 166 0 95 4 166 0 96 4 166 0 98 4 166 0 99 5 125 0 101 4 166 0 104 4 166 0 105 4 166 0 106 4 166 0 107 4 166 0 108 4 166 0 109 4 166 0 111 4 166 0 112 4 166 0 114 4 166 0 115 4 166 0 117 4 166 0 118 4 166 0 119 1 159 0 120 4 166 0 121 4 166 0 125 4 166 0 126 4 166 0 127 5 133 0 128 4 166 0 129 4 166 0 135 4 166 0 136 4 166 0 137 4 166 0 138 4 166 0 139 4 166 0 140 4 166 0 141 4 166 0 142 4 166 0 143 4 166 0 144 4 166 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 166 1 93] 
#[1 5 37 0 1 1 163 0 3 5 45 0 5 4 170 0 6 5 49 0 7 5 53 0 8 4 170 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 170 0 13 1 167 0 14 4 170 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 170 0 22 4 170 0 23 4 170 0 26 4 170 0 27 4 170 0 28 4 170 0 29 5 97 0 33 4 170 0 34 4 170 0 35 4 170 0 37 1 171 0 44 5 105 0 45 5 109 0 47 4 170 0 48 4 170 0 50 4 170 0 59 4 170 0 61 4 170 0 62 4 170 0 64 4 170 0 65 4 170 0 68 4 170 0 69 4 170 0 70 4 170 0 71 5 113 0 72 4 170 0 73 4 170 0 74 4 170 0 76 4 170 0 77 4 170 0 78 4 170 0 79 4 170 0 80 4 170 0 81 4 170 0 82 4 170 0 83 5 117 0 86 4 170 0 87 4 170 0 88 5 121 0 90 4 170 0 92 4 170 0 94 4 170 0 95 4 170 0 96 4 170 0 98 4 170 0 99 5 125 0 101 4 170 0 104 4 170 0 105 4 170 0 106 4 170 0 107 4 170 0 108 4 170 0 109 4 170 0 111 4 170 0 112 4 170 0 114 4 170 0 115 4 170 0 117 4 170 0 118 4 170 0 119 1 175 0 120 4 170 0 121 4 170 0 125 4 170 0 126 4 170 0 127 5 133 0 128 4 170 0 129 4 170 0 135 4 170 0 136 4 170 0 137 4 170 0 138 4 170 0 139 4 170 0 140 4 170 0 141 4 170 0 142 4 170 0 143 4 170 0 144 4 170 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 170 1 93] 
#[1 5 37 0 1 1 179 0 3 5 45 0 5 4 174 0 6 5 49 0 7 5 53 0 8 4 174 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 174 0 13 1 183 0 14 4 174 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 174 0 22 4 174 0 23 4 174 0 26 4 174 0 27 4 174 0 28 4 174 0 29 5 97 0 33 4 174 0 34 4 174 0 35 4 174 0 37 1 187 0 44 5 105 0 45 5 109 0 47 4 174 0 48 4 174 0 50 4 174 0 59 4 174 0 61 4 174 0 62 4 174 0 64 4 174 0 65 4 174 0 68 4 174 0 69 4 174 0 70 4 174 0 71 5 113 0 72 4 174 0 73 4 174 0 74 4 174 0 76 4 174 0 77 4 174 0 78 4 174 0 79 4 174 0 80 4 174 0 81 4 174 0 82 4 174 0 83 5 117 0 86 4 174 0 87 4 174 0 88 5 121 0 90 4 174 0 92 4 174 0 94 4 174 0 95 4 174 0 96 4 174 0 98 4 174 0 99 5 125 0 101 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 109 4 174 0 111 4 174 0 112 4 174 0 114 4 174 0 115 4 174 0 117 4 174 0 118 4 174 0 119 1 191 0 120 4 174 0 121 4 174 0 125 4 174 0 126 4 174 0 127 5 133 0 128 4 174 0 129 4 174 0 135 4 174 0 136 4 174 0 137 4 174 0 138 4 174 0 139 4 174 0 140 4 174 0 141 4 174 0 142 4 174 0 143 4 174 0 144 4 174 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 174 1 93] 
#[1 5 37 0 1 1 195 0 3 5 45 0 5 4 178 0 6 5 49 0 7 5 53 0 8 4 178 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 178 0 13 1 199 0 14 4 178 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 178 0 22 4 178 0 23 4 178 0 26 4 178 0 27 4 178 0 28 4 178 0 29 5 97 0 33 4 178 0 34 4 178 0 35 4 178 0 37 1 203 0 44 5 105 0 45 5 109 0 47 4 178 0 48 4 178 0 50 4 178 0 59 4 178 0 61 4 178 0 62 4 178 0 64 4 178 0 65 4 178 0 68 4 178 0 69 4 178 0 70 4 178 0 71 5 113 0 72 4 178 0 73 4 178 0 74 4 178 0 76 4 178 0 77 4 178 0 78 4 178 0 79 4 178 0 80 4 178 0 81 4 178 0 82 4 178 0 83 5 117 0 86 4 178 0 87 4 178 0 88 5 121 0 90 4 178 0 92 4 178 0 94 4 178 0 95 4 178 0 96 4 178 0 98 4 178 0 99 5 125 0 101 4 178 0 104 4 178 0 105 4 178 0 106 4 178 0 107 4 178 0 108 4 178 0 109 4 178 0 111 4 178 0 112 4 178 0 114 4 178 0 115 4 178 0 117 4 178 0 118 4 178 0 119 1 207 0 120 4 178 0 121 4 178 0 125 4 178 0 126 4 178 0 127 5 133 0 128 4 178 0 129 4 178 0 135 4 178 0 136 4 178 0 137 4 178 0 138 4 178 0 139 4 178 0 140 4 178 0 141 4 178 0 142 4 178 0 143 4 178 0 144 4 178 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 178 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 205 0 153 9 205 0 154 9 205 0 155 9 205 0 156 9 205 0 157 9 205 0 158 9 205 0 159 9 205 0 160 9 205 0 161 9 205 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 205 0 243 9 205 0 244 9 205 0 245 9 205 0 249 9 205 0 250 9 205 0 251 9 205 0 252 9 205 0 253 9 205 0 254 9 205 0 255 9 205 1 1 9 205 1 3 9 205 1 5 9 205 1 6 3 33 1 8 9 205 1 9 9 205 1 10 9 205 1 11 9 205 1 12 9 205 1 13 9 205 1 14 9 205 1 18 9 205 1 60 9 205 1 65 9 205 1 66 9 205 1 73 9 205 1 74 9 205 1 75 9 205 1 76 9 205 1 77 9 205 1 78 9 205 1 79 9 205 1 80 9 205 1 81 9 205 1 82 9 205 1 89 9 205 1 90 9 205 1 91 9 205 1 92] 
#[1 0 131 0 1 0 131 0 3 1 75 0 5 1 211 0 6 0 131 0 7 0 131 0 8 1 211 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 14 1 170 0 15 0 131 0 16 0 131 0 17 0 131 0 18 1 215 0 19 0 131 0 20 0 131 0 21 1 205 0 22 1 170 0 23 1 170 0 26 1 170 0 29 0 131 0 33 1 170 0 34 1 170 0 35 1 170 0 37 0 131 0 44 0 131 0 45 0 131 0 47 1 170 0 52 1 170 0 54 1 170 0 61 0 131 0 72 1 170 0 74 1 170 0 78 1 170 0 80 1 170 0 81 0 131 0 86 1 170 0 87 1 170 0 88 0 131 0 90 1 170 0 94 1 170 0 96 0 131 0 101 1 170 0 102 1 170 0 104 1 170 0 112 1 170 0 118 0 131 0 120 0 131 0 128 1 170 0 129 1 170 0 135 1 170 0 136 1 170 0 137 1 170 0 138 1 170 0 139 1 170 0 140 1 170 0 141 1 170 0 142 1 170 0 143 1 170 0 144 7 109 0 191 7 109 0 192 1 217 0 193 7 109 0 196 7 113 0 212 7 117 0 213 5 29 1 84 5 33 1 86] 
#[1 0 6 0 70 0 6 0 146 9 209 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 213 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 217 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 9 221 0 150] 
#[1 0 6 0 70 0 6 0 146 9 225 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 229 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 9 233 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 9 237 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 182 0 68 4 182 0 69 4 182 0 70 5 113 0 72 5 117 0 86 5 121 0 90 4 182 0 92 4 182 0 95 5 125 0 101 5 129 0 120 4 182 0 125 5 133 0 128 4 182 0 137 4 182 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 241 0 142 0 141 0 144 9 241 0 165 0 153 0 166 9 241 0 167 9 241 0 168 9 241 0 169 9 241 0 170] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 9 245 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 249 0 243 4 209 0 244 4 209 0 245 4 209 0 249 9 249 0 250 9 249 0 251 9 249 0 252 9 249 0 253 9 249 0 254 9 249 0 255 9 249 1 1 9 249 1 3 9 249 1 5 9 249 1 6 3 33 1 8 9 249 1 9 9 249 1 10 9 249 1 11 9 249 1 12 9 249 1 13 9 249 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 9 249 1 79 9 249 1 80 9 249 1 81 9 249 1 82 9 249 1 89 9 249 1 90 9 249 1 91 9 249 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 9 253 0 243 4 209 0 244 4 209 0 245 4 209 0 249 9 253 0 250 9 253 0 251 9 253 0 252 9 253 0 253 9 253 0 254 9 253 0 255 9 253 1 1 9 253 1 3 9 253 1 5 9 253 1 6 3 33 1 8 9 253 1 9 9 253 1 10 9 253 1 11 9 253 1 12 9 253 1 13 9 253 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 9 253 1 79 9 253 1 80 9 253 1 81 9 253 1 82 9 253 1 89 9 253 1 90 9 253 1 91 9 253 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 0 6 0 92 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 10 1 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 5 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 10 9 0 119 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 141 0 81 10 13 0 109 10 17 1 65] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 2 137 0 80 2 141 0 81 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 10 21 1 60 10 21 1 65 10 21 1 66] 
#[0 4 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 197 0 11 4 190 0 68 4 190 0 69 4 190 0 70 4 190 0 92 4 190 0 95 4 190 0 125 4 190 0 137 4 190 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 25 0 153 10 25 0 154 10 25 0 155 10 25 0 156 10 25 0 157 10 25 0 158 10 25 0 159 10 25 0 160 10 25 0 161 10 25 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 10 25 0 243 10 25 0 244 10 25 0 245 10 25 0 249 10 25 0 250 10 25 0 251 10 25 0 252 10 25 0 253 10 25 0 254 10 25 0 255 10 25 1 1 10 25 1 3 10 25 1 5 10 25 1 6 3 33 1 8 10 25 1 9 10 25 1 10 10 25 1 11 10 25 1 12 10 25 1 13 10 25 1 14 10 25 1 18 10 25 1 60 10 25 1 65 10 25 1 66 10 25 1 73 10 25 1 74 10 25 1 75 10 25 1 76 10 25 1 77 10 25 1 78 10 25 1 79 10 25 1 80 10 25 1 81 10 25 1 82 10 25 1 89 10 25 1 90 10 25 1 91 10 25 1 92] 
#[1 1 182 0 1 1 182 0 3 1 227 0 5 1 182 0 7 1 227 0 8 1 227 0 10 1 227 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 125 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 29 0 150] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 33 0 150] 
#[1 4 194 0 5 4 194 0 8 4 194 0 10 4 194 0 11 4 194 0 23 4 194 0 26 4 194 0 27 4 194 0 28 4 194 0 29 4 194 0 34 4 194 0 35 4 194 0 37 4 194 0 48 4 194 0 59 4 194 0 61 4 194 0 64 4 194 0 65 4 194 0 68 4 194 0 69 4 194 0 70 4 194 0 71 4 194 0 73 4 194 0 74 4 194 0 76 4 194 0 78 4 194 0 79 4 194 0 80 4 194 0 81 4 194 0 82 4 194 0 87 4 194 0 88 4 194 0 92 4 194 0 94 4 194 0 95 4 194 0 96 4 194 0 98 4 194 0 99 4 194 0 104 4 194 0 105 4 194 0 107 4 194 0 108 4 194 0 109 4 194 0 111 4 194 0 112 4 194 0 114 4 194 0 118 4 194 0 121 4 194 0 125 4 194 0 126 4 194 0 127 4 194 0 129 4 194 0 135 4 194 0 136 4 194 0 137 4 194 0 138 4 194 0 139 4 194 0 140 4 194 0 141 4 194 0 142 4 194 0 143 4 194 0 144 10 37 0 145 4 194 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 10 41 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 10 45 0 180 5 253 0 183 10 49 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 4 198 0 68 4 198 0 69 4 198 0 70 4 198 0 92 4 198 0 95 4 198 0 125 4 198 0 137 1 231 0 146 10 53 0 180 10 57 0 185] 
#[1 10 61 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 10 65 0 150] 
#[0 10 69 0 121] 
#[1 1 193 0 5 1 197 0 11 1 205 0 22 10 73 0 191 10 73 0 192 1 217 0 193 10 73 0 196] 
#[0 4 202 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 4 206 0 6 5 49 0 7 5 53 0 8 4 206 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 4 210 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 77 0 153 10 77 0 154 10 77 0 155 10 77 0 156 10 77 0 157 10 77 0 158 10 77 0 159 10 77 0 160 10 77 0 161 10 77 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 10 77 0 243 10 77 0 244 10 77 0 245 10 77 0 249 10 77 0 250 10 77 0 251 10 77 0 252 10 77 0 253 10 77 0 254 10 77 0 255 10 77 1 1 10 77 1 3 10 77 1 5 10 77 1 6 3 33 1 8 10 77 1 9 10 77 1 10 10 77 1 11 10 77 1 12 10 77 1 13 10 77 1 14 10 77 1 18 10 77 1 60 10 77 1 65 10 77 1 66 10 77 1 73 10 77 1 74 10 77 1 75 10 77 1 76 10 77 1 77 10 77 1 78 10 77 1 79 10 77 1 80 10 77 1 81 10 77 1 82 10 77 1 89 10 77 1 90 10 77 1 91 10 77 1 92] 
#[1 4 214 0 5 4 214 0 6 10 81 0 7 4 214 0 8 4 214 0 9 4 214 0 10 4 214 0 11 4 214 0 19 4 214 0 23 4 214 0 26 4 214 0 27 4 214 0 28 4 214 0 29 4 214 0 34 4 214 0 35 4 214 0 37 4 214 0 48 4 214 0 50 4 214 0 59 4 214 0 61 4 214 0 62 4 214 0 64 4 214 0 65 4 214 0 68 4 214 0 69 4 214 0 70 4 214 0 71 4 214 0 73 4 214 0 74 4 214 0 76 4 214 0 77 4 214 0 78 4 214 0 79 4 214 0 80 4 214 0 81 4 214 0 82 4 214 0 83 4 214 0 87 4 214 0 88 4 214 0 92 4 214 0 94 4 214 0 95 4 214 0 96 4 214 0 98 4 214 0 99 4 214 0 104 4 214 0 105 4 214 0 106 4 214 0 107 4 214 0 108 4 214 0 109 4 214 0 111 4 214 0 112 4 214 0 114 4 214 0 117 4 214 0 118 4 214 0 121 4 214 0 125 4 214 0 126 4 214 0 127 4 214 0 129 4 214 0 135 4 214 0 136 4 214 0 137 4 214 0 138 4 214 0 139 4 214 0 140 4 214 0 141 4 214 0 142 4 214 0 143 4 214 0 144 4 214 0 146 4 214 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 4 218 0 6 4 218 0 7 4 218 0 8 4 218 0 9 4 218 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 4 218 0 19 5 89 0 20 5 93 0 21 4 218 0 23 4 218 0 26 4 218 0 27 4 218 0 28 4 218 0 29 5 97 0 33 4 218 0 34 4 218 0 35 4 218 0 37 5 101 0 44 5 105 0 45 5 109 0 47 4 218 0 48 4 218 0 50 4 218 0 59 4 218 0 61 4 218 0 62 4 218 0 64 4 218 0 65 4 218 0 68 4 218 0 69 4 218 0 70 4 218 0 71 5 113 0 72 4 218 0 73 4 218 0 74 4 218 0 76 4 218 0 77 4 218 0 78 4 218 0 79 4 218 0 80 4 218 0 81 4 218 0 82 4 218 0 83 5 117 0 86 4 218 0 87 4 218 0 88 5 121 0 90 4 218 0 92 4 218 0 94 4 218 0 95 4 218 0 96 4 218 0 98 4 218 0 99 5 125 0 101 4 218 0 104 4 218 0 105 4 218 0 106 4 218 0 107 4 218 0 108 4 218 0 109 4 218 0 111 4 218 0 112 4 218 0 114 4 218 0 117 4 218 0 118 5 129 0 120 4 218 0 121 4 218 0 125 4 218 0 126 4 218 0 127 5 133 0 128 4 218 0 129 4 218 0 135 4 218 0 136 4 218 0 137 4 218 0 138 4 218 0 139 4 218 0 140 4 218 0 141 4 218 0 142 4 218 0 143 4 218 0 144 4 218 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 4 218 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 85 0 153 10 85 0 154 10 85 0 155 10 85 0 156 10 85 0 157 10 85 0 158 10 85 0 159 10 85 0 160 10 85 0 161 10 85 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 10 85 0 243 10 85 0 244 10 85 0 245 10 85 0 249 10 85 0 250 10 85 0 251 10 85 0 252 10 85 0 253 10 85 0 254 10 85 0 255 10 85 1 1 10 85 1 3 10 85 1 5 10 85 1 6 3 33 1 8 10 85 1 9 10 85 1 10 10 85 1 11 10 85 1 12 10 85 1 13 10 85 1 14 10 85 1 18 10 85 1 60 10 85 1 65 10 85 1 66 10 85 1 73 10 85 1 74 10 85 1 75 10 85 1 76 10 85 1 77 10 85 1 78 10 85 1 79 10 85 1 80 10 85 1 81 10 85 1 82 10 85 1 89 10 85 1 90 10 85 1 91 10 85 1 92] 
#[1 1 193 0 5 4 222 0 6 10 89 0 7 4 222 0 8 4 222 0 9 4 222 0 10 4 222 0 11 4 222 0 19 4 222 0 23 4 222 0 26 4 222 0 27 4 222 0 28 4 222 0 29 4 222 0 34 4 222 0 35 4 222 0 37 4 222 0 48 4 222 0 50 4 222 0 59 4 222 0 61 4 222 0 62 4 222 0 64 4 222 0 65 4 222 0 68 4 222 0 69 4 222 0 70 4 222 0 71 4 222 0 73 4 222 0 74 4 222 0 76 4 222 0 77 4 222 0 78 4 222 0 79 4 222 0 80 4 222 0 81 4 222 0 82 4 222 0 83 4 222 0 87 4 222 0 88 4 222 0 92 4 222 0 94 4 222 0 95 4 222 0 96 4 222 0 98 4 222 0 99 4 222 0 104 4 222 0 105 4 222 0 106 4 222 0 107 4 222 0 108 4 222 0 109 4 222 0 111 4 222 0 112 4 222 0 114 4 222 0 117 4 222 0 118 4 222 0 121 4 222 0 125 4 222 0 126 4 222 0 127 4 222 0 129 4 222 0 135 4 222 0 136 4 222 0 137 4 222 0 138 4 222 0 139 4 222 0 140 4 222 0 141 4 222 0 142 4 222 0 143 4 222 0 144 4 222 0 146 10 93 0 193 4 222 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 97 0 153 10 97 0 154 10 97 0 155 10 97 0 156 10 97 0 157 10 97 0 158 10 97 0 159 10 97 0 160 10 97 0 161 10 97 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 10 97 0 243 10 97 0 244 10 97 0 245 10 97 0 249 10 97 0 250 10 97 0 251 10 97 0 252 10 97 0 253 10 97 0 254 10 97 0 255 10 97 1 1 10 97 1 3 10 97 1 5 10 97 1 6 3 33 1 8 10 97 1 9 10 97 1 10 10 97 1 11 10 97 1 12 10 97 1 13 10 97 1 14 10 97 1 18 10 97 1 60 10 97 1 65 10 97 1 66 10 97 1 73 10 97 1 74 10 97 1 75 10 97 1 76 10 97 1 77 10 97 1 78 10 97 1 79 10 97 1 80 10 97 1 81 10 97 1 82 10 97 1 89 10 97 1 90 10 97 1 91 10 97 1 92] 
#[1 4 226 0 5 4 226 0 6 10 101 0 7 4 226 0 8 4 226 0 9 4 226 0 10 4 226 0 11 4 226 0 19 4 226 0 23 4 226 0 26 4 226 0 27 4 226 0 28 4 226 0 29 4 226 0 34 4 226 0 35 4 226 0 37 4 226 0 48 4 226 0 50 4 226 0 59 4 226 0 61 4 226 0 62 4 226 0 64 4 226 0 65 4 226 0 68 4 226 0 69 4 226 0 70 4 226 0 71 4 226 0 73 4 226 0 74 4 226 0 76 4 226 0 77 4 226 0 78 4 226 0 79 4 226 0 80 4 226 0 81 4 226 0 82 4 226 0 83 4 226 0 87 4 226 0 88 4 226 0 92 4 226 0 94 4 226 0 95 4 226 0 96 4 226 0 98 4 226 0 99 4 226 0 104 4 226 0 105 4 226 0 106 4 226 0 107 4 226 0 108 4 226 0 109 4 226 0 111 4 226 0 112 4 226 0 114 4 226 0 117 4 226 0 118 4 226 0 121 4 226 0 125 4 226 0 126 4 226 0 127 4 226 0 129 4 226 0 135 4 226 0 136 4 226 0 137 4 226 0 138 4 226 0 139 4 226 0 140 4 226 0 141 4 226 0 142 4 226 0 143 4 226 0 144 4 226 0 146 4 226 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 165 0 153 0 166 0 149 0 167 0 149 0 168 0 149 0 169 0 149 0 170 6 217 0 173 6 217 0 174 6 217 0 176 6 217 0 177 6 217 0 181 6 217 0 182 0 201 0 188 6 217 0 197 6 217 0 198 6 217 0 202 6 217 0 203 6 217 0 214 6 217 0 215 6 217 0 216 0 233 0 217 6 217 0 218 6 217 0 219 6 217 0 220 6 217 0 221 6 217 0 222 6 217 0 223 6 217 0 224 6 217 0 225 6 217 0 226 6 217 0 227 6 217 0 228 1 25 0 230 6 217 0 231 6 217 0 232 6 217 0 233 6 217 0 234 6 217 0 235 6 217 0 239 6 217 0 242 4 230 1 93] 
#[1 2 177 0 140 10 105 0 160] 
#[1 2 177 0 140 10 109 0 160] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 10 113 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 81 0 142 0 141 0 144 0 145 0 146 7 81 0 165 0 153 0 166 7 81 0 167 7 81 0 168 7 81 0 169 7 81 0 170 7 85 0 206] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 117 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 121 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 125 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 129 0 150] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 133 0 150 10 137 0 191 10 137 0 192 1 217 0 193 10 137 0 196] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 141 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 145 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 149 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 153 0 150] 
#[1 0 6 0 70 0 6 0 146 10 157 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 161 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 10 165 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 97 0 142 0 141 0 144 0 145 0 146 8 97 0 165 0 153 0 166 8 97 0 167 8 97 0 168 8 97 0 169 8 97 0 170 8 101 0 201] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 169 0 150 10 173 0 191 10 173 0 192 1 217 0 193 10 173 0 196] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 177 0 150 10 181 0 191 10 181 0 192 1 217 0 193 10 181 0 196 10 185 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 189 0 150 10 193 0 208] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 197 0 150 10 201 0 208] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 205 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 209 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 213 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 217 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 221 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 225 0 150] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 229 0 150 10 233 0 191 10 233 0 192 1 217 0 193 10 233 0 196] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 237 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 241 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 10 245 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 10 249 0 150] 
#[1 0 6 0 70 0 6 0 146 10 253 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 11 1 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 4 234 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 4 238 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 94 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 118 0 121 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146] 
#[0 4 242 0 70 0 146] 
#[1 2 177 0 140 11 5 0 160] 
#[1 1 193 0 5 1 205 0 22 11 9 0 191 11 9 0 192 1 217 0 193 11 9 0 196] 
#[1 2 177 0 140 11 13 0 160] 
#[0 4 246 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 4 250 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 17 0 153 11 17 0 154 11 17 0 155 11 17 0 156 11 17 0 157 11 17 0 158 11 17 0 159 11 17 0 160 11 17 0 161 11 17 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 11 17 0 243 11 17 0 244 11 17 0 245 11 17 0 249 11 17 0 250 11 17 0 251 11 17 0 252 11 17 0 253 11 17 0 254 11 17 0 255 11 17 1 1 11 17 1 3 11 17 1 5 11 17 1 6 3 33 1 8 11 17 1 9 11 17 1 10 11 17 1 11 11 17 1 12 11 17 1 13 11 17 1 14 11 17 1 18 11 17 1 60 11 17 1 65 11 17 1 66 11 17 1 73 11 17 1 74 11 17 1 75 11 17 1 76 11 17 1 77 11 17 1 78 11 17 1 79 11 17 1 80 11 17 1 81 11 17 1 82 11 17 1 89 11 17 1 90 11 17 1 91 11 17 1 92] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 11 21 0 191 11 21 0 192 1 217 0 193 11 21 0 196 7 113 0 212 11 25 0 213] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 11 29 0 213] 
#[0 4 254 0 6 0 9] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 11 33 0 142 0 141 0 144 11 33 0 165 0 153 0 166 11 33 0 167 11 33 0 168 11 33 0 169 11 33 0 170] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 11 37 0 191 11 37 0 192 1 217 0 193 11 37 0 196 7 113 0 212 11 41 0 213] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 11 45 0 213] 
#[0 5 2 0 6 0 9] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 6 0 6 5 49 0 7 5 53 0 8 5 6 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 5 10 0 6 0 9] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 11 49 0 191 11 49 0 192 1 217 0 193 11 49 0 196 7 113 0 212 11 53 0 213] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 11 57 0 213] 
#[0 5 14 0 6 0 9] 
#[0 5 18 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 4 157 0 52 4 177 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 4 165 0 100 4 169 0 102 0 153 0 104 0 153 0 112 0 153 0 118 4 173 0 142 0 141 0 144 4 173 0 165 0 153 0 166 4 173 0 167 4 173 0 168 4 173 0 169 4 173 0 170 4 177 0 207 11 61 0 211] 
#[0 5 22 0 6 0 9] 
#[1 11 65 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 69 0 150] 
#[0 5 26 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 30 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 34 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 38 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 42 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[1 11 73 0 22 11 105 0 30 11 105 0 31 11 105 0 32 11 89 0 39 11 105 0 40 11 101 0 42 11 101 1 16 11 105 1 17] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 11 109 0 155 4 253 0 165 0 153 0 166 4 253 0 167 4 253 0 168 4 253 0 169 4 253 0 170 11 109 1 61] 
#[0 5 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 1 235 0 3 5 45 0 5 5 50 0 6 5 49 0 7 5 53 0 8 5 50 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 50 0 13 1 239 0 14 5 50 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 50 0 22 5 50 0 23 5 50 0 26 5 50 0 27 5 50 0 28 5 50 0 29 5 97 0 33 5 50 0 34 5 50 0 35 5 50 0 37 1 243 0 44 5 105 0 45 5 109 0 47 5 50 0 48 5 50 0 50 5 50 0 59 5 50 0 61 5 50 0 62 5 50 0 64 5 50 0 65 5 50 0 68 5 50 0 69 5 50 0 70 5 50 0 71 5 113 0 72 5 50 0 73 5 50 0 74 5 50 0 76 5 50 0 77 5 50 0 78 5 50 0 79 5 50 0 80 5 50 0 81 5 50 0 82 5 50 0 83 5 117 0 86 5 50 0 87 5 50 0 88 5 121 0 90 5 50 0 92 5 50 0 94 5 50 0 95 5 50 0 96 5 50 0 98 5 50 0 99 5 125 0 101 5 50 0 104 5 50 0 105 5 50 0 106 5 50 0 107 5 50 0 108 5 50 0 109 5 50 0 111 5 50 0 112 5 50 0 114 5 50 0 115 5 50 0 117 5 50 0 118 5 50 0 119 1 247 0 120 5 50 0 121 5 50 0 125 5 50 0 126 5 50 0 127 5 133 0 128 5 50 0 129 5 50 0 135 5 50 0 136 5 50 0 137 5 50 0 138 5 50 0 139 5 50 0 140 5 50 0 141 5 50 0 142 5 50 0 143 5 50 0 144 5 50 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 50 1 93] 
#[0 5 54 0 10 0 131 0 134] 
#[1 11 113 0 10 11 117 0 134] 
#[1 5 37 0 1 1 251 0 3 5 45 0 5 5 58 0 6 5 49 0 7 5 53 0 8 5 58 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 58 0 13 1 255 0 14 5 58 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 58 0 22 5 58 0 23 5 58 0 26 5 58 0 27 5 58 0 28 5 58 0 29 5 97 0 33 5 58 0 34 5 58 0 35 5 58 0 37 2 3 0 44 5 105 0 45 5 109 0 47 5 58 0 48 5 58 0 50 5 58 0 59 5 58 0 61 5 58 0 62 5 58 0 64 5 58 0 65 5 58 0 68 5 58 0 69 5 58 0 70 5 58 0 71 5 113 0 72 5 58 0 73 5 58 0 74 5 58 0 76 5 58 0 77 5 58 0 78 5 58 0 79 5 58 0 80 5 58 0 81 5 58 0 82 5 58 0 83 5 117 0 86 5 58 0 87 5 58 0 88 5 121 0 90 5 58 0 92 5 58 0 94 5 58 0 95 5 58 0 96 5 58 0 98 5 58 0 99 5 125 0 101 5 58 0 104 5 58 0 105 5 58 0 106 5 58 0 107 5 58 0 108 5 58 0 109 5 58 0 111 5 58 0 112 5 58 0 114 5 58 0 115 5 58 0 117 5 58 0 118 5 58 0 119 2 7 0 120 5 58 0 121 5 58 0 125 5 58 0 126 5 58 0 127 5 133 0 128 5 58 0 129 5 58 0 135 5 58 0 136 5 58 0 137 5 58 0 138 5 58 0 139 5 58 0 140 5 58 0 141 5 58 0 142 5 58 0 143 5 58 0 144 5 58 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 58 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 121 0 153 11 121 0 154 11 121 0 155 11 121 0 156 11 121 0 157 11 121 0 158 11 121 0 159 11 121 0 160 11 121 0 161 11 121 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 11 121 0 243 11 121 0 244 11 121 0 245 11 121 0 249 11 121 0 250 11 121 0 251 11 121 0 252 11 121 0 253 11 121 0 254 11 121 0 255 11 121 1 1 11 121 1 3 11 121 1 5 11 121 1 6 3 33 1 8 11 121 1 9 11 121 1 10 11 121 1 11 11 121 1 12 11 121 1 13 11 121 1 14 11 121 1 18 11 121 1 60 11 121 1 65 11 121 1 66 11 121 1 73 11 121 1 74 11 121 1 75 11 121 1 76 11 121 1 77 11 121 1 78 11 121 1 79 11 121 1 80 11 121 1 81 11 121 1 82 11 121 1 89 11 121 1 90 11 121 1 91 11 121 1 92] 
#[1 5 37 0 1 2 11 0 3 5 45 0 5 5 62 0 6 5 49 0 7 5 53 0 8 5 62 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 62 0 13 2 15 0 14 5 62 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 62 0 22 5 62 0 23 5 62 0 26 5 62 0 27 5 62 0 28 5 62 0 29 5 97 0 33 5 62 0 34 5 62 0 35 5 62 0 37 2 19 0 44 5 105 0 45 5 109 0 47 5 62 0 48 5 62 0 50 5 62 0 59 5 62 0 61 5 62 0 62 5 62 0 64 5 62 0 65 5 62 0 68 5 62 0 69 5 62 0 70 5 62 0 71 5 113 0 72 5 62 0 73 5 62 0 74 5 62 0 76 5 62 0 77 5 62 0 78 5 62 0 79 5 62 0 80 5 62 0 81 5 62 0 82 5 62 0 83 5 117 0 86 5 62 0 87 5 62 0 88 5 121 0 90 5 62 0 92 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 98 5 62 0 99 5 125 0 101 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 111 5 62 0 112 5 62 0 114 5 62 0 115 5 62 0 117 5 62 0 118 5 62 0 119 2 23 0 120 5 62 0 121 5 62 0 125 5 62 0 126 5 62 0 127 5 133 0 128 5 62 0 129 5 62 0 135 5 62 0 136 5 62 0 137 5 62 0 138 5 62 0 139 5 62 0 140 5 62 0 141 5 62 0 142 5 62 0 143 5 62 0 144 5 62 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 62 1 93] 
#[0 5 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 5 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 74 0 1 5 74 0 3 5 74 0 5 5 74 0 6 5 74 0 7 5 74 0 8 9 189 0 9 5 74 0 10 5 74 0 11 5 74 0 12 5 74 0 13 5 74 0 14 2 27 0 15 5 74 0 16 5 74 0 17 5 74 0 18 5 74 0 19 5 74 0 20 5 74 0 21 5 74 0 22 5 74 0 23 5 74 0 26 5 74 0 27 5 74 0 28 5 74 0 29 5 74 0 33 5 74 0 34 5 74 0 35 5 74 0 37 5 74 0 44 5 74 0 45 5 74 0 47 5 74 0 48 5 74 0 50 5 74 0 59 5 74 0 61 5 74 0 62 5 74 0 64 5 74 0 65 5 74 0 68 5 74 0 69 5 74 0 70 5 74 0 71 5 74 0 72 5 74 0 73 5 74 0 74 5 74 0 76 5 74 0 77 5 74 0 78 5 74 0 79 5 74 0 80 5 74 0 81 5 74 0 82 5 74 0 83 5 74 0 86 5 74 0 87 5 74 0 88 5 74 0 90 5 74 0 92 5 74 0 94 5 74 0 95 5 74 0 96 5 74 0 98 5 74 0 99 5 74 0 101 5 74 0 104 5 74 0 105 5 74 0 106 5 74 0 107 5 74 0 108 5 74 0 109 5 74 0 111 5 74 0 112 5 74 0 114 5 74 0 115 5 74 0 117 5 74 0 118 5 74 0 119 5 74 0 120 5 74 0 121 5 74 0 125 5 74 0 126 5 74 0 127 5 74 0 128 5 74 0 129 5 74 0 135 5 74 0 136 5 74 0 137 5 74 0 138 5 74 0 139 5 74 0 140 5 74 0 141 5 74 0 142 5 74 0 143 5 74 0 144 5 74 0 146 9 197 1 87 5 74 1 93] 
#[1 5 78 0 1 5 78 0 3 2 101 0 5 5 78 0 6 5 78 0 7 2 105 0 8 5 78 0 9 2 109 0 10 0 17 0 11 5 78 0 12 5 78 0 13 5 78 0 14 5 78 0 15 5 78 0 16 5 78 0 17 5 78 0 18 5 78 0 19 5 78 0 20 5 78 0 21 5 78 0 22 2 31 0 23 2 35 0 26 5 78 0 27 5 78 0 28 2 39 0 29 5 78 0 33 2 43 0 34 2 47 0 35 2 51 0 37 5 78 0 44 5 78 0 45 5 78 0 47 5 78 0 48 5 78 0 50 4 157 0 52 7 177 0 54 5 78 0 59 2 55 0 61 5 78 0 62 5 78 0 64 5 78 0 65 5 78 0 68 5 78 0 69 5 78 0 70 5 78 0 71 5 78 0 72 5 78 0 73 2 59 0 74 5 78 0 76 5 78 0 77 2 63 0 78 5 78 0 79 2 67 0 80 2 71 0 81 5 78 0 82 5 78 0 83 5 78 0 86 2 75 0 87 2 79 0 88 5 78 0 90 5 78 0 92 2 83 0 94 5 78 0 95 2 87 0 96 5 78 0 98 5 78 0 99 5 78 0 101 7 173 0 102 2 91 0 104 5 78 0 105 5 78 0 106 5 78 0 107 5 78 0 108 5 78 0 109 5 78 0 111 2 95 0 112 5 78 0 114 5 78 0 115 5 78 0 117 2 99 0 118 5 78 0 119 5 78 0 120 5 78 0 121 5 78 0 125 5 78 0 126 5 78 0 127 5 78 0 128 2 103 0 129 2 107 0 135 2 111 0 136 2 115 0 137 2 119 0 138 2 123 0 139 2 127 0 140 2 131 0 141 2 135 0 142 2 139 0 143 2 143 0 144 5 78 0 146 7 181 0 153 7 181 0 154 7 181 0 155 7 181 0 156 7 181 0 157 7 181 0 158 7 181 0 159 7 181 0 160 7 181 0 161 7 181 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 177 0 207 7 181 0 243 7 181 0 244 7 181 0 245 7 181 0 249 7 181 0 250 7 181 0 251 7 181 0 252 7 181 0 253 7 181 0 254 7 181 0 255 7 181 1 1 7 181 1 3 7 181 1 5 7 181 1 6 3 33 1 8 7 181 1 9 7 181 1 10 7 181 1 11 7 181 1 12 7 181 1 13 7 181 1 14 7 181 1 18 7 181 1 60 7 181 1 65 7 181 1 66 7 181 1 73 7 181 1 74 7 181 1 75 7 181 1 76 7 181 1 77 7 181 1 78 7 181 1 79 7 181 1 80 7 181 1 81 7 181 1 82 11 125 1 83 7 181 1 89 7 181 1 90 7 181 1 91 7 181 1 92 5 78 1 93] 
#[1 5 82 0 1 5 82 0 3 2 101 0 5 5 82 0 6 5 82 0 7 2 105 0 8 5 82 0 9 2 109 0 10 0 17 0 11 5 82 0 12 5 82 0 13 5 82 0 14 5 82 0 15 5 82 0 16 5 82 0 17 5 82 0 18 5 82 0 19 5 82 0 20 5 82 0 21 5 82 0 22 2 147 0 23 2 151 0 26 5 82 0 27 5 82 0 28 2 155 0 29 5 82 0 33 2 159 0 34 2 163 0 35 2 167 0 37 5 82 0 44 5 82 0 45 5 82 0 47 5 82 0 48 5 82 0 50 4 157 0 52 7 177 0 54 5 82 0 59 2 171 0 61 5 82 0 62 5 82 0 64 5 82 0 65 5 82 0 68 5 82 0 69 5 82 0 70 5 82 0 71 5 82 0 72 5 82 0 73 2 175 0 74 5 82 0 76 5 82 0 77 2 179 0 78 5 82 0 79 2 183 0 80 2 187 0 81 5 82 0 82 5 82 0 83 5 82 0 86 2 191 0 87 2 195 0 88 5 82 0 90 5 82 0 92 2 199 0 94 5 82 0 95 2 203 0 96 5 82 0 98 5 82 0 99 5 82 0 101 7 173 0 102 2 207 0 104 5 82 0 105 5 82 0 106 5 82 0 107 5 82 0 108 5 82 0 109 5 82 0 111 2 211 0 112 5 82 0 114 5 82 0 115 5 82 0 117 2 215 0 118 5 82 0 119 5 82 0 120 5 82 0 121 5 82 0 125 5 82 0 126 5 82 0 127 5 82 0 128 2 219 0 129 2 223 0 135 2 227 0 136 2 231 0 137 2 235 0 138 2 239 0 139 2 243 0 140 2 247 0 141 2 251 0 142 2 255 0 143 3 3 0 144 5 82 0 146 7 181 0 153 7 181 0 154 7 181 0 155 7 181 0 156 7 181 0 157 7 181 0 158 7 181 0 159 7 181 0 160 7 181 0 161 7 181 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 7 177 0 207 7 181 0 243 7 181 0 244 7 181 0 245 7 181 0 249 7 181 0 250 7 181 0 251 7 181 0 252 7 181 0 253 7 181 0 254 7 181 0 255 7 181 1 1 7 181 1 3 7 181 1 5 7 181 1 6 3 33 1 8 7 181 1 9 7 181 1 10 7 181 1 11 7 181 1 12 7 181 1 13 7 181 1 14 7 181 1 18 7 181 1 60 7 181 1 65 7 181 1 66 7 181 1 73 7 181 1 74 7 181 1 75 7 181 1 76 7 181 1 77 7 181 1 78 7 181 1 79 7 181 1 80 7 181 1 81 7 181 1 82 11 129 1 83 7 181 1 89 7 181 1 90 7 181 1 91 7 181 1 92 5 82 1 93] 
#[0 5 86 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 5 90 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 5 37 0 1 3 7 0 3 5 45 0 5 5 94 0 6 5 49 0 7 5 53 0 8 5 94 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 94 0 13 3 11 0 14 5 94 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 94 0 22 5 94 0 23 5 94 0 26 5 94 0 27 5 94 0 28 5 94 0 29 5 97 0 33 5 94 0 34 5 94 0 35 5 94 0 37 3 15 0 44 5 105 0 45 5 109 0 47 5 94 0 48 5 94 0 50 5 94 0 59 5 94 0 61 5 94 0 62 5 94 0 64 5 94 0 65 5 94 0 68 5 94 0 69 5 94 0 70 5 94 0 71 5 113 0 72 5 94 0 73 5 94 0 74 5 94 0 76 5 94 0 77 5 94 0 78 5 94 0 79 5 94 0 80 5 94 0 81 5 94 0 82 5 94 0 83 5 117 0 86 5 94 0 87 5 94 0 88 5 121 0 90 5 94 0 92 5 94 0 94 5 94 0 95 5 94 0 96 5 94 0 98 5 94 0 99 5 125 0 101 5 94 0 104 5 94 0 105 5 94 0 106 5 94 0 107 5 94 0 108 5 94 0 109 5 94 0 111 5 94 0 112 5 94 0 114 5 94 0 115 5 94 0 117 5 94 0 118 5 94 0 119 3 19 0 120 5 94 0 121 5 94 0 125 5 94 0 126 5 94 0 127 5 133 0 128 5 94 0 129 5 94 0 135 5 94 0 136 5 94 0 137 5 94 0 138 5 94 0 139 5 94 0 140 5 94 0 141 5 94 0 142 5 94 0 143 5 94 0 144 5 94 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 94 1 93] 
#[1 11 133 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 137 0 150] 
#[1 0 6 0 70 0 6 0 146 11 141 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 11 145 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 11 149 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 153 0 150] 
#[1 11 157 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 161 0 150] 
#[1 1 197 0 11 11 165 0 84] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 3 23 0 23 3 27 0 26 3 31 0 29 3 35 0 34 3 39 0 35 3 43 0 37 3 47 0 61 3 51 0 74 3 55 0 78 3 59 0 80 3 63 0 81 3 67 0 87 3 71 0 88 3 75 0 94 3 79 0 96 3 83 0 104 3 87 0 112 3 91 0 118 3 95 0 129 3 99 0 135 3 103 0 136 3 107 0 137 3 111 0 138 3 115 0 139 3 119 0 140 3 123 0 141 3 127 0 142 3 131 0 143 3 135 0 144 11 169 0 153 11 169 0 154 11 169 0 155 11 169 0 156 11 169 0 157 11 169 0 158 11 169 0 159 11 169 0 160 11 169 0 161 11 169 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 11 169 0 243 11 169 0 244 11 169 0 245 11 169 0 249 11 169 0 250 11 169 0 251 11 169 0 252 11 169 0 253 11 169 0 254 11 169 0 255 11 169 1 1 11 169 1 3 11 169 1 5 11 169 1 6 3 33 1 8 11 169 1 9 11 169 1 10 11 169 1 11 11 169 1 12 11 169 1 13 11 169 1 14 11 169 1 18 11 169 1 60 11 169 1 65 11 169 1 66 11 169 1 73 11 169 1 74 11 169 1 75 11 169 1 76 11 169 1 77 11 169 1 78 11 169 1 79 11 169 1 80 11 169 1 81 11 169 1 82 11 169 1 89 11 169 1 90 11 169 1 91 11 169 1 92] 
#[1 1 182 0 1 1 182 0 3 1 227 0 5 1 182 0 7 1 227 0 8 1 227 0 10 1 227 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 11 173 0 150] 
#[1 1 182 0 1 1 182 0 3 1 227 0 5 1 182 0 7 1 227 0 8 1 227 0 10 1 227 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 11 177 0 150] 
#[1 11 181 0 92 1 137 0 137 0 145 0 146 11 185 0 155] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 11 189 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 3 139 0 23 3 143 0 26 0 6 0 27 0 6 0 28 3 147 0 29 3 151 0 34 3 155 0 35 3 159 0 37 0 6 0 48 0 6 0 59 3 163 0 61 0 6 0 64 0 6 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 71 0 6 0 73 3 167 0 74 0 6 0 76 3 171 0 78 0 6 0 79 3 175 0 80 3 179 0 81 0 6 0 82 3 183 0 87 3 187 0 88 3 191 0 94 3 195 0 96 0 6 0 98 0 6 0 99 3 199 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 3 203 0 112 0 6 0 114 3 207 0 118 0 6 0 121 0 6 0 126 0 6 0 127 3 211 0 129 3 215 0 135 3 219 0 136 1 219 0 137 3 223 0 138 3 227 0 139 3 231 0 140 3 235 0 141 3 239 0 142 3 243 0 143 3 247 0 144 0 6 0 146 11 193 0 150 11 197 0 153 11 197 0 154 11 197 0 155 11 197 0 156 11 197 0 157 11 197 0 158 11 197 0 159 11 197 0 160 11 197 0 161 11 197 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 11 197 0 243 11 197 0 244 11 197 0 245 11 197 0 249 11 197 0 250 11 197 0 251 11 197 0 252 11 197 0 253 11 197 0 254 11 197 0 255 11 197 1 1 11 197 1 3 11 197 1 5 11 197 1 6 3 33 1 8 11 197 1 9 11 197 1 10 11 197 1 11 11 197 1 12 11 197 1 13 11 197 1 14 11 197 1 18 11 197 1 60 11 197 1 65 11 197 1 66 11 197 1 73 11 197 1 74 11 197 1 75 11 197 1 76 11 197 1 77 11 197 1 78 11 197 1 79 11 197 1 80 11 197 1 81 11 197 1 82 11 197 1 89 11 197 1 90 11 197 1 91 11 197 1 92] 
#[0 11 201 0 95] 
#[0 5 98 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 5 102 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 53 0 146 11 205 0 180 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 11 209 1 54 11 213 1 55] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 0 6 0 125 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 11 217 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 11 221 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 11 225 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 11 229 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 5 106 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 59 0 61 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 111 0 112 0 114 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146] 
#[1 0 74 0 5 0 74 0 8 0 74 0 10 0 74 0 11 0 74 0 23 0 74 0 26 0 74 0 27 0 74 0 28 0 74 0 29 0 74 0 34 0 74 0 35 0 74 0 37 0 74 0 48 0 74 0 59 0 74 0 61 0 74 0 64 0 74 0 65 0 74 0 71 0 74 0 73 0 74 0 74 0 74 0 76 0 74 0 78 0 74 0 79 0 74 0 80 0 74 0 81 0 74 0 82 0 74 0 87 0 74 0 88 0 74 0 94 0 74 0 96 0 74 0 98 0 74 0 99 0 74 0 104 0 74 0 105 0 74 0 107 0 74 0 108 0 74 0 109 4 94 0 110 0 74 0 111 0 74 0 112 0 74 0 114 0 74 0 118 0 74 0 121 0 74 0 126 0 74 0 127 0 74 0 129 0 74 0 135 0 74 0 136 3 251 0 137 0 74 0 138 0 74 0 139 0 74 0 140 0 74 0 141 0 74 0 142 0 74 0 143 0 74 0 144 3 251 0 146] 
#[1 11 233 0 110 1 137 0 137 9 21 0 146 11 237 0 155] 
#[1 7 53 0 146 11 241 0 180] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 9 21 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 11 245 0 174 11 245 0 176 11 245 0 183 6 5 0 188 11 245 0 197 11 245 0 198 11 245 0 202 11 245 0 203 11 245 0 224 11 245 0 225 11 245 0 226 11 245 0 227 11 245 0 228 1 25 0 230 11 245 0 231 11 245 0 232 11 245 0 233 11 245 0 234 11 245 0 235 11 245 0 239 11 245 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 11 245 1 19 11 245 1 20 11 245 1 21 11 245 1 22 11 245 1 23 11 245 1 24 11 245 1 25 11 245 1 26 11 245 1 27 11 245 1 28 11 245 1 29 11 245 1 30 11 245 1 31 11 245 1 32 11 245 1 33 11 245 1 34 11 245 1 35 11 245 1 36 11 245 1 37 11 245 1 40 11 245 1 46 11 245 1 47 11 245 1 48 11 245 1 49 11 245 1 53 11 245 1 56 11 245 1 57 11 245 1 58 11 245 1 59 6 17 1 60 6 17 1 65 6 17 1 66 11 245 1 67 11 245 1 68 11 245 1 69 11 245 1 70 11 245 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 5 110 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 11 249 0 117] 
#[1 11 253 0 70 0 145 0 146] 
#[0 5 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 12 1 0 7 5 118 0 11 5 118 0 29 5 118 0 61 5 118 0 70 5 118 0 78 5 118 0 87 5 118 0 88 5 118 0 94 5 118 0 104 5 118 0 112 5 118 0 118 5 118 0 142 5 118 0 144 5 118 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 122 0 6 5 122 0 7 5 122 0 8 5 122 0 9 5 122 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 122 0 19 5 89 0 20 5 93 0 21 5 122 0 23 5 122 0 26 5 122 0 27 5 122 0 28 5 122 0 29 5 97 0 33 5 122 0 34 5 122 0 35 5 122 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 122 0 48 5 122 0 50 5 122 0 59 5 122 0 61 5 122 0 62 5 122 0 64 5 122 0 65 5 122 0 68 5 122 0 69 5 122 0 70 5 122 0 71 5 113 0 72 5 122 0 73 5 122 0 74 5 122 0 76 5 122 0 77 5 122 0 78 5 122 0 79 5 122 0 80 5 122 0 81 5 122 0 82 5 122 0 83 5 117 0 86 5 122 0 87 5 122 0 88 5 121 0 90 5 122 0 92 5 122 0 94 5 122 0 95 5 122 0 96 5 122 0 98 5 122 0 99 5 125 0 101 5 122 0 104 5 122 0 105 5 122 0 106 5 122 0 107 5 122 0 108 5 122 0 109 5 122 0 111 5 122 0 112 5 122 0 114 5 122 0 117 5 122 0 118 5 129 0 120 5 122 0 121 5 122 0 125 5 122 0 126 5 122 0 127 5 133 0 128 5 122 0 129 5 122 0 135 5 122 0 136 5 122 0 137 5 122 0 138 5 122 0 139 5 122 0 140 5 122 0 141 5 122 0 142 5 122 0 143 5 122 0 144 5 122 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 122 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 5 0 153 12 5 0 154 12 5 0 155 12 5 0 156 12 5 0 157 12 5 0 158 12 5 0 159 12 5 0 160 12 5 0 161 12 5 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 12 5 0 243 12 5 0 244 12 5 0 245 12 5 0 249 12 5 0 250 12 5 0 251 12 5 0 252 12 5 0 253 12 5 0 254 12 5 0 255 12 5 1 1 12 5 1 3 12 5 1 5 12 5 1 6 3 33 1 8 12 5 1 9 12 5 1 10 12 5 1 11 12 5 1 12 12 5 1 13 12 5 1 14 12 5 1 18 12 5 1 60 12 5 1 65 12 5 1 66 12 5 1 73 12 5 1 74 12 5 1 75 12 5 1 76 12 5 1 77 12 5 1 78 12 5 1 79 12 5 1 80 12 5 1 81 12 5 1 82 12 5 1 89 12 5 1 90 12 5 1 91 12 5 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 126 0 6 5 126 0 7 5 126 0 8 5 126 0 9 5 126 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 126 0 19 5 89 0 20 5 93 0 21 5 126 0 23 5 126 0 26 5 126 0 27 5 126 0 28 5 126 0 29 5 97 0 33 5 126 0 34 5 126 0 35 5 126 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 126 0 48 5 126 0 50 5 126 0 59 5 126 0 61 5 126 0 62 5 126 0 64 5 126 0 65 5 126 0 68 5 126 0 69 5 126 0 70 5 126 0 71 5 113 0 72 5 126 0 73 5 126 0 74 5 126 0 76 5 126 0 77 5 126 0 78 5 126 0 79 5 126 0 80 5 126 0 81 5 126 0 82 5 126 0 83 5 117 0 86 5 126 0 87 5 126 0 88 5 121 0 90 5 126 0 92 5 126 0 94 5 126 0 95 5 126 0 96 5 126 0 98 5 126 0 99 5 125 0 101 5 126 0 104 5 126 0 105 5 126 0 106 5 126 0 107 5 126 0 108 5 126 0 109 5 126 0 111 5 126 0 112 5 126 0 114 5 126 0 117 5 126 0 118 5 129 0 120 5 126 0 121 5 126 0 125 5 126 0 126 5 126 0 127 5 133 0 128 5 126 0 129 5 126 0 135 5 126 0 136 5 126 0 137 5 126 0 138 5 126 0 139 5 126 0 140 5 126 0 141 5 126 0 142 5 126 0 143 5 126 0 144 5 126 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 126 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 9 0 153 12 9 0 154 12 9 0 155 12 9 0 156 12 9 0 157 12 9 0 158 12 9 0 159 12 9 0 160 12 9 0 161 12 9 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 12 9 0 243 12 9 0 244 12 9 0 245 12 9 0 249 12 9 0 250 12 9 0 251 12 9 0 252 12 9 0 253 12 9 0 254 12 9 0 255 12 9 1 1 12 9 1 3 12 9 1 5 12 9 1 6 3 33 1 8 12 9 1 9 12 9 1 10 12 9 1 11 12 9 1 12 12 9 1 13 12 9 1 14 12 9 1 18 12 9 1 60 12 9 1 65 12 9 1 66 12 9 1 73 12 9 1 74 12 9 1 75 12 9 1 76 12 9 1 77 12 9 1 78 12 9 1 79 12 9 1 80 12 9 1 81 12 9 1 82 12 9 1 89 12 9 1 90 12 9 1 91 12 9 1 92] 
#[1 5 130 0 5 5 130 0 6 12 13 0 7 5 130 0 8 5 130 0 9 5 130 0 10 5 130 0 11 5 130 0 19 5 130 0 23 5 130 0 26 5 130 0 27 5 130 0 28 5 130 0 29 5 130 0 34 5 130 0 35 5 130 0 37 5 130 0 48 5 130 0 50 5 130 0 59 5 130 0 61 5 130 0 62 5 130 0 64 5 130 0 65 5 130 0 68 5 130 0 69 5 130 0 70 5 130 0 71 5 130 0 73 5 130 0 74 5 130 0 76 5 130 0 77 5 130 0 78 5 130 0 79 5 130 0 80 5 130 0 81 5 130 0 82 5 130 0 83 5 130 0 87 5 130 0 88 5 130 0 92 5 130 0 94 5 130 0 95 5 130 0 96 5 130 0 98 5 130 0 99 5 130 0 104 5 130 0 105 5 130 0 106 5 130 0 107 5 130 0 108 5 130 0 109 5 130 0 111 5 130 0 112 5 130 0 114 5 130 0 117 5 130 0 118 5 130 0 121 5 130 0 125 5 130 0 126 5 130 0 127 5 130 0 129 5 130 0 135 5 130 0 136 5 130 0 137 5 130 0 138 5 130 0 139 5 130 0 140 5 130 0 141 5 130 0 142 5 130 0 143 5 130 0 144 5 130 0 146 5 130 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 134 0 6 5 134 0 7 5 134 0 8 5 134 0 9 5 134 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 134 0 19 5 89 0 20 5 93 0 21 5 134 0 23 5 134 0 26 5 134 0 27 5 134 0 28 5 134 0 29 5 97 0 33 5 134 0 34 5 134 0 35 5 134 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 134 0 48 5 134 0 50 5 134 0 59 5 134 0 61 5 134 0 62 5 134 0 64 5 134 0 65 5 134 0 68 5 134 0 69 5 134 0 70 5 134 0 71 5 113 0 72 5 134 0 73 5 134 0 74 5 134 0 76 5 134 0 77 5 134 0 78 5 134 0 79 5 134 0 80 5 134 0 81 5 134 0 82 5 134 0 83 5 117 0 86 5 134 0 87 5 134 0 88 5 121 0 90 5 134 0 92 5 134 0 94 5 134 0 95 5 134 0 96 5 134 0 98 5 134 0 99 5 125 0 101 5 134 0 104 5 134 0 105 5 134 0 106 5 134 0 107 5 134 0 108 5 134 0 109 5 134 0 111 5 134 0 112 5 134 0 114 5 134 0 117 5 134 0 118 5 129 0 120 5 134 0 121 5 134 0 125 5 134 0 126 5 134 0 127 5 133 0 128 5 134 0 129 5 134 0 135 5 134 0 136 5 134 0 137 5 134 0 138 5 134 0 139 5 134 0 140 5 134 0 141 5 134 0 142 5 134 0 143 5 134 0 144 5 134 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 134 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 17 0 153 12 17 0 154 12 17 0 155 12 17 0 156 12 17 0 157 12 17 0 158 12 17 0 159 12 17 0 160 12 17 0 161 12 17 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 12 17 0 243 12 17 0 244 12 17 0 245 12 17 0 249 12 17 0 250 12 17 0 251 12 17 0 252 12 17 0 253 12 17 0 254 12 17 0 255 12 17 1 1 12 17 1 3 12 17 1 5 12 17 1 6 3 33 1 8 12 17 1 9 12 17 1 10 12 17 1 11 12 17 1 12 12 17 1 13 12 17 1 14 12 17 1 18 12 17 1 60 12 17 1 65 12 17 1 66 12 17 1 73 12 17 1 74 12 17 1 75 12 17 1 76 12 17 1 77 12 17 1 78 12 17 1 79 12 17 1 80 12 17 1 81 12 17 1 82 12 17 1 89 12 17 1 90 12 17 1 91 12 17 1 92] 
#[1 2 89 0 5 12 21 0 46 12 25 0 208] 
#[1 2 89 0 5 12 29 0 46 12 33 0 208] 
#[0 12 37 0 71] 
#[1 0 6 0 70 0 6 0 146 12 41 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 45 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 49 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 53 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 57 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 61 0 150] 
#[1 0 6 0 70 0 6 0 146 12 65 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 69 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 73 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 77 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 12 81 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 12 85 0 150] 
#[0 12 89 0 121] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 93 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 97 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 101 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 105 0 150] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 109 0 150 12 113 0 191 12 113 0 192 1 217 0 193 12 113 0 196] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 117 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 121 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 125 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 129 0 150] 
#[1 0 6 0 70 0 6 0 146 12 133 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 137 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 141 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 145 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 149 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 153 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 157 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 12 161 0 150] 
#[1 0 6 0 70 0 6 0 146 12 165 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 169 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 173 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 12 177 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 12 181 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 12 185 0 150] 
#[1 2 89 0 5 12 189 0 208] 
#[0 5 138 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 12 193 0 208] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 142 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 142 0 61 5 142 0 70 5 113 0 72 5 142 0 78 5 117 0 86 5 142 0 87 5 142 0 88 5 121 0 90 5 142 0 94 5 125 0 101 5 142 0 104 5 142 0 112 5 142 0 118 5 129 0 120 5 133 0 128 5 142 0 142 5 142 0 144 5 142 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 12 197 0 213] 
#[0 5 146 0 6 0 9] 
#[0 5 150 0 6 0 9] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 105 0 19 1 205 0 22 12 201 0 191 12 201 0 192 1 217 0 193 12 201 0 196 7 113 0 212 12 205 0 213] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 12 209 0 213] 
#[0 5 154 0 6 0 9] 
#[0 5 158 0 6 0 9] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 12 213 0 213] 
#[0 5 162 0 6 0 9] 
#[0 5 166 0 6 0 9] 
#[0 5 170 0 6 0 9] 
#[0 12 217 0 77] 
#[1 12 221 0 70 0 145 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 225 0 153 12 225 0 154 12 225 0 155 12 225 0 156 12 225 0 157 12 225 0 158 12 225 0 159 12 225 0 160 12 225 0 161 12 225 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 12 225 0 243 12 225 0 244 12 225 0 245 12 225 0 249 12 225 0 250 12 225 0 251 12 225 0 252 12 225 0 253 12 225 0 254 12 225 0 255 12 225 1 1 12 225 1 3 12 225 1 5 12 225 1 6 3 33 1 8 12 225 1 9 12 225 1 10 12 225 1 11 12 225 1 12 12 225 1 13 12 225 1 14 12 225 1 18 12 225 1 60 12 225 1 65 12 225 1 66 12 225 1 73 12 225 1 74 12 225 1 75 12 225 1 76 12 225 1 77 12 225 1 78 12 225 1 79 12 225 1 80 12 225 1 81 12 225 1 82 12 225 1 89 12 225 1 90 12 225 1 91 12 225 1 92] 
#[0 5 174 0 22] 
#[0 5 178 0 22] 
#[0 5 182 0 22] 
#[1 5 186 0 22 5 186 0 30 5 186 0 31 5 186 0 32 5 186 0 40 12 229 0 42] 
#[0 5 190 0 22] 
#[0 5 194 0 22 0 30 0 31 0 32 0 40] 
#[1 12 233 0 22 12 237 0 30 12 237 0 31 12 237 0 32 12 237 0 40 12 237 1 17] 
#[0 12 241 0 22] 
#[0 5 198 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 9 157 0 134 12 245 0 164] 
#[0 5 202 0 10 0 131 0 134] 
#[1 5 37 0 1 3 255 0 3 5 45 0 5 5 206 0 6 5 49 0 7 5 53 0 8 5 206 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 206 0 13 4 3 0 14 5 206 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 206 0 22 5 206 0 23 5 206 0 26 5 206 0 27 5 206 0 28 5 206 0 29 5 97 0 33 5 206 0 34 5 206 0 35 5 206 0 37 4 7 0 44 5 105 0 45 5 109 0 47 5 206 0 48 5 206 0 50 5 206 0 59 5 206 0 61 5 206 0 62 5 206 0 64 5 206 0 65 5 206 0 68 5 206 0 69 5 206 0 70 5 206 0 71 5 113 0 72 5 206 0 73 5 206 0 74 5 206 0 76 5 206 0 77 5 206 0 78 5 206 0 79 5 206 0 80 5 206 0 81 5 206 0 82 5 206 0 83 5 117 0 86 5 206 0 87 5 206 0 88 5 121 0 90 5 206 0 92 5 206 0 94 5 206 0 95 5 206 0 96 5 206 0 98 5 206 0 99 5 125 0 101 5 206 0 104 5 206 0 105 5 206 0 106 5 206 0 107 5 206 0 108 5 206 0 109 5 206 0 111 5 206 0 112 5 206 0 114 5 206 0 115 5 206 0 117 5 206 0 118 5 206 0 119 4 11 0 120 5 206 0 121 5 206 0 125 5 206 0 126 5 206 0 127 5 133 0 128 5 206 0 129 5 206 0 135 5 206 0 136 5 206 0 137 5 206 0 138 5 206 0 139 5 206 0 140 5 206 0 141 5 206 0 142 5 206 0 143 5 206 0 144 5 206 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 206 1 93] 
#[0 5 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 5 214 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[0 12 249 0 106] 
#[1 12 253 0 70 0 145 0 146] 
#[1 13 1 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 5 0 150] 
#[0 13 9 0 106] 
#[1 13 13 0 70 0 145 0 146] 
#[0 13 17 0 106] 
#[1 13 21 0 70 0 145 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 13 25 0 153 13 25 0 154 13 25 0 155 13 25 0 156 13 25 0 157 13 25 0 158 13 25 0 159 13 25 0 160 13 25 0 161 13 25 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 13 25 0 243 13 25 0 244 13 25 0 245 13 25 0 249 13 25 0 250 13 25 0 251 13 25 0 252 13 25 0 253 13 25 0 254 13 25 0 255 13 25 1 1 13 25 1 3 13 25 1 5 13 25 1 6 3 33 1 8 13 25 1 9 13 25 1 10 13 25 1 11 13 25 1 12 13 25 1 13 13 25 1 14 13 25 1 18 13 25 1 60 13 25 1 65 13 25 1 66 13 25 1 73 13 25 1 74 13 25 1 75 13 25 1 76 13 25 1 77 13 25 1 78 13 25 1 79 13 25 1 80 13 25 1 81 13 25 1 82 13 25 1 89 13 25 1 90 13 25 1 91 13 25 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 13 29 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 33 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 0 6 0 92 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 13 37 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 41 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 218 0 68 5 218 0 69 5 218 0 70 5 218 0 92 5 218 0 95 5 218 0 125 13 45 0 126 5 218 0 137 5 218 0 146] 
#[0 13 49 0 92] 
#[1 13 53 0 92 1 137 0 137 0 145 0 146 13 57 0 155] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 13 61 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 65 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 15 0 68 5 222 0 69 5 222 0 70 5 113 0 72 5 117 0 86 5 121 0 90 5 222 0 92 5 222 0 95 5 125 0 101 5 129 0 120 5 222 0 125 5 133 0 128 5 222 0 137 5 222 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 5 226 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 13 73 0 55 9 21 0 146 13 77 1 51] 
#[0 5 230 0 146] 
#[1 7 53 0 146 13 81 0 180 13 85 1 54] 
#[1 13 89 0 125 1 137 0 137 0 145 0 146 13 93 0 155] 
#[1 0 6 0 125 0 6 0 137 0 6 0 146 13 97 0 150] 
#[1 13 101 0 70 1 137 0 137 0 145 0 146 13 105 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 13 109 0 150] 
#[0 5 234 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 13 113 0 110] 
#[1 13 117 0 110 1 137 0 137 9 21 0 146 13 121 0 155] 
#[0 5 238 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 5 242 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 13 125 0 117] 
#[1 1 137 0 137 13 129 0 155] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 246 0 6 5 246 0 7 5 246 0 8 5 246 0 9 5 246 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 246 0 19 5 89 0 20 5 93 0 21 5 246 0 23 5 246 0 26 5 246 0 27 5 246 0 28 5 246 0 29 5 97 0 33 5 246 0 34 5 246 0 35 5 246 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 246 0 48 5 246 0 50 5 246 0 59 5 246 0 61 5 246 0 62 5 246 0 64 5 246 0 65 5 246 0 68 5 246 0 69 5 246 0 70 5 246 0 71 5 113 0 72 5 246 0 73 5 246 0 74 5 246 0 76 5 246 0 77 5 246 0 78 5 246 0 79 5 246 0 80 5 246 0 81 5 246 0 82 5 246 0 83 5 117 0 86 5 246 0 87 5 246 0 88 5 121 0 90 5 246 0 92 5 246 0 94 5 246 0 95 5 246 0 96 5 246 0 98 5 246 0 99 5 125 0 101 5 246 0 104 5 246 0 105 5 246 0 106 5 246 0 107 5 246 0 108 5 246 0 109 5 246 0 111 5 246 0 112 5 246 0 114 5 246 0 117 5 246 0 118 5 129 0 120 5 246 0 121 5 246 0 125 5 246 0 126 5 246 0 127 5 133 0 128 5 246 0 129 5 246 0 135 5 246 0 136 5 246 0 137 5 246 0 138 5 246 0 139 5 246 0 140 5 246 0 141 5 246 0 142 5 246 0 143 5 246 0 144 5 246 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 246 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 250 0 6 5 250 0 7 5 250 0 8 5 250 0 9 5 250 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 250 0 19 5 89 0 20 5 93 0 21 5 250 0 23 5 250 0 26 5 250 0 27 5 250 0 28 5 250 0 29 5 97 0 33 5 250 0 34 5 250 0 35 5 250 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 250 0 48 5 250 0 50 5 250 0 59 5 250 0 61 5 250 0 62 5 250 0 64 5 250 0 65 5 250 0 68 5 250 0 69 5 250 0 70 5 250 0 71 5 113 0 72 5 250 0 73 5 250 0 74 5 250 0 76 5 250 0 77 5 250 0 78 5 250 0 79 5 250 0 80 5 250 0 81 5 250 0 82 5 250 0 83 5 117 0 86 5 250 0 87 5 250 0 88 5 121 0 90 5 250 0 92 5 250 0 94 5 250 0 95 5 250 0 96 5 250 0 98 5 250 0 99 5 125 0 101 5 250 0 104 5 250 0 105 5 250 0 106 5 250 0 107 5 250 0 108 5 250 0 109 5 250 0 111 5 250 0 112 5 250 0 114 5 250 0 117 5 250 0 118 5 129 0 120 5 250 0 121 5 250 0 125 5 250 0 126 5 250 0 127 5 133 0 128 5 250 0 129 5 250 0 135 5 250 0 136 5 250 0 137 5 250 0 138 5 250 0 139 5 250 0 140 5 250 0 141 5 250 0 142 5 250 0 143 5 250 0 144 5 250 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 250 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 13 133 0 153 13 133 0 154 13 133 0 155 13 133 0 156 13 133 0 157 13 133 0 158 13 133 0 159 13 133 0 160 13 133 0 161 13 133 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 13 133 0 243 13 133 0 244 13 133 0 245 13 133 0 249 13 133 0 250 13 133 0 251 13 133 0 252 13 133 0 253 13 133 0 254 13 133 0 255 13 133 1 1 13 133 1 3 13 133 1 5 13 133 1 6 3 33 1 8 13 133 1 9 13 133 1 10 13 133 1 11 13 133 1 12 13 133 1 13 13 133 1 14 13 133 1 18 13 133 1 60 13 133 1 65 13 133 1 66 13 133 1 73 13 133 1 74 13 133 1 75 13 133 1 76 13 133 1 77 13 133 1 78 13 133 1 79 13 133 1 80 13 133 1 81 13 133 1 82 13 133 1 89 13 133 1 90 13 133 1 91 13 133 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 254 0 6 5 254 0 7 5 254 0 8 5 254 0 9 5 254 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 254 0 19 5 89 0 20 5 93 0 21 5 254 0 23 5 254 0 26 5 254 0 27 5 254 0 28 5 254 0 29 5 97 0 33 5 254 0 34 5 254 0 35 5 254 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 254 0 48 5 254 0 50 5 254 0 59 5 254 0 61 5 254 0 62 5 254 0 64 5 254 0 65 5 254 0 68 5 254 0 69 5 254 0 70 5 254 0 71 5 113 0 72 5 254 0 73 5 254 0 74 5 254 0 76 5 254 0 77 5 254 0 78 5 254 0 79 5 254 0 80 5 254 0 81 5 254 0 82 5 254 0 83 5 117 0 86 5 254 0 87 5 254 0 88 5 121 0 90 5 254 0 92 5 254 0 94 5 254 0 95 5 254 0 96 5 254 0 98 5 254 0 99 5 125 0 101 5 254 0 104 5 254 0 105 5 254 0 106 5 254 0 107 5 254 0 108 5 254 0 109 5 254 0 111 5 254 0 112 5 254 0 114 5 254 0 117 5 254 0 118 5 129 0 120 5 254 0 121 5 254 0 125 5 254 0 126 5 254 0 127 5 133 0 128 5 254 0 129 5 254 0 135 5 254 0 136 5 254 0 137 5 254 0 138 5 254 0 139 5 254 0 140 5 254 0 141 5 254 0 142 5 254 0 143 5 254 0 144 5 254 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 5 254 1 93] 
#[1 2 177 0 140 13 137 0 160] 
#[1 1 193 0 5 1 205 0 22 13 141 0 191 13 141 0 192 1 217 0 193 13 141 0 196] 
#[1 2 177 0 140 13 145 0 160] 
#[0 6 2 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 6 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 13 149 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 153 0 150] 
#[1 13 157 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 161 0 150] 
#[1 0 6 0 70 0 6 0 146 13 165 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 169 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 13 173 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 177 0 150] 
#[1 13 181 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 185 0 150] 
#[0 13 189 0 117] 
#[1 13 193 0 70 0 145 0 146] 
#[0 6 10 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 6 0 70 0 6 0 146 13 197 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 201 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 13 205 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 209 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 213 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 13 217 0 150] 
#[1 0 6 0 70 0 6 0 146 13 221 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 225 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 13 229 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 13 233 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 13 237 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 241 0 150] 
#[1 13 245 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 249 0 150] 
#[1 13 253 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 14 1 0 150] 
#[1 0 6 0 70 0 6 0 146 14 5 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 14 9 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 14 13 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 14 17 0 150] 
#[1 14 21 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 14 25 0 150] 
#[0 14 29 0 117] 
#[1 14 33 0 70 0 145 0 146] 
#[1 1 193 0 5 1 205 0 22 14 37 0 191 14 37 0 192 1 217 0 193 14 37 0 196] 
#[0 6 14 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 18 0 6 0 9] 
#[1 2 230 0 6 2 230 0 9 7 105 0 19 7 113 0 212 14 41 0 213] 
#[0 6 22 0 6 0 9] 
#[0 6 26 0 6 0 9] 
#[0 6 30 0 6 0 9] 
#[0 6 34 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 45 0 77] 
#[1 5 37 0 1 4 19 0 3 14 49 0 5 6 38 0 6 5 49 0 7 14 53 0 8 6 38 0 9 14 57 0 10 14 61 0 11 5 65 0 12 6 38 0 13 4 23 0 14 6 38 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 38 0 22 4 27 0 23 4 31 0 26 6 38 0 27 6 38 0 28 4 35 0 29 5 97 0 33 4 39 0 34 4 43 0 35 4 47 0 37 4 51 0 44 5 105 0 45 5 109 0 47 6 38 0 48 6 38 0 50 6 38 0 59 4 55 0 61 6 38 0 62 6 38 0 64 6 38 0 65 6 38 0 68 6 38 0 69 6 38 0 70 6 38 0 71 5 113 0 72 6 38 0 73 4 59 0 74 6 38 0 76 6 38 0 77 4 63 0 78 6 38 0 79 4 67 0 80 4 71 0 81 6 38 0 82 6 38 0 83 5 117 0 86 4 75 0 87 4 79 0 88 5 121 0 90 6 38 0 92 4 83 0 94 6 38 0 95 4 87 0 96 6 38 0 98 6 38 0 99 5 125 0 101 4 91 0 104 6 38 0 105 6 38 0 106 6 38 0 107 6 38 0 108 6 38 0 109 6 38 0 111 4 95 0 112 6 38 0 114 6 38 0 115 6 38 0 117 4 99 0 118 6 38 0 119 4 103 0 120 6 38 0 121 6 38 0 125 6 38 0 126 6 38 0 127 5 133 0 128 4 107 0 129 4 111 0 135 4 115 0 136 4 119 0 137 4 123 0 138 4 127 0 139 4 131 0 140 4 135 0 141 4 139 0 142 4 143 0 143 4 147 0 144 6 38 0 146 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 5 137 1 0 4 209 1 1 5 141 1 2 4 209 1 3 5 145 1 4 4 209 1 5 4 209 1 6 5 149 1 7 3 33 1 8 14 65 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 38 1 93] 
#[0 6 42 0 22 0 30 0 31 0 32 0 40] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 69 0 153 14 69 0 154 14 69 0 155 14 69 0 156 14 69 0 157 14 69 0 158 14 69 0 159 14 69 0 160 14 69 0 161 14 69 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 69 0 243 14 69 0 244 14 69 0 245 14 69 0 249 14 69 0 250 14 69 0 251 14 69 0 252 14 69 0 253 14 69 0 254 14 69 0 255 14 69 1 1 14 69 1 3 14 69 1 5 14 69 1 6 3 33 1 8 14 69 1 9 14 69 1 10 14 69 1 11 14 69 1 12 14 69 1 13 14 69 1 14 14 69 1 18 14 69 1 60 14 69 1 65 14 69 1 66 14 69 1 73 14 69 1 74 14 69 1 75 14 69 1 76 14 69 1 77 14 69 1 78 14 69 1 79 14 69 1 80 14 69 1 81 14 69 1 82 14 69 1 89 14 69 1 90 14 69 1 91 14 69 1 92] 
#[0 14 73 0 22] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 77 0 153 14 77 0 154 14 77 0 155 14 77 0 156 14 77 0 157 14 77 0 158 14 77 0 159 14 77 0 160 14 77 0 161 14 77 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 77 0 243 14 77 0 244 14 77 0 245 14 77 0 249 14 77 0 250 14 77 0 251 14 77 0 252 14 77 0 253 14 77 0 254 14 77 0 255 14 77 1 1 14 77 1 3 14 77 1 5 14 77 1 6 3 33 1 8 14 77 1 9 14 77 1 10 14 77 1 11 14 77 1 12 14 77 1 13 14 77 1 14 14 77 1 18 14 77 1 60 14 77 1 65 14 77 1 66 14 77 1 73 14 77 1 74 14 77 1 75 14 77 1 76 14 77 1 77 14 77 1 78 14 77 1 79 14 77 1 80 14 77 1 81 14 77 1 82 14 77 1 89 14 77 1 90 14 77 1 91 14 77 1 92] 
#[1 14 81 0 10 11 117 0 134] 
#[0 6 46 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 85 0 106] 
#[0 14 89 0 106] 
#[1 14 93 0 70 0 145 0 146] 
#[0 6 50 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 97 0 106] 
#[0 6 54 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 101 0 106] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 101 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 5 129 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 14 105 0 150 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 109 0 153 14 109 0 154 14 109 0 155 14 109 0 156 14 109 0 157 14 109 0 158 14 109 0 159 14 109 0 160 14 109 0 161 14 109 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 109 0 243 14 109 0 244 14 109 0 245 14 109 0 249 14 109 0 250 14 109 0 251 14 109 0 252 14 109 0 253 14 109 0 254 14 109 0 255 14 109 1 1 14 109 1 3 14 109 1 5 14 109 1 6 3 33 1 8 14 109 1 9 14 109 1 10 14 109 1 11 14 109 1 12 14 109 1 13 14 109 1 14 14 109 1 18 14 109 1 60 14 109 1 65 14 109 1 66 14 109 1 73 14 109 1 74 14 109 1 75 14 109 1 76 14 109 1 77 14 109 1 78 14 109 1 79 14 109 1 80 14 109 1 81 14 109 1 82 14 109 1 89 14 109 1 90 14 109 1 91 14 109 1 92] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 14 113 0 150] 
#[1 14 117 0 92 1 137 0 137 0 145 0 146 14 121 0 155] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 14 125 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 129 0 243 4 209 0 244 4 209 0 245 4 209 0 249 14 129 0 250 14 129 0 251 14 129 0 252 14 129 0 253 14 129 0 254 14 129 0 255 14 129 1 1 14 129 1 3 14 129 1 5 14 129 1 6 3 33 1 8 14 129 1 9 14 129 1 10 14 129 1 11 14 129 1 12 14 129 1 13 14 129 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 14 129 1 79 14 129 1 80 14 129 1 81 14 129 1 82 14 129 1 89 14 129 1 90 14 129 1 91 14 129 1 92] 
#[1 6 58 0 68 6 58 0 69 6 58 0 70 6 58 0 92 6 58 0 95 6 58 0 125 14 133 0 126 6 58 0 137 6 58 0 146] 
#[1 6 62 0 68 6 62 0 69 6 62 0 70 6 62 0 92 6 62 0 95 14 137 0 122 6 62 0 125 14 141 0 126 6 62 0 137 6 62 0 146] 
#[0 14 145 0 92] 
#[1 14 149 0 68 14 153 0 69 14 157 0 70 1 137 0 137 0 145 0 146 14 161 0 155 14 165 1 38 14 169 1 39 14 165 1 41 14 165 1 42 14 165 1 43] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 137 0 6 0 146 14 185 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 189 0 153 14 189 0 154 14 189 0 155 14 189 0 156 14 189 0 157 14 189 0 158 14 189 0 159 14 189 0 160 14 189 0 161 14 189 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 189 0 243 14 189 0 244 14 189 0 245 14 189 0 249 14 189 0 250 14 189 0 251 14 189 0 252 14 189 0 253 14 189 0 254 14 189 0 255 14 189 1 1 14 189 1 3 14 189 1 5 14 189 1 6 3 33 1 8 14 189 1 9 14 189 1 10 14 189 1 11 14 189 1 12 14 189 1 13 14 189 1 14 14 189 1 18 14 189 1 60 14 189 1 65 14 189 1 66 14 189 1 73 14 189 1 74 14 189 1 75 14 189 1 76 14 189 1 77 14 189 1 78 14 189 1 79 14 189 1 80 14 189 1 81 14 189 1 82 14 189 1 89 14 189 1 90 14 189 1 91 14 189 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 193 0 153 14 193 0 154 14 193 0 155 14 193 0 156 14 193 0 157 14 193 0 158 14 193 0 159 14 193 0 160 14 193 0 161 14 193 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 193 0 243 14 193 0 244 14 193 0 245 14 193 0 249 14 193 0 250 14 193 0 251 14 193 0 252 14 193 0 253 14 193 0 254 14 193 0 255 14 193 1 1 14 193 1 3 14 193 1 5 14 193 1 6 3 33 1 8 14 193 1 9 14 193 1 10 14 193 1 11 14 193 1 12 14 193 1 13 14 193 1 14 14 193 1 18 14 193 1 60 14 193 1 65 14 193 1 66 14 193 1 73 14 193 1 74 14 193 1 75 14 193 1 76 14 193 1 77 14 193 1 78 14 193 1 79 14 193 1 80 14 193 1 81 14 193 1 82 14 193 1 89 14 193 1 90 14 193 1 91 14 193 1 92] 
#[0 6 66 0 146] 
#[1 14 197 0 55 14 201 0 70 1 137 0 137 9 21 0 146 14 205 0 155 13 77 1 51 14 209 1 52] 
#[0 6 70 0 146] 
#[0 6 74 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 14 213 0 125] 
#[1 14 217 0 125 1 137 0 137 0 145 0 146 14 221 0 155] 
#[0 14 225 0 127] 
#[0 14 229 0 70] 
#[1 14 233 0 70 1 137 0 137 0 145 0 146 14 237 0 155] 
#[0 6 78 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 6 82 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 14 241 0 110] 
#[0 6 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 90 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 6 94 0 6 6 94 0 7 6 94 0 8 6 94 0 9 6 94 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 6 94 0 19 5 89 0 20 5 93 0 21 6 94 0 23 6 94 0 26 6 94 0 27 6 94 0 28 6 94 0 29 5 97 0 33 6 94 0 34 6 94 0 35 6 94 0 37 5 101 0 44 5 105 0 45 5 109 0 47 6 94 0 48 6 94 0 50 6 94 0 59 6 94 0 61 6 94 0 62 6 94 0 64 6 94 0 65 6 94 0 68 6 94 0 69 6 94 0 70 6 94 0 71 5 113 0 72 6 94 0 73 6 94 0 74 6 94 0 76 6 94 0 77 6 94 0 78 6 94 0 79 6 94 0 80 6 94 0 81 6 94 0 82 6 94 0 83 5 117 0 86 6 94 0 87 6 94 0 88 5 121 0 90 6 94 0 92 6 94 0 94 6 94 0 95 6 94 0 96 6 94 0 98 6 94 0 99 5 125 0 101 6 94 0 104 6 94 0 105 6 94 0 106 6 94 0 107 6 94 0 108 6 94 0 109 6 94 0 111 6 94 0 112 6 94 0 114 6 94 0 117 6 94 0 118 5 129 0 120 6 94 0 121 6 94 0 125 6 94 0 126 6 94 0 127 5 133 0 128 6 94 0 129 6 94 0 135 6 94 0 136 6 94 0 137 6 94 0 138 6 94 0 139 6 94 0 140 6 94 0 141 6 94 0 142 6 94 0 143 6 94 0 144 6 94 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7 6 94 1 93] 
#[1 2 89 0 5 14 245 0 208] 
#[0 6 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 14 249 0 208] 
#[0 14 253 0 77] 
#[1 15 1 0 70 0 145 0 146] 
#[0 15 5 0 106] 
#[1 15 9 0 70 0 145 0 146] 
#[1 15 13 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 17 0 150] 
#[0 15 21 0 106] 
#[1 15 25 0 70 0 145 0 146] 
#[0 15 29 0 106] 
#[1 15 33 0 70 0 145 0 146] 
#[0 6 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 37 0 117] 
#[1 15 41 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 45 0 150] 
#[1 15 49 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 53 0 150] 
#[1 0 6 0 70 0 6 0 146 15 57 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 0 145 0 146 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 15 61 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 15 65 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 69 0 150] 
#[1 15 73 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 77 0 150] 
#[0 15 81 0 117] 
#[1 15 85 0 70 0 145 0 146] 
#[0 15 89 0 77] 
#[1 15 93 0 70 0 145 0 146] 
#[0 15 97 0 106] 
#[1 15 101 0 70 0 145 0 146] 
#[1 15 105 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 109 0 150] 
#[0 15 113 0 106] 
#[1 15 117 0 70 0 145 0 146] 
#[0 15 121 0 106] 
#[1 15 125 0 70 0 145 0 146] 
#[0 6 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 129 0 117] 
#[0 6 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 114 0 6 0 9] 
#[0 6 118 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 1 170 0 6 2 105 0 8 1 170 0 9 2 109 0 10 0 17 0 11 1 170 0 15 4 151 0 23 4 155 0 26 4 159 0 29 4 163 0 34 4 167 0 35 4 171 0 37 1 170 0 52 1 170 0 54 4 175 0 61 4 179 0 74 4 183 0 78 4 187 0 80 4 191 0 81 4 195 0 87 4 199 0 88 4 203 0 94 4 207 0 96 1 170 0 102 4 211 0 104 4 215 0 112 4 219 0 118 4 223 0 129 4 227 0 135 4 231 0 136 4 235 0 137 4 239 0 138 4 243 0 139 4 247 0 140 4 251 0 141 4 255 0 142 5 3 0 143 5 7 0 144 4 193 0 153 4 193 0 154 4 193 0 155 4 193 0 156 4 193 0 157 4 193 0 158 4 193 0 159 4 193 0 160 4 193 0 161 4 193 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 193 0 243 4 193 0 244 4 193 0 245 4 193 0 249 4 193 0 250 4 193 0 251 4 193 0 252 4 193 0 253 4 193 0 254 4 193 0 255 4 193 1 1 4 193 1 3 4 193 1 5 4 193 1 6 3 33 1 8 4 193 1 9 4 193 1 10 4 193 1 11 4 193 1 12 4 193 1 13 4 193 1 14 4 193 1 18 4 193 1 60 4 193 1 65 4 193 1 66 4 193 1 73 4 193 1 74 4 193 1 75 4 193 1 76 4 193 1 77 4 193 1 78 4 193 1 79 4 193 1 80 4 193 1 81 4 193 1 82 7 205 1 84 5 33 1 86 4 193 1 89 4 193 1 90 4 193 1 91 4 193 1 92] 
#[1 2 101 0 5 3 66 0 8 3 66 0 10 0 17 0 11 5 11 0 23 5 15 0 26 5 19 0 29 5 23 0 34 5 27 0 35 5 31 0 37 5 35 0 61 5 39 0 74 5 43 0 78 5 47 0 80 5 51 0 81 5 55 0 87 5 59 0 88 5 63 0 94 5 67 0 96 5 71 0 104 5 75 0 112 5 79 0 118 5 83 0 129 5 87 0 135 5 91 0 136 5 95 0 137 5 99 0 138 5 103 0 139 5 107 0 140 5 111 0 141 5 115 0 142 5 119 0 143 5 123 0 144 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 4 197 0 161 4 197 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 197 0 243 4 197 0 244 4 197 0 245 4 197 0 249 4 197 0 250 4 197 0 251 4 197 0 252 4 197 0 253 4 197 0 254 4 197 0 255 4 197 1 1 4 197 1 3 4 197 1 5 4 197 1 6 3 33 1 8 4 197 1 9 4 197 1 10 4 197 1 11 4 197 1 12 4 197 1 13 4 197 1 14 4 197 1 18 4 197 1 60 4 197 1 65 4 197 1 66 4 197 1 73 4 197 1 74 4 197 1 75 4 197 1 76 4 197 1 77 4 197 1 78 4 197 1 79 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 89 4 197 1 90 4 197 1 91 4 197 1 92] 
#[1 2 101 0 5 3 70 0 8 3 70 0 10 0 17 0 11 5 127 0 23 5 131 0 26 5 135 0 29 5 139 0 34 5 143 0 35 5 147 0 37 5 151 0 61 5 155 0 74 5 159 0 78 5 163 0 80 5 167 0 81 5 171 0 87 5 175 0 88 5 179 0 94 5 183 0 96 5 187 0 104 5 191 0 112 5 195 0 118 5 199 0 129 5 203 0 135 5 207 0 136 5 211 0 137 5 215 0 138 5 219 0 139 5 223 0 140 5 227 0 141 5 231 0 142 5 235 0 143 5 239 0 144 4 201 0 153 4 201 0 154 4 201 0 155 4 201 0 156 4 201 0 157 4 201 0 158 4 201 0 159 4 201 0 160 4 201 0 161 4 201 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 201 0 243 4 201 0 244 4 201 0 245 4 201 0 249 4 201 0 250 4 201 0 251 4 201 0 252 4 201 0 253 4 201 0 254 4 201 0 255 4 201 1 1 4 201 1 3 4 201 1 5 4 201 1 6 3 33 1 8 4 201 1 9 4 201 1 10 4 201 1 11 4 201 1 12 4 201 1 13 4 201 1 14 4 201 1 18 4 201 1 60 4 201 1 65 4 201 1 66 4 201 1 73 4 201 1 74 4 201 1 75 4 201 1 76 4 201 1 77 4 201 1 78 4 201 1 79 4 201 1 80 4 201 1 81 4 201 1 82 4 201 1 89 4 201 1 90 4 201 1 91 4 201 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 15 133 0 142 0 141 0 144 15 133 0 165 0 153 0 166 15 133 0 167 15 133 0 168 15 133 0 169 15 133 0 170] 
#[1 5 243 0 1 5 243 0 3 5 243 0 5 6 122 0 6 5 243 0 7 5 243 0 8 6 122 0 9 5 243 0 10 5 243 0 11 5 243 0 12 6 122 0 13 5 243 0 14 6 122 0 15 5 243 0 16 5 243 0 17 5 243 0 18 5 243 0 19 5 243 0 20 5 243 0 21 6 122 0 22 6 122 0 23 6 122 0 26 6 122 0 27 6 122 0 28 6 122 0 29 5 243 0 33 6 122 0 34 6 122 0 35 6 122 0 37 5 243 0 44 5 243 0 45 5 243 0 47 6 122 0 48 6 122 0 50 6 122 0 59 6 122 0 61 6 122 0 62 6 122 0 64 6 122 0 65 6 122 0 68 6 122 0 69 6 122 0 70 6 122 0 71 5 243 0 72 6 122 0 73 6 122 0 74 6 122 0 76 6 122 0 77 6 122 0 78 6 122 0 79 6 122 0 80 6 122 0 81 6 122 0 82 6 122 0 83 5 243 0 86 6 122 0 87 6 122 0 88 5 243 0 90 6 122 0 92 6 122 0 94 6 122 0 95 6 122 0 96 6 122 0 98 6 122 0 99 5 243 0 101 6 122 0 104 6 122 0 105 6 122 0 106 6 122 0 107 6 122 0 108 6 122 0 109 6 122 0 111 6 122 0 112 6 122 0 114 6 122 0 115 6 122 0 117 6 122 0 118 6 122 0 119 5 243 0 120 6 122 0 121 6 122 0 125 6 122 0 126 6 122 0 127 5 243 0 128 6 122 0 129 6 122 0 135 6 122 0 136 6 122 0 137 6 122 0 138 6 122 0 139 6 122 0 140 6 122 0 141 6 122 0 142 6 122 0 143 6 122 0 144 6 122 0 146 6 122 1 93] 
#[1 5 37 0 1 5 247 0 3 14 49 0 5 6 126 0 6 5 49 0 7 14 53 0 8 6 126 0 9 14 57 0 10 14 61 0 11 5 65 0 12 6 126 0 13 5 251 0 14 6 126 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 126 0 22 5 255 0 23 6 3 0 26 6 126 0 27 6 126 0 28 6 7 0 29 5 97 0 33 6 11 0 34 6 15 0 35 6 19 0 37 6 23 0 44 5 105 0 45 5 109 0 47 6 126 0 48 6 126 0 50 6 126 0 59 6 27 0 61 6 126 0 62 6 126 0 64 6 126 0 65 6 126 0 68 6 126 0 69 6 126 0 70 6 126 0 71 5 113 0 72 6 126 0 73 6 31 0 74 6 126 0 76 6 126 0 77 6 35 0 78 6 126 0 79 6 39 0 80 6 43 0 81 6 126 0 82 6 126 0 83 5 117 0 86 6 47 0 87 6 51 0 88 5 121 0 90 6 126 0 92 6 55 0 94 6 126 0 95 6 59 0 96 6 126 0 98 6 126 0 99 5 125 0 101 6 63 0 104 6 126 0 105 6 126 0 106 6 126 0 107 6 126 0 108 6 126 0 109 6 126 0 111 6 67 0 112 6 126 0 114 6 126 0 115 6 126 0 117 6 71 0 118 6 126 0 119 6 75 0 120 6 126 0 121 6 126 0 125 6 126 0 126 6 126 0 127 5 133 0 128 6 79 0 129 6 83 0 135 6 87 0 136 6 91 0 137 6 95 0 138 6 99 0 139 6 103 0 140 6 107 0 141 6 111 0 142 6 115 0 143 6 119 0 144 6 126 0 146 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 5 137 1 0 4 209 1 1 5 141 1 2 4 209 1 3 5 145 1 4 4 209 1 5 4 209 1 6 5 149 1 7 3 33 1 8 15 137 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 126 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 15 141 0 153 15 141 0 154 15 141 0 155 15 141 0 156 15 141 0 157 15 141 0 158 15 141 0 159 15 141 0 160 15 141 0 161 15 141 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 15 141 0 243 15 141 0 244 15 141 0 245 15 141 0 249 15 141 0 250 15 141 0 251 15 141 0 252 15 141 0 253 15 141 0 254 15 141 0 255 15 141 1 1 15 141 1 3 15 141 1 5 15 141 1 6 3 33 1 8 15 141 1 9 15 141 1 10 15 141 1 11 15 141 1 12 15 141 1 13 15 141 1 14 15 141 1 18 15 141 1 60 15 141 1 65 15 141 1 66 15 141 1 73 15 141 1 74 15 141 1 75 15 141 1 76 15 141 1 77 15 141 1 78 15 141 1 79 15 141 1 80 15 141 1 81 15 141 1 82 15 141 1 89 15 141 1 90 15 141 1 91 15 141 1 92] 
#[1 5 37 0 1 6 123 0 3 14 49 0 5 6 130 0 6 5 49 0 7 14 53 0 8 6 130 0 9 14 57 0 10 14 61 0 11 5 65 0 12 6 130 0 13 6 127 0 14 6 130 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 130 0 22 6 131 0 23 6 135 0 26 6 130 0 27 6 130 0 28 6 139 0 29 5 97 0 33 6 143 0 34 6 147 0 35 6 151 0 37 6 155 0 44 5 105 0 45 5 109 0 47 6 130 0 48 6 130 0 50 6 130 0 59 6 159 0 61 6 130 0 62 6 130 0 64 6 130 0 65 6 130 0 68 6 130 0 69 6 130 0 70 6 130 0 71 5 113 0 72 6 130 0 73 6 163 0 74 6 130 0 76 6 130 0 77 6 167 0 78 6 130 0 79 6 171 0 80 6 175 0 81 6 130 0 82 6 130 0 83 5 117 0 86 6 179 0 87 6 183 0 88 5 121 0 90 6 130 0 92 6 187 0 94 6 130 0 95 6 191 0 96 6 130 0 98 6 130 0 99 5 125 0 101 6 195 0 104 6 130 0 105 6 130 0 106 6 130 0 107 6 130 0 108 6 130 0 109 6 130 0 111 6 199 0 112 6 130 0 114 6 130 0 115 6 130 0 117 6 203 0 118 6 130 0 119 6 207 0 120 6 130 0 121 6 130 0 125 6 130 0 126 6 130 0 127 5 133 0 128 6 211 0 129 6 215 0 135 6 219 0 136 6 223 0 137 6 227 0 138 6 231 0 139 6 235 0 140 6 239 0 141 6 243 0 142 6 247 0 143 6 251 0 144 6 130 0 146 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 5 137 1 0 4 209 1 1 5 141 1 2 4 209 1 3 5 145 1 4 4 209 1 5 4 209 1 6 5 149 1 7 3 33 1 8 15 145 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 130 1 93] 
#[1 9 157 0 134 15 149 0 164] 
#[0 6 134 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 138 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 153 0 106] 
#[0 6 142 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 146 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 15 157 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 15 161 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 1 131 0 3 6 255 0 5 5 49 0 7 7 3 0 8 7 7 0 10 7 11 0 11 5 65 0 12 1 135 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 139 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 15 165 0 115 0 6 0 118 1 143 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 15 169 0 150 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 15 173 0 92 1 137 0 137 0 145 0 146 15 177 0 155] 
#[0 6 150 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 15 181 0 92] 
#[1 15 185 0 92 1 137 0 137 0 145 0 146 15 189 0 155] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 6 154 0 68 6 154 0 69 6 154 0 70 1 182 0 72 1 182 0 86 1 182 0 90 6 154 0 92 6 154 0 95 1 182 0 101 1 182 0 120 6 154 0 125 1 182 0 128 6 154 0 137 6 154 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 15 193 0 243 4 209 0 244 4 209 0 245 4 209 0 249 15 193 0 250 15 193 0 251 15 193 0 252 15 193 0 253 15 193 0 254 15 193 0 255 15 193 1 1 15 193 1 3 15 193 1 5 15 193 1 6 3 33 1 8 15 193 1 9 15 193 1 10 15 193 1 11 15 193 1 12 15 193 1 13 15 193 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 193 1 79 15 193 1 80 15 193 1 81 15 193 1 82 15 193 1 89 15 193 1 90 15 193 1 91 15 193 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 15 197 0 243 4 209 0 244 4 209 0 245 4 209 0 249 15 197 0 250 15 197 0 251 15 197 0 252 15 197 0 253 15 197 0 254 15 197 0 255 15 197 1 1 15 197 1 3 15 197 1 5 15 197 1 6 3 33 1 8 15 197 1 9 15 197 1 10 15 197 1 11 15 197 1 12 15 197 1 13 15 197 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 197 1 79 15 197 1 80 15 197 1 81 15 197 1 82 15 197 1 89 15 197 1 90 15 197 1 91 15 197 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 15 201 0 243 4 209 0 244 4 209 0 245 4 209 0 249 15 201 0 250 15 201 0 251 15 201 0 252 15 201 0 253 15 201 0 254 15 201 0 255 15 201 1 1 15 201 1 3 15 201 1 5 15 201 1 6 3 33 1 8 15 201 1 9 15 201 1 10 15 201 1 11 15 201 1 12 15 201 1 13 15 201 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 201 1 79 15 201 1 80 15 201 1 81 15 201 1 82 15 201 1 89 15 201 1 90 15 201 1 91 15 201 1 92] 
#[1 6 158 0 68 6 158 0 69 6 158 0 70 6 158 0 92 6 158 0 95 15 205 0 122 6 158 0 125 15 209 0 126 6 158 0 137 6 158 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 15 213 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 15 217 0 153 15 217 0 154 15 217 0 155 15 217 0 156 15 217 0 157 15 217 0 158 15 217 0 159 15 217 0 160 15 217 0 161 15 217 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 15 217 0 243 15 217 0 244 15 217 0 245 15 217 0 249 15 217 0 250 15 217 0 251 15 217 0 252 15 217 0 253 15 217 0 254 15 217 0 255 15 217 1 1 15 217 1 3 15 217 1 5 15 217 1 6 3 33 1 8 15 217 1 9 15 217 1 10 15 217 1 11 15 217 1 12 15 217 1 13 15 217 1 14 15 217 1 18 15 217 1 60 15 217 1 65 15 217 1 66 15 217 1 73 15 217 1 74 15 217 1 75 15 217 1 76 15 217 1 77 15 217 1 78 15 217 1 79 15 217 1 80 15 217 1 81 15 217 1 82 15 217 1 89 15 217 1 90 15 217 1 91 15 217 1 92] 
#[0 15 221 0 82] 
#[1 15 225 0 68 15 229 0 70] 
#[0 6 162 0 68 0 69 0 70 0 137] 
#[1 15 233 0 68 14 153 0 69 15 237 0 70 1 137 0 137 15 241 0 155 15 245 1 38 15 245 1 41 15 245 1 42 15 245 1 43] 
#[0 6 166 0 68 0 69 0 70 0 137] 
#[0 6 170 0 68 0 69 0 70 0 137] 
#[0 6 174 0 68 0 69 0 70 0 137] 
#[1 15 249 0 68 14 153 0 69 15 253 0 70 1 137 0 137 0 145 0 146 16 1 0 155 14 165 1 38 16 5 1 39 14 165 1 41 14 165 1 42 14 165 1 43] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 6 178 0 68 6 178 0 69 6 178 0 70 5 113 0 72 5 117 0 86 5 121 0 90 6 178 0 92 6 178 0 95 5 125 0 101 5 129 0 120 6 178 0 125 5 133 0 128 6 178 0 137 6 178 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 53 0 146 16 9 0 180 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 16 13 0 68 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 193 0 153 14 193 0 154 14 193 0 155 14 193 0 156 14 193 0 157 14 193 0 158 14 193 0 159 14 193 0 160 14 193 0 161 14 193 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 14 193 0 243 14 193 0 244 14 193 0 245 14 193 0 249 14 193 0 250 14 193 0 251 14 193 0 252 14 193 0 253 14 193 0 254 14 193 0 255 14 193 1 1 14 193 1 3 14 193 1 5 14 193 1 6 3 33 1 8 14 193 1 9 14 193 1 10 14 193 1 11 14 193 1 12 14 193 1 13 14 193 1 14 14 193 1 18 14 193 1 60 14 193 1 65 14 193 1 66 14 193 1 73 14 193 1 74 14 193 1 75 14 193 1 76 14 193 1 77 14 193 1 78 14 193 1 79 14 193 1 80 14 193 1 81 14 193 1 82 14 193 1 89 14 193 1 90 14 193 1 91 14 193 1 92] 
#[0 16 17 0 111] 
#[0 16 21 0 70] 
#[1 7 53 0 146 16 25 0 180] 
#[0 6 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 6 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 29 0 125] 
#[0 6 190 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 33 0 127] 
#[0 16 37 0 127] 
#[0 16 41 0 70] 
#[0 6 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 193 0 5 1 205 0 22 16 45 0 191 16 45 0 192 1 217 0 193 16 45 0 196] 
#[0 6 198 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 49 0 77] 
#[0 6 206 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 53 0 106] 
#[0 16 57 0 106] 
#[1 16 61 0 70 0 145 0 146] 
#[0 6 210 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 65 0 106] 
#[0 6 214 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 69 0 106] 
#[0 6 218 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 73 0 77] 
#[1 16 77 0 70 0 145 0 146] 
#[0 16 81 0 106] 
#[1 16 85 0 70 0 145 0 146] 
#[1 16 89 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 16 93 0 150] 
#[0 16 97 0 106] 
#[1 16 101 0 70 0 145 0 146] 
#[0 16 105 0 106] 
#[1 16 109 0 70 0 145 0 146] 
#[0 6 222 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 113 0 117] 
#[0 6 226 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 117 0 77] 
#[0 6 230 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 121 0 106] 
#[0 16 125 0 106] 
#[1 16 129 0 70 0 145 0 146] 
#[0 6 234 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 133 0 106] 
#[0 6 238 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 137 0 106] 
#[0 6 242 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 7 15 0 1 7 15 0 3 7 15 0 5 4 158 0 6 7 15 0 7 7 15 0 8 7 15 0 9 7 15 0 10 7 19 0 11 7 15 0 12 4 158 0 13 7 15 0 14 7 15 0 15 7 15 0 16 7 15 0 17 7 15 0 18 7 15 0 19 7 15 0 20 7 15 0 21 4 158 0 22 7 15 0 23 7 15 0 26 4 158 0 27 4 158 0 28 7 15 0 29 7 15 0 33 7 15 0 34 7 15 0 35 7 15 0 37 7 15 0 44 7 15 0 45 7 15 0 47 4 158 0 48 4 158 0 50 0 222 0 52 0 222 0 54 4 158 0 59 7 15 0 61 4 158 0 62 4 158 0 64 4 158 0 65 4 158 0 68 4 158 0 69 4 158 0 70 4 158 0 71 7 15 0 72 4 158 0 73 7 15 0 74 4 158 0 76 4 158 0 77 7 15 0 78 4 158 0 79 7 15 0 80 7 15 0 81 4 158 0 82 4 158 0 83 7 15 0 86 7 15 0 87 7 15 0 88 7 15 0 90 4 158 0 92 7 15 0 94 4 158 0 95 7 15 0 96 4 158 0 98 4 158 0 99 7 15 0 101 0 222 0 102 7 15 0 104 4 158 0 105 4 158 0 106 4 158 0 107 4 158 0 108 4 158 0 109 4 158 0 111 7 15 0 112 4 158 0 114 4 158 0 115 4 158 0 117 7 15 0 118 4 158 0 119 7 15 0 120 4 158 0 121 4 158 0 125 4 158 0 126 4 158 0 127 7 15 0 128 7 15 0 129 7 15 0 135 7 15 0 136 7 15 0 137 7 15 0 138 7 15 0 139 7 15 0 140 7 15 0 141 7 15 0 142 7 15 0 143 7 15 0 144 4 158 0 146 4 158 1 93] 
#[1 7 23 0 1 7 23 0 3 7 23 0 5 6 246 0 6 7 23 0 7 7 23 0 8 6 246 0 9 7 23 0 10 7 23 0 11 7 23 0 12 6 246 0 13 7 23 0 14 6 246 0 15 7 23 0 16 7 23 0 17 7 23 0 18 7 23 0 19 7 23 0 20 7 23 0 21 6 246 0 22 6 246 0 23 6 246 0 26 6 246 0 27 6 246 0 28 6 246 0 29 7 23 0 33 6 246 0 34 6 246 0 35 6 246 0 37 7 23 0 44 7 23 0 45 7 23 0 47 6 246 0 48 6 246 0 50 6 246 0 59 6 246 0 61 6 246 0 62 6 246 0 64 6 246 0 65 6 246 0 68 6 246 0 69 6 246 0 70 6 246 0 71 7 23 0 72 6 246 0 73 6 246 0 74 6 246 0 76 6 246 0 77 6 246 0 78 6 246 0 79 6 246 0 80 6 246 0 81 6 246 0 82 6 246 0 83 7 23 0 86 6 246 0 87 6 246 0 88 7 23 0 90 6 246 0 92 6 246 0 94 6 246 0 95 6 246 0 96 6 246 0 98 6 246 0 99 7 23 0 101 6 246 0 104 6 246 0 105 6 246 0 106 6 246 0 107 6 246 0 108 6 246 0 109 6 246 0 111 6 246 0 112 6 246 0 114 6 246 0 115 6 246 0 117 6 246 0 118 6 246 0 119 7 23 0 120 6 246 0 121 6 246 0 125 6 246 0 126 6 246 0 127 7 23 0 128 6 246 0 129 6 246 0 135 6 246 0 136 6 246 0 137 6 246 0 138 6 246 0 139 6 246 0 140 6 246 0 141 6 246 0 142 6 246 0 143 6 246 0 144 6 246 0 146 6 246 1 93] 
#[1 5 37 0 1 7 27 0 3 14 49 0 5 6 250 0 6 5 49 0 7 14 53 0 8 6 250 0 9 14 57 0 10 14 61 0 11 5 65 0 12 6 250 0 13 7 31 0 14 6 250 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 250 0 22 7 35 0 23 7 39 0 26 6 250 0 27 6 250 0 28 7 43 0 29 5 97 0 33 7 47 0 34 7 51 0 35 7 55 0 37 7 59 0 44 5 105 0 45 5 109 0 47 6 250 0 48 6 250 0 50 6 250 0 59 7 63 0 61 6 250 0 62 6 250 0 64 6 250 0 65 6 250 0 68 6 250 0 69 6 250 0 70 6 250 0 71 5 113 0 72 6 250 0 73 7 67 0 74 6 250 0 76 6 250 0 77 7 71 0 78 6 250 0 79 7 75 0 80 7 79 0 81 6 250 0 82 6 250 0 83 5 117 0 86 7 83 0 87 7 87 0 88 5 121 0 90 6 250 0 92 7 91 0 94 6 250 0 95 7 95 0 96 6 250 0 98 6 250 0 99 5 125 0 101 7 99 0 104 6 250 0 105 6 250 0 106 6 250 0 107 6 250 0 108 6 250 0 109 6 250 0 111 7 103 0 112 6 250 0 114 6 250 0 115 6 250 0 117 7 107 0 118 6 250 0 119 7 111 0 120 6 250 0 121 6 250 0 125 6 250 0 126 6 250 0 127 5 133 0 128 7 115 0 129 7 119 0 135 7 123 0 136 7 127 0 137 7 131 0 138 7 135 0 139 7 139 0 140 7 143 0 141 7 147 0 142 7 151 0 143 7 155 0 144 6 250 0 146 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 4 209 0 243 4 209 0 244 4 209 0 245 4 209 0 249 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 5 137 1 0 4 209 1 1 5 141 1 2 4 209 1 3 5 145 1 4 4 209 1 5 4 209 1 6 5 149 1 7 3 33 1 8 16 141 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 250 1 93] 
#[1 7 159 0 1 7 159 0 3 7 159 0 5 6 254 0 6 7 159 0 7 7 159 0 8 6 254 0 9 7 159 0 10 7 159 0 11 7 159 0 12 6 254 0 13 7 159 0 14 6 254 0 15 7 159 0 16 7 159 0 17 7 159 0 18 7 159 0 19 7 159 0 20 7 159 0 21 6 254 0 22 6 254 0 23 6 254 0 26 6 254 0 27 6 254 0 28 6 254 0 29 7 159 0 33 6 254 0 34 6 254 0 35 6 254 0 37 7 159 0 44 7 159 0 45 7 159 0 47 6 254 0 48 6 254 0 50 6 254 0 59 6 254 0 61 6 254 0 62 6 254 0 64 6 254 0 65 6 254 0 68 6 254 0 69 6 254 0 70 6 254 0 71 7 159 0 72 6 254 0 73 6 254 0 74 6 254 0 76 6 254 0 77 6 254 0 78 6 254 0 79 6 254 0 80 6 254 0 81 6 254 0 82 6 254 0 83 7 159 0 86 6 254 0 87 6 254 0 88 7 159 0 90 6 254 0 92 6 254 0 94 6 254 0 95 6 254 0 96 6 254 0 98 6 254 0 99 7 159 0 101 6 254 0 104 6 254 0 105 6 254 0 106 6 254 0 107 6 254 0 108 6 254 0 109 6 254 0 111 6 254 0 112 6 254 0 114 6 254 0 115 6 254 0 117 6 254 0 118 6 254 0 119 7 159 0 120 6 254 0 121 6 254 0 125 6 254 0 126 6 254 0 127 7 159 0 128 6 254 0 129 6 254 0 135 6 254 0 136 6 254 0 137 6 254 0 138 6 254 0 139 6 254 0 140 6 254 0 141 6 254 0 142 6 254 0 143 6 254 0 144 6 254 0 146 6 254 1 93] 
#[1 16 145 0 10 11 117 0 134] 
#[0 7 2 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 16 149 0 95 1 137 0 137 0 145 0 146 16 153 0 155] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 16 157 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 16 161 0 153 16 161 0 154 16 161 0 155 16 161 0 156 16 161 0 157 16 161 0 158 16 161 0 159 16 161 0 160 16 161 0 161 16 161 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 16 161 0 243 16 161 0 244 16 161 0 245 16 161 0 249 16 161 0 250 16 161 0 251 16 161 0 252 16 161 0 253 16 161 0 254 16 161 0 255 16 161 1 1 16 161 1 3 16 161 1 5 16 161 1 6 3 33 1 8 16 161 1 9 16 161 1 10 16 161 1 11 16 161 1 12 16 161 1 13 16 161 1 14 16 161 1 18 16 161 1 60 16 161 1 65 16 161 1 66 16 161 1 73 16 161 1 74 16 161 1 75 16 161 1 76 16 161 1 77 16 161 1 78 16 161 1 79 16 161 1 80 16 161 1 81 16 161 1 82 16 161 1 89 16 161 1 90 16 161 1 91 16 161 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 16 165 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 16 169 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 6 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 173 0 92] 
#[0 7 10 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 14 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 177 0 92] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 18 0 68 7 18 0 69 7 18 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 18 0 92 7 18 0 95 1 182 0 101 1 182 0 120 7 18 0 125 1 182 0 128 7 18 0 137 7 18 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 22 0 68 7 22 0 69 7 22 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 22 0 92 7 22 0 95 1 182 0 101 1 182 0 120 7 22 0 125 1 182 0 128 7 22 0 137 7 22 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 26 0 68 7 26 0 69 7 26 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 26 0 92 7 26 0 95 1 182 0 101 1 182 0 120 7 26 0 125 1 182 0 128 7 26 0 137 7 26 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 16 181 0 243 4 209 0 244 4 209 0 245 4 209 0 249 16 181 0 250 16 181 0 251 16 181 0 252 16 181 0 253 16 181 0 254 16 181 0 255 16 181 1 1 16 181 1 3 16 181 1 5 16 181 1 6 3 33 1 8 16 181 1 9 16 181 1 10 16 181 1 11 16 181 1 12 16 181 1 13 16 181 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 16 181 1 79 16 181 1 80 16 181 1 81 16 181 1 82 16 181 1 89 16 181 1 90 16 181 1 91 16 181 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 16 185 0 243 4 209 0 244 4 209 0 245 4 209 0 249 16 185 0 250 16 185 0 251 16 185 0 252 16 185 0 253 16 185 0 254 16 185 0 255 16 185 1 1 16 185 1 3 16 185 1 5 16 185 1 6 3 33 1 8 16 185 1 9 16 185 1 10 16 185 1 11 16 185 1 12 16 185 1 13 16 185 1 14 4 209 1 18 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 16 185 1 79 16 185 1 80 16 185 1 81 16 185 1 82 16 185 1 89 16 185 1 90 16 185 1 91 16 185 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 16 189 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 16 193 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 16 197 0 119 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 7 30 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 16 201 0 150] 
#[0 16 205 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 16 209 0 150] 
#[0 16 213 0 82] 
#[0 16 217 0 70] 
#[0 7 34 0 68 0 69 0 70 0 137] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 16 221 0 150] 
#[0 16 225 0 82] 
#[1 16 229 0 68 16 233 0 70] 
#[1 16 237 0 68 14 153 0 69 16 241 0 70 1 137 0 137 16 245 0 155 15 245 1 38 15 245 1 41 15 245 1 42 15 245 1 43] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 163 0 146 16 249 0 153 16 249 0 154 16 249 0 155 16 249 0 156 16 249 0 157 16 249 0 158 16 249 0 159 16 249 0 160 16 249 0 161 16 249 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 16 249 0 243 16 249 0 244 16 249 0 245 16 249 0 249 16 249 0 250 16 249 0 251 16 249 0 252 16 249 0 253 16 249 0 254 16 249 0 255 16 249 1 1 16 249 1 3 16 249 1 5 16 249 1 6 3 33 1 8 16 249 1 9 16 249 1 10 16 249 1 11 16 249 1 12 16 249 1 13 16 249 1 14 16 249 1 18 16 249 1 60 16 249 1 65 16 249 1 66 16 249 1 73 16 249 1 74 16 249 1 75 16 249 1 76 16 249 1 77 16 249 1 78 16 249 1 79 16 249 1 80 16 249 1 81 16 249 1 82 16 249 1 89 16 249 1 90 16 249 1 91 16 249 1 92] 
#[1 7 53 0 146 16 253 0 180] 
#[0 7 42 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 1 0 111] 
#[1 17 5 0 70 1 137 0 137 9 21 0 146 17 9 0 155] 
#[0 7 46 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 50 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 54 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 13 0 127] 
#[0 7 58 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 62 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 66 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 70 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 17 0 106] 
#[0 7 74 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 78 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 82 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 21 0 77] 
#[0 7 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 25 0 106] 
#[0 17 29 0 106] 
#[1 17 33 0 70 0 145 0 146] 
#[0 7 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 37 0 106] 
#[0 7 94 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 41 0 106] 
#[0 7 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 45 0 106] 
#[0 7 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 118 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 7 167 0 1 7 167 0 3 7 167 0 5 7 122 0 6 7 167 0 7 7 167 0 8 7 122 0 9 7 167 0 10 7 167 0 11 7 167 0 12 7 122 0 13 7 167 0 14 7 122 0 15 7 167 0 16 7 167 0 17 7 167 0 18 7 167 0 19 7 167 0 20 7 167 0 21 7 122 0 22 7 122 0 23 7 122 0 26 7 122 0 27 7 122 0 28 7 122 0 29 7 167 0 33 7 122 0 34 7 122 0 35 7 122 0 37 7 167 0 44 7 167 0 45 7 167 0 47 7 122 0 48 7 122 0 50 7 122 0 59 7 122 0 61 7 122 0 62 7 122 0 64 7 122 0 65 7 122 0 68 7 122 0 69 7 122 0 70 7 122 0 71 7 167 0 72 7 122 0 73 7 122 0 74 7 122 0 76 7 122 0 77 7 122 0 78 7 122 0 79 7 122 0 80 7 122 0 81 7 122 0 82 7 122 0 83 7 167 0 86 7 122 0 87 7 122 0 88 7 167 0 90 7 122 0 92 7 122 0 94 7 122 0 95 7 122 0 96 7 122 0 98 7 122 0 99 7 167 0 101 7 122 0 104 7 122 0 105 7 122 0 106 7 122 0 107 7 122 0 108 7 122 0 109 7 122 0 111 7 122 0 112 7 122 0 114 7 122 0 115 7 122 0 117 7 122 0 118 7 122 0 119 7 167 0 120 7 122 0 121 7 122 0 125 7 122 0 126 7 122 0 127 7 167 0 128 7 122 0 129 7 122 0 135 7 122 0 136 7 122 0 137 7 122 0 138 7 122 0 139 7 122 0 140 7 122 0 141 7 122 0 142 7 122 0 143 7 122 0 144 7 122 0 146 7 122 1 93] 
#[1 9 157 0 134 17 49 0 164] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 126 0 68 7 126 0 69 7 126 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 126 0 92 0 153 0 94 7 126 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 126 0 125 7 126 0 137 17 53 0 142 0 141 0 144 7 126 0 146 17 53 0 165 0 153 0 166 17 53 0 167 17 53 0 168 17 53 0 169 17 53 0 170] 
#[0 17 57 0 95] 
#[1 17 61 0 95 1 137 0 137 0 145 0 146 17 65 0 155] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 101 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 5 129 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 17 69 0 150 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 17 73 0 95 1 137 0 137 0 145 0 146 17 77 0 155] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 17 81 0 150] 
#[0 7 130 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 134 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 138 0 68 7 138 0 69 7 138 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 138 0 92 7 138 0 95 1 182 0 101 1 182 0 120 7 138 0 125 1 182 0 128 7 138 0 137 7 138 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 142 0 68 7 142 0 69 7 142 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 142 0 92 7 142 0 95 1 182 0 101 1 182 0 120 7 142 0 125 1 182 0 128 7 142 0 137 7 142 0 146] 
#[1 17 85 0 70 1 137 0 137 0 145 0 146 17 89 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 17 93 0 150] 
#[1 7 171 0 5 7 171 0 8 7 171 0 10 7 171 0 11 7 146 0 13 7 171 0 23 7 171 0 26 0 6 0 27 0 6 0 28 7 171 0 29 7 171 0 34 7 171 0 35 7 171 0 37 0 6 0 48 0 6 0 59 7 171 0 61 0 6 0 64 0 6 0 65 7 171 0 68 7 171 0 69 7 171 0 70 0 6 0 71 0 6 0 73 7 171 0 74 0 6 0 76 7 171 0 78 0 6 0 79 7 171 0 80 7 171 0 81 0 6 0 82 7 171 0 87 7 171 0 88 7 171 0 94 7 171 0 96 0 6 0 98 0 6 0 99 7 171 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 7 171 0 112 0 6 0 114 7 171 0 118 0 6 0 121 0 6 0 126 0 6 0 127 7 171 0 129 7 171 0 135 7 171 0 136 7 171 0 137 7 171 0 138 7 171 0 139 7 171 0 140 7 171 0 141 7 171 0 142 7 171 0 143 7 171 0 144 0 6 0 146 17 97 0 150 17 101 1 45] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 17 105 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 17 109 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 150 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 17 113 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 17 117 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 154 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 121 0 82] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 17 125 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 17 129 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 158 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 17 133 0 150] 
#[0 17 137 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 17 141 0 150] 
#[0 17 145 0 82] 
#[0 17 149 0 70] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 162 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 175 0 146 17 153 0 153 17 153 0 154 17 153 0 155 17 153 0 156 17 153 0 157 17 153 0 158 17 153 0 159 17 153 0 160 17 153 0 161 17 153 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 17 153 0 243 17 153 0 244 17 153 0 245 17 153 0 249 17 153 0 250 17 153 0 251 17 153 0 252 17 153 0 253 17 153 0 254 17 153 0 255 17 153 1 1 17 153 1 3 17 153 1 5 17 153 1 6 3 33 1 8 17 153 1 9 17 153 1 10 17 153 1 11 17 153 1 12 17 153 1 13 17 153 1 14 17 153 1 18 17 153 1 60 17 153 1 65 17 153 1 66 17 153 1 73 17 153 1 74 17 153 1 75 17 153 1 76 17 153 1 77 17 153 1 78 17 153 1 79 17 153 1 80 17 153 1 81 17 153 1 82 17 153 1 89 17 153 1 90 17 153 1 91 17 153 1 92] 
#[0 7 170 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 157 0 111] 
#[0 17 161 0 70] 
#[0 7 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 178 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 182 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 190 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 165 0 106] 
#[0 7 194 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 198 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 17 169 0 131 11 117 0 134] 
#[1 1 197 0 11 7 206 0 68 7 206 0 69 7 206 0 70 7 206 0 92 7 206 0 95 7 206 0 125 7 206 0 137 7 206 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 210 0 68 7 210 0 69 7 210 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 210 0 92 0 153 0 94 7 210 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 210 0 125 7 210 0 137 17 173 0 142 0 141 0 144 7 210 0 146 17 173 0 165 0 153 0 166 17 173 0 167 17 173 0 168 17 173 0 169 17 173 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 214 0 68 7 214 0 69 7 214 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 214 0 92 0 153 0 94 7 214 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 214 0 125 7 214 0 137 17 177 0 142 0 141 0 144 7 214 0 146 17 177 0 165 0 153 0 166 17 177 0 167 17 177 0 168 17 177 0 169 17 177 0 170] 
#[0 17 181 0 95] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 17 185 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 17 189 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 218 0 68 7 218 0 69 7 218 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 218 0 92 0 153 0 94 7 218 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 218 0 125 7 218 0 137 17 193 0 142 0 141 0 144 7 218 0 146 17 193 0 165 0 153 0 166 17 193 0 167 17 193 0 168 17 193 0 169 17 193 0 170] 
#[0 17 197 0 95] 
#[1 17 201 0 95 1 137 0 137 0 145 0 146 17 205 0 155] 
#[0 17 209 0 82] 
#[0 17 213 0 70] 
#[1 17 217 0 70 1 137 0 137 0 145 0 146 17 221 0 155] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 17 225 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 17 229 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 17 233 0 13 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 7 222 0 68 7 222 0 69 7 222 0 70 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 7 179 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 17 237 0 153 17 237 0 154 17 237 0 155 17 237 0 156 17 237 0 157 17 237 0 158 17 237 0 159 17 237 0 160 17 237 0 161 17 237 0 162 2 229 0 165 0 153 0 166 2 229 0 167 2 229 0 168 2 229 0 169 2 229 0 170 17 237 0 243 17 237 0 244 17 237 0 245 17 237 0 249 17 237 0 250 17 237 0 251 17 237 0 252 17 237 0 253 17 237 0 254 17 237 0 255 17 237 1 1 17 237 1 3 17 237 1 5 17 237 1 6 3 33 1 8 17 237 1 9 17 237 1 10 17 237 1 11 17 237 1 12 17 237 1 13 17 237 1 14 17 237 1 18 17 241 1 44 17 237 1 60 17 237 1 65 17 237 1 66 17 237 1 73 17 237 1 74 17 237 1 75 17 237 1 76 17 237 1 77 17 237 1 78 17 237 1 79 17 237 1 80 17 237 1 81 17 237 1 82 17 237 1 89 17 237 1 90 17 237 1 91 17 237 1 92] 
#[1 17 245 0 70 1 137 0 137 0 145 0 146 17 249 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 17 253 0 150] 
#[1 18 1 0 70 1 137 0 137 0 145 0 146 18 5 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 9 0 150] 
#[0 7 226 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 18 13 0 70 1 137 0 137 0 145 0 146 18 17 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 21 0 150] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 18 25 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 18 29 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 230 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 219 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 233 0 142 2 185 0 143 0 141 0 144 1 223 0 146 18 33 0 150 6 17 0 153 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 5 237 0 165 0 153 0 166 5 237 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 241 0 171 5 253 0 174 5 253 0 176 5 253 0 183 18 37 0 184 6 5 0 188 5 253 0 197 5 253 0 198 5 253 0 202 5 253 0 203 5 253 0 224 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 1 25 0 230 5 253 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 239 5 253 0 242 6 17 0 243 6 17 0 244 6 17 0 245 6 17 0 249 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 1 6 17 1 3 6 17 1 5 6 17 1 6 3 33 1 8 6 17 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 18 5 253 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 40 5 253 1 46 5 253 1 47 5 253 1 48 5 253 1 49 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 157 1 73 6 157 1 74 6 157 1 75 6 157 1 76 6 157 1 77 6 157 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 234 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 41 0 82] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 238 0 146 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 7 242 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 45 0 111] 
#[0 7 246 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 250 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 1 93] 
#[1 1 197 0 11 7 254 0 68 7 254 0 69 7 254 0 70 7 254 0 92 7 254 0 95 7 254 0 125 7 254 0 137 7 254 0 146] 
#[1 1 197 0 11 8 2 0 68 8 2 0 69 8 2 0 70 8 2 0 92 8 2 0 95 8 2 0 125 8 2 0 137 8 2 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 6 0 68 8 6 0 69 8 6 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 6 0 92 0 153 0 94 8 6 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 6 0 125 8 6 0 137 18 49 0 142 0 141 0 144 8 6 0 146 18 49 0 165 0 153 0 166 18 49 0 167 18 49 0 168 18 49 0 169 18 49 0 170] 
#[1 18 53 0 95 1 137 0 137 0 145 0 146 18 57 0 155] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 18 61 0 150] 
#[1 1 197 0 11 8 10 0 68 8 10 0 69 8 10 0 70 8 10 0 92 8 10 0 95 8 10 0 125 8 10 0 137 8 10 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 14 0 68 8 14 0 69 8 14 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 14 0 92 0 153 0 94 8 14 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 14 0 125 8 14 0 137 18 65 0 142 0 141 0 144 8 14 0 146 18 65 0 165 0 153 0 166 18 65 0 167 18 65 0 168 18 65 0 169 18 65 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 18 0 68 8 18 0 69 8 18 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 18 0 92 0 153 0 94 8 18 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 18 0 125 8 18 0 137 18 69 0 142 0 141 0 144 8 18 0 146 18 69 0 165 0 153 0 166 18 69 0 167 18 69 0 168 18 69 0 169 18 69 0 170] 
#[0 18 73 0 95] 
#[0 8 22 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 77 0 82] 
#[0 18 81 0 82] 
#[0 18 85 0 70] 
#[1 8 26 0 68 8 26 0 69 8 26 0 70 8 26 0 137 0 145 0 146] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 137 0 6 0 146 18 89 0 150] 
#[0 8 30 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 18 93 0 13 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 0 5 141 1 2 5 145 1 4 5 149 1 7] 
#[0 8 34 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 18 97 0 82] 
#[0 18 101 0 70] 
#[1 18 105 0 70 1 137 0 137 0 145 0 146 18 109 0 155] 
#[0 18 113 0 82] 
#[0 18 117 0 70] 
#[1 18 121 0 70 1 137 0 137 0 145 0 146 18 125 0 155] 
#[0 18 129 0 82] 
#[0 18 133 0 70] 
#[1 18 137 0 70 1 137 0 137 0 145 0 146 18 141 0 155] 
#[1 18 145 0 70 1 137 0 137 0 145 0 146 18 149 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 153 0 150] 
#[1 18 157 0 70 1 137 0 137 0 145 0 146 18 161 0 155] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 165 0 150] 
#[0 8 38 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 42 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 197 0 11 8 46 0 68 8 46 0 69 8 46 0 70 8 46 0 92 8 46 0 95 8 46 0 125 8 46 0 137 8 46 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 50 0 68 8 50 0 69 8 50 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 50 0 92 0 153 0 94 8 50 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 50 0 125 8 50 0 137 18 169 0 142 0 141 0 144 8 50 0 146 18 169 0 165 0 153 0 166 18 169 0 167 18 169 0 168 18 169 0 169 18 169 0 170] 
#[0 18 173 0 95] 
#[1 18 177 0 95 1 137 0 137 0 145 0 146 18 181 0 155] 
#[1 1 197 0 11 8 54 0 68 8 54 0 69 8 54 0 70 8 54 0 92 8 54 0 95 8 54 0 125 8 54 0 137 8 54 0 146] 
#[1 1 197 0 11 8 58 0 68 8 58 0 69 8 58 0 70 8 58 0 92 8 58 0 95 8 58 0 125 8 58 0 137 8 58 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 62 0 68 8 62 0 69 8 62 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 62 0 92 0 153 0 94 8 62 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 62 0 125 8 62 0 137 18 185 0 142 0 141 0 144 8 62 0 146 18 185 0 165 0 153 0 166 18 185 0 167 18 185 0 168 18 185 0 169 18 185 0 170] 
#[0 8 66 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 70 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 189 0 82] 
#[1 8 74 0 68 8 74 0 69 8 74 0 70 8 74 0 137 0 145 0 146] 
#[0 8 78 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 8 82 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 193 0 82] 
#[0 18 197 0 82] 
#[0 18 201 0 70] 
#[0 8 86 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 205 0 82] 
#[0 18 209 0 82] 
#[0 18 213 0 70] 
#[0 8 90 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 217 0 82] 
#[0 18 221 0 82] 
#[0 18 225 0 70] 
#[0 18 229 0 82] 
#[0 18 233 0 70] 
#[1 18 237 0 70 1 137 0 137 0 145 0 146 18 241 0 155] 
#[0 18 245 0 82] 
#[0 18 249 0 70] 
#[1 18 253 0 70 1 137 0 137 0 145 0 146 19 1 0 155] 
#[1 1 197 0 11 8 94 0 68 8 94 0 69 8 94 0 70 8 94 0 92 8 94 0 95 8 94 0 125 8 94 0 137 8 94 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 98 0 68 8 98 0 69 8 98 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 98 0 92 0 153 0 94 8 98 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 98 0 125 8 98 0 137 19 5 0 142 0 141 0 144 8 98 0 146 19 5 0 165 0 153 0 166 19 5 0 167 19 5 0 168 19 5 0 169 19 5 0 170] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 102 0 68 8 102 0 69 8 102 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 102 0 92 0 153 0 94 8 102 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 102 0 125 8 102 0 137 19 9 0 142 0 141 0 144 8 102 0 146 19 9 0 165 0 153 0 166 19 9 0 167 19 9 0 168 19 9 0 169 19 9 0 170] 
#[0 19 13 0 95] 
#[1 1 197 0 11 8 106 0 68 8 106 0 69 8 106 0 70 8 106 0 92 8 106 0 95 8 106 0 125 8 106 0 137 8 106 0 146] 
#[0 8 110 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 114 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 118 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 17 0 82] 
#[0 8 122 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 126 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 21 0 82] 
#[0 8 130 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 134 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 25 0 82] 
#[0 8 138 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 29 0 82] 
#[0 19 33 0 82] 
#[0 19 37 0 70] 
#[0 8 142 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 41 0 82] 
#[0 19 45 0 82] 
#[0 19 49 0 70] 
#[1 1 197 0 11 8 146 0 68 8 146 0 69 8 146 0 70 8 146 0 92 8 146 0 95 8 146 0 125 8 146 0 137 8 146 0 146] 
#[1 1 197 0 11 8 150 0 68 8 150 0 69 8 150 0 70 8 150 0 92 8 150 0 95 8 150 0 125 8 150 0 137 8 150 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 154 0 68 8 154 0 69 8 154 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 154 0 92 0 153 0 94 8 154 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 154 0 125 8 154 0 137 19 53 0 142 0 141 0 144 8 154 0 146 19 53 0 165 0 153 0 166 19 53 0 167 19 53 0 168 19 53 0 169 19 53 0 170] 
#[0 8 158 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 162 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 166 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 170 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 57 0 82] 
#[0 8 178 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 61 0 82] 
#[1 1 197 0 11 8 186 0 68 8 186 0 69 8 186 0 70 8 186 0 92 8 186 0 95 8 186 0 125 8 186 0 137 8 186 0 146] 
#[0 8 190 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument1: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument3: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result timesToken: ((nodes at: 2) at: 1).
	result plusToken: ((nodes at: 2) at: 2).
	result minusToken: ((nodes at: 2) at: 3).
	result divideToken: ((nodes at: 2) at: 4).
	result upArrowToken: ((nodes at: 2) at: 5).
	result _Token: ((nodes at: 2) at: 6).
	result modToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignementOrEquals1: nodes [
	| result |
	result := VBAssignementOrEqualsNode new.
	result left: (nodes at: 1).
	result operator: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result setting: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType11: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result andToken: ((nodes at: 2) at: 1).
	result orToken: ((nodes at: 2) at: 2).
	result xorToken: ((nodes at: 2) at: 3).
	result eqvToken: ((nodes at: 2) at: 4).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result expressions.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result expressions.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCaseOtherwise1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result elseToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCaseOtherwise2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result elseToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result greaterThanToken: ((nodes at: 2) at: 1).
	result lessThanToken: ((nodes at: 2) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 2) at: 3).
	result lessThanEqualToken: ((nodes at: 2) at: 4).
	result greaterThanEqualToken: ((nodes at: 2) at: 5).
	result isToken: ((nodes at: 2) at: 6).
	result likeToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result andToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result value: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	result type: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	result type: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result enumTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result typeTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDestinationList1: nodes [
	| result |
	result := VBDestinationListNode new.
	result addObject: (nodes at: 1) to: result labels.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result labels.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result untilToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result untilToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	result whileToken: (nodes at: 5).
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result whileToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result ifMatch: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfColon1: nodes [
	| result |
	result := VBElseIfColonNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 4) at: 2) to: result ifMatches.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result eventToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result doToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result fORToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result propertyToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement1: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result kind: (nodes at: 1).
	result left: (nodes at: 2).
	result operator: (nodes at: 3).
	result right: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFileDescriptorLiteral1: nodes [
	| result |
	result := VBFileDescriptorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	result addObject: (nodes at: 9) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addObject: (nodes at: 11) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result element: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext5: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext6: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext7: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext8: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext5: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext6: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext7: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext8: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	result element: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSub1: nodes [
	| result |
	result := VBGoSubNode new.
	result gosubToken: (nodes at: 1).
	result destination: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoTo1: nodes [
	| result |
	result := VBGoToNode new.
	result gotoToken: (nodes at: 1).
	result destination: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHeadlessIdentifier1: nodes [
	| result |
	result := VBHeadlessIdentifierNode new.
	result periodToken: (nodes at: 1).
	result token: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenColon1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse10: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse11: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse12: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse13: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse14: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse15: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse16: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse7: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse8: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse9: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse5: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse6: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse7: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse8: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	result elseToken: (nodes at: 5).
	result
		ifFalse: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplements1: nodes [
	| result |
	result := VBImplementsNode new.
	result implementsToken: (nodes at: 1).
	result interface: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result identifier: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntervalExpression1: nodes [
	| result |
	result := VBIntervalExpressionNode new.
	result from: (nodes at: 1).
	result toToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result returnToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub2: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub3: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub4: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result returnToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelTag1: nodes [
	| result |
	result := VBLabelTagNode new.
	result name: (nodes at: 1).
	result colonToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelTag2: nodes [
	| result |
	result := VBLabelTagNode new.
	result name: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result whitespaceToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result constant: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result constants: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet13: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet14: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet15: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet16: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result block: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation1: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result typeName: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation1: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result resumeToken: (nodes at: 3).
	result nextToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result integerExpression: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause1: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause2: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	result length: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause3: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause4: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause5: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause6: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause7: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause8: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	result length: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result databaseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result bINARYToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result compare: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result explicitToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result privateToken: (nodes at: 2).
	result moduleToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOptionBase1: nodes [
	| result |
	result := VBOptionBaseNode new.
	result optionToken: (nodes at: 1).
	result baseToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result type: (nodes at: 5).
	result equalToken: ((nodes at: 6) at: 1).
	result default: ((nodes at: 6) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result equalToken: ((nodes at: 2) at: 1).
	result default: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation1: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result receiver: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForQualifiedIdentifier1: nodes [
	| result |
	result := VBQualifiedIdentifierNode new.
	result token: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseError1: nodes [
	| result |
	result := VBRaiseErrorNode new.
	result eRRORToken: (nodes at: 1).
	result errorCode: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRename1: nodes [
	| result |
	result := VBRenameNode new.
	result nameToken: (nodes at: 1).
	result oldName: (nodes at: 2).
	result aSToken: (nodes at: 3).
	result newName: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result nextToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect1: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect2: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect3: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect4: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier2: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing2: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing3: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing4: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing5: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing6: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing7: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing8: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	result timesToken: (nodes at: 6).
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result fixedSize: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing5: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing6: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing7: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing8: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith3: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith4: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________2: nodes [
	| result |
	result := Array new: 3.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________2: nodes [
	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___SetUpAssignation__setting___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___Case__case____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	result classToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addNode: (nodes at: 2) to: result elements.
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result elements.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addNode: (nodes at: 4) to: result elements.
	result addTokens: ((nodes at: 5) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result elements.
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]
