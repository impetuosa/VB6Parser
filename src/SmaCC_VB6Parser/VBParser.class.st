Class {
	#name : #VBParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_VB6Parser'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 0 38 2 97] 
#[ 0 38 2 101] 
#[ 0 38 2 105] 
#[ 0 38 2 109] 
#[ 0 38 2 113] 
#[ 0 33 0 38] 
#[ 0 38 2 117] 
#[ 0 38 0 61] 
#[ 0 38 2 121] 
#[ 0 38 2 125] 
#[ 0 38 0 73] 
#[ 0 38 2 129] 
#[ 0 38 2 133] 
#[ 0 38 2 137] 
#[ 0 38 0 109] 
#[ 0 38 2 141] 
#[ 0 38 2 145] 
#[ 0 38 2 149] 
#[ 0 38 1 121] 
#[ 0 38 1 169] 
#[ 0 38 2 153] 
#[ 0 38 2 157] 
#[ 0 38 2 161] 
#[ 0 38 0 121] 
#[ 0 38 2 165] 
#[ 0 38 0 125] 
#[ 1 150 1 154 1 158] 
#[ 1 150 1 154 1 158 1 181] 
#[ 0 10 2 118] 
#[ 0 6 7 21] 
#[ 2 230 5 25] 
#[ 2 230 5 53] 
#[ 2 230 5 85] 
#[ 2 230 5 113] 
#[ 2 234 5 25] 
#[ 2 234 5 53] 
#[ 2 234 5 85] 
#[ 2 234 5 113] 
#[ 1 198 2 242] 
#[ 1 198 2 250] 
#[ 3 34 5 25] 
#[ 3 34 5 53] 
#[ 3 34 5 85] 
#[ 3 34 5 113] 
#[ 3 46 7 133] 
#[ 2 97 3 46] 
#[ 2 101 3 46] 
#[ 2 105 3 46] 
#[ 2 109 3 46] 
#[ 2 113 3 46] 
#[ 0 33 3 46] 
#[ 2 117 3 46] 
#[ 0 61 3 46] 
#[ 2 121 3 46] 
#[ 2 125 3 46] 
#[ 0 73 3 46] 
#[ 2 129 3 46] 
#[ 2 133 3 46] 
#[ 2 137 3 46] 
#[ 0 109 3 46] 
#[ 2 141 3 46] 
#[ 2 145 3 46] 
#[ 2 149 3 46] 
#[ 1 121 3 46] 
#[ 1 169 3 46] 
#[ 2 153 3 46] 
#[ 2 157 3 46] 
#[ 2 161 3 46] 
#[ 0 121 3 46] 
#[ 2 165 3 46] 
#[ 0 125 3 46] 
#[ 0 6 7 253] 
#[ 3 122 8 17] 
#[ 1 150 1 154 1 158 1 177] 
#[ 1 150 1 154 1 158 1 185] 
#[ 2 46 4 30] 
#[ 4 110 5 25] 
#[ 4 110 5 53] 
#[ 4 110 5 85] 
#[ 4 110 5 113] 
#[ 3 46 9 133] 
#[ 4 118 9 145] 
#[ 4 126 5 25] 
#[ 4 126 5 53] 
#[ 4 126 5 85] 
#[ 4 126 5 113] 
#[ 4 134 5 25] 
#[ 4 134 5 53] 
#[ 4 134 5 85] 
#[ 4 134 5 113] 
#[ 4 138 5 25] 
#[ 4 138 5 53] 
#[ 4 138 5 85] 
#[ 4 138 5 113] 
#[ 4 142 5 25] 
#[ 4 142 5 53] 
#[ 4 142 5 85] 
#[ 4 142 5 113] 
#[ 4 146 5 25] 
#[ 4 146 5 53] 
#[ 4 146 5 85] 
#[ 4 146 5 113] 
#[ 4 150 5 25] 
#[ 4 150 5 53] 
#[ 4 150 5 85] 
#[ 4 150 5 113] 
#[ 4 154 5 25] 
#[ 4 154 5 53] 
#[ 4 154 5 85] 
#[ 4 154 5 113] 
#[ 1 150 1 154 1 158 2 222] 
#[ 1 150 1 154 1 158 7 73] 
#[ 0 6 1 121] 
#[ 0 6 0 129] 
#[ 0 6 1 162] 
#[ 0 6 4 170] 
#[ 4 174 7 21] 
#[ 4 138 5 21 5 22] 
#[ 4 138 5 22 5 25] 
#[ 4 138 5 22 5 29] 
#[ 4 138 5 22 5 33] 
#[ 4 138 5 22 5 37] 
#[ 4 138 5 22 5 41] 
#[ 4 138 5 22 5 45] 
#[ 4 138 5 22 5 49] 
#[ 4 138 5 22 5 53] 
#[ 4 138 5 22 5 57] 
#[ 4 138 5 22 5 61] 
#[ 4 138 5 22 5 65] 
#[ 4 138 5 22 5 69] 
#[ 4 138 5 22 5 73] 
#[ 4 138 5 22 5 77] 
#[ 4 138 5 22 5 81] 
#[ 4 138 5 22 5 85] 
#[ 4 138 5 22 5 89] 
#[ 4 138 5 22 5 93] 
#[ 4 138 5 22 5 97] 
#[ 4 138 5 22 5 101] 
#[ 4 138 5 22 5 105] 
#[ 4 138 5 22 5 109] 
#[ 4 138 5 22 5 113] 
#[ 4 138 5 22 5 117] 
#[ 5 25 5 30] 
#[ 5 30 5 53] 
#[ 5 30 5 85] 
#[ 5 30 5 113] 
#[ 5 25 5 34] 
#[ 5 34 5 53] 
#[ 5 34 5 85] 
#[ 5 34 5 113] 
#[ 5 46 9 145] 
#[ 2 97 5 50] 
#[ 2 101 5 50] 
#[ 2 105 5 50] 
#[ 2 109 5 50] 
#[ 2 113 5 50] 
#[ 0 33 5 50] 
#[ 2 117 5 50] 
#[ 0 61 5 50] 
#[ 2 121 5 50] 
#[ 2 125 5 50] 
#[ 0 73 5 50] 
#[ 2 129 5 50] 
#[ 2 133 5 50] 
#[ 2 137 5 50] 
#[ 0 109 5 50] 
#[ 2 141 5 50] 
#[ 2 145 5 50] 
#[ 2 149 5 50] 
#[ 1 121 5 50] 
#[ 1 169 5 50] 
#[ 2 153 5 50] 
#[ 2 157 5 50] 
#[ 2 161 5 50] 
#[ 0 121 5 50] 
#[ 2 165 5 50] 
#[ 0 125 5 50] 
#[ 2 97 5 54] 
#[ 2 101 5 54] 
#[ 2 105 5 54] 
#[ 2 109 5 54] 
#[ 2 113 5 54] 
#[ 0 33 5 54] 
#[ 2 117 5 54] 
#[ 0 61 5 54] 
#[ 2 121 5 54] 
#[ 2 125 5 54] 
#[ 0 73 5 54] 
#[ 2 129 5 54] 
#[ 2 133 5 54] 
#[ 2 137 5 54] 
#[ 0 109 5 54] 
#[ 2 141 5 54] 
#[ 2 145 5 54] 
#[ 2 149 5 54] 
#[ 1 121 5 54] 
#[ 1 169 5 54] 
#[ 2 153 5 54] 
#[ 2 157 5 54] 
#[ 2 161 5 54] 
#[ 0 121 5 54] 
#[ 2 165 5 54] 
#[ 0 125 5 54] 
#[ 0 6 2 97] 
#[ 0 6 2 101] 
#[ 0 6 2 105] 
#[ 0 6 2 109] 
#[ 0 6 2 113] 
#[ 0 6 0 33] 
#[ 0 6 2 117] 
#[ 0 6 0 61] 
#[ 0 6 2 121] 
#[ 0 6 2 125] 
#[ 0 6 0 73] 
#[ 0 6 2 129] 
#[ 0 6 2 133] 
#[ 0 6 2 137] 
#[ 0 6 0 109] 
#[ 0 6 2 141] 
#[ 0 6 2 145] 
#[ 0 6 2 149] 
#[ 0 6 1 169] 
#[ 0 6 2 153] 
#[ 0 6 2 157] 
#[ 0 6 2 161] 
#[ 0 6 0 121] 
#[ 0 6 2 165] 
#[ 0 6 0 125] 
#[ 5 25 5 166] 
#[ 5 53 5 166] 
#[ 5 85 5 166] 
#[ 5 113 5 166] 
#[ 4 138 12 213] 
#[ 5 182 12 253] 
#[ 5 25 5 250] 
#[ 5 53 5 250] 
#[ 2 97 5 250] 
#[ 2 101 5 250] 
#[ 2 105 5 250] 
#[ 2 109 5 250] 
#[ 2 113 5 250] 
#[ 5 85 5 250] 
#[ 0 33 5 250] 
#[ 2 117 5 250] 
#[ 0 61 5 250] 
#[ 2 121 5 250] 
#[ 2 125 5 250] 
#[ 0 73 5 250] 
#[ 2 129 5 250] 
#[ 2 133 5 250] 
#[ 2 137 5 250] 
#[ 0 109 5 250] 
#[ 5 113 5 250] 
#[ 2 141 5 250] 
#[ 2 145 5 250] 
#[ 2 149 5 250] 
#[ 1 121 5 250] 
#[ 1 169 5 250] 
#[ 2 153 5 250] 
#[ 2 157 5 250] 
#[ 2 161 5 250] 
#[ 0 121 5 250] 
#[ 2 165 5 250] 
#[ 0 125 5 250] 
#[ 1 150 2 97] 
#[ 1 150 2 101] 
#[ 1 150 2 105] 
#[ 1 150 2 109] 
#[ 1 150 2 113] 
#[ 0 33 1 150] 
#[ 1 150 2 117] 
#[ 0 61 1 150] 
#[ 1 150 2 121] 
#[ 1 150 2 125] 
#[ 0 73 1 150] 
#[ 1 150 2 129] 
#[ 1 150 2 133] 
#[ 1 150 2 137] 
#[ 0 109 1 150] 
#[ 1 150 2 141] 
#[ 1 150 2 145] 
#[ 1 150 2 149] 
#[ 1 121 1 150] 
#[ 1 150 1 169] 
#[ 1 150 2 153] 
#[ 1 150 2 157] 
#[ 1 150 2 161] 
#[ 0 121 1 150] 
#[ 1 150 2 165] 
#[ 0 125 1 150] 
#[ 2 97 3 54] 
#[ 2 101 3 54] 
#[ 2 105 3 54] 
#[ 2 109 3 54] 
#[ 2 113 3 54] 
#[ 0 33 3 54] 
#[ 2 117 3 54] 
#[ 0 61 3 54] 
#[ 2 121 3 54] 
#[ 2 125 3 54] 
#[ 0 73 3 54] 
#[ 2 129 3 54] 
#[ 2 133 3 54] 
#[ 2 137 3 54] 
#[ 0 109 3 54] 
#[ 2 141 3 54] 
#[ 2 145 3 54] 
#[ 2 149 3 54] 
#[ 1 121 3 54] 
#[ 1 169 3 54] 
#[ 2 153 3 54] 
#[ 2 157 3 54] 
#[ 2 161 3 54] 
#[ 0 121 3 54] 
#[ 2 165 3 54] 
#[ 0 125 3 54] 
#[ 2 97 3 58] 
#[ 2 101 3 58] 
#[ 2 105 3 58] 
#[ 2 109 3 58] 
#[ 2 113 3 58] 
#[ 0 33 3 58] 
#[ 2 117 3 58] 
#[ 0 61 3 58] 
#[ 2 121 3 58] 
#[ 2 125 3 58] 
#[ 0 73 3 58] 
#[ 2 129 3 58] 
#[ 2 133 3 58] 
#[ 2 137 3 58] 
#[ 0 109 3 58] 
#[ 2 141 3 58] 
#[ 2 145 3 58] 
#[ 2 149 3 58] 
#[ 1 121 3 58] 
#[ 1 169 3 58] 
#[ 2 153 3 58] 
#[ 2 157 3 58] 
#[ 2 161 3 58] 
#[ 0 121 3 58] 
#[ 2 165 3 58] 
#[ 0 125 3 58] 
#[ 1 250 6 74] 
#[ 5 25 6 78] 
#[ 5 53 6 78] 
#[ 2 97 6 78] 
#[ 2 101 6 78] 
#[ 2 105 6 78] 
#[ 2 109 6 78] 
#[ 2 113 6 78] 
#[ 5 85 6 78] 
#[ 0 33 6 78] 
#[ 2 117 6 78] 
#[ 0 61 6 78] 
#[ 2 121 6 78] 
#[ 2 125 6 78] 
#[ 0 73 6 78] 
#[ 2 129 6 78] 
#[ 2 133 6 78] 
#[ 2 137 6 78] 
#[ 0 109 6 78] 
#[ 5 113 6 78] 
#[ 2 141 6 78] 
#[ 2 145 6 78] 
#[ 2 149 6 78] 
#[ 1 121 6 78] 
#[ 1 169 6 78] 
#[ 2 153 6 78] 
#[ 2 157 6 78] 
#[ 2 161 6 78] 
#[ 0 121 6 78] 
#[ 2 165 6 78] 
#[ 0 125 6 78] 
#[ 5 25 6 82] 
#[ 5 53 6 82] 
#[ 2 97 6 82] 
#[ 2 101 6 82] 
#[ 2 105 6 82] 
#[ 2 109 6 82] 
#[ 2 113 6 82] 
#[ 5 85 6 82] 
#[ 0 33 6 82] 
#[ 2 117 6 82] 
#[ 0 61 6 82] 
#[ 2 121 6 82] 
#[ 2 125 6 82] 
#[ 0 73 6 82] 
#[ 2 129 6 82] 
#[ 2 133 6 82] 
#[ 2 137 6 82] 
#[ 0 109 6 82] 
#[ 5 113 6 82] 
#[ 2 141 6 82] 
#[ 2 145 6 82] 
#[ 2 149 6 82] 
#[ 1 121 6 82] 
#[ 1 169 6 82] 
#[ 2 153 6 82] 
#[ 2 157 6 82] 
#[ 2 161 6 82] 
#[ 0 121 6 82] 
#[ 2 165 6 82] 
#[ 0 125 6 82] 
#[ 0 6 4 142 5 29] 
#[ 0 6 4 142 5 37] 
#[ 0 6 4 142 5 41] 
#[ 0 6 4 142 5 45] 
#[ 0 206 4 130] 
#[ 0 206 1 181 4 130] 
#[ 1 250 6 202] 
#[ 5 25 6 206] 
#[ 5 53 6 206] 
#[ 2 97 6 206] 
#[ 2 101 6 206] 
#[ 2 105 6 206] 
#[ 2 109 6 206] 
#[ 2 113 6 206] 
#[ 5 85 6 206] 
#[ 0 33 6 206] 
#[ 2 117 6 206] 
#[ 0 61 6 206] 
#[ 2 121 6 206] 
#[ 2 125 6 206] 
#[ 0 73 6 206] 
#[ 2 129 6 206] 
#[ 2 133 6 206] 
#[ 2 137 6 206] 
#[ 0 109 6 206] 
#[ 5 113 6 206] 
#[ 2 141 6 206] 
#[ 2 145 6 206] 
#[ 2 149 6 206] 
#[ 1 121 6 206] 
#[ 1 169 6 206] 
#[ 2 153 6 206] 
#[ 2 157 6 206] 
#[ 2 161 6 206] 
#[ 0 121 6 206] 
#[ 2 165 6 206] 
#[ 0 125 6 206] 
#[ 1 250 6 210] 
#[ 1 250 7 78] 
#[ 0 6 7 102] 
#[ 1 121 7 174]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2020-08-31T17:41:53.798422+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
%ignorecase;
%annotate_tokens;

#expression operators -- lowest precedence are first.
%left "")""  ;
%left  ""="";
%left "","";
%right "":"";
%left ""eqv"" ;
%left ""||"" ""or"" ""xor"";
%left ""&&"" ""and"";
%left ""is"" ""like"" ""!="" ""<>"";
%left ""<"" ""<="" "">"" "">="";
%left ""+"" ""-"";
%left ""*"" ""/"" ""Mod"";
%right ""^"";
%right ""delete"" ""~"";
%right ""["" ""("";
%left ""."" ""!"" ;
%prefix VB;
%root Program;
%suffix Node;
%start module;

<lineContinuation>
   :    (_) <whitespace> * ( \r | \n | \r\n | \x2028 | : \ ) <whitespace> ?
   ;
<DECIMAL_INTEGER>
	: 0 | [1-9] [0-9]*	
	;
<HEX_INTEGER>
	: 0[xX][0-9a-fA-F]+	
	;
<OCTAL_INTEGER>
	: 0[0-7]+	
	;
<EXPONENT>
	: [eE] [\-\+]? [0-9]+ 	
	;
<FLOAT_TYPE>
	: [fFdD]	
	;

<DATE_LITERAL>
   : ""#"" ([^\#\r\n])* ""#""
   ;
<COLOR_LITERAL>
   : \&H <HEX_INTEGER>+ ""&""?
   ;

<INTEGER_LITERAL>
	: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
	;
<FLOATING_POINT_LITERAL>
	: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
	| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
	| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
	| [0-9]+ <FLOAT_TYPE>	
	| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
	;
<BOOLEAN_LITERAL>
	: true
	| false
	;
<STRING_LITERAL>
   : \"" ([^\""\r\n] | \""\"")* \""
   ;
<NULL_LITERAL>
	: Nothing	
	;
<IDENTIFIER>
	: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
	;
<HASH_NUMBER>
	: ( \#) (<DECIMAL_INTEGER>)
	;
<HASH_IDENTIFIER>
	: ( \#) (<isLetter>|\w|$)*
	;
<whitespace> : ( \x20 | \xA0 | \x9) + ; 

<eol>
   :  ( \r | \n | \r\n | \x2028 | : \ ) <whitespace> ?
   ;

<comment>
   :  (\' | :?  REM  \ ) ( [^\n\r])* 
   ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Basic module
########## ########## ########## ########## ########## ########## ########## ########## 

module: <eol>* (header 'header' <eol>*)? ModuleStatement 'element'  (<eol>* ModuleStatement 'element' )*   <eol>* {{Module}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## Literals
########## ########## ########## ########## ########## ########## ########## ########## 
literal 
	: 
	  FileDescriptorLiteral
	| IntegerLiteral
	| ColorLiteral
	| DateLiteral
	| FloatLiteral
	| BooleanLiteral
	| StringLiteral
	| Null
	| GuidLiteral
;

FileDescriptorLiteral : <HASH_NUMBER> 'token' {{FileDescriptorLiteral}};
IntegerLiteral :  <INTEGER_LITERAL> 'token' {{IntegerLiteral}};
ColorLiteral: <COLOR_LITERAL> 'token' {{ColorLiteral}} ; 
DateLiteral:  <DATE_LITERAL> 'token' {{DateLiteral}};
FloatLiteral: <FLOATING_POINT_LITERAL> 'token' {{FloatLiteral}};
BooleanLiteral: <BOOLEAN_LITERAL> 'token' {{BooleanLiteral}};
StringLiteral:  <STRING_LITERAL> 'token' {{StringLiteral}};
Null: <NULL_LITERAL> 'token' {{Null}};
GuidLiteral: ""{""<HEX_INTEGER> + ""-""<HEX_INTEGER>+""-"" <HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""}"" {{GuidLiteral}};

Identifier : 
	  SimpleIdentifier 
	| HashIdentifier
	| QualifiedIdentifier 
	| HeadlessIdentifier;


UsableKeywords : ""text"" | ""date"" | ""len""  | ""get"" | ""set"" ;
HashIdentifier :  <HASH_IDENTIFIER> 'token'   {{HashIdentifier}};
SimpleIdentifier : <IDENTIFIER> | UsableKeywords 'token'  {{SimpleIdentifier}};
HeadlessIdentifier  : "".""  Identifier 'token'  {{HeadlessIdentifier}};
QualifiedIdentifier : Identifier 'token'  "".""  <IDENTIFIER> 'member' {{QualifiedIdentifier}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## Module header and configuration
########## ########## ########## ########## ########## ########## ########## ########## 

header: ""version""   FloatLiteral  'version'  (""class"")?  {{}};
Option
   :   ""option"" IntegerLiteral 'value' {{OptionValue}}
   |   ""option"" ""compare"" ""database"" {{OptionCompareDatabase}}
   |   ""option"" ""compare""  (""binary""| ""text"" 'compare') {{OptionCompare}}
   |   ""option"" ""explicit"" {{OptionExplicit}}
   |   ""option"" ""private"" ""module""{{OptionPrivateModule}}
   | OptionBase
   ;
OptionBase : ""option"" ""base"" Expression 'value' {{OptionBase}} ;
SetUpAssignation :  
	Identifier  'identifier' ""="" Expression 'value' {{SetUpAssignation}} 
;
Attribute
 : ""attribute"" SetUpAssignation 'setting' {{ModuleAttribute}}
 ;
Configuration 
:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* <eol>*""end"" {{Configuration}};

Implements : ""implements"" Identifier 'interface' {{Implements}}; 
ModuleStatement :  
	Option  | Configuration | Attribute | DeclareExternal | VariableDefinition | BehaviourDefinition | Types | Implements
 ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Body statements
########## ########## ########## ########## ########## ########## ########## ########## 



Statement :   VariableDefinition | Attribute | OptionBase | Expression | ControlFlowStatement | Types ;
Block: Statement 'statement' (<eol>+ Statement 'statement'  )* {{Block}};

BaseType: ""boolean"" | ""byte"" | ""collection"" | ""date"" | ""double"" | ""integer"" | ""long"" | ""object"" | ""single"" | ""string"" | ""variant"" {{BaseType}};
Visibility: ""private"" | ""public"" | ""friend"" | ""global"" ; 

ComplexType: Identifier 'name' {{ComplexType}};
Type: BaseType | ComplexType ;

TypedThing: (TypeSize 'size')? ""as""  Type 'type' (TypeSize 'size')? (""*"" Expression 'fixedSize')?  {{AsType}}; 
TypedAndInstantiatedThing: (TypeSize 'size')? ""as"" ""new""  Type 'type' (TypeSize 'size')?  (""*"" Expression 'fixedSize')? {{AsTypeAndNew}}; 

TypeSize : (""("" Expression 'size'? ( "","" Expression 'size')* "")"") {{TypeSize}} ;

AsType: TypedThing | TypedAndInstantiatedThing | TypeSize;



########## ########## ########## ########## ########## ########## ########## ########## 
########## Types
########## ########## ########## ########## ########## ########## ########## ########## 
Types : DefineEnum | DefineType | Event ;

DefineType : 	 (Visibility 'visibility')? ""type"" Identifier 'name' ( <eol>* TypeEntry 'field' )* <eol>* ""end"" ""type"" {{DefineType}}    ;
TypeEntry    : Identifier 'name' AsType 'type' (""*"" IntegerLiteral 'size' )? {{TypeEntry}}     ;
Event  : (Visibility 'visibility')?  ""event"" Identifier 'selector' ParameterList 'parameters' {{Event}} ;
DefineEnum    :  (Visibility 'visibility')?  ""enum"" Identifier 'name'  ( <eol>* EnumEntry 'field')* <eol>*  ""end"" ""enum"" {{DefineEnum}}    ;
EnumEntry    : Identifier 'name'  ( ""=""  Expression 'value')? {{EnumEntry}}    ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Parameters
########## ########## ########## ########## ########## ########## ########## ########## 
ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
ParameterList:  ""("" (Parameter 'parameter' ( "","" Parameter 'parameter')* )? "")"" {{ParameterList}};
Parameter: ""optional"" ? (ParameterPassingStrategy 'strategy')? ""paramarray""? Identifier 'name'  (AsType 'type')? (""="" Expression 'default')? {{Parameter}};

########## ########## ########## ########## ########## ########## ########## ########## 
########## External declaration
########## ########## ########## ########## ########## ########## ########## ########## 
DeclareSub: (Visibility 'visibility')? ""declare""  ""sub"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  {{ExternalSub}};
DeclareFunction: (Visibility 'visibility')? ""declare""  ""function"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  AsType 'type' {{ExternalFunction}};
DeclareExternal : DeclareSub|DeclareFunction; 

########## ########## ########## ########## ########## ########## ########## ########## 
########## Function / Sub Definition 
########## ########## ########## ########## ########## ########## ########## ########## 

Modifier: ""static"" ;
DefineFunction: (Visibility 'visibility')? (Modifier 'modifier')? ""function"" Identifier 'selector' ParameterList 'parameters' (AsType 'type')? 
	<eol>* Block 'block' <eol>* ""end"" ""function"" 
{{FunctionDefinition}};
DefineSub:  (Visibility 'visibility')? (Modifier 'modifier')? ""sub"" Identifier 'selector' (ParameterList 'parameters') ? 
	<eol>* Block 'block' <eol>*
""end"" ""sub"" 
{{SubDefinition}};


ModulePropertyGet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""get"" Identifier 'selector' (ParameterList 'parameters') ? (AsType 'type')? 
	<eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 
ModulePropertySet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""set"" Identifier 'selector'  (ParameterList 'parameters') ?   
	<eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 
ModulePropertyLet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""let"" Identifier 'selector' (ParameterList 'parameters') ?   
	 <eol>* Block 'block' <eol>* ""end"" ""property"" 
{{ModulePropertyGet}}; 


BehaviourDefinition:  DefineFunction | DefineSub | ModulePropertyGet | ModulePropertySet | ModulePropertyLet ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Variable / And Multiple Variables
########## ########## ########## ########## ########## ########## ########## ########## 

ModuleProperty : Visibility 'visibility' Variable 'variable' {{ModuleProperty}};
ModuleConstant : (Visibility 'visibility')? ""const"" Constant 'constant' {{ModuleConstant}};
DefineVariable : ""dim"" Variable 'variable' {{DimVariable}};
ReDefineVariable : ""redim"" ""preserve""? Variable 'variable' {{ReDimVariable}};
StaticVariable : ""static"" Variable 'variable' {{StaticVariable}};
Variable : ""WithEvents"" ? Identifier 'name' (AsType 'type') ? {{Variable}};
Constant :  Identifier 'constant' (AsType 'type')?  ""="" Expression 'value' {{Constant}} ;

ModuleProperties : Visibility 'visibility' VariableList 'variables' {{ModuleMultipleProperties}};
ModuleConstants : Visibility 'visibility'? ""const"" ConstantList 'constants' {{ModuleMultipleConstants}};
DefineVariables : ""dim"" VariableList 'variables' {{DimMultipleVariables}};
ReDefineVariables : ""redim""  ""preserve""?  VariableList 'variables' {{ReDimMultipleVariables}};
StaticVariables : ""static"" VariableList 'variables' {{StaticMultipleVariables}};
VariableList : Variable 'variable' ("",""  Variable 'variable' )+ {{VariableList}};
ConstantList : Constant 'constant' ("",""  Constant 'constant' )+ {{ConstantList}};

VariableDefinition : ModuleProperties | ModuleProperty | ModuleConstant | ModuleConstants | ConstantList | DefineVariable | ReDefineVariable |  DefineVariables |  ReDefineVariables | StaticVariable | StaticVariables ;

########## ########## ########## ########## ########## ########## ########## ########## 
########## Value Statements
########## ########## ########## ########## ########## ########## ########## ########## 

ValueStatement :  Operation | ValueClause | ImplicitCall | StateAccess | ExplicitCall | RaiseEvent  ;
Expression :  ValueStatement |  Identifier | literal  | ParentheseesExpression |IntervalExpression| Exits | Go | OpenFileClause ; 


ParentheseesExpression : ""("" Expression 'expression' "")"" {{ParentheseesExpression}};
ValueStatementList : ValueStatement 'value' ("","" ValueStatement 'value' ) * {{ValueStatementList}} ; 



IntervalExpression : Expression 'from' ""to"" Expression 'to'  {{IntervalExpression}} ; 
### Ops

Operation : UnaryOperation | BinaryOperation ;

DictionaryAccess :   Expression 'receiver' ""!"" Identifier 'member' {{DictionaryAccess}} ;
MemberAccess : Expression 'receiver' ""."" Identifier 'member' {{MemberAccess}} ;
ImplicitParenthesesLessCall : Identifier 'identifier' ArgumentList 'arguments' {{ImplicitParenthesesLessCall}} ;
ProcedureCallOrArrayAccess :  Expression 'receiver' ""("" ArgumentList 'arguments' "")"" {{ProcedureCallOrArrayAccess}} ;

Argument : (ParameterPassingStrategy 'strategy')?  ""paramarray""?  Expression 'value' {{Argument}};
ArgumentList : (Argument 'argument' ? ("","" | "";"" ))* Argument 'argument'? ( ("","" | "";"" )Argument 'argument' ?)* {{ArgumentList}};

ImplicitCall : Identifier | ProcedureCallOrArrayAccess | ImplicitParenthesesLessCall ;
StateAccess : DictionaryAccess | MemberAccess ;

ExplicitCall : ""Call""  ImplicitCall 'call'  {{ExplicitCall}}; 
RaiseEvent : ""RaiseEvent""  ImplicitCall 'call'  {{RaiseEvent}}; 

### Unary Ops 
UnaryOperation:  NegatedOperation | PositiveOperation |  NotOperation ; 

NegatedOperation : ""-""  Expression 'value' {{NegatedOperation}} ;
PositiveOperation : ""+"" Expression 'value' {{PositiveOperation}} ;
NotOperation : ""not""  Expression 'value'  {{NotOperation}};

### Binary Ops 
BinaryOperation : ComparisonOperation  
				| ArithmeticOperation | BooleanBinaryOperation 
				| ExplicitAssignement | AssignementOrEquals  | ConcatenationOperation ;

ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like""  ;
ComparisonOperation : Expression 'left' ComparisonOperator Expression 'right' {{ComparisonOperation}};
ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";
ArithmeticOperation : Expression 'left' ArithmeticOperator Expression 'right' {{ArithmeticOperation}};
BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
BooleanBinaryOperation : Expression 'left' BooleanOperator Expression 'right' {{ArithmeticOperation}};
ConcatenationOperation : Expression 'left' ""&"" Expression 'right' {{ConcatenationOperation}}; 
AssignementOrEquals : Expression 'left' ""="" Expression  'right' {{AssignementOrEquals}}; 
ExplicitAssignement : ""let"" | ""set""  Expression 'left' ""=""  Expression 'right' {{ExplicitAssignement}}; 
ExplicitAssignement :  Expression 'left' "":=""  Expression 'right' {{ExplicitAssignement}}; 
### Value Clause 
ValueClause: AddressOfClause | NewClause ;
AddressOfClause : ""AddressOf"" Identifier 'name'  {{AddressOfClause}}; 
NewClause : ""New"" Identifier 'typeName' {{NewClause}};



OpenMode :  ""Append"" |  ""Binary"" |  ""Input"" |  ""Output"" |  ""Random"" ;
OpenAccess : ""Read"" | ""Write"" | ""Read"" ""Write"" ;
Lock :  ""Shared"" | ""Lock Read"" | ""Lock Write"" | ""Lock Read Write"";

OpenFileClause : ""Open"" Expression 'filepath'  ""For"" OpenMode 'mode' (OpenAccess 'access')? (Lock 'lock')? ""As"" Expression 'fileDescriptor' (AssignementOrEquals 'length')? {{OpenClause}};


########## ########## ########## ########## ########## ########## ########## ########## 
########## Control flow statements
########## ########## ########## ########## ########## ########## ########## ########## 


ControlFlowStatement : Exits| Loops | If  | On | Resume|  To  | With | RaiseError | Select ; 

#### Loops
Loops : DoLoop | WhileWend | ForLoop ;

########## Do
DoLoop : InfinityLoop | WhileTrue | UntilTrue | DoWhileTrue | DoUntilTrue; 
InfinityLoop : 
	""do""  
		<eol>* (Block 'body')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{InfinityLoop}} ;

WhileTrue :  
	""do"" ""while"" ValueStatement 'condition' 
		<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""loop""  
{{WhileTrue}}; 
UntilTrue : 
	""do"" ""until"" ValueStatement 'condition'
		 <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')?""loop"" 
 {{UntilTrue}}; 

DoWhileTrue :  
	""do""<eol>* ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""loop""  ""while"" ValueStatement 'condition' 
{{DoWhileTrue}}; 

DoUntilTrue : 
	""do"" <eol>*  Block 'body' <eol>* 
	(IntegerLiteral 'endLineNumber')? ""loop"" ""until"" ValueStatement 'condition'
 {{DoUntilTrue}}; 

########## WhileWend
WhileWend: 
	""while"" ValueStatement 'condition'
		 <eol>* ( Block 'body')? <eol>*  (IntegerLiteral 'endLineNumber')? 
	""wend""  {{WhileWend}}; 

########## For 
ForLoop : ForEach | ForNext | ForStepNext;

ForEach :  
	""for"" ""each"" Identifier 'element' ""in"" Expression 'group' 
		 <eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
{{ForEach}} ;
 
ForNext :   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit'   
		<eol>*  ( Block 'body')? <eol>* 
	 (IntegerLiteral 'endLineNumber')? 	""next"" (Identifier 'element' )? 
{{ForNext}} ;
ForStepNext:   
	""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit' ""step"" Expression 'step'   
		<eol>*  ( Block 'body')? <eol>*  
	(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
 {{ForStepNext}} ;

########## If

If : IfThenColon | IfThenElseOneLine | IfThen | IfThenElse | IfThenElseIfElse | IfThenElseIf ; 

IfThenColon : ""if"" Expression 'condition' ""then"" Expression  'ifTrue' {{IfThenColon}} ;

IfThenElseOneLine : 
	""if"" Expression 'condition' ""then"" 
		 Expression  'ifTrue' 
	""else"" 
		 Expression  'ifFalse'  
{{IfThenColon}};


IfThen : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>*  
	(IntegerLiteral 'endLineNumber')?  ""end"" ""if"" 
{{IfThenElse}};

IfThenElse : 
	""if"" Expression 'condition' ""then"" 
		<eol>* (Block 'ifTrue')? <eol>* 
	(IntegerLiteral 'elseLineNumber')? ""else"" 
		 <eol>* (Block 'ifFalse')? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElse}};

IfThenElseIfElse  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
""else""  
	<eol>* (Block 'otherwise')? <eol>*
(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElseIfElse}};

IfThenElseIf  : 
""if"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifTrue')? <eol>* 
(ElseIf 'case') + 
(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
{{IfThenElseIfElse}};


ElseIf: ElseIfBlock | ElseIfColon ;

ElseIfBlock : ""elseif"" Expression 'condition' ""then"" 
	<eol>* (Block 'ifMatch')? <eol>*  {{ElseIfBlock}};
	
ElseIfColon : ""elseif"" Expression 'condition' ""then"" (  Expression 'ifMatch' ?  "":"" )* {{ElseIfColon}} ;
###### Error 
	RaiseError : ""Error"" Expression 'errorCode'  {{RaiseError}} ;
###### Label / LabelSub
	To : Label | LabelSub ;
	Label : Identifier 'label' "":""  {{GoToLabel}}; 
	LabelSub : Identifier 'label' "":"" 
		<eol>*(Block 'block' )? <eol>* 
	(IntegerLiteral 'endLineNumber')? ""return"" 
	{{GoSubLabel}}; 


###### Select Case 

	Case :  ""case""  Expression 'expression'  <eol>*Expression 'expression' {{Case}};
	CaseOtherwise :""case"" ""else""  <eol>* Expression 'expression' {{Case}};
	Select : ""select"" ""case"" Expression 'expression'     (<eol>+ Case 'case') +  (<eol>+  CaseOtherwise 'otherwise')? <eol>+ 
	(IntegerLiteral 'endLineNumber')? ""end"" ""select"" 
	{{Select}} ;

###### Resume
	Resume : ResumeLabel | ResumeNext | ResumeEmpty ;
	
	ResumeLabel : ""resume"" Identifier 'label' {{ResumeLabel}} ; 
	ResumeNext : ""resume"" ""next"" {{ResumeNext}} ; 
	ResumeEmpty : ""resume"" ; 

###### GoTo / GoSub 
Go: GoTo | GoSub ;

GoTo :  GoToLabel | GoToLine ;
GoToLabel : ""goto"" Identifier 'label' {{GoToLabel}}  ;
GoToLine :  ""goto"" IntegerLiteral 'lineNumber' {{GoToLine}}  ;

GoSub: GoSubLabel | GoSubLine ;
GoSubLabel :  ""gosub"" Identifier 'label'  {{GoSubLabel}} ;
GoSubLine :  ""gosub""  IntegerLiteral 'lineNumber'{{GoSubLine}} ;

########## On 
On: OnErrorGoTo | OnErrorResumeNext |  OnExpressionGo  ; 

OnErrorGoTo : ""on"" ""error"" GoTo 'to' {{OnErrorGoTo}}  ;
OnErrorResumeNext : ""on"" ""error"" ""resume""  ""next"" {{OnErrorResumeNext }} ;
OnExpressionGo : ""on"" Expression 'integerExpression' Go 'to' {{OnExpressionGo}} ;

########## Error
Error: ""error"" Expression 'errorCode' {{Error}} ;

########## With
With : ""with"" Identifier 'with' <eol>* (Block 'block' )? <eol>*  (IntegerLiteral 'endLineNumber')?""end"" ""with"" {{With}} ;

########## Exits

Exits : ExitFunction | ExitSub | ExitProperty | ExitDo |ExitFor ; 
ExitFunction : ""exit"" ""function"" {{Exits}} ; 
ExitSub : ""exit"" ""sub"" {{Exits}} ; 
ExitDo : ""exit"" ""do"" {{Exits}} ; 
ExitFor : ""exit"" ""for"" {{Exits}} ; 
ExitProperty : ""exit"" ""property"" {{Exits}} ;"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(148 0 #reduceActionFor_eol__1: 1809409 false ) 
	#(164 1 #liftFirstValue: 3021826 false ) 
	#(185 1 #liftFirstValue: 5156867 false ) 
	#(164 1 #liftFirstValue: 3021828 false ) 
	#(185 1 #liftFirstValue: 5156868 false ) 
	#(164 1 #liftFirstValue: 3021827 false ) 
	#(185 1 #liftFirstValue: 5156865 false ) 
	#(185 1 #liftFirstValue: 5156866 false ) 
	#(164 1 #liftFirstValue: 3021829 false ) 
	#(214 1 #liftFirstValue: 7966721 false ) 
	#(164 1 #liftFirstValue: 3021825 false ) 
	#(166 1 #liftFirstValue: 3150849 false ) 
	#(165 1 #reduceActionForHashIdentifier1: 3083265 false ) 
	#(148 2 #reduceActionFor_eol__2: 1809410 false ) 
	#(166 1 #reduceActionForSimpleIdentifier2: 3150850 false ) 
	#(163 1 #liftFirstValue: 2917378 false ) 
	#(163 1 #liftFirstValue: 2917377 false ) 
	#(163 1 #liftFirstValue: 2917380 false ) 
	#(163 1 #liftFirstValue: 2917379 false ) 
	#(179 1 #liftFirstValue: 4466689 false ) 
	#(170 1 #liftFirstValue: 3694599 false ) 
	#(179 1 #liftFirstValue: 4466691 false ) 
	#(179 1 #liftFirstValue: 4466690 false ) 
	#(179 1 #liftFirstValue: 4466696 false ) 
	#(150 0 #reduceActionFor__eol___ModuleStatement__element____1: 1870849 false ) 
	#(179 1 #liftFirstValue: 4466695 false ) 
	#(194 1 #liftFirstValue: 5904386 false ) 
	#(194 1 #liftFirstValue: 5904387 false ) 
	#(194 1 #liftFirstValue: 5904385 false ) 
	#(213 1 #liftFirstValue: 7695361 false ) 
	#(213 1 #liftFirstValue: 7695362 false ) 
	#(179 1 #liftFirstValue: 4466692 false ) 
	#(220 1 #liftFirstValue: 9074689 false ) 
	#(220 1 #liftFirstValue: 9074690 false ) 
	#(220 1 #liftFirstValue: 9074691 false ) 
	#(220 1 #liftFirstValue: 9074692 false ) 
	#(220 1 #liftFirstValue: 9074693 false ) 
	#(179 1 #liftFirstValue: 4466694 false ) 
	#(239 1 #liftFirstValue: 10609666 false ) 
	#(239 1 #liftFirstValue: 10609667 false ) 
	#(239 1 #liftFirstValue: 10609670 false ) 
	#(239 1 #liftFirstValue: 10609671 false ) 
	#(239 1 #liftFirstValue: 10609674 false ) 
	#(239 1 #liftFirstValue: 10609665 false ) 
	#(239 1 #liftFirstValue: 10609668 false ) 
	#(239 1 #liftFirstValue: 10609672 false ) 
	#(239 1 #liftFirstValue: 10609673 false ) 
	#(239 1 #liftFirstValue: 10609675 false ) 
	#(239 1 #liftFirstValue: 10609669 false ) 
	#(179 1 #liftFirstValue: 4466693 false ) 
	#(167 2 #reduceActionForHeadlessIdentifier1: 3232769 false ) 
	#(173 2 #reduceActionForAttribute1: 4189185 false ) 
	#(222 2 #reduceActionForModuleConstant1: 9501697 false ) 
	#(229 2 #reduceActionForModuleConstants1: 10076161 false ) 
	#(226 1 #reduceActionForVariable1: 9804801 false ) 
	#(223 2 #reduceActionForDefineVariable1: 9595905 false ) 
	#(230 2 #reduceActionForDefineVariables1: 10183681 false ) 
	#(202 0 #reduceActionFor__eol___ModuleStatement__element____1: 6369281 false ) 
	#(178 2 #reduceActionForImplements1: 4399105 false ) 
	#(170 2 #reduceActionForOption5: 3694597 false ) 
	#(153 1 #reduceActionForIntegerLiteral1: 2376705 false ) 
	#(170 2 #reduceActionForOption1: 3694593 false ) 
	#(224 2 #reduceActionForReDefineVariable1: 9657345 false ) 
	#(231 2 #reduceActionForReDefineVariables1: 10260481 false ) 
	#(225 2 #reduceActionForStaticVariable1: 9737217 false ) 
	#(232 2 #reduceActionForStaticVariables1: 10357761 false ) 
	#(197 0 #reduceActionFor__eol___ModuleStatement__element____1: 6017025 false ) 
	#(156 1 #reduceActionForFloatLiteral1: 2556929 false ) 
	#(169 2 #reduceActionForheader1: 3630081 false ) 
	#(192 0 #reduceActionFor__eol___ModuleStatement__element____1: 5593089 false ) 
	#(193 1 #liftFirstValue: 5641217 false ) 
	#(193 1 #liftFirstValue: 5641218 false ) 
	#(193 1 #liftFirstValue: 5641219 false ) 
	#(221 2 #reduceActionForModuleProperty1: 9418753 false ) 
	#(228 2 #reduceActionForModuleProperties1: 9975809 false ) 
	#(238 1 #reduceActionFor______Constant__constant____1: 10560513 false ) 
	#(236 2 #reduceActionForConstantList1: 10524673 false ) 
	#(176 0 #reduceActionFor__eol___ModuleStatement__element____1: 4327425 false ) 
	#(226 2 #reduceActionForVariable3: 9804803 false ) 
	#(226 2 #reduceActionForVariable2: 9804802 false ) 
	#(235 1 #reduceActionFor______Constant__constant____1: 10476545 false ) 
	#(233 2 #reduceActionForVariableList1: 10440705 false ) 
	#(199 3 #reduceActionForEvent1: 6188033 false ) 
	#(275 1 #liftFirstValue: 13721601 false ) 
	#(155 1 #reduceActionForDateLiteral1: 2501633 false ) 
	#(154 1 #reduceActionForColorLiteral1: 2442241 false ) 
	#(157 1 #reduceActionForBooleanLiteral1: 2623489 false ) 
	#(158 1 #reduceActionForStringLiteral1: 2686977 false ) 
	#(159 1 #reduceActionForNull1: 2748417 false ) 
	#(152 1 #reduceActionForFileDescriptorLiteral1: 2301953 false ) 
	#(241 1 #liftFirstValue: 11150339 false ) 
	#(151 1 #liftFirstValue: 2134017 false ) 
	#(151 1 #liftFirstValue: 2134018 false ) 
	#(151 1 #liftFirstValue: 2134019 false ) 
	#(151 1 #liftFirstValue: 2134020 false ) 
	#(151 1 #liftFirstValue: 2134021 false ) 
	#(151 1 #liftFirstValue: 2134022 false ) 
	#(151 1 #liftFirstValue: 2134023 false ) 
	#(151 1 #liftFirstValue: 2134024 false ) 
	#(151 1 #liftFirstValue: 2134025 false ) 
	#(255 0 #reduceActionFor_Argument__argument__________________1: 12156929 false ) 
	#(241 1 #liftFirstValue: 11150338 false ) 
	#(258 1 #liftFirstValue: 12275713 false ) 
	#(241 1 #liftFirstValue: 11150337 false ) 
	#(171 3 #reduceActionForOptionBase1: 4026369 false ) 
	#(241 1 #liftFirstValue: 11150340 false ) 
	#(241 1 #liftFirstValue: 11150341 false ) 
	#(240 1 #liftFirstValue: 11045889 false ) 
	#(259 1 #liftFirstValue: 12364801 false ) 
	#(259 1 #liftFirstValue: 12364802 false ) 
	#(258 1 #liftFirstValue: 12275715 false ) 
	#(258 1 #liftFirstValue: 12275714 false ) 
	#(240 1 #liftFirstValue: 11045891 false ) 
	#(240 1 #liftFirstValue: 11045892 false ) 
	#(240 1 #liftFirstValue: 11045893 false ) 
	#(240 1 #liftFirstValue: 11045894 false ) 
	#(247 1 #liftFirstValue: 11579393 false ) 
	#(262 1 #liftFirstValue: 12562433 false ) 
	#(262 1 #liftFirstValue: 12562434 false ) 
	#(262 1 #liftFirstValue: 12562435 false ) 
	#(247 1 #liftFirstValue: 11579394 false ) 
	#(266 1 #liftFirstValue: 12853249 false ) 
	#(266 1 #liftFirstValue: 12853250 false ) 
	#(266 1 #liftFirstValue: 12853251 false ) 
	#(266 1 #liftFirstValue: 12853254 false ) 
	#(266 1 #liftFirstValue: 12853253 false ) 
	#(266 1 #liftFirstValue: 12853252 false ) 
	#(240 1 #liftFirstValue: 11045890 false ) 
	#(276 1 #liftFirstValue: 13941761 false ) 
	#(276 1 #liftFirstValue: 13941762 false ) 
	#(241 1 #liftFirstValue: 11150344 false ) 
	#(241 1 #liftFirstValue: 11150343 false ) 
	#(323 1 #liftFirstValue: 18935809 false ) 
	#(324 1 #liftFirstValue: 18956289 false ) 
	#(324 1 #liftFirstValue: 18956290 false ) 
	#(323 1 #liftFirstValue: 18935810 false ) 
	#(327 1 #liftFirstValue: 19109889 false ) 
	#(327 1 #liftFirstValue: 19109890 false ) 
	#(241 1 #liftFirstValue: 11150342 false ) 
	#(336 1 #liftFirstValue: 19795969 false ) 
	#(336 1 #liftFirstValue: 19795970 false ) 
	#(336 1 #liftFirstValue: 19795972 false ) 
	#(336 1 #liftFirstValue: 19795973 false ) 
	#(336 1 #liftFirstValue: 19795971 false ) 
	#(170 3 #reduceActionForOption3: 3694595 false ) 
	#(170 3 #reduceActionForOption2: 3694594 false ) 
	#(170 3 #reduceActionForOption4: 3694596 false ) 
	#(170 3 #reduceActionForOption6: 3694598 false ) 
	#(224 3 #reduceActionForReDefineVariable2: 9657346 false ) 
	#(231 3 #reduceActionForReDefineVariables2: 10260482 false ) 
	#(169 3 #reduceActionForheader2: 3630082 false ) 
	#(168 3 #reduceActionForQualifiedIdentifier1: 3305473 false ) 
	#(227 3 #reduceActionForConstant1: 9882625 false ) 
	#(184 1 #liftFirstValue: 5009409 false ) 
	#(184 1 #liftFirstValue: 5009410 false ) 
	#(184 1 #liftFirstValue: 5009411 false ) 
	#(184 1 #liftFirstValue: 5009412 false ) 
	#(184 1 #liftFirstValue: 5009413 false ) 
	#(184 1 #liftFirstValue: 5009414 false ) 
	#(184 1 #liftFirstValue: 5009415 false ) 
	#(184 1 #liftFirstValue: 5009416 false ) 
	#(184 1 #liftFirstValue: 5009417 false ) 
	#(184 1 #liftFirstValue: 5009418 false ) 
	#(184 1 #reduceActionForBaseType11: 5009419 false ) 
	#(186 1 #reduceActionForComplexType1: 5217281 false ) 
	#(187 1 #liftFirstValue: 5266433 false ) 
	#(187 1 #liftFirstValue: 5266434 false ) 
	#(188 2 #reduceActionForTypedThing1: 5299201 false ) 
	#(147 4 #reduceActionFormodule1: 1801217 false ) 
	#(150 2 #reduceActionFor__eol___ModuleStatement__element____2: 1870850 false ) 
	#(222 3 #reduceActionForModuleConstant2: 9501698 false ) 
	#(229 3 #reduceActionForModuleConstants2: 10076162 false ) 
	#(237 2 #reduceActionFor______Constant__constant___1: 10560513 false ) 
	#(238 2 #reduceActionFor______Constant__constant____2: 10560514 false ) 
	#(172 3 #reduceActionForSetUpAssignation1: 4092929 false ) 
	#(226 3 #reduceActionForVariable4: 9804804 false ) 
	#(234 2 #reduceActionFor______Constant__constant___1: 10476545 false ) 
	#(235 2 #reduceActionFor______Constant__constant____2: 10476546 false ) 
	#(202 2 #reduceActionFor__eol___ModuleStatement__element____2: 6369282 false ) 
	#(205 2 #reduceActionForParameterList1: 6807553 false ) 
	#(204 1 #reduceActionForParameterPassingStrategy2: 6729730 false ) 
	#(204 1 #liftFirstValue: 6729729 false ) 
	#(210 0 #reduceActionFor_____Expression__default___1: 7024641 false ) 
	#(207 0 #reduceActionFor__eol___ModuleStatement__element____1: 6851585 false ) 
	#(264 2 #reduceActionForPositiveOperation1: 12705793 false ) 
	#(263 2 #reduceActionForNegatedOperation1: 12638209 false ) 
	#(277 2 #reduceActionForAddressOfClause1: 13985793 false ) 
	#(260 2 #reduceActionForExplicitCall1: 12414977 false ) 
	#(278 2 #reduceActionForNewClause1: 14058497 false ) 
	#(261 2 #reduceActionForRaiseEvent1: 12479489 false ) 
	#(340 2 #reduceActionForExitFor1: 19983361 false ) 
	#(339 2 #reduceActionForExitDo1: 19948545 false ) 
	#(337 2 #reduceActionForExitFunction1: 19864577 false ) 
	#(341 2 #reduceActionForExitProperty1: 20020225 false ) 
	#(338 2 #reduceActionForExitSub1: 19911681 false ) 
	#(329 2 #reduceActionForGoSubLine1: 19203073 false ) 
	#(328 2 #reduceActionForGoSubLabel1: 19142657 false ) 
	#(326 2 #reduceActionForGoToLine1: 19044353 false ) 
	#(325 2 #reduceActionForGoToLabel1: 18988033 false ) 
	#(265 2 #reduceActionForNotOperation1: 12774401 false ) 
	#(161 1 #reduceActionFor_HEX_INTEGER___1: 2804737 false ) 
	#(250 2 #reduceActionForImplicitParenthesesLessCall1: 11802625 false ) 
	#(257 0 #reduceActionFor_Argument__argument__________________1: 12217345 false ) 
	#(269 1 #reduceActionForArithmeticOperator1: 13206529 false ) 
	#(269 1 #reduceActionForArithmeticOperator2: 13206530 false ) 
	#(269 1 #reduceActionForArithmeticOperator3: 13206531 false ) 
	#(269 1 #reduceActionForArithmeticOperator4: 13206532 false ) 
	#(267 1 #reduceActionForArithmeticOperator2: 13026306 false ) 
	#(267 1 #reduceActionForArithmeticOperator4: 13026308 false ) 
	#(267 1 #reduceActionForArithmeticOperator3: 13026307 false ) 
	#(267 1 #reduceActionForArithmeticOperator1: 13026305 false ) 
	#(267 1 #reduceActionForComparisonOperator5: 13026309 false ) 
	#(269 1 #reduceActionForArithmeticOperator7: 13206535 false ) 
	#(269 1 #reduceActionForArithmeticOperator6: 13206534 false ) 
	#(269 1 #reduceActionForComparisonOperator5: 13206533 false ) 
	#(271 1 #reduceActionForBooleanOperator1: 13377537 false ) 
	#(271 1 #reduceActionForBooleanOperator4: 13377540 false ) 
	#(267 1 #reduceActionForArithmeticOperator6: 13026310 false ) 
	#(267 1 #reduceActionForArithmeticOperator7: 13026311 false ) 
	#(271 1 #reduceActionForBooleanOperator2: 13377538 false ) 
	#(271 1 #reduceActionForBooleanOperator3: 13377539 false ) 
	#(322 1 #liftFirstValue: 18886657 false ) 
	#(180 1 #liftFirstValue: 4826115 false ) 
	#(180 1 #liftFirstValue: 4826114 false ) 
	#(183 0 #reduceActionFor__eol___ModuleStatement__element____1: 4962305 false ) 
	#(180 1 #liftFirstValue: 4826118 false ) 
	#(180 1 #liftFirstValue: 4826113 false ) 
	#(180 1 #liftFirstValue: 4826116 false ) 
	#(180 1 #liftFirstValue: 4826117 false ) 
	#(283 1 #liftFirstValue: 14724098 false ) 
	#(284 1 #liftFirstValue: 14832641 false ) 
	#(285 1 #liftFirstValue: 14887937 false ) 
	#(285 1 #liftFirstValue: 14887938 false ) 
	#(285 1 #liftFirstValue: 14887939 false ) 
	#(285 1 #liftFirstValue: 14887940 false ) 
	#(285 1 #liftFirstValue: 14887941 false ) 
	#(284 1 #liftFirstValue: 14832642 false ) 
	#(284 1 #liftFirstValue: 14832643 false ) 
	#(292 1 #liftFirstValue: 15886337 false ) 
	#(292 1 #liftFirstValue: 15886338 false ) 
	#(292 1 #liftFirstValue: 15886339 false ) 
	#(283 1 #liftFirstValue: 14724099 false ) 
	#(296 1 #liftFirstValue: 16628737 false ) 
	#(296 1 #liftFirstValue: 16628738 false ) 
	#(296 1 #liftFirstValue: 16628739 false ) 
	#(296 1 #liftFirstValue: 16628740 false ) 
	#(296 1 #liftFirstValue: 16628741 false ) 
	#(296 1 #liftFirstValue: 16628742 false ) 
	#(283 1 #liftFirstValue: 14724104 false ) 
	#(283 1 #liftFirstValue: 14724102 false ) 
	#(311 1 #liftFirstValue: 18118657 false ) 
	#(311 1 #liftFirstValue: 18118658 false ) 
	#(283 1 #liftFirstValue: 14724105 false ) 
	#(283 1 #liftFirstValue: 14724101 false ) 
	#(319 1 #liftFirstValue: 18719745 false ) 
	#(319 1 #liftFirstValue: 18719746 false ) 
	#(319 1 #liftFirstValue: 18719747 false ) 
	#(283 1 #liftFirstValue: 14724100 false ) 
	#(330 1 #liftFirstValue: 19286017 false ) 
	#(330 1 #liftFirstValue: 19286018 false ) 
	#(330 1 #liftFirstValue: 19286019 false ) 
	#(283 1 #liftFirstValue: 14724103 false ) 
	#(283 1 #liftFirstValue: 14724097 false ) 
	#(197 2 #reduceActionFor__eol___ModuleStatement__element____2: 6017026 false ) 
	#(190 3 #reduceActionForTypeSize1: 5557249 false ) 
	#(192 2 #reduceActionFor______Constant__constant____2: 5593090 false ) 
	#(189 3 #reduceActionForTypedAndInstantiatedThing1: 5413889 false ) 
	#(188 3 #reduceActionForTypedThing3: 5299203 false ) 
	#(188 3 #reduceActionForTypedThing5: 5299205 false ) 
	#(227 4 #reduceActionForConstant2: 9882626 false ) 
	#(149 2 #reduceActionFor__eol___ModuleStatement__element___1: 1870849 false ) 
	#(199 4 #reduceActionForEvent2: 6188034 false ) 
	#(177 1 #reduceActionFor_HEX_INTEGER___1: 4329473 false ) 
	#(176 2 #reduceActionFor___eol___SetUpAssignation__setting___2: 4327426 false ) 
	#(203 1 #reduceActionForEnumEntry1: 6440961 false ) 
	#(201 2 #reduceActionFor__eol___ModuleStatement__element___1: 6369281 false ) 
	#(210 1 #reduceActionFor_____Expression__default___2: 7024642 false ) 
	#(208 2 #reduceActionForParameter1: 6908929 false ) 
	#(242 3 #reduceActionForParentheseesExpression1: 11286529 false ) 
	#(161 2 #reduceActionFor_eol__2: 2804738 false ) 
	#(254 1 #reduceActionFor_Argument__argument_________________1: 12156929 false ) 
	#(254 1 #reduceActionFor_Argument__argument_________________2: 12156930 false ) 
	#(252 1 #reduceActionForArgument1: 12040193 false ) 
	#(255 2 #reduceActionFor_Argument__argument__________________2: 12156930 false ) 
	#(253 2 #reduceActionForArgumentList1: 12141569 false ) 
	#(248 3 #reduceActionForDictionaryAccess1: 11628545 false ) 
	#(273 3 #reduceActionForConcatenationOperation1: 13532161 false ) 
	#(249 3 #reduceActionForMemberAccess1: 11720705 false ) 
	#(275 3 #reduceActionForExplicitAssignement3: 13721603 false ) 
	#(274 3 #reduceActionForAssignementOrEquals1: 13629441 false ) 
	#(246 3 #reduceActionForIntervalExpression1: 11481089 false ) 
	#(268 3 #reduceActionForComparisonOperation1: 13101057 false ) 
	#(270 3 #reduceActionForArithmeticOperation1: 13272065 false ) 
	#(272 3 #reduceActionForBooleanBinaryOperation1: 13426689 false ) 
	#(310 2 #reduceActionForRaiseError1: 18029569 false ) 
	#(321 2 #reduceActionForResumeNext1: 18837505 false ) 
	#(320 2 #reduceActionForResumeLabel1: 18774017 false ) 
	#(312 2 #reduceActionForLabel1: 18144257 false ) 
	#(181 2 #reduceActionForBlock1: 4932609 false ) 
	#(196 2 #reduceActionFor__eol___ModuleStatement__element___1: 6017025 false ) 
	#(191 2 #reduceActionFor______Constant__constant___1: 5593089 false ) 
	#(190 4 #reduceActionForTypeSize2: 5557250 false ) 
	#(189 4 #reduceActionForTypedAndInstantiatedThing3: 5413891 false ) 
	#(188 4 #reduceActionForTypedThing2: 5299202 false ) 
	#(189 4 #reduceActionForTypedAndInstantiatedThing5: 5413893 false ) 
	#(188 4 #reduceActionForTypedThing7: 5299207 false ) 
	#(147 6 #reduceActionFormodule2: 1801218 false ) 
	#(174 6 #reduceActionForConfiguration1: 4265985 false ) 
	#(177 2 #reduceActionFor_eol__2: 4329474 false ) 
	#(175 2 #reduceActionFor__eol___ModuleStatement__element___1: 4327425 false ) 
	#(211 6 #reduceActionForDeclareSub1: 7284737 false ) 
	#(200 6 #reduceActionForDefineEnum1: 6296577 false ) 
	#(208 3 #reduceActionForParameter9: 6908937 false ) 
	#(208 3 #reduceActionForParameter3: 6908931 false ) 
	#(209 2 #reduceActionFor______Constant__constant___1: 7024641 false ) 
	#(208 3 #reduceActionForParameter2: 6908930 false ) 
	#(208 3 #reduceActionForParameter5: 6908933 false ) 
	#(205 4 #reduceActionForParameterList2: 6807554 false ) 
	#(207 2 #reduceActionFor______Constant__constant____2: 6851586 false ) 
	#(279 1 #liftFirstValue: 14117889 false ) 
	#(279 1 #liftFirstValue: 14117890 false ) 
	#(279 1 #liftFirstValue: 14117891 false ) 
	#(279 1 #liftFirstValue: 14117892 false ) 
	#(279 1 #liftFirstValue: 14117893 false ) 
	#(275 4 #reduceActionForExplicitAssignement2: 13721602 false ) 
	#(162 1 #reduceActionFor_HEX_INTEGER___1: 2824193 false ) 
	#(252 2 #reduceActionForArgument2: 12040194 false ) 
	#(252 2 #reduceActionForArgument3: 12040195 false ) 
	#(254 2 #reduceActionFor_Argument__argument_________________3: 12156931 false ) 
	#(254 2 #reduceActionFor_Argument__argument_________________4: 12156932 false ) 
	#(253 3 #reduceActionForArgumentList2: 12141570 false ) 
	#(256 1 #reduceActionFor_Argument__argument_________________1: 12217345 false ) 
	#(256 1 #reduceActionFor______________Argument__argument____3: 12217347 false ) 
	#(257 2 #reduceActionFor_Argument__argument__________________2: 12217346 false ) 
	#(251 4 #reduceActionForProcedureCallOrArrayAccess1: 11918337 false ) 
	#(331 3 #reduceActionForOnErrorGoTo1: 19346433 false ) 
	#(333 3 #reduceActionForOnExpressionGo1: 19480577 false ) 
	#(183 2 #reduceActionFor__eol___ModuleStatement__element____2: 4962306 false ) 
	#(195 6 #reduceActionForDefineType1: 5948417 false ) 
	#(198 2 #reduceActionForTypeEntry1: 6088705 false ) 
	#(189 5 #reduceActionForTypedAndInstantiatedThing2: 5413890 false ) 
	#(188 5 #reduceActionForTypedThing4: 5299204 false ) 
	#(189 5 #reduceActionForTypedAndInstantiatedThing7: 5413895 false ) 
	#(188 5 #reduceActionForTypedThing6: 5299206 false ) 
	#(212 7 #reduceActionForDeclareFunction1: 7475201 false ) 
	#(203 3 #reduceActionForEnumEntry2: 6440962 false ) 
	#(208 4 #reduceActionForParameter11: 6908939 false ) 
	#(208 4 #reduceActionForParameter10: 6908938 false ) 
	#(208 4 #reduceActionForParameter13: 6908941 false ) 
	#(208 4 #reduceActionForParameter4: 6908932 false ) 
	#(208 4 #reduceActionForParameter7: 6908935 false ) 
	#(208 4 #reduceActionForParameter6: 6908934 false ) 
	#(206 2 #reduceActionFor______Constant__constant___1: 6851585 false ) 
	#(281 1 #liftFirstValue: 14239748 false ) 
	#(281 1 #liftFirstValue: 14239746 false ) 
	#(281 1 #liftFirstValue: 14239747 false ) 
	#(280 1 #liftFirstValue: 14189569 false ) 
	#(281 1 #liftFirstValue: 14239745 false ) 
	#(280 1 #liftFirstValue: 14189570 false ) 
	#(162 2 #reduceActionFor_eol__2: 2824194 false ) 
	#(252 3 #reduceActionForArgument4: 12040196 false ) 
	#(256 2 #reduceActionFor______________Argument__argument____2: 12217346 false ) 
	#(256 2 #reduceActionFor_Argument__argument_________________4: 12217348 false ) 
	#(286 4 #reduceActionForInfinityLoop1: 14965761 false ) 
	#(297 4 #reduceActionForIfThenColon1: 16728065 false ) 
	#(332 4 #reduceActionForOnErrorResumeNext1: 19403777 false ) 
	#(318 1 #reduceActionFor__eol___Case__case____1: 18566145 false ) 
	#(182 2 #reduceActionFor__eol___ModuleStatement__element___1: 4962305 false ) 
	#(216 7 #reduceActionForDefineSub1: 8208385 false ) 
	#(189 6 #reduceActionForTypedAndInstantiatedThing4: 5413892 false ) 
	#(189 6 #reduceActionForTypedAndInstantiatedThing6: 5413894 false ) 
	#(188 6 #reduceActionForTypedThing8: 5299208 false ) 
	#(211 7 #reduceActionForDeclareSub3: 7284739 false ) 
	#(200 7 #reduceActionForDefineEnum2: 6296578 false ) 
	#(195 7 #reduceActionForDefineType2: 5948418 false ) 
	#(211 8 #reduceActionForDeclareSub2: 7284738 false ) 
	#(208 5 #reduceActionForParameter12: 6908940 false ) 
	#(208 5 #reduceActionForParameter15: 6908943 false ) 
	#(208 5 #reduceActionForParameter14: 6908942 false ) 
	#(208 5 #reduceActionForParameter8: 6908936 false ) 
	#(215 8 #reduceActionForDefineFunction1: 7988225 false ) 
	#(282 6 #reduceActionForOpenFileClause1: 14309377 false ) 
	#(280 2 #liftFirstValue: 14189571 false ) 
	#(217 8 #reduceActionForModulePropertyGet1: 8397825 false ) 
	#(219 8 #reduceActionForModulePropertyLet1: 8852481 false ) 
	#(218 8 #reduceActionForModulePropertySet1: 8632321 false ) 
	#(286 5 #reduceActionForInfinityLoop2: 14965762 false ) 
	#(286 5 #reduceActionForInfinityLoop3: 14965763 false ) 
	#(317 2 #reduceActionFor__eol___ModuleStatement__element___1: 18566145 false ) 
	#(318 2 #reduceActionFor__eol___ModuleStatement__element____2: 18566146 false ) 
	#(291 5 #reduceActionForWhileWend1: 15722497 false ) 
	#(313 5 #reduceActionForLabelSub1: 18194433 false ) 
	#(216 8 #reduceActionForDefineSub2: 8208386 false ) 
	#(198 4 #reduceActionForTypeEntry2: 6088706 false ) 
	#(189 7 #reduceActionForTypedAndInstantiatedThing8: 5413896 false ) 
	#(212 8 #reduceActionForDeclareFunction3: 7475203 false ) 
	#(216 8 #reduceActionForDefineSub5: 8208389 false ) 
	#(216 8 #reduceActionForDefineSub3: 8208387 false ) 
	#(212 9 #reduceActionForDeclareFunction2: 7475202 false ) 
	#(208 6 #reduceActionForParameter16: 6908944 false ) 
	#(215 9 #reduceActionForDefineFunction2: 7988226 false ) 
	#(282 7 #reduceActionForOpenFileClause2: 14309378 false ) 
	#(282 7 #reduceActionForOpenFileClause5: 14309381 false ) 
	#(282 7 #reduceActionForOpenFileClause3: 14309379 false ) 
	#(217 9 #reduceActionForModulePropertyGet2: 8397826 false ) 
	#(217 9 #reduceActionForModulePropertyGet3: 8397827 false ) 
	#(219 9 #reduceActionForModulePropertyLet2: 8852482 false ) 
	#(218 9 #reduceActionForModulePropertySet2: 8632322 false ) 
	#(287 6 #reduceActionForWhileTrue1: 15089665 false ) 
	#(289 6 #reduceActionForDoWhileTrue1: 15393793 false ) 
	#(286 6 #reduceActionForInfinityLoop4: 14965764 false ) 
	#(303 1 #reduceActionFor_HEX_INTEGER___1: 17441793 false ) 
	#(302 1 #liftFirstValue: 17441793 false ) 
	#(305 1 #liftFirstValue: 17758209 false ) 
	#(305 1 #liftFirstValue: 17758210 false ) 
	#(298 6 #reduceActionForIfThenElseOneLine1: 16819201 false ) 
	#(291 6 #reduceActionForWhileWend2: 15722498 false ) 
	#(291 6 #reduceActionForWhileWend3: 15722499 false ) 
	#(335 6 #reduceActionForWith1: 19651585 false ) 
	#(313 6 #reduceActionForLabelSub2: 18194434 false ) 
	#(313 6 #reduceActionForLabelSub3: 18194435 false ) 
	#(211 9 #reduceActionForDeclareSub4: 7284740 false ) 
	#(215 9 #reduceActionForDefineFunction5: 7988229 false ) 
	#(217 9 #reduceActionForModulePropertyGet9: 8397833 false ) 
	#(219 9 #reduceActionForModulePropertyLet5: 8852485 false ) 
	#(218 9 #reduceActionForModulePropertySet5: 8632325 false ) 
	#(216 9 #reduceActionForDefineSub6: 8208390 false ) 
	#(216 9 #reduceActionForDefineSub7: 8208391 false ) 
	#(215 9 #reduceActionForDefineFunction3: 7988227 false ) 
	#(217 9 #reduceActionForModulePropertyGet5: 8397829 false ) 
	#(219 9 #reduceActionForModulePropertyLet3: 8852483 false ) 
	#(218 9 #reduceActionForModulePropertySet3: 8632323 false ) 
	#(216 9 #reduceActionForDefineSub4: 8208388 false ) 
	#(282 8 #reduceActionForOpenFileClause6: 14309382 false ) 
	#(282 8 #reduceActionForOpenFileClause7: 14309383 false ) 
	#(282 8 #reduceActionForOpenFileClause4: 14309380 false ) 
	#(217 10 #reduceActionForModulePropertyGet4: 8397828 false ) 
	#(288 7 #reduceActionForUntilTrue1: 15244289 false ) 
	#(287 7 #reduceActionForWhileTrue2: 15089666 false ) 
	#(287 7 #reduceActionForWhileTrue3: 15089667 false ) 
	#(289 7 #reduceActionForDoWhileTrue2: 15393794 false ) 
	#(290 7 #reduceActionForDoUntilTrue1: 15550465 false ) 
	#(289 7 #reduceActionForDoWhileTrue3: 15393795 false ) 
	#(299 7 #reduceActionForIfThen1: 16960513 false ) 
	#(303 2 #reduceActionFor_eol__2: 17441794 false ) 
	#(316 7 #reduceActionForSelect1: 18511873 false ) 
	#(291 7 #reduceActionForWhileWend4: 15722500 false ) 
	#(335 7 #reduceActionForWith2: 19651586 false ) 
	#(335 7 #reduceActionForWith3: 19651587 false ) 
	#(313 7 #reduceActionForLabelSub4: 18194436 false ) 
	#(212 10 #reduceActionForDeclareFunction4: 7475204 false ) 
	#(215 10 #reduceActionForDefineFunction6: 7988230 false ) 
	#(217 10 #reduceActionForModulePropertyGet10: 8397834 false ) 
	#(217 10 #reduceActionForModulePropertyGet11: 8397835 false ) 
	#(219 10 #reduceActionForModulePropertyLet6: 8852486 false ) 
	#(218 10 #reduceActionForModulePropertySet6: 8632326 false ) 
	#(215 10 #reduceActionForDefineFunction7: 7988231 false ) 
	#(217 10 #reduceActionForModulePropertyGet13: 8397837 false ) 
	#(219 10 #reduceActionForModulePropertyLet7: 8852487 false ) 
	#(218 10 #reduceActionForModulePropertySet7: 8632327 false ) 
	#(216 10 #reduceActionForDefineSub8: 8208392 false ) 
	#(215 10 #reduceActionForDefineFunction4: 7988228 false ) 
	#(217 10 #reduceActionForModulePropertyGet6: 8397830 false ) 
	#(217 10 #reduceActionForModulePropertyGet7: 8397831 false ) 
	#(219 10 #reduceActionForModulePropertyLet4: 8852484 false ) 
	#(218 10 #reduceActionForModulePropertySet4: 8632324 false ) 
	#(282 9 #reduceActionForOpenFileClause8: 14309384 false ) 
	#(293 8 #reduceActionForForEach1: 15931393 false ) 
	#(288 8 #reduceActionForUntilTrue2: 15244290 false ) 
	#(287 8 #reduceActionForWhileTrue4: 15089668 false ) 
	#(290 8 #reduceActionForDoUntilTrue2: 15550466 false ) 
	#(289 8 #reduceActionForDoWhileTrue4: 15393796 false ) 
	#(309 0 #reduceActionFor__eol___ModuleStatement__element____1: 17960961 false ) 
	#(299 8 #reduceActionForIfThen2: 16960514 false ) 
	#(304 8 #reduceActionForIfThenElseIf1: 17577985 false ) 
	#(299 8 #reduceActionForIfThen3: 16960515 false ) 
	#(314 4 #reduceActionForCase1: 18354177 false ) 
	#(316 8 #reduceActionForSelect2: 18511874 false ) 
	#(335 8 #reduceActionForWith4: 19651588 false ) 
	#(217 11 #reduceActionForModulePropertyGet12: 8397836 false ) 
	#(215 11 #reduceActionForDefineFunction8: 7988232 false ) 
	#(217 11 #reduceActionForModulePropertyGet14: 8397838 false ) 
	#(217 11 #reduceActionForModulePropertyGet15: 8397839 false ) 
	#(219 11 #reduceActionForModulePropertyLet8: 8852488 false ) 
	#(218 11 #reduceActionForModulePropertySet8: 8632328 false ) 
	#(217 11 #reduceActionForModulePropertyGet8: 8397832 false ) 
	#(293 9 #reduceActionForForEach2: 15931394 false ) 
	#(293 9 #reduceActionForForEach3: 15931395 false ) 
	#(293 9 #reduceActionForForEach5: 15931397 false ) 
	#(294 9 #reduceActionForForNext1: 16129025 false ) 
	#(307 4 #reduceActionForElseIfColon1: 17906689 false ) 
	#(304 9 #reduceActionForIfThenElseIf2: 17577986 false ) 
	#(299 9 #reduceActionForIfThen4: 16960516 false ) 
	#(304 9 #reduceActionForIfThenElseIf3: 17577987 false ) 
	#(315 4 #reduceActionForCaseOtherwise1: 18438145 false ) 
	#(316 9 #reduceActionForSelect3: 18511875 false ) 
	#(217 12 #reduceActionForModulePropertyGet16: 8397840 false ) 
	#(160 11 #reduceActionForGuidLiteral1: 2788353 false ) 
	#(293 10 #reduceActionForForEach4: 15931396 false ) 
	#(293 10 #reduceActionForForEach6: 15931398 false ) 
	#(293 10 #reduceActionForForEach7: 15931399 false ) 
	#(294 10 #reduceActionForForNext2: 16129026 false ) 
	#(294 10 #reduceActionForForNext3: 16129027 false ) 
	#(294 10 #reduceActionForForNext5: 16129029 false ) 
	#(300 10 #reduceActionForIfThenElse1: 17112065 false ) 
	#(306 5 #reduceActionForElseIfBlock1: 17796097 false ) 
	#(308 1 #reduceActionFor___Expression__ifMatch__________1: 17960961 false ) 
	#(309 2 #reduceActionFor______Constant__constant____2: 17960962 false ) 
	#(304 10 #reduceActionForIfThenElseIf4: 17577988 false ) 
	#(316 10 #reduceActionForSelect4: 18511876 false ) 
	#(293 11 #reduceActionForForEach8: 15931400 false ) 
	#(295 11 #reduceActionForForStepNext1: 16354305 false ) 
	#(294 11 #reduceActionForForNext4: 16129028 false ) 
	#(294 11 #reduceActionForForNext6: 16129030 false ) 
	#(294 11 #reduceActionForForNext7: 16129031 false ) 
	#(300 11 #reduceActionForIfThenElse2: 17112066 false ) 
	#(300 11 #reduceActionForIfThenElse3: 17112067 false ) 
	#(306 6 #reduceActionForElseIfBlock2: 17796098 false ) 
	#(308 2 #reduceActionFor___Expression__ifMatch__________2: 17960962 false ) 
	#(300 11 #reduceActionForIfThenElse5: 17112069 false ) 
	#(301 11 #reduceActionForIfThenElseIfElse1: 17348609 false ) 
	#(300 11 #reduceActionForIfThenElse9: 17112073 false ) 
	#(295 12 #reduceActionForForStepNext2: 16354306 false ) 
	#(295 12 #reduceActionForForStepNext3: 16354307 false ) 
	#(295 12 #reduceActionForForStepNext5: 16354309 false ) 
	#(294 12 #reduceActionForForNext8: 16129032 false ) 
	#(300 12 #reduceActionForIfThenElse4: 17112068 false ) 
	#(300 12 #reduceActionForIfThenElse6: 17112070 false ) 
	#(300 12 #reduceActionForIfThenElse7: 17112071 false ) 
	#(301 12 #reduceActionForIfThenElseIfElse2: 17348610 false ) 
	#(301 12 #reduceActionForIfThenElseIfElse3: 17348611 false ) 
	#(300 12 #reduceActionForIfThenElse10: 17112074 false ) 
	#(300 12 #reduceActionForIfThenElse11: 17112075 false ) 
	#(300 12 #reduceActionForIfThenElse13: 17112077 false ) 
	#(301 12 #reduceActionForIfThenElseIfElse5: 17348613 false ) 
	#(295 13 #reduceActionForForStepNext4: 16354308 false ) 
	#(295 13 #reduceActionForForStepNext6: 16354310 false ) 
	#(295 13 #reduceActionForForStepNext7: 16354311 false ) 
	#(300 13 #reduceActionForIfThenElse8: 17112072 false ) 
	#(301 13 #reduceActionForIfThenElseIfElse4: 17348612 false ) 
	#(300 13 #reduceActionForIfThenElse12: 17112076 false ) 
	#(300 13 #reduceActionForIfThenElse14: 17112078 false ) 
	#(300 13 #reduceActionForIfThenElse15: 17112079 false ) 
	#(301 13 #reduceActionForIfThenElseIfElse6: 17348614 false ) 
	#(301 13 #reduceActionForIfThenElseIfElse7: 17348615 false ) 
	#(295 14 #reduceActionForForStepNext8: 16354312 false ) 
	#(300 14 #reduceActionForIfThenElse16: 17112080 false ) 
	#(301 14 #reduceActionForIfThenElseIfElse8: 17348616 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"!="' '"&"' '"&&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<="' '"<>"' '"="' '">"' '">="' '"AS"' '"AddressOf"' '"Append"' '"BINARY"' '"Call"' '"ERROR"' '"FOR"' '"Input"' '"Lock Read Write"' '"Lock Read"' '"Lock Write"' '"Mod"' '"NEW"' '"Open"' '"Output"' '"RaiseEvent"' '"Random"' '"Read"' '"Shared"' '"WithEvents"' '"Write"' '"["' '"\"' '"^"' '"alias"' '"and"' '"attribute"' '"base"' '"begin"' '"boolean"' '"byref"' '"byte"' '"byval"' '"case"' '"class"' '"collection"' '"compare"' '"const"' '"database"' '"date"' '"declare"' '"delete"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"elseif"' '"end"' '"enum"' '"eqv"' '"event"' '"exit"' '"explicit"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"implements"' '"in"' '"integer"' '"is"' '"len"' '"let"' '"lib"' '"like"' '"long"' '"loop"' '"module"' '"next"' '"not"' '"object"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"select"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"||"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<HASH_NUMBER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<comment>' 'B e g i n' 'module' '<eol>*' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' 'literal' 'FileDescriptorLiteral' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' '<HEX_INTEGER>+' 'Identifier' 'UsableKeywords' 'HashIdentifier' 'SimpleIdentifier' 'HeadlessIdentifier' 'QualifiedIdentifier' 'header' 'Option' 'OptionBase' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'Implements' 'ModuleStatement' 'Statement' 'Block' '(<eol>+ Statement ''statement''  )' '(<eol>+ Statement ''statement''  )*' 'BaseType' 'Visibility' 'ComplexType' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '( "," Expression ''size'')' '( "," Expression ''size'')*' 'AsType' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '( "," Parameter ''parameter'')' '( "," Parameter ''parameter'')*' 'Parameter' '("=" Expression ''default'')' '("=" Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '(","  Variable ''variable'' )' '(","  Variable ''variable'' )+' 'ConstantList' '(","  Constant ''constant'' )' '(","  Constant ''constant'' )+' 'VariableDefinition' 'ValueStatement' 'Expression' 'ParentheseesExpression' 'ValueStatementList' '("," ValueStatement ''value'' )' '("," ValueStatement ''value'' ) *' 'IntervalExpression' 'Operation' 'DictionaryAccess' 'MemberAccess' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" ))' '(Argument ''argument'' ? ("," | ";" ))*' '( ("," | ";" )Argument ''argument'' ?)' '( ("," | ";" )Argument ''argument'' ?)*' 'ImplicitCall' 'StateAccess' 'ExplicitCall' 'RaiseEvent' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'ConcatenationOperation' 'AssignementOrEquals' 'ExplicitAssignement' 'ValueClause' 'AddressOfClause' 'NewClause' 'OpenMode' 'OpenAccess' 'Lock' 'OpenFileClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForStepNext' 'If' 'IfThenColon' 'IfThenElseOneLine' 'IfThen' 'IfThenElse' 'IfThenElseIfElse' '(ElseIf ''case'')' '(ElseIf ''case'') +' 'IfThenElseIf' 'ElseIf' 'ElseIfBlock' 'ElseIfColon' '(  Expression ''ifMatch'' ?  ":" )' '(  Expression ''ifMatch'' ?  ":" )*' 'RaiseError' 'To' 'Label' 'LabelSub' 'Case' 'CaseOtherwise' 'Select' '(<eol>+ Case ''case'')' '(<eol>+ Case ''case'') +' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'GoTo' 'GoToLabel' 'GoToLine' 'GoSub' 'GoSubLabel' 'GoSubLine' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBFileDescriptorLiteralNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBHashIdentifierNode #Object #VBHeadlessIdentifierNode #VBQualifiedIdentifierNode #VBHeaderNode #VBProgramNode #VBOptionBaseNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBImplementsNode #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBComplexTypeNode #Object #VBAsTypeNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #Object #Object #VBParentheseesExpressionNode #VBValueStatementListNode #OrderedCollection #OrderedCollection #VBIntervalExpressionNode #Object #VBDictionaryAccessNode #VBMemberAccessNode #VBImplicitParenthesesLessCallNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #Object #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #Object #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBConcatenationOperationNode #VBAssignementOrEqualsNode #Object #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #SmaCCToken #SmaCCToken #SmaCCToken #VBOpenClauseNode #Object #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForStepNextNode #VBProgramNode #VBIfThenColonNode #VBIfThenColonNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseIfElseNode #VBProgramNode #OrderedCollection #VBIfThenElseIfElseNode #VBProgramNode #VBElseIfBlockNode #VBElseIfColonNode #OrderedCollection #OrderedCollection #VBRaiseErrorNode #VBProgramNode #VBGoToLabelNode #VBGoSubLabelNode #VBCaseNode #VBCaseNode #VBSelectNode #OrderedCollection #OrderedCollection #Object #VBResumeLabelNode #VBResumeNextNode #SmaCCToken #VBProgramNode #VBProgramNode #VBGoToLabelNode #VBGoToLineNode #VBProgramNode #VBGoSubLabelNode #VBGoSubLineNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 6 0 11 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 98 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 112 0 6 0 115 0 6 0 116 0 6 0 119 0 6 0 122 0 6 0 140 0 6 0 142 0 6 0 144 0 9 0 147 0 13 0 148] 
#[0 0 0 1 86] 
#[1 0 17 0 11 0 21 0 48 0 25 0 50 0 29 0 59 0 137 0 61 0 37 0 62 0 41 0 64 0 45 0 71 0 49 0 73 0 185 0 76 0 57 0 77 0 137 0 78 0 185 0 79 0 69 0 83 0 137 0 87 0 77 0 98 0 185 0 103 0 85 0 104 0 185 0 105 0 93 0 106 0 137 0 110 0 101 0 112 0 105 0 115 0 137 0 116 0 113 0 119 0 117 0 122 0 133 0 140 0 125 0 142 0 129 0 144 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 0 157 0 169 0 181 0 170 0 181 0 171 0 181 0 173 0 181 0 174 0 181 0 178 0 181 0 179 0 185 0 185 0 181 0 194 0 181 0 195 0 181 0 199 0 181 0 200 0 181 0 211 0 181 0 212 0 181 0 213 0 217 0 214 0 181 0 215 0 181 0 216 0 181 0 217 0 181 0 218 0 181 0 219 0 181 0 220 0 181 0 221 0 181 0 222 0 181 0 223 0 181 0 224 0 181 0 225 1 9 0 227 0 181 0 228 0 181 0 229 0 181 0 230 0 181 0 231 0 181 0 232 0 181 0 236 0 181 0 239] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 41 0 140 0 125 0 142 1 41 0 163 0 137 0 164 1 41 0 165 1 41 0 166 1 41 0 167 1 41 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 45 0 140 0 125 0 142 1 45 0 163 0 137 0 164 1 45 0 165 1 45 0 166 1 45 0 167 1 45 0 168 1 49 0 172] 
#[1 0 6 0 11 0 6 0 61 0 6 0 78 0 6 0 87 0 6 0 110 0 6 0 116 0 6 0 140 0 6 0 142 0 6 0 144 1 53 0 148] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 0 133 0 140 0 125 0 142 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 1 57 0 227 1 61 0 236] 
#[0 0 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 65 0 77 1 69 0 115] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 1 81 0 226 1 85 0 233] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 89 0 140 0 125 0 142 1 89 0 163 0 137 0 164 1 89 0 165 1 89 0 166 1 89 0 167 1 89 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 93 0 140 0 125 0 142 1 93 0 163 0 137 0 164 1 93 0 165 1 93 0 166 1 93 0 167 1 93 0 168] 
#[0 0 14 0 11 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 104 0 110 0 112 0 115 0 116 0 119 0 140 0 142] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 97 0 140 0 125 0 142 1 97 0 163 0 137 0 164 1 97 0 165 1 97 0 166 1 97 0 167 1 97 0 168] 
#[0 0 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 22 0 11 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 104 0 110 0 112 0 115 0 116 0 119 0 140 0 142] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 101 0 140 0 125 0 142 1 101 0 163 0 137 0 164 1 101 0 165 1 101 0 166 1 101 0 167 1 101 0 168] 
#[0 0 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 105 0 49 1 109 0 58 1 113 0 75 1 117 0 103 1 121 0 135 1 125 0 153] 
#[0 0 30 0 11 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 104 0 110 0 112 0 115 0 116 0 119 0 140 0 142] 
#[1 1 129 0 78 1 133 0 88 1 137 0 110] 
#[0 0 34 0 11 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 104 0 110 0 112 0 115 0 116 0 119 0 140 0 142] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 137 0 78 0 137 0 87 1 141 0 102 0 137 0 110 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 1 145 0 226 1 149 0 233] 
#[0 0 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 42 0 77 0 137 0 78 0 137 0 87 0 42 0 104 0 137 0 110 0 42 0 115 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 1 153 0 226 1 157 0 233] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 161 0 140 0 125 0 142 1 161 0 163 0 137 0 164 1 161 0 165 1 161 0 166 1 161 0 167 1 161 0 168] 
#[0 0 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 165 0 140 0 125 0 142 1 165 0 163 0 137 0 164 1 165 0 165 1 165 0 166 1 165 0 167 1 165 0 168] 
#[1 1 169 0 136 1 173 0 156] 
#[0 0 50 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 58 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 122 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 177 0 5 1 181 0 11 1 185 0 19 1 189 0 22 1 205 0 188 1 205 0 189 1 201 0 190 1 205 0 193] 
#[0 0 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 74 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 78 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 0 6 0 11 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 98 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 112 0 6 0 115 0 6 0 116 0 6 0 119 0 6 0 140 0 6 0 142 0 6 0 144 1 209 0 148] 
#[0 0 82 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 86 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 90 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 94 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 98 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 0 102 0 11 0 102 0 48 0 102 0 50 0 102 0 59 0 102 0 61 0 102 0 62 0 102 0 64 0 102 0 71 0 102 0 73 0 102 0 76 0 102 0 77 0 102 0 78 0 102 0 79 0 102 0 83 0 102 0 87 0 102 0 98 0 102 0 103 0 102 0 104 0 102 0 105 0 102 0 106 0 102 0 110 0 102 0 112 0 102 0 115 0 102 0 116 0 102 0 119 0 102 0 140 0 102 0 142 0 102 0 144 1 213 0 150 0 102 1 86] 
#[1 0 17 0 11 1 73 0 41 1 217 0 59 0 137 0 61 1 221 0 62 1 225 0 71 1 229 0 73 1 233 0 77 0 137 0 78 0 137 0 87 1 237 0 104 0 137 0 110 1 253 0 112 1 245 0 115 0 137 0 116 1 249 0 119 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 1 253 0 214 2 1 0 226 2 5 0 233] 
#[0 0 106 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 110 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 114 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 118 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 122 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 126 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 130 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 9 0 77 2 13 0 104 2 17 0 115] 
#[0 0 134 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 138 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 142 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 146 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 150 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 154 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 158 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 162 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 166 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 170 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 174 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 21 0 9 2 25 0 237 2 29 0 238] 
#[0 0 178 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 182 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 186 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 190 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 194 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 198 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 0 202 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 0 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 181 0 11 2 33 0 19] 
#[0 0 210 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 45 0 140 0 125 0 142 0 129 0 144 1 45 0 163 0 137 0 164 1 45 0 165 1 45 0 166 1 45 0 167 1 45 0 168 2 37 0 172] 
#[1 2 21 0 9 0 214 0 11 0 214 0 48 0 214 0 50 0 214 0 59 0 214 0 61 0 214 0 62 0 214 0 64 0 214 0 68 0 214 0 69 0 214 0 70 0 214 0 71 0 214 0 73 0 214 0 76 0 214 0 77 0 214 0 78 0 214 0 79 0 214 0 83 0 214 0 87 0 214 0 92 0 214 0 94 0 214 0 98 0 214 0 103 0 214 0 104 0 214 0 105 0 214 0 106 0 214 0 108 0 214 0 110 0 214 0 112 0 214 0 115 0 214 0 116 0 214 0 119 0 214 0 123 0 214 0 135 0 214 0 140 0 214 0 142 0 214 0 144 2 25 0 237 2 29 0 238 0 214 1 86] 
#[0 0 218 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 2 41 0 140 0 125 0 142 2 41 0 163 0 137 0 164 2 41 0 165 2 41 0 166 2 41 0 167 2 41 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 2 45 0 140 0 125 0 142 2 45 0 163 0 137 0 164 2 45 0 165 2 45 0 166 2 45 0 167 2 45 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 2 49 0 140 0 125 0 142 2 49 0 163 0 137 0 164 2 49 0 165 2 49 0 166 2 49 0 167 2 49 0 168] 
#[1 1 177 0 5 0 222 0 9 1 181 0 11 1 189 0 22 0 222 0 48 0 222 0 50 0 222 0 59 0 222 0 61 0 222 0 62 0 222 0 64 0 222 0 68 0 222 0 69 0 222 0 70 0 222 0 71 0 222 0 73 0 222 0 76 0 222 0 77 0 222 0 78 0 222 0 79 0 222 0 83 0 222 0 87 0 222 0 92 0 222 0 94 0 222 0 98 0 222 0 103 0 222 0 104 0 222 0 105 0 222 0 106 0 222 0 108 0 222 0 110 0 222 0 112 0 222 0 115 0 222 0 116 0 222 0 119 0 222 0 123 0 222 0 135 0 222 0 140 0 222 0 142 0 222 0 144 2 53 0 188 2 53 0 189 1 201 0 190 2 53 0 193 0 222 1 86] 
#[1 2 57 0 9 0 226 0 11 0 226 0 48 0 226 0 50 0 226 0 59 0 226 0 61 0 226 0 62 0 226 0 64 0 226 0 68 0 226 0 69 0 226 0 70 0 226 0 71 0 226 0 73 0 226 0 76 0 226 0 77 0 226 0 78 0 226 0 79 0 226 0 83 0 226 0 87 0 226 0 92 0 226 0 94 0 226 0 98 0 226 0 103 0 226 0 104 0 226 0 105 0 226 0 106 0 226 0 108 0 226 0 110 0 226 0 112 0 226 0 115 0 226 0 116 0 226 0 119 0 226 0 123 0 226 0 135 0 226 0 140 0 226 0 142 0 226 0 144 2 61 0 234 2 65 0 235 0 226 1 86] 
#[0 0 230 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 1 181 0 11 0 234 0 61 0 234 0 70 0 234 0 78 0 234 0 87 0 234 0 110 0 234 0 116 0 234 0 140 0 234 0 142 0 234 0 144 2 69 0 202] 
#[1 2 73 0 5 1 181 0 11 2 77 0 205] 
#[1 2 73 0 5 1 181 0 11 2 81 0 205] 
#[1 1 181 0 11 0 238 0 48 0 238 0 50 0 238 0 59 0 238 0 61 0 238 0 62 0 238 0 64 0 238 0 71 0 238 0 73 0 238 0 76 0 238 0 77 0 238 0 78 0 238 0 79 0 238 0 83 0 238 0 87 0 238 0 98 0 238 0 103 0 238 0 104 0 238 0 105 0 238 0 106 0 238 0 110 0 238 0 112 0 238 0 115 0 238 0 116 0 238 0 119 0 238 0 140 0 238 0 142 0 238 0 144 0 238 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 2 217 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 2 217 0 151 2 217 0 152 2 217 0 153 2 217 0 154 2 217 0 155 2 217 0 156 2 217 0 157 2 217 0 158 2 217 0 159 2 217 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 2 217 0 240 2 217 0 241 2 217 0 242 2 217 0 246 2 217 0 247 2 217 0 248 2 217 0 249 2 217 0 250 2 217 0 251 2 217 1 2 2 217 1 3 2 217 1 4 2 217 1 5 2 217 1 6 2 217 1 7 2 217 1 8 2 217 1 9 2 217 1 10 2 217 1 12 2 217 1 14 2 217 1 16 2 217 1 17 2 217 1 18 2 217 1 19 2 217 1 20 2 217 1 21 2 217 1 22 2 217 1 26 2 217 1 67 2 217 1 68 2 217 1 69 2 217 1 70 2 217 1 71 2 217 1 72 2 217 1 73 2 217 1 80 2 217 1 81 2 217 1 82 2 217 1 83 2 217 1 84 2 217 1 85] 
#[1 3 121 0 25 3 125 0 60 3 129 0 116] 
#[0 0 242 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 3 133 0 93] 
#[0 0 246 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 250 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 3 137 0 140 0 125 0 142 3 137 0 163 0 137 0 164 3 137 0 165 3 137 0 166 3 137 0 167 3 137 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 3 141 0 140 0 125 0 142 3 141 0 163 0 137 0 164 3 141 0 165 3 141 0 166 3 141 0 167 3 141 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 3 145 0 140 0 125 0 142 3 145 0 163 0 137 0 164 3 145 0 165 3 145 0 166 3 145 0 167 3 145 0 168] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 3 149 0 226 3 153 0 233] 
#[1 2 57 0 9 0 254 0 11 0 254 0 48 0 254 0 50 0 254 0 59 0 254 0 61 0 254 0 62 0 254 0 64 0 254 0 68 0 254 0 69 0 254 0 70 0 254 0 71 0 254 0 73 0 254 0 76 0 254 0 77 0 254 0 78 0 254 0 79 0 254 0 83 0 254 0 87 0 254 0 92 0 254 0 94 0 254 0 98 0 254 0 103 0 254 0 104 0 254 0 105 0 254 0 106 0 254 0 108 0 254 0 110 0 254 0 112 0 254 0 115 0 254 0 116 0 254 0 119 0 254 0 123 0 254 0 135 0 254 0 140 0 254 0 142 0 254 0 144 2 61 0 234 2 65 0 235 0 254 1 86] 
#[0 1 2 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 57 0 9 1 6 0 11 1 6 0 48 1 6 0 50 1 6 0 59 1 6 0 61 1 6 0 62 1 6 0 64 1 6 0 68 1 6 0 69 1 6 0 70 1 6 0 71 1 6 0 73 1 6 0 76 1 6 0 77 1 6 0 78 1 6 0 79 1 6 0 83 1 6 0 87 1 6 0 92 1 6 0 94 1 6 0 98 1 6 0 103 1 6 0 104 1 6 0 105 1 6 0 106 1 6 0 108 1 6 0 110 1 6 0 112 1 6 0 115 1 6 0 116 1 6 0 119 1 6 0 123 1 6 0 135 1 6 0 140 1 6 0 142 1 6 0 144 2 61 0 234 2 65 0 235 1 6 1 86] 
#[0 1 10 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 3 157 0 148 3 161 0 205] 
#[1 1 181 0 11 1 14 0 61 1 14 0 70 1 14 0 78 1 14 0 87 1 14 0 110 1 14 0 116 1 14 0 140 1 14 0 142 1 14 0 144 3 165 0 197] 
#[0 1 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 56 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 22 0 11 1 22 0 48 1 22 0 50 3 169 0 56 1 22 0 59 1 22 0 61 1 22 0 62 1 22 0 64 1 22 0 71 1 22 0 73 1 22 0 76 1 22 0 77 1 22 0 78 1 22 0 79 1 22 0 83 1 22 0 87 1 22 0 98 1 22 0 103 1 22 0 104 1 22 0 105 1 22 0 106 1 22 0 110 1 22 0 112 1 22 0 115 1 22 0 116 1 22 0 119 1 22 0 140 1 22 0 142 1 22 0 144] 
#[1 2 85 0 5 1 26 0 6 2 89 0 8 1 26 0 9 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 3 177 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 3 177 0 151 3 177 0 152 3 177 0 153 3 177 0 154 3 177 0 155 3 177 0 156 3 177 0 157 3 177 0 158 3 177 0 159 3 177 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 3 173 0 192 3 177 0 240 3 177 0 241 3 177 0 242 3 177 0 246 3 177 0 247 3 177 0 248 3 177 0 249 3 177 0 250 3 177 0 251 3 177 1 2 3 177 1 3 3 177 1 4 3 177 1 5 3 177 1 6 3 177 1 7 3 177 1 8 3 177 1 9 3 177 1 10 3 177 1 12 3 177 1 14 3 177 1 16 3 177 1 17 3 177 1 18 3 177 1 19 3 177 1 20 3 177 1 21 3 177 1 22 3 177 1 26 3 177 1 67 3 177 1 68 3 177 1 69 3 177 1 70 3 177 1 71 3 177 1 72 3 177 1 73 3 177 1 80 3 177 1 81 3 177 1 82 3 177 1 83 3 177 1 84 3 177 1 85] 
#[0 3 181 0 140] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 3 185 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 3 185 0 151 3 185 0 152 3 185 0 153 3 185 0 154 3 185 0 155 3 185 0 156 3 185 0 157 3 185 0 158 3 185 0 159 3 185 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 246 3 185 0 247 3 185 0 248 3 185 0 249 3 185 0 250 3 185 0 251 3 185 1 2 3 185 1 3 3 185 1 4 3 185 1 5 3 185 1 6 3 185 1 7 3 185 1 8 3 185 1 9 3 185 1 10 3 185 1 12 3 185 1 14 3 185 1 16 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 3 185 1 26 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 84 3 185 1 85] 
#[1 0 17 0 11 3 189 0 34 3 249 0 51 3 249 0 53 3 249 0 57 3 205 0 61 3 249 0 66 0 137 0 78 3 249 0 85 0 137 0 87 3 249 0 91 3 249 0 96 0 137 0 110 3 249 0 111 3 249 0 114 0 137 0 116 3 233 0 121 3 237 0 140 0 125 0 142 3 237 0 163 0 137 0 164 3 237 0 165 3 237 0 166 3 237 0 167 3 237 0 168 3 249 0 184 3 249 0 186 3 249 0 187] 
#[0 1 30 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 34 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 38 0 5 1 38 0 6 1 38 0 7 1 38 0 8 1 38 0 9 1 38 0 10 1 38 0 11 1 38 0 19 3 253 0 22 1 38 0 23 1 38 0 26 1 38 0 27 1 38 0 28 1 38 0 34 1 38 0 35 1 38 0 37 1 38 0 48 1 38 0 50 1 38 0 59 1 38 0 61 1 38 0 62 1 38 0 64 1 38 0 65 1 38 0 68 1 38 0 69 1 38 0 70 1 38 0 71 1 38 0 73 1 38 0 74 1 38 0 76 1 38 0 77 1 38 0 78 1 38 0 79 1 38 0 80 1 38 0 81 1 38 0 82 1 38 0 83 1 38 0 87 1 38 0 88 1 38 0 92 1 38 0 94 1 38 0 95 1 38 0 97 1 38 0 98 1 38 0 103 1 38 0 104 1 38 0 105 1 38 0 106 1 38 0 107 1 38 0 108 1 38 0 109 1 38 0 110 1 38 0 112 1 38 0 115 1 38 0 116 1 38 0 119 1 38 0 123 1 38 0 124 1 38 0 125 1 38 0 127 1 38 0 133 1 38 0 134 1 38 0 135 1 38 0 136 1 38 0 137 1 38 0 138 1 38 0 139 1 38 0 140 1 38 0 141 1 38 0 142 1 38 0 144 1 38 1 86] 
#[0 4 1 0 19] 
#[1 0 17 0 11 0 21 0 48 0 25 0 50 0 29 0 59 0 137 0 61 0 37 0 62 0 41 0 64 0 45 0 71 0 49 0 73 0 185 0 76 0 57 0 77 0 137 0 78 0 185 0 79 0 69 0 83 0 137 0 87 0 77 0 98 0 185 0 103 0 85 0 104 0 185 0 105 0 93 0 106 0 137 0 110 0 101 0 112 0 105 0 115 0 137 0 116 0 113 0 119 0 133 0 140 0 125 0 142 0 129 0 144 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 4 5 0 170 4 5 0 171 4 5 0 173 4 5 0 174 4 5 0 178 4 5 0 179 0 185 0 185 4 5 0 194 4 5 0 195 4 5 0 199 4 5 0 200 4 5 0 211 4 5 0 212 4 5 0 213 0 217 0 214 4 5 0 215 4 5 0 216 4 5 0 217 4 5 0 218 4 5 0 219 4 5 0 220 4 5 0 221 4 5 0 222 4 5 0 223 4 5 0 224 4 5 0 225 1 9 0 227 4 5 0 228 4 5 0 229 4 5 0 230 4 5 0 231 4 5 0 232 4 5 0 236 4 5 0 239] 
#[1 0 6 0 11 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 98 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 112 0 6 0 115 0 6 0 116 0 6 0 119 0 6 0 140 0 6 0 142 0 6 0 144 4 9 0 148 4 13 0 149 0 6 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 0 133 0 140 0 125 0 142 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 4 17 0 227 4 21 0 236] 
#[1 4 25 0 77 4 29 0 115] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 33 0 140 0 125 0 142 4 33 0 163 0 137 0 164 4 33 0 165 4 33 0 166 4 33 0 167 4 33 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 37 0 140 0 125 0 142 4 37 0 163 0 137 0 164 4 37 0 165 4 37 0 166 4 37 0 167 4 37 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 41 0 140 0 125 0 142 4 41 0 163 0 137 0 164 4 41 0 165 4 41 0 166 4 41 0 167 4 41 0 168] 
#[1 4 45 0 78 4 49 0 88 4 53 0 110] 
#[0 0 42 0 77 0 104 0 115] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 57 0 140 0 125 0 142 4 57 0 163 0 137 0 164 4 57 0 165 4 57 0 166 4 57 0 167 4 57 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 61 0 140 0 125 0 142 4 61 0 163 0 137 0 164 4 61 0 165 4 61 0 166 4 61 0 167 4 61 0 168] 
#[1 4 65 0 77 4 69 0 104 4 73 0 115] 
#[1 2 57 0 9 1 42 0 11 1 42 0 48 1 42 0 50 1 42 0 59 1 42 0 61 1 42 0 62 1 42 0 64 1 42 0 68 1 42 0 69 1 42 0 70 1 42 0 71 1 42 0 73 1 42 0 76 1 42 0 77 1 42 0 78 1 42 0 79 1 42 0 83 1 42 0 87 1 42 0 92 1 42 0 94 1 42 0 98 1 42 0 103 1 42 0 104 1 42 0 105 1 42 0 106 1 42 0 108 1 42 0 110 1 42 0 112 1 42 0 115 1 42 0 116 1 42 0 119 1 42 0 123 1 42 0 135 1 42 0 140 1 42 0 142 1 42 0 144 2 61 0 234 2 65 0 235 1 42 1 86] 
#[0 1 46 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 77 0 140 0 125 0 142 4 77 0 163 0 137 0 164 4 77 0 165 4 77 0 166 4 77 0 167 4 77 0 168] 
#[1 4 81 0 78 4 85 0 88 4 89 0 110] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 93 0 140 0 125 0 142 4 93 0 163 0 137 0 164 4 93 0 165 4 93 0 166 4 93 0 167 4 93 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 0 133 0 140 0 125 0 142 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 4 97 0 227] 
#[0 1 50 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 21 0 9 1 54 0 11 1 54 0 48 1 54 0 50 1 54 0 59 1 54 0 61 1 54 0 62 1 54 0 64 1 54 0 68 1 54 0 69 1 54 0 70 1 54 0 71 1 54 0 73 1 54 0 76 1 54 0 77 1 54 0 78 1 54 0 79 1 54 0 83 1 54 0 87 1 54 0 92 1 54 0 94 1 54 0 98 1 54 0 103 1 54 0 104 1 54 0 105 1 54 0 106 1 54 0 108 1 54 0 110 1 54 0 112 1 54 0 115 1 54 0 116 1 54 0 119 1 54 0 123 1 54 0 135 1 54 0 140 1 54 0 142 1 54 0 144 4 101 0 237 1 54 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 105 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 105 0 151 4 105 0 152 4 105 0 153 4 105 0 154 4 105 0 155 4 105 0 156 4 105 0 157 4 105 0 158 4 105 0 159 4 105 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 105 0 240 4 105 0 241 4 105 0 242 4 105 0 246 4 105 0 247 4 105 0 248 4 105 0 249 4 105 0 250 4 105 0 251 4 105 1 2 4 105 1 3 4 105 1 4 4 105 1 5 4 105 1 6 4 105 1 7 4 105 1 8 4 105 1 9 4 105 1 10 4 105 1 12 4 105 1 14 4 105 1 16 4 105 1 17 4 105 1 18 4 105 1 19 4 105 1 20 4 105 1 21 4 105 1 22 4 105 1 26 4 105 1 67 4 105 1 68 4 105 1 69 4 105 1 70 4 105 1 71 4 105 1 72 4 105 1 73 4 105 1 80 4 105 1 81 4 105 1 82 4 105 1 83 4 105 1 84 4 105 1 85] 
#[1 1 58 0 70 1 58 0 144 4 109 0 176] 
#[1 1 181 0 11 4 113 0 89] 
#[1 1 181 0 11 4 117 0 89] 
#[1 1 177 0 5 1 62 0 9 1 181 0 11 1 189 0 22 1 62 0 48 1 62 0 50 1 62 0 59 1 62 0 61 1 62 0 62 1 62 0 64 1 62 0 68 1 62 0 69 1 62 0 70 1 62 0 71 1 62 0 73 1 62 0 76 1 62 0 77 1 62 0 78 1 62 0 79 1 62 0 83 1 62 0 87 1 62 0 92 1 62 0 94 1 62 0 98 1 62 0 103 1 62 0 104 1 62 0 105 1 62 0 106 1 62 0 108 1 62 0 110 1 62 0 112 1 62 0 115 1 62 0 116 1 62 0 119 1 62 0 123 1 62 0 135 1 62 0 140 1 62 0 142 1 62 0 144 4 121 0 188 4 121 0 189 1 201 0 190 4 121 0 193 1 62 1 86] 
#[0 1 66 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 4 125 0 226] 
#[0 1 70 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 57 0 9 1 74 0 11 1 74 0 48 1 74 0 50 1 74 0 59 1 74 0 61 1 74 0 62 1 74 0 64 1 74 0 68 1 74 0 69 1 74 0 70 1 74 0 71 1 74 0 73 1 74 0 76 1 74 0 77 1 74 0 78 1 74 0 79 1 74 0 83 1 74 0 87 1 74 0 92 1 74 0 94 1 74 0 98 1 74 0 103 1 74 0 104 1 74 0 105 1 74 0 106 1 74 0 108 1 74 0 110 1 74 0 112 1 74 0 115 1 74 0 116 1 74 0 119 1 74 0 123 1 74 0 135 1 74 0 140 1 74 0 142 1 74 0 144 4 129 0 234 1 74 1 86] 
#[1 0 6 0 11 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 110 0 6 0 116 0 6 0 140 0 6 0 142 0 6 0 144 4 133 0 148 4 137 0 201] 
#[1 4 141 0 6 0 17 0 11 4 145 0 52 4 165 0 54 0 137 0 61 0 137 0 78 0 137 0 87 4 153 0 99 4 157 0 101 0 137 0 110 0 137 0 116 4 161 0 140 0 125 0 142 4 161 0 163 0 137 0 164 4 161 0 165 4 161 0 166 4 161 0 167 4 161 0 168 4 165 0 204 4 169 0 208] 
#[0 1 78 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 4 173 0 148 4 177 0 188 4 177 0 189 1 201 0 190 4 177 0 193] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 181 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 181 0 151 4 181 0 152 4 181 0 153 4 181 0 154 4 181 0 155 4 181 0 156 4 181 0 157 4 181 0 158 4 181 0 159 4 181 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 246 4 181 0 247 4 181 0 248 4 181 0 249 4 181 0 250 4 181 0 251 4 181 1 2 4 181 1 3 4 181 1 4 4 181 1 5 4 181 1 6 4 181 1 7 4 181 1 8 4 181 1 9 4 181 1 10 4 181 1 12 4 181 1 14 4 181 1 16 4 181 1 17 4 181 1 18 4 181 1 19 4 181 1 20 4 181 1 21 4 181 1 22 4 181 1 26 4 181 1 67 4 181 1 68 4 181 1 69 4 181 1 70 4 181 1 71 4 181 1 72 4 181 1 73 4 181 1 80 4 181 1 81 4 181 1 82 4 181 1 83 4 181 1 84 4 181 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 185 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 185 0 151 4 185 0 152 4 185 0 153 4 185 0 154 4 185 0 155 4 185 0 156 4 185 0 157 4 185 0 158 4 185 0 159 4 185 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 185 0 240 4 185 0 241 4 185 0 242 4 185 0 246 4 185 0 247 4 185 0 248 4 185 0 249 4 185 0 250 4 185 0 251 4 185 1 2 4 185 1 3 4 185 1 4 4 185 1 5 4 185 1 6 4 185 1 7 4 185 1 8 4 185 1 9 4 185 1 10 4 185 1 12 4 185 1 14 4 185 1 16 4 185 1 17 4 185 1 18 4 185 1 19 4 185 1 20 4 185 1 21 4 185 1 22 4 185 1 26 4 185 1 67 4 185 1 68 4 185 1 69 4 185 1 70 4 185 1 71 4 185 1 72 4 185 1 73 4 185 1 80 4 185 1 81 4 185 1 82 4 185 1 83 4 185 1 84 4 185 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 189 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 189 0 151 4 189 0 152 4 189 0 153 4 189 0 154 4 189 0 155 4 189 0 156 4 189 0 157 4 189 0 158 4 189 0 159 4 189 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 189 0 240 4 189 0 241 4 189 0 242 4 189 0 246 4 189 0 247 4 189 0 248 4 189 0 249 4 189 0 250 4 189 0 251 4 189 1 2 4 189 1 3 4 189 1 4 4 189 1 5 4 189 1 6 4 189 1 7 4 189 1 8 4 189 1 9 4 189 1 10 4 189 1 12 4 189 1 14 4 189 1 16 4 189 1 17 4 189 1 18 4 189 1 19 4 189 1 20 4 189 1 21 4 189 1 22 4 189 1 26 4 189 1 67 4 189 1 68 4 189 1 69 4 189 1 70 4 189 1 71 4 189 1 72 4 189 1 73 4 189 1 80 4 189 1 81 4 189 1 82 4 189 1 83 4 189 1 84 4 189 1 85] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 193 0 140 0 125 0 142 4 193 0 163 0 137 0 164 4 193 0 165 4 193 0 166 4 193 0 167 4 193 0 168] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 197 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 201 0 250 4 201 0 251 4 201 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 4 197 1 12 4 197 1 14 4 197 1 16 4 197 1 17 4 197 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 4 205 0 140 0 125 0 142 4 205 0 163 0 137 0 164 4 205 0 165 4 205 0 166 4 205 0 167 4 205 0 168] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 209 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 209 0 151 4 209 0 152 4 209 0 153 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 209 0 240 4 209 0 241 4 209 0 242 4 209 0 246 4 209 0 247 4 209 0 248 4 209 0 249 4 209 0 250 4 209 0 251 4 209 1 2 4 209 1 3 4 209 1 4 4 209 1 5 4 209 1 6 4 209 1 7 4 209 1 8 4 209 1 9 4 209 1 10 4 209 1 12 4 209 1 14 4 209 1 16 4 209 1 17 4 209 1 18 4 209 1 19 4 209 1 20 4 209 1 21 4 209 1 22 4 209 1 26 4 209 1 67 4 209 1 68 4 209 1 69 4 209 1 70 4 209 1 71 4 209 1 72 4 209 1 73 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 83 4 209 1 84 4 209 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 197 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 213 0 250 4 213 0 251 4 213 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 4 197 1 12 4 197 1 14 4 197 1 16 4 197 1 17 4 197 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 4 217 0 28 4 221 0 65 4 225 0 77 4 229 0 104 4 233 0 115] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 121 0 135 4 241 0 140 0 125 0 142 4 237 0 153 4 241 0 163 0 137 0 164 4 241 0 165 4 241 0 166 4 241 0 167 4 241 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 121 0 135 4 249 0 140 0 125 0 142 4 245 0 153 4 249 0 163 0 137 0 164 4 249 0 165 4 249 0 166 4 249 0 167 4 249 0 168] 
#[0 1 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 4 253 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 253 0 151 4 253 0 152 4 253 0 153 4 253 0 154 4 253 0 155 4 253 0 156 4 253 0 157 4 253 0 158 4 253 0 159 4 253 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 253 0 240 4 253 0 241 4 253 0 242 4 253 0 246 4 253 0 247 4 253 0 248 4 253 0 249 4 253 0 250 4 253 0 251 4 253 1 2 4 253 1 3 4 253 1 4 4 253 1 5 4 253 1 6 4 253 1 7 4 253 1 8 4 253 1 9 4 253 1 10 4 253 1 12 4 253 1 14 4 253 1 16 4 253 1 17 4 253 1 18 4 253 1 19 4 253 1 20 4 253 1 21 4 253 1 22 4 253 1 26 4 253 1 67 4 253 1 68 4 253 1 69 4 253 1 70 4 253 1 71 4 253 1 72 4 253 1 73 4 253 1 80 4 253 1 81 4 253 1 82 4 253 1 83 4 253 1 84 4 253 1 85] 
#[1 0 38 0 1 0 38 0 3 2 85 0 5 0 38 0 6 0 38 0 7 2 89 0 8 0 38 0 9 2 93 0 10 0 17 0 11 0 38 0 12 0 38 0 13 0 38 0 14 0 38 0 15 0 38 0 16 0 38 0 17 0 38 0 18 0 38 0 19 0 38 0 20 0 38 0 21 0 38 0 22 0 7 0 23 0 11 0 26 0 38 0 27 0 38 0 28 0 38 0 33 0 15 0 34 0 19 0 35 0 23 0 37 0 38 0 44 0 38 0 45 0 38 0 47 0 38 0 48 0 38 0 50 0 38 0 52 0 38 0 54 0 38 0 59 0 27 0 61 0 38 0 62 0 38 0 64 0 38 0 65 0 38 0 68 0 38 0 69 0 38 0 70 0 38 0 71 0 38 0 72 0 38 0 73 0 31 0 74 0 38 0 76 0 38 0 77 0 35 0 78 0 38 0 79 0 39 0 80 0 43 0 81 0 38 0 82 0 38 0 83 0 38 0 86 0 47 0 87 0 51 0 88 0 38 0 90 0 38 0 92 0 38 0 94 0 55 0 95 0 38 0 97 0 38 0 98 0 38 0 100 0 38 0 101 0 38 0 103 0 38 0 104 0 38 0 105 0 38 0 106 0 38 0 107 0 38 0 108 0 38 0 109 0 59 0 110 0 38 0 112 0 38 0 113 0 38 0 115 0 63 0 116 0 38 0 117 0 38 0 118 0 38 0 119 0 38 0 123 0 38 0 124 0 38 0 125 0 38 0 126 0 67 0 127 0 71 0 133 0 75 0 134 0 79 0 135 0 83 0 136 0 87 0 137 0 91 0 138 0 95 0 139 0 99 0 140 0 103 0 141 0 107 0 142 0 38 0 144 5 1 0 151 5 1 0 152 5 1 0 153 5 1 0 154 5 1 0 155 5 1 0 156 5 1 0 157 5 1 0 158 5 1 0 159 5 1 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 5 1 0 240 5 1 0 241 5 1 0 242 5 1 0 246 5 1 0 247 5 1 0 248 5 1 0 249 5 1 0 250 5 1 0 251 5 1 1 2 5 1 1 3 5 1 1 4 5 1 1 5 5 1 1 6 5 1 1 7 5 1 1 8 5 1 1 9 5 1 1 10 5 1 1 12 5 1 1 14 5 1 1 16 5 1 1 17 5 1 1 18 5 1 1 19 5 1 1 20 5 1 1 21 5 1 1 22 5 1 1 26 5 1 1 67 5 1 1 68 5 1 1 69 5 1 1 70 5 1 1 71 5 1 1 72 5 1 1 73 5 1 1 80 5 1 1 81 5 1 1 82 5 1 1 83 5 1 1 84 5 1 1 85 0 38 1 86] 
#[1 5 5 0 132 5 9 0 161] 
#[0 1 86 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 90 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 94 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 98 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 46 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 102 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 110 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 134 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 138 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 142 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 146 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 0 111 0 1 0 111 0 3 0 111 0 5 0 111 0 6 0 111 0 7 0 111 0 8 0 111 0 9 0 111 0 10 0 115 0 11 0 111 0 12 0 111 0 13 0 111 0 14 0 111 0 15 0 111 0 16 0 111 0 17 0 111 0 18 0 111 0 19 0 111 0 20 0 111 0 21 0 111 0 23 0 111 0 26 0 111 0 27 0 111 0 28 0 111 0 33 0 111 0 34 0 111 0 35 0 111 0 37 0 111 0 44 0 111 0 45 0 111 0 47 0 111 0 48 0 111 0 50 1 150 0 52 1 150 0 54 0 111 0 59 0 111 0 61 0 111 0 62 0 111 0 64 0 111 0 65 0 111 0 68 0 111 0 69 0 111 0 70 0 111 0 71 0 111 0 72 0 111 0 73 0 111 0 74 0 111 0 76 0 111 0 77 0 111 0 78 0 111 0 79 0 111 0 80 0 111 0 81 0 111 0 82 0 111 0 83 0 111 0 86 0 111 0 87 0 111 0 88 0 111 0 90 0 111 0 92 0 111 0 94 0 111 0 95 0 111 0 97 0 111 0 98 0 111 0 100 1 150 0 101 0 111 0 103 0 111 0 104 0 111 0 105 0 111 0 106 0 111 0 107 0 111 0 108 0 111 0 109 0 111 0 110 0 111 0 112 0 111 0 113 0 111 0 115 0 111 0 116 0 111 0 117 0 111 0 118 0 111 0 119 0 111 0 123 0 111 0 124 0 111 0 125 0 111 0 126 0 111 0 127 0 111 0 133 0 111 0 134 0 111 0 135 0 111 0 136 0 111 0 137 0 111 0 138 0 111 0 139 0 111 0 140 0 111 0 141 0 111 0 142 0 111 0 144 5 13 0 253 5 17 0 255 0 111 1 86] 
#[0 1 162 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 1 166 0 48 1 166 0 50 1 166 0 59 1 166 0 61 1 166 0 62 1 166 0 64 1 166 0 68 1 166 0 69 1 166 0 70 1 166 0 71 5 97 0 72 1 166 0 73 1 166 0 76 1 166 0 77 1 166 0 78 1 166 0 79 1 166 0 83 5 101 0 86 1 166 0 87 5 105 0 90 1 166 0 92 1 166 0 94 1 166 0 98 5 109 0 100 1 166 0 103 1 166 0 104 1 166 0 105 1 166 0 106 1 166 0 108 1 166 0 110 1 166 0 112 1 166 0 115 1 166 0 116 5 113 0 118 1 166 0 119 1 166 0 123 5 117 0 126 1 166 0 135 1 166 0 140 1 166 0 142 1 166 0 144 5 121 1 11 5 125 1 13 5 129 1 15 1 166 1 86] 
#[0 1 170 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 174 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 178 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 182 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 186 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 190 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 194 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 198 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 214 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 218 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 226 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 230 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 234 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 242 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 246 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 250 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 1 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 50 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 58 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 70 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 2 74 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 2 78 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 2 82 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 5 133 0 5 0 6 0 8 0 6 0 10 1 181 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 5 137 0 148 5 141 0 188 5 141 0 189 1 201 0 190 5 141 0 193 5 145 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 5 149 0 148 5 153 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 5 157 0 148 5 161 0 205] 
#[1 2 57 0 9 2 86 0 11 2 86 0 48 2 86 0 50 2 86 0 59 2 86 0 61 2 86 0 62 2 86 0 64 2 86 0 68 2 86 0 69 2 86 0 70 2 86 0 71 2 86 0 73 2 86 0 76 2 86 0 77 2 86 0 78 2 86 0 79 2 86 0 83 2 86 0 87 2 86 0 92 2 86 0 94 2 86 0 98 2 86 0 103 2 86 0 104 2 86 0 105 2 86 0 106 2 86 0 108 2 86 0 110 2 86 0 112 2 86 0 115 2 86 0 116 2 86 0 119 2 86 0 123 2 86 0 135 2 86 0 140 2 86 0 142 2 86 0 144 2 61 0 234 2 65 0 235 2 86 1 86] 
#[0 2 90 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 5 225 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 6 129 0 148] 
#[1 0 6 0 11 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 110 0 6 0 116 0 6 0 140 0 6 0 142 0 6 0 144 6 133 0 148 6 137 0 196] 
#[0 2 94 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144] 
#[1 6 141 0 6 6 145 0 9 6 149 0 191] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 1 26 0 6 5 33 0 7 5 37 0 8 1 26 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 6 153 0 192 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 2 98 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 2 102 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 2 102 0 48 2 102 0 50 2 102 0 59 2 102 0 61 2 102 0 62 2 102 0 64 2 102 0 68 2 102 0 69 2 102 0 70 2 102 0 71 5 97 0 72 2 102 0 73 2 102 0 76 2 102 0 77 2 102 0 78 2 102 0 79 2 102 0 83 5 101 0 86 2 102 0 87 5 105 0 90 2 102 0 92 2 102 0 94 2 102 0 98 5 109 0 100 2 102 0 103 2 102 0 104 2 102 0 105 2 102 0 106 2 102 0 108 2 102 0 110 2 102 0 112 2 102 0 115 2 102 0 116 5 113 0 118 2 102 0 119 2 102 0 123 5 117 0 126 2 102 0 135 2 102 0 140 2 102 0 142 2 102 0 144 5 121 1 11 5 125 1 13 5 129 1 15 2 102 1 86] 
#[1 0 17 0 11 6 157 0 51 6 157 0 53 6 157 0 57 3 205 0 61 6 157 0 66 0 137 0 78 6 157 0 85 0 137 0 87 6 157 0 91 6 157 0 96 0 137 0 110 6 157 0 111 6 157 0 114 0 137 0 116 3 233 0 121 3 237 0 140 0 125 0 142 3 237 0 163 0 137 0 164 3 237 0 165 3 237 0 166 3 237 0 167 3 237 0 168 6 157 0 184 6 157 0 186 6 157 0 187] 
#[0 2 106 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 110 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 114 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 0 119 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 122 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 126 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 130 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 134 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 138 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 142 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 146 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 2 150 0 5 2 150 0 6 2 150 0 7 2 150 0 8 2 150 0 9 2 150 0 10 1 181 0 11 2 150 0 19 2 150 0 23 2 150 0 26 2 150 0 27 2 150 0 28 2 150 0 34 2 150 0 35 2 150 0 37 2 150 0 48 2 150 0 50 2 150 0 59 2 150 0 61 2 150 0 62 2 150 0 64 2 150 0 65 2 150 0 68 2 150 0 69 2 150 0 70 2 150 0 71 2 150 0 73 2 150 0 74 2 150 0 76 2 150 0 77 2 150 0 78 2 150 0 79 2 150 0 80 2 150 0 81 2 150 0 82 2 150 0 83 2 150 0 87 2 150 0 88 2 150 0 92 2 150 0 94 2 150 0 95 2 150 0 97 2 150 0 98 2 150 0 103 2 150 0 104 2 150 0 105 2 150 0 106 2 150 0 107 2 150 0 108 2 150 0 109 2 150 0 110 2 150 0 112 2 150 0 115 2 150 0 116 2 150 0 119 2 150 0 123 2 150 0 124 2 150 0 125 2 150 0 127 2 150 0 133 2 150 0 134 2 150 0 135 2 150 0 136 2 150 0 137 2 150 0 138 2 150 0 139 2 150 0 140 2 150 0 141 2 150 0 142 2 150 0 144 2 150 1 86] 
#[0 2 154 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 158 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 177 0 5 2 162 0 6 6 161 0 7 2 162 0 8 2 162 0 9 2 162 0 10 2 162 0 11 2 162 0 19 2 162 0 23 2 162 0 26 2 162 0 27 2 162 0 28 2 162 0 34 2 162 0 35 2 162 0 37 2 162 0 48 2 162 0 50 2 162 0 59 2 162 0 61 2 162 0 62 2 162 0 64 2 162 0 65 2 162 0 68 2 162 0 69 2 162 0 70 2 162 0 71 2 162 0 73 2 162 0 74 2 162 0 76 2 162 0 77 2 162 0 78 2 162 0 79 2 162 0 80 2 162 0 81 2 162 0 82 2 162 0 83 2 162 0 87 2 162 0 88 2 162 0 92 2 162 0 94 2 162 0 95 2 162 0 97 2 162 0 98 2 162 0 103 2 162 0 104 2 162 0 105 2 162 0 106 2 162 0 107 2 162 0 108 2 162 0 109 2 162 0 110 2 162 0 112 2 162 0 115 2 162 0 116 2 162 0 119 2 162 0 123 2 162 0 124 2 162 0 125 2 162 0 127 2 162 0 133 2 162 0 134 2 162 0 135 2 162 0 136 2 162 0 137 2 162 0 138 2 162 0 139 2 162 0 140 2 162 0 141 2 162 0 142 2 162 0 144 6 165 0 190 2 162 1 86] 
#[1 0 17 0 11 6 169 0 34 6 173 0 51 6 173 0 53 6 173 0 57 3 205 0 61 6 173 0 66 0 137 0 78 6 173 0 85 0 137 0 87 6 173 0 91 6 173 0 96 0 137 0 110 6 173 0 111 6 173 0 114 0 137 0 116 3 233 0 121 3 237 0 140 0 125 0 142 3 237 0 163 0 137 0 164 3 237 0 165 3 237 0 166 3 237 0 167 3 237 0 168 6 173 0 184 6 173 0 186 6 173 0 187] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 6 177 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 6 177 0 151 6 177 0 152 6 177 0 153 6 177 0 154 6 177 0 155 6 177 0 156 6 177 0 157 6 177 0 158 6 177 0 159 6 177 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 6 177 0 240 6 177 0 241 6 177 0 242 6 177 0 246 6 177 0 247 6 177 0 248 6 177 0 249 6 177 0 250 6 177 0 251 6 177 1 2 6 177 1 3 6 177 1 4 6 177 1 5 6 177 1 6 6 177 1 7 6 177 1 8 6 177 1 9 6 177 1 10 6 177 1 12 6 177 1 14 6 177 1 16 6 177 1 17 6 177 1 18 6 177 1 19 6 177 1 20 6 177 1 21 6 177 1 22 6 177 1 26 6 177 1 67 6 177 1 68 6 177 1 69 6 177 1 70 6 177 1 71 6 177 1 72 6 177 1 73 6 177 1 80 6 177 1 81 6 177 1 82 6 177 1 83 6 177 1 84 6 177 1 85] 
#[1 0 102 0 11 0 102 0 48 0 102 0 50 0 102 0 59 0 102 0 61 0 102 0 62 0 102 0 64 0 102 0 71 0 102 0 73 0 102 0 76 0 102 0 77 0 102 0 78 0 102 0 79 0 102 0 83 0 102 0 87 0 102 0 98 0 102 0 103 0 102 0 104 0 102 0 105 0 102 0 106 0 102 0 110 0 102 0 112 0 102 0 115 0 102 0 116 0 102 0 119 0 102 0 140 0 102 0 142 0 102 0 144 6 181 0 150 0 102 1 86] 
#[1 0 17 0 11 0 21 0 48 0 25 0 50 0 29 0 59 0 137 0 61 0 37 0 62 0 41 0 64 0 45 0 71 0 49 0 73 0 185 0 76 0 57 0 77 0 137 0 78 0 185 0 79 0 69 0 83 0 137 0 87 0 77 0 98 0 185 0 103 0 85 0 104 0 185 0 105 0 93 0 106 0 137 0 110 0 101 0 112 0 105 0 115 0 137 0 116 0 113 0 119 0 133 0 140 0 125 0 142 0 129 0 144 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 6 185 0 170 6 185 0 171 6 185 0 173 6 185 0 174 6 185 0 178 6 185 0 179 0 185 0 185 6 185 0 194 6 185 0 195 6 185 0 199 6 185 0 200 6 185 0 211 6 185 0 212 6 185 0 213 0 217 0 214 6 185 0 215 6 185 0 216 6 185 0 217 6 185 0 218 6 185 0 219 6 185 0 220 6 185 0 221 6 185 0 222 6 185 0 223 6 185 0 224 6 185 0 225 1 9 0 227 6 185 0 228 6 185 0 229 6 185 0 230 6 185 0 231 6 185 0 232 6 185 0 236 6 185 0 239 2 166 1 86] 
#[0 2 170 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 21 0 9 2 174 0 11 2 174 0 48 2 174 0 50 2 174 0 59 2 174 0 61 2 174 0 62 2 174 0 64 2 174 0 68 2 174 0 69 2 174 0 70 2 174 0 71 2 174 0 73 2 174 0 76 2 174 0 77 2 174 0 78 2 174 0 79 2 174 0 83 2 174 0 87 2 174 0 92 2 174 0 94 2 174 0 98 2 174 0 103 2 174 0 104 2 174 0 105 2 174 0 106 2 174 0 108 2 174 0 110 2 174 0 112 2 174 0 115 2 174 0 116 2 174 0 119 2 174 0 123 2 174 0 135 2 174 0 140 2 174 0 142 2 174 0 144 2 25 0 237 2 29 0 238 2 174 1 86] 
#[0 2 178 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 189 0 140 0 125 0 142 6 189 0 163 0 137 0 164 6 189 0 165 6 189 0 166 6 189 0 167 6 189 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 193 0 140 0 125 0 142 6 193 0 163 0 137 0 164 6 193 0 165 6 193 0 166 6 193 0 167 6 193 0 168] 
#[1 1 181 0 11 0 234 0 61 0 234 0 70 0 234 0 78 0 234 0 87 0 234 0 110 0 234 0 116 0 234 0 140 0 234 0 142 0 234 0 144 6 197 0 202] 
#[1 2 73 0 5 1 181 0 11 6 201 0 205] 
#[1 2 73 0 5 1 181 0 11 6 205 0 205] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 209 0 140 0 125 0 142 6 209 0 163 0 137 0 164 6 209 0 165 6 209 0 166 6 209 0 167 6 209 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 213 0 140 0 125 0 142 6 213 0 163 0 137 0 164 6 213 0 165 6 213 0 166 6 213 0 167 6 213 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 217 0 140 0 125 0 142 6 217 0 163 0 137 0 164 6 217 0 165 6 217 0 166 6 217 0 167 6 217 0 168] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 6 221 0 148 6 225 0 205] 
#[1 1 181 0 11 1 14 0 61 1 14 0 70 1 14 0 78 1 14 0 87 1 14 0 110 1 14 0 116 1 14 0 140 1 14 0 142 1 14 0 144 6 229 0 197] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 233 0 140 0 125 0 142 6 233 0 163 0 137 0 164 6 233 0 165 6 233 0 166 6 233 0 167 6 233 0 168] 
#[1 6 237 0 78 6 241 0 88 6 245 0 110] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 6 249 0 140 0 125 0 142 6 249 0 163 0 137 0 164 6 249 0 165 6 249 0 166 6 249 0 167 6 249 0 168] 
#[1 2 73 0 5 1 181 0 11 6 253 0 205] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 1 0 140 0 125 0 142 7 1 0 163 0 137 0 164 7 1 0 165 7 1 0 166 7 1 0 167 7 1 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 5 0 140 0 125 0 142 7 5 0 163 0 137 0 164 7 5 0 165 7 5 0 166 7 5 0 167 7 5 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 9 0 140 0 125 0 142 7 9 0 163 0 137 0 164 7 9 0 165 7 9 0 166 7 9 0 167 7 9 0 168] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 13 0 148 7 17 0 205] 
#[0 2 182 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 2 186 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 2 190 0 48 2 190 0 50 2 190 0 59 2 190 0 61 2 190 0 62 2 190 0 64 2 190 0 68 2 190 0 69 2 190 0 70 2 190 0 71 5 97 0 72 2 190 0 73 2 190 0 76 2 190 0 77 2 190 0 78 2 190 0 79 2 190 0 83 5 101 0 86 2 190 0 87 5 105 0 90 2 190 0 92 2 190 0 94 2 190 0 98 5 109 0 100 2 190 0 103 2 190 0 104 2 190 0 105 2 190 0 106 2 190 0 108 2 190 0 110 2 190 0 112 2 190 0 115 2 190 0 116 5 113 0 118 2 190 0 119 2 190 0 123 5 117 0 126 2 190 0 135 2 190 0 140 2 190 0 142 2 190 0 144 5 121 1 11 5 125 1 13 5 129 1 15 2 190 1 86] 
#[1 0 6 0 70 0 123 0 144 7 25 0 148 7 29 0 175 7 33 0 177] 
#[1 2 157 0 138 7 37 0 158] 
#[1 2 157 0 138 7 41 0 158] 
#[0 2 194 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 2 198 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[0 2 202 0 9 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 17 0 11 0 137 0 61 7 45 0 70 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 49 0 140 0 125 0 142 0 129 0 144 7 49 0 163 0 137 0 164 7 49 0 165 7 49 0 166 7 49 0 167 7 49 0 168 7 53 0 203] 
#[0 2 206 0 11 0 61 0 70 0 78 0 87 0 110 0 116 0 140 0 142 0 144] 
#[0 2 210 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 2 214 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 101 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 2 218 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 101 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 0 17 0 11 4 145 0 52 7 65 0 54 0 137 0 61 0 137 0 78 0 137 0 87 7 57 0 101 0 137 0 110 0 137 0 116 7 61 0 140 0 125 0 142 7 61 0 163 0 137 0 164 7 61 0 165 7 61 0 166 7 61 0 167 7 61 0 168 7 65 0 204] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 69 0 140 0 125 0 142 7 69 0 163 0 137 0 164 7 69 0 165 7 69 0 166 7 69 0 167 7 69 0 168] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 7 77 0 188 7 77 0 189 1 201 0 190 7 77 0 193 7 81 0 209 7 85 0 210] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 7 89 0 101 0 137 0 110 0 137 0 116 7 93 0 140 0 125 0 142 7 93 0 163 0 137 0 164 7 93 0 165 7 93 0 166 7 93 0 167 7 93 0 168] 
#[1 2 226 0 6 2 226 0 9 7 97 0 207] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 7 101 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 105 0 148] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 7 109 0 6 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 5 21 0 1 0 127 0 3 5 29 0 5 2 230 0 6 5 33 0 7 2 230 0 8 2 230 0 9 2 230 0 10 5 45 0 11 5 49 0 12 2 230 0 13 0 131 0 14 2 230 0 15 2 230 0 16 2 230 0 17 2 230 0 18 2 230 0 19 2 230 0 20 2 230 0 21 2 230 0 23 2 230 0 26 2 230 0 27 2 230 0 28 5 81 0 33 2 230 0 34 2 230 0 35 2 230 0 37 0 135 0 44 5 89 0 45 2 230 0 47 2 230 0 48 2 230 0 50 2 230 0 59 2 230 0 61 2 230 0 62 2 230 0 64 2 230 0 65 2 230 0 68 2 230 0 69 2 230 0 70 2 230 0 71 2 230 0 72 2 230 0 73 2 230 0 74 2 230 0 76 2 230 0 77 2 230 0 78 2 230 0 79 2 230 0 80 2 230 0 81 2 230 0 82 2 230 0 83 2 230 0 86 2 230 0 87 2 230 0 88 2 230 0 90 2 230 0 92 2 230 0 94 2 230 0 95 2 230 0 97 2 230 0 98 2 230 0 100 2 230 0 103 2 230 0 104 2 230 0 105 2 230 0 106 2 230 0 107 2 230 0 108 2 230 0 109 2 230 0 110 2 230 0 112 2 230 0 113 2 230 0 115 2 230 0 116 2 230 0 117 0 139 0 118 2 230 0 119 2 230 0 123 2 230 0 124 2 230 0 125 2 230 0 126 2 230 0 127 2 230 0 133 2 230 0 134 2 230 0 135 2 230 0 136 2 230 0 137 2 230 0 138 2 230 0 139 2 230 0 140 2 230 0 141 2 230 0 142 2 230 0 144 5 121 1 11 5 125 1 13 5 129 1 15 2 230 1 86] 
#[1 5 21 0 1 0 143 0 3 5 29 0 5 2 234 0 6 5 33 0 7 2 234 0 8 2 234 0 9 2 234 0 10 5 45 0 11 5 49 0 12 2 234 0 13 0 147 0 14 2 234 0 15 2 234 0 16 2 234 0 17 2 234 0 18 2 234 0 19 2 234 0 20 2 234 0 21 2 234 0 23 2 234 0 26 2 234 0 27 2 234 0 28 5 81 0 33 2 234 0 34 2 234 0 35 2 234 0 37 0 151 0 44 5 89 0 45 2 234 0 47 2 234 0 48 2 234 0 50 2 234 0 59 2 234 0 61 2 234 0 62 2 234 0 64 2 234 0 65 2 234 0 68 2 234 0 69 2 234 0 70 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 90 2 234 0 92 2 234 0 94 2 234 0 95 2 234 0 97 2 234 0 98 2 234 0 100 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 112 2 234 0 113 2 234 0 115 2 234 0 116 2 234 0 117 0 155 0 118 2 234 0 119 2 234 0 123 2 234 0 124 2 234 0 125 2 234 0 126 2 234 0 127 2 234 0 133 2 234 0 134 2 234 0 135 2 234 0 136 2 234 0 137 2 234 0 138 2 234 0 139 2 234 0 140 2 234 0 141 2 234 0 142 2 234 0 144 5 121 1 11 5 125 1 13 5 129 1 15 2 234 1 86] 
#[1 2 238 0 1 2 238 0 3 2 238 0 5 2 238 0 6 2 238 0 7 2 238 0 8 2 238 0 9 2 238 0 10 1 181 0 11 2 238 0 12 2 238 0 13 2 238 0 14 2 238 0 15 2 238 0 16 2 238 0 17 2 238 0 18 2 238 0 19 2 238 0 20 2 238 0 21 2 238 0 23 2 238 0 26 2 238 0 27 2 238 0 28 2 238 0 33 2 238 0 34 2 238 0 35 2 238 0 37 2 238 0 44 2 238 0 45 2 238 0 47 2 238 0 48 2 238 0 50 2 238 0 59 2 238 0 61 2 238 0 62 2 238 0 64 2 238 0 65 2 238 0 68 2 238 0 69 2 238 0 70 2 238 0 71 2 238 0 72 2 238 0 73 2 238 0 74 2 238 0 76 2 238 0 77 2 238 0 78 2 238 0 79 2 238 0 80 2 238 0 81 2 238 0 82 2 238 0 83 2 238 0 86 2 238 0 87 2 238 0 88 2 238 0 90 2 238 0 92 2 238 0 94 2 238 0 95 2 238 0 97 2 238 0 98 2 238 0 100 2 238 0 103 2 238 0 104 2 238 0 105 2 238 0 106 2 238 0 107 2 238 0 108 2 238 0 109 2 238 0 110 2 238 0 112 2 238 0 113 2 238 0 115 2 238 0 116 2 238 0 117 2 238 0 118 2 238 0 119 2 238 0 123 2 238 0 124 2 238 0 125 2 238 0 126 2 238 0 127 2 238 0 133 2 238 0 134 2 238 0 135 2 238 0 136 2 238 0 137 2 238 0 138 2 238 0 139 2 238 0 140 2 238 0 141 2 238 0 142 2 238 0 144 2 238 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 0 159 0 1 0 159 0 3 0 159 0 5 2 242 0 6 0 159 0 7 0 159 0 8 2 242 0 9 0 159 0 10 0 159 0 11 0 159 0 12 2 242 0 13 0 159 0 14 2 242 0 15 0 159 0 16 0 159 0 17 0 159 0 18 0 159 0 19 0 159 0 20 0 159 0 21 2 242 0 23 2 242 0 26 2 242 0 27 2 242 0 28 0 159 0 33 2 242 0 34 2 242 0 35 2 242 0 37 0 159 0 44 0 159 0 45 0 159 0 47 2 242 0 48 2 242 0 50 2 242 0 59 2 242 0 61 2 242 0 62 2 242 0 64 2 242 0 65 2 242 0 68 2 242 0 69 2 242 0 70 2 242 0 71 0 159 0 72 2 242 0 73 2 242 0 74 2 242 0 76 2 242 0 77 2 242 0 78 2 242 0 79 2 242 0 80 2 242 0 81 2 242 0 82 2 242 0 83 0 159 0 86 2 242 0 87 2 242 0 88 0 159 0 90 2 242 0 92 2 242 0 94 2 242 0 95 2 242 0 97 2 242 0 98 0 159 0 100 2 242 0 103 2 242 0 104 2 242 0 105 2 242 0 106 2 242 0 107 2 242 0 108 2 242 0 109 2 242 0 110 2 242 0 112 2 242 0 113 2 242 0 115 2 242 0 116 2 242 0 117 0 159 0 118 2 242 0 119 2 242 0 123 2 242 0 124 2 242 0 125 0 159 0 126 2 242 0 127 2 242 0 133 2 242 0 134 2 242 0 135 2 242 0 136 2 242 0 137 2 242 0 138 2 242 0 139 2 242 0 140 2 242 0 141 2 242 0 142 2 242 0 144 2 242 1 86] 
#[1 2 246 0 1 2 246 0 3 2 246 0 5 2 246 0 6 2 246 0 7 2 246 0 8 2 246 0 9 2 246 0 10 1 181 0 11 2 246 0 12 2 246 0 13 2 246 0 14 2 246 0 15 2 246 0 16 2 246 0 17 2 246 0 18 2 246 0 19 2 246 0 20 2 246 0 21 2 246 0 23 2 246 0 26 2 246 0 27 2 246 0 28 2 246 0 33 2 246 0 34 2 246 0 35 2 246 0 37 2 246 0 44 2 246 0 45 2 246 0 47 2 246 0 48 2 246 0 50 2 246 0 59 2 246 0 61 2 246 0 62 2 246 0 64 2 246 0 65 2 246 0 68 2 246 0 69 2 246 0 70 2 246 0 71 2 246 0 72 2 246 0 73 2 246 0 74 2 246 0 76 2 246 0 77 2 246 0 78 2 246 0 79 2 246 0 80 2 246 0 81 2 246 0 82 2 246 0 83 2 246 0 86 2 246 0 87 2 246 0 88 2 246 0 90 2 246 0 92 2 246 0 94 2 246 0 95 2 246 0 97 2 246 0 98 2 246 0 100 2 246 0 103 2 246 0 104 2 246 0 105 2 246 0 106 2 246 0 107 2 246 0 108 2 246 0 109 2 246 0 110 2 246 0 112 2 246 0 113 2 246 0 115 2 246 0 116 2 246 0 117 2 246 0 118 2 246 0 119 2 246 0 123 2 246 0 124 2 246 0 125 2 246 0 126 2 246 0 127 2 246 0 133 2 246 0 134 2 246 0 135 2 246 0 136 2 246 0 137 2 246 0 138 2 246 0 139 2 246 0 140 2 246 0 141 2 246 0 142 2 246 0 144 2 246 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 7 113 0 28 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 0 163 0 1 0 163 0 3 0 163 0 5 2 250 0 6 0 163 0 7 0 163 0 8 2 250 0 9 0 163 0 10 0 163 0 11 0 163 0 12 2 250 0 13 0 163 0 14 2 250 0 15 0 163 0 16 0 163 0 17 0 163 0 18 0 163 0 19 0 163 0 20 0 163 0 21 2 250 0 23 2 250 0 26 2 250 0 27 2 250 0 28 0 163 0 33 2 250 0 34 2 250 0 35 2 250 0 37 0 163 0 44 0 163 0 45 0 163 0 47 2 250 0 48 2 250 0 50 2 250 0 59 2 250 0 61 2 250 0 62 2 250 0 64 2 250 0 65 2 250 0 68 2 250 0 69 2 250 0 70 2 250 0 71 0 163 0 72 2 250 0 73 2 250 0 74 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 0 163 0 86 2 250 0 87 2 250 0 88 0 163 0 90 2 250 0 92 2 250 0 94 2 250 0 95 2 250 0 97 2 250 0 98 0 163 0 100 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 112 2 250 0 113 2 250 0 115 2 250 0 116 2 250 0 117 0 163 0 118 2 250 0 119 2 250 0 123 2 250 0 124 2 250 0 125 0 163 0 126 2 250 0 127 2 250 0 133 2 250 0 134 2 250 0 135 2 250 0 136 2 250 0 137 2 250 0 138 2 250 0 139 2 250 0 140 2 250 0 141 2 250 0 142 2 250 0 144 2 250 1 86] 
#[0 2 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 3 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 3 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 3 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 3 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 3 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 3 22 0 1 3 22 0 3 3 22 0 5 3 22 0 6 3 22 0 7 3 22 0 8 3 22 0 9 3 22 0 10 1 181 0 11 3 22 0 12 3 22 0 13 3 22 0 14 3 22 0 15 3 22 0 16 3 22 0 17 3 22 0 18 3 22 0 19 3 22 0 20 3 22 0 21 3 22 0 23 3 22 0 26 3 22 0 27 3 22 0 28 3 22 0 33 3 22 0 34 3 22 0 35 3 22 0 37 3 22 0 44 3 22 0 45 3 22 0 47 3 22 0 48 3 22 0 50 3 22 0 59 3 22 0 61 3 22 0 62 3 22 0 64 3 22 0 65 3 22 0 68 3 22 0 69 3 22 0 70 3 22 0 71 3 22 0 72 3 22 0 73 3 22 0 74 3 22 0 76 3 22 0 77 3 22 0 78 3 22 0 79 3 22 0 80 3 22 0 81 3 22 0 82 3 22 0 83 3 22 0 86 3 22 0 87 3 22 0 88 3 22 0 90 3 22 0 92 3 22 0 94 3 22 0 95 3 22 0 97 3 22 0 98 3 22 0 100 3 22 0 103 3 22 0 104 3 22 0 105 3 22 0 106 3 22 0 107 3 22 0 108 3 22 0 109 3 22 0 110 3 22 0 112 3 22 0 113 3 22 0 115 3 22 0 116 3 22 0 117 3 22 0 118 3 22 0 119 3 22 0 123 3 22 0 124 3 22 0 125 3 22 0 126 3 22 0 127 3 22 0 133 3 22 0 134 3 22 0 135 3 22 0 136 3 22 0 137 3 22 0 138 3 22 0 139 3 22 0 140 3 22 0 141 3 22 0 142 3 22 0 144 3 22 1 86] 
#[0 3 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 3 30 0 1 3 30 0 3 3 30 0 5 3 30 0 6 3 30 0 7 3 30 0 8 3 30 0 9 3 30 0 10 1 181 0 11 3 30 0 12 3 30 0 13 3 30 0 14 3 30 0 15 3 30 0 16 3 30 0 17 3 30 0 18 3 30 0 19 3 30 0 20 3 30 0 21 3 30 0 23 3 30 0 26 3 30 0 27 3 30 0 28 3 30 0 33 3 30 0 34 3 30 0 35 3 30 0 37 3 30 0 44 3 30 0 45 3 30 0 47 3 30 0 48 3 30 0 50 3 30 0 59 3 30 0 61 3 30 0 62 3 30 0 64 3 30 0 65 3 30 0 68 3 30 0 69 3 30 0 70 3 30 0 71 3 30 0 72 3 30 0 73 3 30 0 74 3 30 0 76 3 30 0 77 3 30 0 78 3 30 0 79 3 30 0 80 3 30 0 81 3 30 0 82 3 30 0 83 3 30 0 86 3 30 0 87 3 30 0 88 3 30 0 90 3 30 0 92 3 30 0 94 3 30 0 95 3 30 0 97 3 30 0 98 3 30 0 100 3 30 0 103 3 30 0 104 3 30 0 105 3 30 0 106 3 30 0 107 3 30 0 108 3 30 0 109 3 30 0 110 3 30 0 112 3 30 0 113 3 30 0 115 3 30 0 116 3 30 0 117 3 30 0 118 3 30 0 119 3 30 0 123 3 30 0 124 3 30 0 125 3 30 0 126 3 30 0 127 3 30 0 133 3 30 0 134 3 30 0 135 3 30 0 136 3 30 0 137 3 30 0 138 3 30 0 139 3 30 0 140 3 30 0 141 3 30 0 142 3 30 0 144 3 30 1 86] 
#[1 5 21 0 1 0 167 0 3 5 29 0 5 3 34 0 6 5 33 0 7 5 37 0 8 3 34 0 9 5 41 0 10 5 45 0 11 5 49 0 12 3 34 0 13 0 171 0 14 3 34 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 3 34 0 23 3 34 0 26 3 34 0 27 3 34 0 28 5 81 0 33 3 34 0 34 3 34 0 35 3 34 0 37 0 175 0 44 5 89 0 45 5 93 0 47 3 34 0 48 3 34 0 50 3 34 0 59 3 34 0 61 3 34 0 62 3 34 0 64 3 34 0 65 3 34 0 68 3 34 0 69 3 34 0 70 3 34 0 71 5 97 0 72 3 34 0 73 3 34 0 74 3 34 0 76 3 34 0 77 3 34 0 78 3 34 0 79 3 34 0 80 3 34 0 81 3 34 0 82 3 34 0 83 5 101 0 86 3 34 0 87 3 34 0 88 5 105 0 90 3 34 0 92 3 34 0 94 3 34 0 95 3 34 0 97 3 34 0 98 5 109 0 100 3 34 0 103 3 34 0 104 3 34 0 105 3 34 0 106 3 34 0 107 3 34 0 108 3 34 0 109 3 34 0 110 3 34 0 112 3 34 0 113 3 34 0 115 3 34 0 116 3 34 0 117 0 179 0 118 3 34 0 119 3 34 0 123 3 34 0 124 3 34 0 125 5 117 0 126 3 34 0 127 3 34 0 133 3 34 0 134 3 34 0 135 3 34 0 136 3 34 0 137 3 34 0 138 3 34 0 139 3 34 0 140 3 34 0 141 3 34 0 142 3 34 0 144 5 121 1 11 5 125 1 13 5 129 1 15 3 34 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 7 117 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 3 38 0 10 0 132] 
#[1 7 121 0 10 7 125 0 132] 
#[0 3 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 3 46 0 1 3 46 0 3 2 85 0 5 3 46 0 6 3 46 0 7 2 89 0 8 7 129 0 9 2 93 0 10 0 17 0 11 3 46 0 12 3 46 0 13 3 46 0 14 0 183 0 15 3 46 0 16 3 46 0 17 3 46 0 18 3 46 0 19 3 46 0 20 3 46 0 21 0 187 0 23 0 191 0 26 3 46 0 27 3 46 0 28 3 46 0 33 0 195 0 34 0 199 0 35 0 203 0 37 3 46 0 44 3 46 0 45 3 46 0 47 3 46 0 48 3 46 0 50 4 145 0 52 7 141 0 54 3 46 0 59 0 207 0 61 3 46 0 62 3 46 0 64 3 46 0 65 3 46 0 68 3 46 0 69 3 46 0 70 3 46 0 71 3 46 0 72 3 46 0 73 0 211 0 74 3 46 0 76 3 46 0 77 0 215 0 78 3 46 0 79 0 219 0 80 0 223 0 81 3 46 0 82 3 46 0 83 3 46 0 86 0 227 0 87 0 231 0 88 3 46 0 90 3 46 0 92 3 46 0 94 0 235 0 95 3 46 0 97 3 46 0 98 3 46 0 100 7 137 0 101 3 46 0 103 3 46 0 104 3 46 0 105 3 46 0 106 3 46 0 107 3 46 0 108 3 46 0 109 0 239 0 110 3 46 0 112 3 46 0 113 3 46 0 115 0 243 0 116 3 46 0 117 3 46 0 118 3 46 0 119 3 46 0 123 3 46 0 124 3 46 0 125 3 46 0 126 0 247 0 127 0 251 0 133 0 255 0 134 1 3 0 135 1 7 0 136 1 11 0 137 1 15 0 138 1 19 0 139 1 23 0 140 1 27 0 141 1 31 0 142 3 46 0 144 7 145 0 151 7 145 0 152 7 145 0 153 7 145 0 154 7 145 0 155 7 145 0 156 7 145 0 157 7 145 0 158 7 145 0 159 7 145 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 141 0 204 7 145 0 240 7 145 0 241 7 145 0 242 7 145 0 246 7 145 0 247 7 145 0 248 7 145 0 249 7 145 0 250 7 145 0 251 7 149 0 252 7 153 0 254 7 157 1 1 7 145 1 2 7 145 1 3 7 145 1 4 7 145 1 5 7 145 1 6 7 145 1 7 7 145 1 8 7 145 1 9 7 145 1 10 7 145 1 12 7 145 1 14 7 145 1 16 7 145 1 17 7 145 1 18 7 145 1 19 7 145 1 20 7 145 1 21 7 145 1 22 7 145 1 26 7 145 1 67 7 145 1 68 7 145 1 69 7 145 1 70 7 145 1 71 7 145 1 72 7 145 1 73 7 145 1 80 7 145 1 81 7 145 1 82 7 145 1 83 7 145 1 84 7 145 1 85 3 46 1 86] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 161 0 140 0 125 0 142 7 161 0 163 0 137 0 164 7 161 0 165 7 161 0 166 7 161 0 167 7 161 0 168] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 165 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 165 0 151 7 165 0 152 7 165 0 153 7 165 0 154 7 165 0 155 7 165 0 156 7 165 0 157 7 165 0 158 7 165 0 159 7 165 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 165 0 240 7 165 0 241 7 165 0 242 7 165 0 246 7 165 0 247 7 165 0 248 7 165 0 249 7 165 0 250 7 165 0 251 7 165 1 2 7 165 1 3 7 165 1 4 7 165 1 5 7 165 1 6 7 165 1 7 7 165 1 8 7 165 1 9 7 165 1 10 7 165 1 12 7 165 1 14 7 165 1 16 7 165 1 17 7 165 1 18 7 165 1 19 7 165 1 20 7 165 1 21 7 165 1 22 7 165 1 26 7 165 1 67 7 165 1 68 7 165 1 69 7 165 1 70 7 165 1 71 7 165 1 72 7 165 1 73 7 165 1 80 7 165 1 81 7 165 1 82 7 165 1 83 7 165 1 84 7 165 1 85] 
#[1 1 150 0 5 1 150 0 6 1 150 0 8 1 150 0 9 1 150 0 10 1 150 0 11 1 150 0 15 1 150 0 23 1 150 0 26 1 150 0 34 1 150 0 35 1 150 0 37 1 150 0 52 1 150 0 54 1 150 0 61 1 150 0 74 1 150 0 78 1 150 0 80 1 150 0 81 1 150 0 87 1 150 0 88 1 150 0 95 1 150 0 101 1 150 0 110 1 150 0 116 1 150 0 127 1 150 0 133 1 150 0 134 1 150 0 135 1 150 0 136 1 150 0 137 1 150 0 138 1 150 0 139 1 150 0 140 1 150 0 141 1 150 0 142 7 169 0 253 5 17 0 255] 
#[0 3 50 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 54 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 58 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 173 0 140 0 125 0 142 7 173 0 163 0 137 0 164 7 173 0 165 7 173 0 166 7 173 0 167 7 173 0 168] 
#[0 3 62 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 177 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 177 0 151 7 177 0 152 7 177 0 153 7 177 0 154 7 177 0 155 7 177 0 156 7 177 0 157 7 177 0 158 7 177 0 159 7 177 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 177 0 240 7 177 0 241 7 177 0 242 7 177 0 246 7 177 0 247 7 177 0 248 7 177 0 249 7 177 0 250 7 177 0 251 7 177 1 2 7 177 1 3 7 177 1 4 7 177 1 5 7 177 1 6 7 177 1 7 7 177 1 8 7 177 1 9 7 177 1 10 7 177 1 12 7 177 1 14 7 177 1 16 7 177 1 17 7 177 1 18 7 177 1 19 7 177 1 20 7 177 1 21 7 177 1 22 7 177 1 26 7 177 1 67 7 177 1 68 7 177 1 69 7 177 1 70 7 177 1 71 7 177 1 72 7 177 1 73 7 177 1 80 7 177 1 81 7 177 1 82 7 177 1 83 7 177 1 84 7 177 1 85] 
#[0 3 66 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 70 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 74 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 181 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 181 0 151 7 181 0 152 7 181 0 153 7 181 0 154 7 181 0 155 7 181 0 156 7 181 0 157 7 181 0 158 7 181 0 159 7 181 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 181 0 240 7 181 0 241 7 181 0 242 7 181 0 246 7 181 0 247 7 181 0 248 7 181 0 249 7 181 0 250 7 181 0 251 7 181 1 2 7 181 1 3 7 181 1 4 7 181 1 5 7 181 1 6 7 181 1 7 7 181 1 8 7 181 1 9 7 181 1 10 7 181 1 12 7 181 1 14 7 181 1 16 7 181 1 17 7 181 1 18 7 181 1 19 7 181 1 20 7 181 1 21 7 181 1 22 7 181 1 26 7 181 1 67 7 181 1 68 7 181 1 69 7 181 1 70 7 181 1 71 7 181 1 72 7 181 1 73 7 181 1 80 7 181 1 81 7 181 1 82 7 181 1 83 7 181 1 84 7 181 1 85] 
#[0 3 78 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 82 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 86 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 90 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 94 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 98 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 102 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 106 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 110 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 3 114 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 185 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 185 0 151 7 185 0 152 7 185 0 153 7 185 0 154 7 185 0 155 7 185 0 156 7 185 0 157 7 185 0 158 7 185 0 159 7 185 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 185 0 240 7 185 0 241 7 185 0 242 7 185 0 246 7 185 0 247 7 185 0 248 7 185 0 249 7 185 0 250 7 185 0 251 7 185 1 2 7 185 1 3 7 185 1 4 7 185 1 5 7 185 1 6 7 185 1 7 7 185 1 8 7 185 1 9 7 185 1 10 7 185 1 12 7 185 1 14 7 185 1 16 7 185 1 17 7 185 1 18 7 185 1 19 7 185 1 20 7 185 1 21 7 185 1 22 7 185 1 26 7 185 1 67 7 185 1 68 7 185 1 69 7 185 1 70 7 185 1 71 7 185 1 72 7 185 1 73 7 185 1 80 7 185 1 81 7 185 1 82 7 185 1 83 7 185 1 84 7 185 1 85] 
#[0 3 118 0 5 0 8 0 10 0 11 0 23 0 26 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 189 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 189 0 151 7 189 0 152 7 189 0 153 7 189 0 154 7 189 0 155 7 189 0 156 7 189 0 157 7 189 0 158 7 189 0 159 7 189 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 189 0 240 7 189 0 241 7 189 0 242 7 189 0 246 7 189 0 247 7 189 0 248 7 189 0 249 7 189 0 250 7 189 0 251 7 189 1 2 7 189 1 3 7 189 1 4 7 189 1 5 7 189 1 6 7 189 1 7 7 189 1 8 7 189 1 9 7 189 1 10 7 189 1 12 7 189 1 14 7 189 1 16 7 189 1 17 7 189 1 18 7 189 1 19 7 189 1 20 7 189 1 21 7 189 1 22 7 189 1 26 7 189 1 67 7 189 1 68 7 189 1 69 7 189 1 70 7 189 1 71 7 189 1 72 7 189 1 73 7 189 1 80 7 189 1 81 7 189 1 82 7 189 1 83 7 189 1 84 7 189 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 193 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 193 0 151 7 193 0 152 7 193 0 153 7 193 0 154 7 193 0 155 7 193 0 156 7 193 0 157 7 193 0 158 7 193 0 159 7 193 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 193 0 240 7 193 0 241 7 193 0 242 7 193 0 246 7 193 0 247 7 193 0 248 7 193 0 249 7 193 0 250 7 193 0 251 7 193 1 2 7 193 1 3 7 193 1 4 7 193 1 5 7 193 1 6 7 193 1 7 7 193 1 8 7 193 1 9 7 193 1 10 7 193 1 12 7 193 1 14 7 193 1 16 7 193 1 17 7 193 1 18 7 193 1 19 7 193 1 20 7 193 1 21 7 193 1 22 7 193 1 26 7 193 1 67 7 193 1 68 7 193 1 69 7 193 1 70 7 193 1 71 7 193 1 72 7 193 1 73 7 193 1 80 7 193 1 81 7 193 1 82 7 193 1 83 7 193 1 84 7 193 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 197 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 197 0 151 7 197 0 152 7 197 0 153 7 197 0 154 7 197 0 155 7 197 0 156 7 197 0 157 7 197 0 158 7 197 0 159 7 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 197 0 240 7 197 0 241 7 197 0 242 7 197 0 246 7 197 0 247 7 197 0 248 7 197 0 249 7 197 0 250 7 197 0 251 7 197 1 2 7 197 1 3 7 197 1 4 7 197 1 5 7 197 1 6 7 197 1 7 7 197 1 8 7 197 1 9 7 197 1 10 7 197 1 12 7 197 1 14 7 197 1 16 7 197 1 17 7 197 1 18 7 197 1 19 7 197 1 20 7 197 1 21 7 197 1 22 7 197 1 26 7 197 1 67 7 197 1 68 7 197 1 69 7 197 1 70 7 197 1 71 7 197 1 72 7 197 1 73 7 197 1 80 7 197 1 81 7 197 1 82 7 197 1 83 7 197 1 84 7 197 1 85] 
#[1 2 85 0 5 4 141 0 6 2 89 0 8 1 26 0 9 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 4 145 0 52 4 165 0 54 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 3 177 0 88 2 133 0 95 4 153 0 99 4 157 0 101 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 7 201 0 140 2 165 0 141 0 125 0 142 3 177 0 151 3 177 0 152 3 177 0 153 3 177 0 154 3 177 0 155 3 177 0 156 3 177 0 157 3 177 0 158 3 177 0 159 3 177 0 160 7 201 0 163 0 137 0 164 7 201 0 165 7 201 0 166 7 201 0 167 7 201 0 168 3 173 0 192 4 165 0 204 4 169 0 208 3 177 0 240 3 177 0 241 3 177 0 242 3 177 0 246 3 177 0 247 3 177 0 248 3 177 0 249 3 177 0 250 3 177 0 251 3 177 1 2 3 177 1 3 3 177 1 4 3 177 1 5 3 177 1 6 3 177 1 7 3 177 1 8 3 177 1 9 3 177 1 10 3 177 1 12 3 177 1 14 3 177 1 16 3 177 1 17 3 177 1 18 3 177 1 19 3 177 1 20 3 177 1 21 3 177 1 22 3 177 1 26 3 177 1 67 3 177 1 68 3 177 1 69 3 177 1 70 3 177 1 71 3 177 1 72 3 177 1 73 3 177 1 80 3 177 1 81 3 177 1 82 3 177 1 83 3 177 1 84 3 177 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 7 205 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 209 0 148] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 213 0 148 7 217 0 188 7 217 0 189 1 201 0 190 7 217 0 193] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 7 221 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 225 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 7 229 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 7 233 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 237 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 237 0 151 7 237 0 152 7 237 0 153 7 237 0 154 7 237 0 155 7 237 0 156 7 237 0 157 7 237 0 158 7 237 0 159 7 237 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 237 0 240 7 237 0 241 7 237 0 242 7 237 0 246 7 237 0 247 7 237 0 248 7 237 0 249 7 237 0 250 7 237 0 251 7 237 1 2 7 237 1 3 7 237 1 4 7 237 1 5 7 237 1 6 7 237 1 7 7 237 1 8 7 237 1 9 7 237 1 10 7 237 1 12 7 237 1 14 7 237 1 16 7 237 1 17 7 237 1 18 7 237 1 19 7 237 1 20 7 237 1 21 7 237 1 22 7 237 1 26 7 237 1 67 7 237 1 68 7 237 1 69 7 237 1 70 7 237 1 71 7 237 1 72 7 237 1 73 7 237 1 80 7 237 1 81 7 237 1 82 7 237 1 83 7 237 1 84 7 237 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 7 241 0 67 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 7 245 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 7 245 0 151 7 245 0 152 7 245 0 153 7 245 0 154 7 245 0 155 7 245 0 156 7 245 0 157 7 245 0 158 7 245 0 159 7 245 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 245 0 240 7 245 0 241 7 245 0 242 7 245 0 246 7 245 0 247 7 245 0 248 7 245 0 249 7 245 0 250 7 245 0 251 7 245 1 2 7 245 1 3 7 245 1 4 7 245 1 5 7 245 1 6 7 245 1 7 7 245 1 8 7 245 1 9 7 245 1 10 7 245 1 12 7 245 1 14 7 245 1 16 7 245 1 17 7 245 1 18 7 245 1 19 7 245 1 20 7 245 1 21 7 245 1 22 7 245 1 26 7 245 1 67 7 245 1 68 7 245 1 69 7 245 1 70 7 245 1 71 7 245 1 72 7 245 1 73 7 245 1 80 7 245 1 81 7 245 1 82 7 245 1 83 7 245 1 84 7 245 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 92 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 7 249 0 120 1 35 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 1 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 8 5 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 8 5 0 151 8 5 0 152 8 5 0 153 8 5 0 154 8 5 0 155 8 5 0 156 8 5 0 157 8 5 0 158 8 5 0 159 8 5 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 8 5 0 240 8 5 0 241 8 5 0 242 8 5 0 246 8 5 0 247 8 5 0 248 8 5 0 249 8 5 0 250 8 5 0 251 8 5 1 2 8 5 1 3 8 5 1 4 8 5 1 5 8 5 1 6 8 5 1 7 8 5 1 8 8 5 1 9 8 5 1 10 8 5 1 12 8 5 1 14 8 5 1 16 8 5 1 17 8 5 1 18 8 5 1 19 8 5 1 20 8 5 1 21 8 5 1 22 8 5 1 26 8 5 1 67 8 5 1 68 8 5 1 69 8 5 1 70 8 5 1 71 8 5 1 72 8 5 1 73 8 5 1 80 8 5 1 81 8 5 1 82 8 5 1 83 8 5 1 84 8 5 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 8 9 0 27 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 8 13 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 8 13 0 151 8 13 0 152 8 13 0 153 8 13 0 154 8 13 0 155 8 13 0 156 8 13 0 157 8 13 0 158 8 13 0 159 8 13 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 246 8 13 0 247 8 13 0 248 8 13 0 249 8 13 0 250 8 13 0 251 8 13 1 2 8 13 1 3 8 13 1 4 8 13 1 5 8 13 1 6 8 13 1 7 8 13 1 8 8 13 1 9 8 13 1 10 8 13 1 12 8 13 1 14 8 13 1 16 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 8 13 1 26 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 84 8 13 1 85] 
#[0 1 105 0 49] 
#[1 0 17 0 11 0 137 0 61 3 122 0 68 3 122 0 69 3 122 0 70 0 137 0 78 0 137 0 87 3 122 0 92 1 39 0 94 3 122 0 108 0 137 0 110 0 137 0 116 3 122 0 123 3 122 0 135 8 21 0 140 0 125 0 142 3 122 0 144 8 21 0 163 0 137 0 164 8 21 0 165 8 21 0 166 8 21 0 167 8 21 0 168] 
#[0 8 25 0 55] 
#[1 0 17 0 11 1 73 0 41 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 1 153 0 226 1 157 0 233] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 8 29 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 8 29 0 240 4 197 0 241 4 197 0 242 4 197 0 246 8 29 0 247 8 29 0 248 8 29 0 249 8 29 0 250 8 29 0 251 8 29 1 2 8 29 1 3 8 29 1 4 8 29 1 5 8 29 1 6 8 29 1 7 8 29 1 8 8 29 1 9 8 29 1 10 8 29 1 12 8 29 1 14 8 29 1 16 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 33 0 140 0 125 0 142 8 33 0 163 0 137 0 164 8 33 0 165 8 33 0 166 8 33 0 167 8 33 0 168] 
#[1 0 111 0 1 0 111 0 3 1 43 0 5 0 111 0 7 0 111 0 8 1 150 0 9 0 111 0 10 0 115 0 11 0 111 0 12 8 37 0 13 0 111 0 14 1 150 0 15 0 111 0 16 0 111 0 17 0 111 0 18 1 47 0 19 0 111 0 20 0 111 0 21 1 189 0 22 1 150 0 23 1 150 0 26 0 111 0 33 1 150 0 34 1 150 0 35 1 150 0 37 0 111 0 44 0 111 0 45 0 111 0 47 1 150 0 52 1 150 0 54 1 150 0 61 0 111 0 68 0 111 0 69 0 111 0 70 0 111 0 72 1 150 0 74 1 150 0 78 1 150 0 80 1 150 0 81 0 111 0 86 1 150 0 87 1 150 0 88 0 111 0 90 0 111 0 92 0 111 0 94 1 150 0 95 0 111 0 100 1 150 0 101 0 111 0 108 1 150 0 110 1 150 0 116 0 111 0 118 0 111 0 123 0 111 0 126 1 150 0 127 1 150 0 133 1 150 0 134 0 111 0 135 1 150 0 136 1 150 0 137 1 150 0 138 1 150 0 139 1 150 0 140 1 150 0 141 1 150 0 142 0 111 0 144 1 205 0 188 1 205 0 189 1 201 0 190 1 205 0 193 5 13 0 253 5 17 0 255] 
#[0 3 126 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 130 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 3 134 0 68 3 134 0 69 3 134 0 70 3 134 0 92 3 134 0 94 3 134 0 108 3 134 0 123 3 134 0 135 3 134 0 144 8 41 0 183] 
#[1 0 6 0 70 0 6 0 144 8 45 0 148] 
#[1 0 17 0 11 1 73 0 41 1 217 0 59 0 137 0 61 1 225 0 71 1 229 0 73 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 249 0 119 1 77 0 140 0 125 0 142 1 77 0 163 0 137 0 164 1 77 0 165 1 77 0 166 1 77 0 167 1 77 0 168 2 1 0 226 2 5 0 233] 
#[0 3 138 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 142 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 3 146 0 68 3 146 0 69 3 146 0 70 5 97 0 72 5 101 0 86 5 105 0 90 3 146 0 92 3 146 0 94 5 109 0 100 3 146 0 108 5 113 0 118 3 146 0 123 5 117 0 126 3 146 0 135 3 146 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 3 150 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 154 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 158 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 162 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 166 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 170 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 174 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 178 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 182 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 186 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 190 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 194 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 198 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 202 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 206 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 210 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 214 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 218 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 222 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 226 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 230 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 234 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 238 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 242 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 246 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 250 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 3 254 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 2 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 6 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 10 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 14 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 18 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 22 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 4 26 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 2 46 0 1 2 46 0 3 2 46 0 5 2 46 0 7 2 46 0 8 2 46 0 10 2 46 0 11 2 46 0 12 2 46 0 14 2 46 0 16 2 46 0 17 2 46 0 18 2 46 0 19 2 46 0 20 2 46 0 21 2 46 0 33 2 46 0 44 2 46 0 45 2 46 0 47 1 51 0 68 1 51 0 69 1 51 0 70 2 46 0 72 2 46 0 86 2 46 0 90 1 51 0 92 1 51 0 94 2 46 0 100 1 51 0 108 2 46 0 118 1 51 0 123 2 46 0 126 1 51 0 135 1 51 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 8 49 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 17 0 11 0 137 0 61 8 53 0 70 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 57 0 140 0 125 0 142 0 129 0 144 8 57 0 163 0 137 0 164 8 57 0 165 8 57 0 166 8 57 0 167 8 57 0 168 8 61 0 198] 
#[0 4 34 0 11 0 61 0 70 0 78 0 87 0 110 0 116 0 140 0 142 0 144] 
#[0 4 38 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 8 65 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 8 65 0 151 8 65 0 152 8 65 0 153 8 65 0 154 8 65 0 155 8 65 0 156 8 65 0 157 8 65 0 158 8 65 0 159 8 65 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 8 65 0 240 8 65 0 241 8 65 0 242 8 65 0 246 8 65 0 247 8 65 0 248 8 65 0 249 8 65 0 250 8 65 0 251 8 65 1 2 8 65 1 3 8 65 1 4 8 65 1 5 8 65 1 6 8 65 1 7 8 65 1 8 8 65 1 9 8 65 1 10 8 65 1 12 8 65 1 14 8 65 1 16 8 65 1 17 8 65 1 18 8 65 1 19 8 65 1 20 8 65 1 21 8 65 1 22 8 65 1 26 8 65 1 67 8 65 1 68 8 65 1 69 8 65 1 70 8 65 1 71 8 65 1 72 8 65 1 73 8 65 1 80 8 65 1 81 8 65 1 82 8 65 1 83 8 65 1 84 8 65 1 85] 
#[0 4 42 0 6 0 9] 
#[1 8 69 0 6 6 145 0 9 6 149 0 191] 
#[1 1 177 0 5 4 46 0 6 8 73 0 7 4 46 0 8 4 46 0 9 4 46 0 10 4 46 0 11 4 46 0 19 4 46 0 23 4 46 0 26 4 46 0 27 4 46 0 28 4 46 0 34 4 46 0 35 4 46 0 37 4 46 0 48 4 46 0 50 4 46 0 59 4 46 0 61 4 46 0 62 4 46 0 64 4 46 0 65 4 46 0 68 4 46 0 69 4 46 0 70 4 46 0 71 4 46 0 73 4 46 0 74 4 46 0 76 4 46 0 77 4 46 0 78 4 46 0 79 4 46 0 80 4 46 0 81 4 46 0 82 4 46 0 83 4 46 0 87 4 46 0 88 4 46 0 92 4 46 0 94 4 46 0 95 4 46 0 97 4 46 0 98 4 46 0 103 4 46 0 104 4 46 0 105 4 46 0 106 4 46 0 107 4 46 0 108 4 46 0 109 4 46 0 110 4 46 0 112 4 46 0 115 4 46 0 116 4 46 0 119 4 46 0 123 4 46 0 124 4 46 0 125 4 46 0 127 4 46 0 133 4 46 0 134 4 46 0 135 4 46 0 136 4 46 0 137 4 46 0 138 4 46 0 139 4 46 0 140 4 46 0 141 4 46 0 142 4 46 0 144 8 77 0 190 4 46 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 8 81 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 8 81 0 151 8 81 0 152 8 81 0 153 8 81 0 154 8 81 0 155 8 81 0 156 8 81 0 157 8 81 0 158 8 81 0 159 8 81 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 8 81 0 240 8 81 0 241 8 81 0 242 8 81 0 246 8 81 0 247 8 81 0 248 8 81 0 249 8 81 0 250 8 81 0 251 8 81 1 2 8 81 1 3 8 81 1 4 8 81 1 5 8 81 1 6 8 81 1 7 8 81 1 8 8 81 1 9 8 81 1 10 8 81 1 12 8 81 1 14 8 81 1 16 8 81 1 17 8 81 1 18 8 81 1 19 8 81 1 20 8 81 1 21 8 81 1 22 8 81 1 26 8 81 1 67 8 81 1 68 8 81 1 69 8 81 1 70 8 81 1 71 8 81 1 72 8 81 1 73 8 81 1 80 8 81 1 81 8 81 1 82 8 81 1 83 8 81 1 84 8 81 1 85] 
#[1 4 50 0 5 4 50 0 6 8 85 0 7 4 50 0 8 4 50 0 9 4 50 0 10 4 50 0 11 4 50 0 19 4 50 0 23 4 50 0 26 4 50 0 27 4 50 0 28 4 50 0 34 4 50 0 35 4 50 0 37 4 50 0 48 4 50 0 50 4 50 0 59 4 50 0 61 4 50 0 62 4 50 0 64 4 50 0 65 4 50 0 68 4 50 0 69 4 50 0 70 4 50 0 71 4 50 0 73 4 50 0 74 4 50 0 76 4 50 0 77 4 50 0 78 4 50 0 79 4 50 0 80 4 50 0 81 4 50 0 82 4 50 0 83 4 50 0 87 4 50 0 88 4 50 0 92 4 50 0 94 4 50 0 95 4 50 0 97 4 50 0 98 4 50 0 103 4 50 0 104 4 50 0 105 4 50 0 106 4 50 0 107 4 50 0 108 4 50 0 109 4 50 0 110 4 50 0 112 4 50 0 115 4 50 0 116 4 50 0 119 4 50 0 123 4 50 0 124 4 50 0 125 4 50 0 127 4 50 0 133 4 50 0 134 4 50 0 135 4 50 0 136 4 50 0 137 4 50 0 138 4 50 0 139 4 50 0 140 4 50 0 141 4 50 0 142 4 50 0 144 4 50 1 86] 
#[1 0 17 0 11 8 89 0 51 8 89 0 53 8 89 0 57 3 205 0 61 8 89 0 66 0 137 0 78 8 89 0 85 0 137 0 87 8 89 0 91 8 89 0 96 0 137 0 110 8 89 0 111 8 89 0 114 0 137 0 116 3 233 0 121 3 237 0 140 0 125 0 142 3 237 0 163 0 137 0 164 3 237 0 165 3 237 0 166 3 237 0 167 3 237 0 168 8 89 0 184 8 89 0 186 8 89 0 187] 
#[1 1 177 0 5 4 54 0 6 8 93 0 7 4 54 0 8 4 54 0 9 4 54 0 10 4 54 0 11 4 54 0 19 4 54 0 23 4 54 0 26 4 54 0 27 4 54 0 28 4 54 0 34 4 54 0 35 4 54 0 37 4 54 0 48 4 54 0 50 4 54 0 59 4 54 0 61 4 54 0 62 4 54 0 64 4 54 0 65 4 54 0 68 4 54 0 69 4 54 0 70 4 54 0 71 4 54 0 73 4 54 0 74 4 54 0 76 4 54 0 77 4 54 0 78 4 54 0 79 4 54 0 80 4 54 0 81 4 54 0 82 4 54 0 83 4 54 0 87 4 54 0 88 4 54 0 92 4 54 0 94 4 54 0 95 4 54 0 97 4 54 0 98 4 54 0 103 4 54 0 104 4 54 0 105 4 54 0 106 4 54 0 107 4 54 0 108 4 54 0 109 4 54 0 110 4 54 0 112 4 54 0 115 4 54 0 116 4 54 0 119 4 54 0 123 4 54 0 124 4 54 0 125 4 54 0 127 4 54 0 133 4 54 0 134 4 54 0 135 4 54 0 136 4 54 0 137 4 54 0 138 4 54 0 139 4 54 0 140 4 54 0 141 4 54 0 142 4 54 0 144 8 97 0 190 4 54 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 4 58 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 4 58 0 48 4 58 0 50 4 58 0 59 4 58 0 61 4 58 0 62 4 58 0 64 4 58 0 68 4 58 0 69 4 58 0 70 4 58 0 71 5 97 0 72 4 58 0 73 4 58 0 76 4 58 0 77 4 58 0 78 4 58 0 79 4 58 0 83 5 101 0 86 4 58 0 87 5 105 0 90 4 58 0 92 4 58 0 94 4 58 0 98 5 109 0 100 4 58 0 103 4 58 0 104 4 58 0 105 4 58 0 106 4 58 0 108 4 58 0 110 4 58 0 112 4 58 0 115 4 58 0 116 5 113 0 118 4 58 0 119 4 58 0 123 5 117 0 126 4 58 0 135 4 58 0 140 4 58 0 142 4 58 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 58 1 86] 
#[1 0 6 0 11 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 98 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 112 0 6 0 115 0 6 0 116 0 6 0 119 0 6 0 140 0 6 0 142 0 6 0 144 8 101 0 148 4 13 0 149 0 6 1 86] 
#[0 4 62 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 1 181 0 11 8 105 0 89] 
#[1 1 181 0 11 8 109 0 89] 
#[1 0 6 0 11 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 110 0 6 0 116 0 6 0 140 0 6 0 142 0 6 0 144 8 113 0 148 4 137 0 201] 
#[0 4 66 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 117 0 148 8 121 0 188 8 121 0 189 1 201 0 190 8 121 0 193] 
#[1 5 133 0 5 0 6 0 8 0 6 0 10 1 181 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 125 0 148 8 129 0 188 8 129 0 189 1 201 0 190 8 129 0 193 8 133 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 137 0 148 8 141 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 145 0 148 8 149 0 205] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 8 153 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 157 0 148] 
#[1 0 6 0 11 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 110 0 6 0 116 0 6 0 140 0 6 0 142 0 6 0 144 8 161 0 148 6 137 0 196] 
#[1 2 73 0 5 1 181 0 11 8 165 0 205] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 169 0 140 0 125 0 142 8 169 0 163 0 137 0 164 8 169 0 165 8 169 0 166 8 169 0 167 8 169 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 173 0 140 0 125 0 142 8 173 0 163 0 137 0 164 8 173 0 165 8 173 0 166 8 173 0 167 8 173 0 168] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 177 0 140 0 125 0 142 8 177 0 163 0 137 0 164 8 177 0 165 8 177 0 166 8 177 0 167 8 177 0 168] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 181 0 148 8 185 0 205] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 189 0 148 8 193 0 188 8 193 0 189 1 201 0 190 8 193 0 193] 
#[1 5 133 0 5 0 6 0 8 0 6 0 10 1 181 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 197 0 148 8 201 0 188 8 201 0 189 1 201 0 190 8 201 0 193 8 205 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 209 0 148 8 213 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 217 0 148 8 221 0 205] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 8 225 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 8 229 0 148] 
#[0 4 70 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 95 0 97 0 98 0 103 0 105 0 106 0 107 0 109 0 110 0 112 0 116 0 119 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144] 
#[1 8 233 0 70 0 129 0 144] 
#[0 4 74 0 70 0 144] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 1 45 0 140 0 125 0 142 8 237 0 144 1 45 0 163 0 137 0 164 1 45 0 165 1 45 0 166 1 45 0 167 1 45 0 168 8 241 0 172] 
#[1 2 73 0 5 8 245 0 46 8 249 0 205] 
#[1 2 73 0 5 8 253 0 46 9 1 0 205] 
#[0 9 5 0 71] 
#[1 1 181 0 11 9 9 0 19 4 78 0 61 4 78 0 70 4 78 0 78 4 78 0 87 4 78 0 110 4 78 0 116 4 78 0 140 4 78 0 142 4 78 0 144] 
#[0 4 82 0 11 0 61 0 70 0 78 0 87 0 110 0 116 0 140 0 142 0 144] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 9 13 0 140 0 125 0 142 9 13 0 163 0 137 0 164 9 13 0 165 9 13 0 166 9 13 0 167 9 13 0 168] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 9 17 0 188 9 17 0 189 1 201 0 190 9 17 0 193 7 81 0 209 9 21 0 210] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 9 25 0 101 0 137 0 110 0 137 0 116 9 29 0 140 0 125 0 142 9 29 0 163 0 137 0 164 9 29 0 165 9 29 0 166 9 29 0 167 9 29 0 168] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 9 33 0 188 9 33 0 189 1 201 0 190 9 33 0 193 7 81 0 209 9 37 0 210] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 41 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 9 41 0 151 9 41 0 152 9 41 0 153 9 41 0 154 9 41 0 155 9 41 0 156 9 41 0 157 9 41 0 158 9 41 0 159 9 41 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 41 0 240 9 41 0 241 9 41 0 242 9 41 0 246 9 41 0 247 9 41 0 248 9 41 0 249 9 41 0 250 9 41 0 251 9 41 1 2 9 41 1 3 9 41 1 4 9 41 1 5 9 41 1 6 9 41 1 7 9 41 1 8 9 41 1 9 9 41 1 10 9 41 1 12 9 41 1 14 9 41 1 16 9 41 1 17 9 41 1 18 9 41 1 19 9 41 1 20 9 41 1 21 9 41 1 22 9 41 1 26 9 41 1 67 9 41 1 68 9 41 1 69 9 41 1 70 9 41 1 71 9 41 1 72 9 41 1 73 9 41 1 80 9 41 1 81 9 41 1 82 9 41 1 83 9 41 1 84 9 41 1 85] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 9 45 0 210] 
#[0 4 86 0 6 0 9] 
#[0 4 90 0 6 0 9] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 9 49 0 140 0 125 0 142 9 49 0 163 0 137 0 164 9 49 0 165 9 49 0 166 9 49 0 167 9 49 0 168] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 9 53 0 188 9 53 0 189 1 201 0 190 9 53 0 193 7 81 0 209 9 57 0 210] 
#[1 9 61 0 6 9 65 0 9 9 69 0 206] 
#[1 0 6 0 70 0 6 0 144 9 73 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 77 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 4 94 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 9 101 0 24 0 25 0 29 0 36 0 38 1 23] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 105 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 9 105 0 151 9 105 0 152 9 105 0 153 9 105 0 154 9 105 0 155 9 105 0 156 9 105 0 157 9 105 0 158 9 105 0 159 9 105 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 105 0 240 9 105 0 241 9 105 0 242 9 105 0 246 9 105 0 247 9 105 0 248 9 105 0 249 9 105 0 250 9 105 0 251 9 105 1 2 9 105 1 3 9 105 1 4 9 105 1 5 9 105 1 6 9 105 1 7 9 105 1 8 9 105 1 9 9 105 1 10 9 105 1 12 9 105 1 14 9 105 1 16 9 105 1 17 9 105 1 18 9 105 1 19 9 105 1 20 9 105 1 21 9 105 1 22 9 105 1 26 9 105 1 67 9 105 1 68 9 105 1 69 9 105 1 70 9 105 1 71 9 105 1 72 9 105 1 73 9 105 1 80 9 105 1 81 9 105 1 82 9 105 1 83 9 105 1 84 9 105 1 85] 
#[1 9 109 0 132 9 113 0 162] 
#[0 4 98 0 10 0 132] 
#[0 4 102 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 4 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 117 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 9 117 0 151 9 117 0 152 9 117 0 153 9 117 0 154 9 117 0 155 9 117 0 156 9 117 0 157 9 117 0 158 9 117 0 159 9 117 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 117 0 240 9 117 0 241 9 117 0 242 9 117 0 246 9 117 0 247 9 117 0 248 9 117 0 249 9 117 0 250 9 117 0 251 9 117 1 2 9 117 1 3 9 117 1 4 9 117 1 5 9 117 1 6 9 117 1 7 9 117 1 8 9 117 1 9 9 117 1 10 9 117 1 12 9 117 1 14 9 117 1 16 9 117 1 17 9 117 1 18 9 117 1 19 9 117 1 20 9 117 1 21 9 117 1 22 9 117 1 26 9 117 1 67 9 117 1 68 9 117 1 69 9 117 1 70 9 117 1 71 9 117 1 72 9 117 1 73 9 117 1 80 9 117 1 81 9 117 1 82 9 117 1 83 9 117 1 84 9 117 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 125 0 88 2 133 0 95 9 121 0 101 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 9 125 0 151 9 125 0 152 9 125 0 153 9 125 0 154 9 125 0 155 9 125 0 156 9 125 0 157 9 125 0 158 9 125 0 159 9 125 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 125 0 240 9 125 0 241 9 125 0 242 9 125 0 246 9 125 0 247 9 125 0 248 9 125 0 249 9 125 0 250 9 125 0 251 9 125 1 2 9 125 1 3 9 125 1 4 9 125 1 5 9 125 1 6 9 125 1 7 9 125 1 8 9 125 1 9 9 125 1 10 9 125 1 12 9 125 1 14 9 125 1 16 9 125 1 17 9 125 1 18 9 125 1 19 9 125 1 20 9 125 1 21 9 125 1 22 9 125 1 26 9 125 1 67 9 125 1 68 9 125 1 69 9 125 1 70 9 125 1 71 9 125 1 72 9 125 1 73 9 125 1 80 9 125 1 81 9 125 1 82 9 125 1 83 9 125 1 84 9 125 1 85] 
#[1 5 21 0 1 1 55 0 3 5 29 0 5 4 110 0 6 5 33 0 7 5 37 0 8 4 110 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 110 0 13 1 59 0 14 4 110 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 110 0 23 4 110 0 26 4 110 0 27 4 110 0 28 5 81 0 33 4 110 0 34 4 110 0 35 4 110 0 37 1 63 0 44 5 89 0 45 5 93 0 47 4 110 0 48 4 110 0 50 4 110 0 59 4 110 0 61 4 110 0 62 4 110 0 64 4 110 0 65 4 110 0 68 4 110 0 69 4 110 0 70 4 110 0 71 5 97 0 72 4 110 0 73 4 110 0 74 4 110 0 76 4 110 0 77 4 110 0 78 4 110 0 79 4 110 0 80 4 110 0 81 4 110 0 82 4 110 0 83 5 101 0 86 4 110 0 87 4 110 0 88 5 105 0 90 4 110 0 92 4 110 0 94 4 110 0 95 4 110 0 97 4 110 0 98 5 109 0 100 4 110 0 103 4 110 0 104 4 110 0 105 4 110 0 106 4 110 0 107 4 110 0 108 4 110 0 109 4 110 0 110 4 110 0 112 4 110 0 113 4 110 0 115 4 110 0 116 4 110 0 117 1 67 0 118 4 110 0 119 4 110 0 123 4 110 0 124 4 110 0 125 5 117 0 126 4 110 0 127 4 110 0 133 4 110 0 134 4 110 0 135 4 110 0 136 4 110 0 137 4 110 0 138 4 110 0 139 4 110 0 140 4 110 0 141 4 110 0 142 4 110 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 110 1 86] 
#[1 3 46 0 1 3 46 0 3 3 46 0 5 3 46 0 6 3 46 0 7 3 46 0 8 9 129 0 9 3 46 0 10 3 46 0 11 3 46 0 12 3 46 0 13 3 46 0 14 1 71 0 15 3 46 0 16 3 46 0 17 3 46 0 18 3 46 0 19 3 46 0 20 3 46 0 21 3 46 0 23 3 46 0 26 3 46 0 27 3 46 0 28 3 46 0 33 3 46 0 34 3 46 0 35 3 46 0 37 3 46 0 44 3 46 0 45 3 46 0 47 3 46 0 48 3 46 0 50 3 46 0 59 3 46 0 61 3 46 0 62 3 46 0 64 3 46 0 65 3 46 0 68 3 46 0 69 3 46 0 70 3 46 0 71 3 46 0 72 3 46 0 73 3 46 0 74 3 46 0 76 3 46 0 77 3 46 0 78 3 46 0 79 3 46 0 80 3 46 0 81 3 46 0 82 3 46 0 83 3 46 0 86 3 46 0 87 3 46 0 88 3 46 0 90 3 46 0 92 3 46 0 94 3 46 0 95 3 46 0 97 3 46 0 98 3 46 0 100 3 46 0 103 3 46 0 104 3 46 0 105 3 46 0 106 3 46 0 107 3 46 0 108 3 46 0 109 3 46 0 110 3 46 0 112 3 46 0 113 3 46 0 115 3 46 0 116 3 46 0 117 3 46 0 118 3 46 0 119 3 46 0 123 3 46 0 124 3 46 0 125 3 46 0 126 3 46 0 127 3 46 0 133 3 46 0 134 3 46 0 135 3 46 0 136 3 46 0 137 3 46 0 138 3 46 0 139 3 46 0 140 3 46 0 141 3 46 0 142 3 46 0 144 9 137 1 1 3 46 1 86] 
#[0 4 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 4 118 0 1 4 118 0 3 4 118 0 5 4 118 0 6 4 118 0 7 4 118 0 8 9 141 0 9 4 118 0 10 4 118 0 11 4 118 0 12 4 118 0 13 4 118 0 14 1 75 0 15 4 118 0 16 4 118 0 17 4 118 0 18 4 118 0 19 4 118 0 20 4 118 0 21 4 118 0 23 4 118 0 26 4 118 0 27 4 118 0 28 4 118 0 33 4 118 0 34 4 118 0 35 4 118 0 37 4 118 0 44 4 118 0 45 4 118 0 47 4 118 0 48 4 118 0 50 4 118 0 59 4 118 0 61 4 118 0 62 4 118 0 64 4 118 0 65 4 118 0 68 4 118 0 69 4 118 0 70 4 118 0 71 4 118 0 72 4 118 0 73 4 118 0 74 4 118 0 76 4 118 0 77 4 118 0 78 4 118 0 79 4 118 0 80 4 118 0 81 4 118 0 82 4 118 0 83 4 118 0 86 4 118 0 87 4 118 0 88 4 118 0 90 4 118 0 92 4 118 0 94 4 118 0 95 4 118 0 97 4 118 0 98 4 118 0 100 4 118 0 103 4 118 0 104 4 118 0 105 4 118 0 106 4 118 0 107 4 118 0 108 4 118 0 109 4 118 0 110 4 118 0 112 4 118 0 113 4 118 0 115 4 118 0 116 4 118 0 117 4 118 0 118 4 118 0 119 4 118 0 123 4 118 0 124 4 118 0 125 4 118 0 126 4 118 0 127 4 118 0 133 4 118 0 134 4 118 0 135 4 118 0 136 4 118 0 137 4 118 0 138 4 118 0 139 4 118 0 140 4 118 0 141 4 118 0 142 4 118 0 144 9 149 1 0 4 118 1 86] 
#[0 4 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 5 21 0 1 1 79 0 3 5 29 0 5 4 126 0 6 5 33 0 7 5 37 0 8 4 126 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 126 0 13 1 83 0 14 4 126 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 126 0 23 4 126 0 26 4 126 0 27 4 126 0 28 5 81 0 33 4 126 0 34 4 126 0 35 4 126 0 37 1 87 0 44 5 89 0 45 5 93 0 47 4 126 0 48 4 126 0 50 4 126 0 59 4 126 0 61 4 126 0 62 4 126 0 64 4 126 0 65 4 126 0 68 4 126 0 69 4 126 0 70 4 126 0 71 5 97 0 72 4 126 0 73 4 126 0 74 4 126 0 76 4 126 0 77 4 126 0 78 4 126 0 79 4 126 0 80 4 126 0 81 4 126 0 82 4 126 0 83 5 101 0 86 4 126 0 87 4 126 0 88 5 105 0 90 4 126 0 92 4 126 0 94 4 126 0 95 4 126 0 97 4 126 0 98 5 109 0 100 4 126 0 103 4 126 0 104 4 126 0 105 4 126 0 106 4 126 0 107 4 126 0 108 4 126 0 109 4 126 0 110 4 126 0 112 4 126 0 113 4 126 0 115 4 126 0 116 4 126 0 117 1 91 0 118 4 126 0 119 4 126 0 123 4 126 0 124 4 126 0 125 5 117 0 126 4 126 0 127 4 126 0 133 4 126 0 134 4 126 0 135 4 126 0 136 4 126 0 137 4 126 0 138 4 126 0 139 4 126 0 140 4 126 0 141 4 126 0 142 4 126 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 126 1 86] 
#[0 9 153 0 6] 
#[0 4 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 5 21 0 1 1 95 0 3 5 29 0 5 4 134 0 6 5 33 0 7 5 37 0 8 4 134 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 134 0 13 1 99 0 14 4 134 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 134 0 23 4 134 0 26 4 134 0 27 4 134 0 28 5 81 0 33 4 134 0 34 4 134 0 35 4 134 0 37 1 103 0 44 5 89 0 45 5 93 0 47 4 134 0 48 4 134 0 50 4 134 0 59 4 134 0 61 4 134 0 62 4 134 0 64 4 134 0 65 4 134 0 68 4 134 0 69 4 134 0 70 4 134 0 71 5 97 0 72 4 134 0 73 4 134 0 74 4 134 0 76 4 134 0 77 4 134 0 78 4 134 0 79 4 134 0 80 4 134 0 81 4 134 0 82 4 134 0 83 5 101 0 86 4 134 0 87 4 134 0 88 5 105 0 90 4 134 0 92 4 134 0 94 4 134 0 95 4 134 0 97 4 134 0 98 5 109 0 100 4 134 0 103 4 134 0 104 4 134 0 105 4 134 0 106 4 134 0 107 4 134 0 108 4 134 0 109 4 134 0 110 4 134 0 112 4 134 0 113 4 134 0 115 4 134 0 116 4 134 0 117 1 107 0 118 4 134 0 119 4 134 0 123 4 134 0 124 4 134 0 125 5 117 0 126 4 134 0 127 4 134 0 133 4 134 0 134 4 134 0 135 4 134 0 136 4 134 0 137 4 134 0 138 4 134 0 139 4 134 0 140 4 134 0 141 4 134 0 142 4 134 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 134 1 86] 
#[1 5 21 0 1 1 111 0 3 5 29 0 5 4 138 0 6 5 33 0 7 5 37 0 8 4 138 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 138 0 13 1 115 0 14 4 138 0 15 5 57 0 16 5 61 0 17 5 65 0 18 4 138 0 19 5 73 0 20 5 77 0 21 4 138 0 23 4 138 0 26 4 138 0 27 4 138 0 28 5 81 0 33 4 138 0 34 4 138 0 35 4 138 0 37 1 119 0 44 5 89 0 45 5 93 0 47 4 138 0 48 4 138 0 50 4 138 0 59 4 138 0 61 4 138 0 62 4 138 0 64 4 138 0 65 4 138 0 68 4 138 0 69 4 138 0 70 4 138 0 71 5 97 0 72 4 138 0 73 4 138 0 74 4 138 0 76 4 138 0 77 4 138 0 78 4 138 0 79 4 138 0 80 4 138 0 81 4 138 0 82 4 138 0 83 5 101 0 86 4 138 0 87 4 138 0 88 5 105 0 90 4 138 0 92 4 138 0 94 4 138 0 95 4 138 0 97 4 138 0 98 5 109 0 100 4 138 0 103 4 138 0 104 4 138 0 105 4 138 0 106 4 138 0 107 4 138 0 108 4 138 0 109 4 138 0 110 4 138 0 112 4 138 0 113 4 138 0 115 4 138 0 116 4 138 0 117 1 123 0 118 4 138 0 119 4 138 0 123 4 138 0 124 4 138 0 125 5 117 0 126 4 138 0 127 4 138 0 133 4 138 0 134 4 138 0 135 4 138 0 136 4 138 0 137 4 138 0 138 4 138 0 139 4 138 0 140 4 138 0 141 4 138 0 142 4 138 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 138 1 86] 
#[1 5 21 0 1 1 127 0 3 5 29 0 5 4 142 0 6 5 33 0 7 5 37 0 8 4 142 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 142 0 13 1 131 0 14 4 142 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 142 0 23 4 142 0 26 4 142 0 27 4 142 0 28 5 81 0 33 4 142 0 34 4 142 0 35 4 142 0 37 1 135 0 44 5 89 0 45 5 93 0 47 4 142 0 48 4 142 0 50 4 142 0 59 4 142 0 61 4 142 0 62 4 142 0 64 4 142 0 65 4 142 0 68 4 142 0 69 4 142 0 70 4 142 0 71 5 97 0 72 4 142 0 73 4 142 0 74 4 142 0 76 4 142 0 77 4 142 0 78 4 142 0 79 4 142 0 80 4 142 0 81 4 142 0 82 4 142 0 83 5 101 0 86 4 142 0 87 4 142 0 88 5 105 0 90 4 142 0 92 4 142 0 94 4 142 0 95 4 142 0 97 4 142 0 98 5 109 0 100 4 142 0 103 4 142 0 104 4 142 0 105 4 142 0 106 4 142 0 107 4 142 0 108 4 142 0 109 4 142 0 110 4 142 0 112 4 142 0 113 4 142 0 115 4 142 0 116 4 142 0 117 1 139 0 118 4 142 0 119 4 142 0 123 4 142 0 124 4 142 0 125 5 117 0 126 4 142 0 127 4 142 0 133 4 142 0 134 4 142 0 135 4 142 0 136 4 142 0 137 4 142 0 138 4 142 0 139 4 142 0 140 4 142 0 141 4 142 0 142 4 142 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 142 1 86] 
#[1 5 21 0 1 1 143 0 3 5 29 0 5 4 146 0 6 5 33 0 7 5 37 0 8 4 146 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 146 0 13 1 147 0 14 4 146 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 146 0 23 4 146 0 26 4 146 0 27 4 146 0 28 5 81 0 33 4 146 0 34 4 146 0 35 4 146 0 37 1 151 0 44 5 89 0 45 5 93 0 47 4 146 0 48 4 146 0 50 4 146 0 59 4 146 0 61 4 146 0 62 4 146 0 64 4 146 0 65 4 146 0 68 4 146 0 69 4 146 0 70 4 146 0 71 5 97 0 72 4 146 0 73 4 146 0 74 4 146 0 76 4 146 0 77 4 146 0 78 4 146 0 79 4 146 0 80 4 146 0 81 4 146 0 82 4 146 0 83 5 101 0 86 4 146 0 87 4 146 0 88 5 105 0 90 4 146 0 92 4 146 0 94 4 146 0 95 4 146 0 97 4 146 0 98 5 109 0 100 4 146 0 103 4 146 0 104 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 110 4 146 0 112 4 146 0 113 4 146 0 115 4 146 0 116 4 146 0 117 1 155 0 118 4 146 0 119 4 146 0 123 4 146 0 124 4 146 0 125 5 117 0 126 4 146 0 127 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 138 4 146 0 139 4 146 0 140 4 146 0 141 4 146 0 142 4 146 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 146 1 86] 
#[1 5 21 0 1 1 159 0 3 5 29 0 5 4 150 0 6 5 33 0 7 5 37 0 8 4 150 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 150 0 13 1 163 0 14 4 150 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 150 0 23 4 150 0 26 4 150 0 27 4 150 0 28 5 81 0 33 4 150 0 34 4 150 0 35 4 150 0 37 1 167 0 44 5 89 0 45 5 93 0 47 4 150 0 48 4 150 0 50 4 150 0 59 4 150 0 61 4 150 0 62 4 150 0 64 4 150 0 65 4 150 0 68 4 150 0 69 4 150 0 70 4 150 0 71 5 97 0 72 4 150 0 73 4 150 0 74 4 150 0 76 4 150 0 77 4 150 0 78 4 150 0 79 4 150 0 80 4 150 0 81 4 150 0 82 4 150 0 83 5 101 0 86 4 150 0 87 4 150 0 88 5 105 0 90 4 150 0 92 4 150 0 94 4 150 0 95 4 150 0 97 4 150 0 98 5 109 0 100 4 150 0 103 4 150 0 104 4 150 0 105 4 150 0 106 4 150 0 107 4 150 0 108 4 150 0 109 4 150 0 110 4 150 0 112 4 150 0 113 4 150 0 115 4 150 0 116 4 150 0 117 1 171 0 118 4 150 0 119 4 150 0 123 4 150 0 124 4 150 0 125 5 117 0 126 4 150 0 127 4 150 0 133 4 150 0 134 4 150 0 135 4 150 0 136 4 150 0 137 4 150 0 138 4 150 0 139 4 150 0 140 4 150 0 141 4 150 0 142 4 150 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 150 1 86] 
#[1 5 21 0 1 1 175 0 3 5 29 0 5 4 154 0 6 5 33 0 7 5 37 0 8 4 154 0 9 5 41 0 10 5 45 0 11 5 49 0 12 4 154 0 13 1 179 0 14 4 154 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 4 154 0 23 4 154 0 26 4 154 0 27 4 154 0 28 5 81 0 33 4 154 0 34 4 154 0 35 4 154 0 37 1 183 0 44 5 89 0 45 5 93 0 47 4 154 0 48 4 154 0 50 4 154 0 59 4 154 0 61 4 154 0 62 4 154 0 64 4 154 0 65 4 154 0 68 4 154 0 69 4 154 0 70 4 154 0 71 5 97 0 72 4 154 0 73 4 154 0 74 4 154 0 76 4 154 0 77 4 154 0 78 4 154 0 79 4 154 0 80 4 154 0 81 4 154 0 82 4 154 0 83 5 101 0 86 4 154 0 87 4 154 0 88 5 105 0 90 4 154 0 92 4 154 0 94 4 154 0 95 4 154 0 97 4 154 0 98 5 109 0 100 4 154 0 103 4 154 0 104 4 154 0 105 4 154 0 106 4 154 0 107 4 154 0 108 4 154 0 109 4 154 0 110 4 154 0 112 4 154 0 113 4 154 0 115 4 154 0 116 4 154 0 117 1 187 0 118 4 154 0 119 4 154 0 123 4 154 0 124 4 154 0 125 5 117 0 126 4 154 0 127 4 154 0 133 4 154 0 134 4 154 0 135 4 154 0 136 4 154 0 137 4 154 0 138 4 154 0 139 4 154 0 140 4 154 0 141 4 154 0 142 4 154 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 154 1 86] 
#[1 0 111 0 1 0 111 0 3 1 43 0 5 1 191 0 6 0 111 0 7 0 111 0 8 1 191 0 9 0 111 0 10 0 115 0 11 0 111 0 12 0 111 0 14 1 150 0 15 0 111 0 16 0 111 0 17 0 111 0 18 1 195 0 19 0 111 0 20 0 111 0 21 1 189 0 22 1 150 0 23 1 150 0 26 0 111 0 33 1 150 0 34 1 150 0 35 1 150 0 37 0 111 0 44 0 111 0 45 0 111 0 47 1 150 0 52 1 150 0 54 1 150 0 61 0 111 0 72 1 150 0 74 1 150 0 78 1 150 0 80 1 150 0 81 0 111 0 86 1 150 0 87 1 150 0 88 0 111 0 90 1 150 0 95 0 111 0 100 1 150 0 101 1 150 0 110 1 150 0 116 0 111 0 118 0 111 0 126 1 150 0 127 1 150 0 133 1 150 0 134 1 150 0 135 1 150 0 136 1 150 0 137 1 150 0 138 1 150 0 139 1 150 0 140 1 150 0 141 1 150 0 142 7 77 0 188 7 77 0 189 1 201 0 190 7 77 0 193 7 81 0 209 7 85 0 210 5 13 0 253 5 17 0 255] 
#[1 0 6 0 70 0 6 0 144 9 157 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 161 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 165 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 9 169 0 148] 
#[1 0 6 0 70 0 6 0 144 9 173 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 177 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 9 181 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 185 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 4 158 0 68 4 158 0 69 4 158 0 70 5 97 0 72 5 101 0 86 5 105 0 90 4 158 0 92 4 158 0 94 5 109 0 100 4 158 0 108 5 113 0 118 4 158 0 123 5 117 0 126 4 158 0 135 4 158 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 9 189 0 140 0 125 0 142 9 189 0 163 0 137 0 164 9 189 0 165 9 189 0 166 9 189 0 167 9 189 0 168] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 9 193 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 197 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 9 197 0 247 9 197 0 248 9 197 0 249 9 197 0 250 9 197 0 251 9 197 1 2 9 197 1 3 9 197 1 4 9 197 1 5 9 197 1 6 9 197 1 7 9 197 1 8 9 197 1 9 9 197 1 10 9 197 1 12 9 197 1 14 9 197 1 16 9 197 1 17 9 197 1 18 9 197 1 19 9 197 1 20 9 197 1 21 9 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 201 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 201 0 240 4 197 0 241 4 197 0 242 4 197 0 246 9 201 0 247 9 201 0 248 9 201 0 249 9 201 0 250 9 201 0 251 9 201 1 2 9 201 1 3 9 201 1 4 9 201 1 5 9 201 1 6 9 201 1 7 9 201 1 8 9 201 1 9 9 201 1 10 9 201 1 12 9 201 1 14 9 201 1 16 9 201 1 17 9 201 1 18 9 201 1 19 9 201 1 20 9 201 1 21 9 201 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 0 6 0 92 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 9 205 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 9 209 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 9 213 0 117 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 125 0 81 9 217 0 107 9 221 1 68 9 221 1 69 9 221 1 70] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 2 121 0 80 2 125 0 81 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15 9 225 1 67 9 225 1 68 9 225 1 69 9 225 1 70 9 225 1 71 9 225 1 72 9 225 1 73] 
#[0 4 162 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 1 181 0 11 4 166 0 68 4 166 0 69 4 166 0 70 4 166 0 92 4 166 0 94 4 166 0 108 4 166 0 123 4 166 0 135 4 166 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 9 229 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 9 229 0 151 9 229 0 152 9 229 0 153 9 229 0 154 9 229 0 155 9 229 0 156 9 229 0 157 9 229 0 158 9 229 0 159 9 229 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 9 229 0 240 9 229 0 241 9 229 0 242 9 229 0 246 9 229 0 247 9 229 0 248 9 229 0 249 9 229 0 250 9 229 0 251 9 229 1 2 9 229 1 3 9 229 1 4 9 229 1 5 9 229 1 6 9 229 1 7 9 229 1 8 9 229 1 9 9 229 1 10 9 229 1 12 9 229 1 14 9 229 1 16 9 229 1 17 9 229 1 18 9 229 1 19 9 229 1 20 9 229 1 21 9 229 1 22 9 229 1 26 9 229 1 67 9 229 1 68 9 229 1 69 9 229 1 70 9 229 1 71 9 229 1 72 9 229 1 73 9 229 1 80 9 229 1 81 9 229 1 82 9 229 1 83 9 229 1 84 9 229 1 85] 
#[1 1 162 0 1 1 162 0 3 1 207 0 5 1 162 0 7 1 207 0 8 1 207 0 10 1 207 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 1 162 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 162 0 44 1 162 0 45 1 162 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 162 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 162 0 86 0 6 0 87 0 6 0 88 1 162 0 90 0 6 0 95 0 6 0 97 0 6 0 98 1 162 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 1 162 0 118 0 6 0 119 0 6 0 123 0 6 0 124 0 6 0 125 1 162 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 9 233 0 148] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 9 237 0 148] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 4 170 0 68 4 170 0 69 4 170 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 4 170 0 92 4 170 0 94 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 1 211 0 108 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 4 170 0 123 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 1 211 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 1 211 0 144 9 241 0 148] 
#[1 4 174 0 68 4 174 0 69 4 174 0 70 4 174 0 92 4 174 0 94 4 174 0 108 4 174 0 123 4 174 0 135 1 215 0 144 9 245 0 177 9 249 0 182] 
#[1 9 253 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 10 1 0 148] 
#[0 10 5 0 119] 
#[1 1 177 0 5 1 181 0 11 1 189 0 22 10 9 0 188 10 9 0 189 1 201 0 190 10 9 0 193] 
#[0 4 178 0 11 0 61 0 70 0 78 0 87 0 110 0 116 0 140 0 142 0 144] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 4 182 0 6 5 33 0 7 5 37 0 8 4 182 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 4 186 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 10 13 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 10 13 0 151 10 13 0 152 10 13 0 153 10 13 0 154 10 13 0 155 10 13 0 156 10 13 0 157 10 13 0 158 10 13 0 159 10 13 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 10 13 0 240 10 13 0 241 10 13 0 242 10 13 0 246 10 13 0 247 10 13 0 248 10 13 0 249 10 13 0 250 10 13 0 251 10 13 1 2 10 13 1 3 10 13 1 4 10 13 1 5 10 13 1 6 10 13 1 7 10 13 1 8 10 13 1 9 10 13 1 10 10 13 1 12 10 13 1 14 10 13 1 16 10 13 1 17 10 13 1 18 10 13 1 19 10 13 1 20 10 13 1 21 10 13 1 22 10 13 1 26 10 13 1 67 10 13 1 68 10 13 1 69 10 13 1 70 10 13 1 71 10 13 1 72 10 13 1 73 10 13 1 80 10 13 1 81 10 13 1 82 10 13 1 83 10 13 1 84 10 13 1 85] 
#[1 4 190 0 5 4 190 0 6 10 17 0 7 4 190 0 8 4 190 0 9 4 190 0 10 4 190 0 11 4 190 0 19 4 190 0 23 4 190 0 26 4 190 0 27 4 190 0 28 4 190 0 34 4 190 0 35 4 190 0 37 4 190 0 48 4 190 0 50 4 190 0 59 4 190 0 61 4 190 0 62 4 190 0 64 4 190 0 65 4 190 0 68 4 190 0 69 4 190 0 70 4 190 0 71 4 190 0 73 4 190 0 74 4 190 0 76 4 190 0 77 4 190 0 78 4 190 0 79 4 190 0 80 4 190 0 81 4 190 0 82 4 190 0 83 4 190 0 87 4 190 0 88 4 190 0 92 4 190 0 94 4 190 0 95 4 190 0 97 4 190 0 98 4 190 0 103 4 190 0 104 4 190 0 105 4 190 0 106 4 190 0 107 4 190 0 108 4 190 0 109 4 190 0 110 4 190 0 112 4 190 0 115 4 190 0 116 4 190 0 119 4 190 0 123 4 190 0 124 4 190 0 125 4 190 0 127 4 190 0 133 4 190 0 134 4 190 0 135 4 190 0 136 4 190 0 137 4 190 0 138 4 190 0 139 4 190 0 140 4 190 0 141 4 190 0 142 4 190 0 144 4 190 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 4 194 0 6 4 194 0 7 4 194 0 8 4 194 0 9 4 194 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 4 194 0 19 5 73 0 20 5 77 0 21 4 194 0 23 4 194 0 26 4 194 0 27 4 194 0 28 5 81 0 33 4 194 0 34 4 194 0 35 4 194 0 37 5 85 0 44 5 89 0 45 5 93 0 47 4 194 0 48 4 194 0 50 4 194 0 59 4 194 0 61 4 194 0 62 4 194 0 64 4 194 0 65 4 194 0 68 4 194 0 69 4 194 0 70 4 194 0 71 5 97 0 72 4 194 0 73 4 194 0 74 4 194 0 76 4 194 0 77 4 194 0 78 4 194 0 79 4 194 0 80 4 194 0 81 4 194 0 82 4 194 0 83 5 101 0 86 4 194 0 87 4 194 0 88 5 105 0 90 4 194 0 92 4 194 0 94 4 194 0 95 4 194 0 97 4 194 0 98 5 109 0 100 4 194 0 103 4 194 0 104 4 194 0 105 4 194 0 106 4 194 0 107 4 194 0 108 4 194 0 109 4 194 0 110 4 194 0 112 4 194 0 115 4 194 0 116 5 113 0 118 4 194 0 119 4 194 0 123 4 194 0 124 4 194 0 125 5 117 0 126 4 194 0 127 4 194 0 133 4 194 0 134 4 194 0 135 4 194 0 136 4 194 0 137 4 194 0 138 4 194 0 139 4 194 0 140 4 194 0 141 4 194 0 142 4 194 0 144 5 121 1 11 5 125 1 13 5 129 1 15 4 194 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 10 21 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 10 21 0 151 10 21 0 152 10 21 0 153 10 21 0 154 10 21 0 155 10 21 0 156 10 21 0 157 10 21 0 158 10 21 0 159 10 21 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 10 21 0 240 10 21 0 241 10 21 0 242 10 21 0 246 10 21 0 247 10 21 0 248 10 21 0 249 10 21 0 250 10 21 0 251 10 21 1 2 10 21 1 3 10 21 1 4 10 21 1 5 10 21 1 6 10 21 1 7 10 21 1 8 10 21 1 9 10 21 1 10 10 21 1 12 10 21 1 14 10 21 1 16 10 21 1 17 10 21 1 18 10 21 1 19 10 21 1 20 10 21 1 21 10 21 1 22 10 21 1 26 10 21 1 67 10 21 1 68 10 21 1 69 10 21 1 70 10 21 1 71 10 21 1 72 10 21 1 73 10 21 1 80 10 21 1 81 10 21 1 82 10 21 1 83 10 21 1 84 10 21 1 85] 
#[1 1 177 0 5 4 198 0 6 10 25 0 7 4 198 0 8 4 198 0 9 4 198 0 10 4 198 0 11 4 198 0 19 4 198 0 23 4 198 0 26 4 198 0 27 4 198 0 28 4 198 0 34 4 198 0 35 4 198 0 37 4 198 0 48 4 198 0 50 4 198 0 59 4 198 0 61 4 198 0 62 4 198 0 64 4 198 0 65 4 198 0 68 4 198 0 69 4 198 0 70 4 198 0 71 4 198 0 73 4 198 0 74 4 198 0 76 4 198 0 77 4 198 0 78 4 198 0 79 4 198 0 80 4 198 0 81 4 198 0 82 4 198 0 83 4 198 0 87 4 198 0 88 4 198 0 92 4 198 0 94 4 198 0 95 4 198 0 97 4 198 0 98 4 198 0 103 4 198 0 104 4 198 0 105 4 198 0 106 4 198 0 107 4 198 0 108 4 198 0 109 4 198 0 110 4 198 0 112 4 198 0 115 4 198 0 116 4 198 0 119 4 198 0 123 4 198 0 124 4 198 0 125 4 198 0 127 4 198 0 133 4 198 0 134 4 198 0 135 4 198 0 136 4 198 0 137 4 198 0 138 4 198 0 139 4 198 0 140 4 198 0 141 4 198 0 142 4 198 0 144 10 29 0 190 4 198 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 10 33 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 10 33 0 151 10 33 0 152 10 33 0 153 10 33 0 154 10 33 0 155 10 33 0 156 10 33 0 157 10 33 0 158 10 33 0 159 10 33 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 10 33 0 240 10 33 0 241 10 33 0 242 10 33 0 246 10 33 0 247 10 33 0 248 10 33 0 249 10 33 0 250 10 33 0 251 10 33 1 2 10 33 1 3 10 33 1 4 10 33 1 5 10 33 1 6 10 33 1 7 10 33 1 8 10 33 1 9 10 33 1 10 10 33 1 12 10 33 1 14 10 33 1 16 10 33 1 17 10 33 1 18 10 33 1 19 10 33 1 20 10 33 1 21 10 33 1 22 10 33 1 26 10 33 1 67 10 33 1 68 10 33 1 69 10 33 1 70 10 33 1 71 10 33 1 72 10 33 1 73 10 33 1 80 10 33 1 81 10 33 1 82 10 33 1 83 10 33 1 84 10 33 1 85] 
#[1 4 202 0 5 4 202 0 6 10 37 0 7 4 202 0 8 4 202 0 9 4 202 0 10 4 202 0 11 4 202 0 19 4 202 0 23 4 202 0 26 4 202 0 27 4 202 0 28 4 202 0 34 4 202 0 35 4 202 0 37 4 202 0 48 4 202 0 50 4 202 0 59 4 202 0 61 4 202 0 62 4 202 0 64 4 202 0 65 4 202 0 68 4 202 0 69 4 202 0 70 4 202 0 71 4 202 0 73 4 202 0 74 4 202 0 76 4 202 0 77 4 202 0 78 4 202 0 79 4 202 0 80 4 202 0 81 4 202 0 82 4 202 0 83 4 202 0 87 4 202 0 88 4 202 0 92 4 202 0 94 4 202 0 95 4 202 0 97 4 202 0 98 4 202 0 103 4 202 0 104 4 202 0 105 4 202 0 106 4 202 0 107 4 202 0 108 4 202 0 109 4 202 0 110 4 202 0 112 4 202 0 115 4 202 0 116 4 202 0 119 4 202 0 123 4 202 0 124 4 202 0 125 4 202 0 127 4 202 0 133 4 202 0 134 4 202 0 135 4 202 0 136 4 202 0 137 4 202 0 138 4 202 0 139 4 202 0 140 4 202 0 141 4 202 0 142 4 202 0 144 4 202 1 86] 
#[1 0 17 0 11 0 21 0 48 0 25 0 50 0 29 0 59 0 137 0 61 0 37 0 62 0 41 0 64 0 45 0 71 0 49 0 73 0 185 0 76 0 57 0 77 0 137 0 78 0 185 0 79 0 69 0 83 0 137 0 87 0 77 0 98 0 185 0 103 0 85 0 104 0 185 0 105 0 93 0 106 0 137 0 110 0 101 0 112 0 105 0 115 0 137 0 116 0 113 0 119 0 133 0 140 0 125 0 142 0 129 0 144 0 133 0 163 0 137 0 164 0 133 0 165 0 133 0 166 0 133 0 167 0 133 0 168 6 185 0 170 6 185 0 171 6 185 0 173 6 185 0 174 6 185 0 178 6 185 0 179 0 185 0 185 6 185 0 194 6 185 0 195 6 185 0 199 6 185 0 200 6 185 0 211 6 185 0 212 6 185 0 213 0 217 0 214 6 185 0 215 6 185 0 216 6 185 0 217 6 185 0 218 6 185 0 219 6 185 0 220 6 185 0 221 6 185 0 222 6 185 0 223 6 185 0 224 6 185 0 225 1 9 0 227 6 185 0 228 6 185 0 229 6 185 0 230 6 185 0 231 6 185 0 232 6 185 0 236 6 185 0 239 4 206 1 86] 
#[1 2 157 0 138 10 41 0 158] 
#[1 2 157 0 138 10 45 0 158] 
#[1 0 17 0 11 0 137 0 61 10 49 0 70 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 7 49 0 140 0 125 0 142 0 129 0 144 7 49 0 163 0 137 0 164 7 49 0 165 7 49 0 166 7 49 0 167 7 49 0 168 7 53 0 203] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 53 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 57 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 61 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 65 0 148] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 69 0 148 10 73 0 188 10 73 0 189 1 201 0 190 10 73 0 193] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 77 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 81 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 85 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 89 0 148] 
#[1 0 6 0 70 0 6 0 144 10 93 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 97 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 17 0 11 0 137 0 61 10 101 0 70 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 8 57 0 140 0 125 0 142 0 129 0 144 8 57 0 163 0 137 0 164 8 57 0 165 8 57 0 166 8 57 0 167 8 57 0 168 8 61 0 198] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 105 0 148 10 109 0 188 10 109 0 189 1 201 0 190 10 109 0 193] 
#[1 5 133 0 5 0 6 0 8 0 6 0 10 1 181 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 113 0 148 10 117 0 188 10 117 0 189 1 201 0 190 10 117 0 193 10 121 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 125 0 148 10 129 0 205] 
#[1 2 73 0 5 0 6 0 8 0 6 0 10 1 181 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 133 0 148 10 137 0 205] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 141 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 145 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 149 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 153 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 157 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 161 0 148] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 165 0 148 10 169 0 188 10 169 0 189 1 201 0 190 10 169 0 193] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 173 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 177 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 181 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 10 185 0 148] 
#[1 0 6 0 70 0 6 0 144 10 189 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 10 193 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 4 210 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 4 214 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 95 0 97 0 98 0 103 0 105 0 106 0 107 0 109 0 110 0 112 0 116 0 119 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144] 
#[0 4 218 0 70 0 144] 
#[1 2 157 0 138 10 197 0 158] 
#[1 1 177 0 5 1 189 0 22 10 201 0 188 10 201 0 189 1 201 0 190 10 201 0 193] 
#[1 2 157 0 138 10 205 0 158] 
#[0 4 222 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 4 226 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 10 209 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 10 209 0 151 10 209 0 152 10 209 0 153 10 209 0 154 10 209 0 155 10 209 0 156 10 209 0 157 10 209 0 158 10 209 0 159 10 209 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 10 209 0 240 10 209 0 241 10 209 0 242 10 209 0 246 10 209 0 247 10 209 0 248 10 209 0 249 10 209 0 250 10 209 0 251 10 209 1 2 10 209 1 3 10 209 1 4 10 209 1 5 10 209 1 6 10 209 1 7 10 209 1 8 10 209 1 9 10 209 1 10 10 209 1 12 10 209 1 14 10 209 1 16 10 209 1 17 10 209 1 18 10 209 1 19 10 209 1 20 10 209 1 21 10 209 1 22 10 209 1 26 10 209 1 67 10 209 1 68 10 209 1 69 10 209 1 70 10 209 1 71 10 209 1 72 10 209 1 73 10 209 1 80 10 209 1 81 10 209 1 82 10 209 1 83 10 209 1 84 10 209 1 85] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 10 213 0 188 10 213 0 189 1 201 0 190 10 213 0 193 7 81 0 209 10 217 0 210] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 10 221 0 210] 
#[0 4 230 0 6 0 9] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 10 225 0 140 0 125 0 142 10 225 0 163 0 137 0 164 10 225 0 165 10 225 0 166 10 225 0 167 10 225 0 168] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 10 229 0 188 10 229 0 189 1 201 0 190 10 229 0 193 7 81 0 209 10 233 0 210] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 10 237 0 210] 
#[0 4 234 0 6 0 9] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 4 238 0 6 5 33 0 7 5 37 0 8 4 238 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 4 242 0 6 0 9] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 10 241 0 188 10 241 0 189 1 201 0 190 10 241 0 193 7 81 0 209 10 245 0 210] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 10 249 0 210] 
#[0 4 246 0 6 0 9] 
#[0 4 250 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 97 0 98 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 115 0 116 0 119 0 123 0 124 0 125 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 0 17 0 11 4 145 0 52 4 165 0 54 0 137 0 61 0 137 0 78 0 137 0 87 4 153 0 99 4 157 0 101 0 137 0 110 0 137 0 116 4 161 0 140 0 125 0 142 4 161 0 163 0 137 0 164 4 161 0 165 4 161 0 166 4 161 0 167 4 161 0 168 4 165 0 204 10 253 0 208] 
#[0 4 254 0 6 0 9] 
#[1 11 1 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 11 5 0 148] 
#[0 5 2 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 6 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 10 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 14 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 18 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[1 11 9 0 22 11 41 0 30 11 41 0 31 11 41 0 32 11 25 0 39 11 41 0 40 11 37 0 42 11 37 1 24 11 41 1 25] 
#[1 1 219 0 1 1 223 0 3 1 227 0 5 5 22 0 6 1 231 0 7 1 235 0 8 5 22 0 9 1 239 0 10 1 243 0 11 1 247 0 12 5 22 0 13 1 251 0 14 5 22 0 15 1 255 0 16 2 3 0 17 2 7 0 18 2 11 0 19 2 15 0 20 2 19 0 21 5 22 0 23 5 22 0 26 5 22 0 27 5 22 0 28 2 23 0 33 5 22 0 34 5 22 0 35 5 22 0 37 2 27 0 44 2 31 0 45 2 35 0 47 5 22 0 48 5 22 0 50 5 22 0 59 5 22 0 61 5 22 0 62 5 22 0 64 5 22 0 65 5 22 0 68 5 22 0 69 5 22 0 70 5 22 0 71 2 39 0 72 5 22 0 73 5 22 0 74 5 22 0 76 5 22 0 77 5 22 0 78 5 22 0 79 5 22 0 80 5 22 0 81 5 22 0 82 5 22 0 83 2 43 0 86 5 22 0 87 5 22 0 88 2 47 0 90 5 22 0 92 5 22 0 94 5 22 0 95 5 22 0 97 5 22 0 98 2 51 0 100 5 22 0 103 5 22 0 104 5 22 0 105 5 22 0 106 5 22 0 107 5 22 0 108 5 22 0 109 5 22 0 110 5 22 0 112 5 22 0 113 5 22 0 115 5 22 0 116 5 22 0 117 2 55 0 118 5 22 0 119 5 22 0 123 5 22 0 124 5 22 0 125 2 59 0 126 5 22 0 127 5 22 0 133 5 22 0 134 5 22 0 135 5 22 0 136 5 22 0 137 5 22 0 138 5 22 0 139 5 22 0 140 5 22 0 141 5 22 0 142 5 22 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 22 1 86] 
#[0 5 26 0 10 0 129 0 132] 
#[1 11 45 0 10 11 49 0 132] 
#[1 5 21 0 1 2 63 0 3 5 29 0 5 5 30 0 6 5 33 0 7 5 37 0 8 5 30 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 30 0 13 2 67 0 14 5 30 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 30 0 23 5 30 0 26 5 30 0 27 5 30 0 28 5 81 0 33 5 30 0 34 5 30 0 35 5 30 0 37 2 71 0 44 5 89 0 45 5 93 0 47 5 30 0 48 5 30 0 50 5 30 0 59 5 30 0 61 5 30 0 62 5 30 0 64 5 30 0 65 5 30 0 68 5 30 0 69 5 30 0 70 5 30 0 71 5 97 0 72 5 30 0 73 5 30 0 74 5 30 0 76 5 30 0 77 5 30 0 78 5 30 0 79 5 30 0 80 5 30 0 81 5 30 0 82 5 30 0 83 5 101 0 86 5 30 0 87 5 30 0 88 5 105 0 90 5 30 0 92 5 30 0 94 5 30 0 95 5 30 0 97 5 30 0 98 5 109 0 100 5 30 0 103 5 30 0 104 5 30 0 105 5 30 0 106 5 30 0 107 5 30 0 108 5 30 0 109 5 30 0 110 5 30 0 112 5 30 0 113 5 30 0 115 5 30 0 116 5 30 0 117 2 75 0 118 5 30 0 119 5 30 0 123 5 30 0 124 5 30 0 125 5 117 0 126 5 30 0 127 5 30 0 133 5 30 0 134 5 30 0 135 5 30 0 136 5 30 0 137 5 30 0 138 5 30 0 139 5 30 0 140 5 30 0 141 5 30 0 142 5 30 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 30 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 11 53 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 11 53 0 151 11 53 0 152 11 53 0 153 11 53 0 154 11 53 0 155 11 53 0 156 11 53 0 157 11 53 0 158 11 53 0 159 11 53 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 53 0 240 11 53 0 241 11 53 0 242 11 53 0 246 11 53 0 247 11 53 0 248 11 53 0 249 11 53 0 250 11 53 0 251 11 53 1 2 11 53 1 3 11 53 1 4 11 53 1 5 11 53 1 6 11 53 1 7 11 53 1 8 11 53 1 9 11 53 1 10 11 53 1 12 11 53 1 14 11 53 1 16 11 53 1 17 11 53 1 18 11 53 1 19 11 53 1 20 11 53 1 21 11 53 1 22 11 53 1 26 11 53 1 67 11 53 1 68 11 53 1 69 11 53 1 70 11 53 1 71 11 53 1 72 11 53 1 73 11 53 1 80 11 53 1 81 11 53 1 82 11 53 1 83 11 53 1 84 11 53 1 85] 
#[1 5 21 0 1 2 79 0 3 5 29 0 5 5 34 0 6 5 33 0 7 5 37 0 8 5 34 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 34 0 13 2 83 0 14 5 34 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 34 0 23 5 34 0 26 5 34 0 27 5 34 0 28 5 81 0 33 5 34 0 34 5 34 0 35 5 34 0 37 2 87 0 44 5 89 0 45 5 93 0 47 5 34 0 48 5 34 0 50 5 34 0 59 5 34 0 61 5 34 0 62 5 34 0 64 5 34 0 65 5 34 0 68 5 34 0 69 5 34 0 70 5 34 0 71 5 97 0 72 5 34 0 73 5 34 0 74 5 34 0 76 5 34 0 77 5 34 0 78 5 34 0 79 5 34 0 80 5 34 0 81 5 34 0 82 5 34 0 83 5 101 0 86 5 34 0 87 5 34 0 88 5 105 0 90 5 34 0 92 5 34 0 94 5 34 0 95 5 34 0 97 5 34 0 98 5 109 0 100 5 34 0 103 5 34 0 104 5 34 0 105 5 34 0 106 5 34 0 107 5 34 0 108 5 34 0 109 5 34 0 110 5 34 0 112 5 34 0 113 5 34 0 115 5 34 0 116 5 34 0 117 2 91 0 118 5 34 0 119 5 34 0 123 5 34 0 124 5 34 0 125 5 117 0 126 5 34 0 127 5 34 0 133 5 34 0 134 5 34 0 135 5 34 0 136 5 34 0 137 5 34 0 138 5 34 0 139 5 34 0 140 5 34 0 141 5 34 0 142 5 34 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 34 1 86] 
#[0 5 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 5 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 5 46 0 1 5 46 0 3 5 46 0 5 5 46 0 6 5 46 0 7 5 46 0 8 9 141 0 9 5 46 0 10 5 46 0 11 5 46 0 12 5 46 0 13 5 46 0 14 2 95 0 15 5 46 0 16 5 46 0 17 5 46 0 18 5 46 0 19 5 46 0 20 5 46 0 21 5 46 0 23 5 46 0 26 5 46 0 27 5 46 0 28 5 46 0 33 5 46 0 34 5 46 0 35 5 46 0 37 5 46 0 44 5 46 0 45 5 46 0 47 5 46 0 48 5 46 0 50 5 46 0 59 5 46 0 61 5 46 0 62 5 46 0 64 5 46 0 65 5 46 0 68 5 46 0 69 5 46 0 70 5 46 0 71 5 46 0 72 5 46 0 73 5 46 0 74 5 46 0 76 5 46 0 77 5 46 0 78 5 46 0 79 5 46 0 80 5 46 0 81 5 46 0 82 5 46 0 83 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 90 5 46 0 92 5 46 0 94 5 46 0 95 5 46 0 97 5 46 0 98 5 46 0 100 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 112 5 46 0 113 5 46 0 115 5 46 0 116 5 46 0 117 5 46 0 118 5 46 0 119 5 46 0 123 5 46 0 124 5 46 0 125 5 46 0 126 5 46 0 127 5 46 0 133 5 46 0 134 5 46 0 135 5 46 0 136 5 46 0 137 5 46 0 138 5 46 0 139 5 46 0 140 5 46 0 141 5 46 0 142 5 46 0 144 9 149 1 0 5 46 1 86] 
#[1 5 50 0 1 5 50 0 3 2 85 0 5 5 50 0 6 5 50 0 7 2 89 0 8 5 50 0 9 2 93 0 10 0 17 0 11 5 50 0 12 5 50 0 13 5 50 0 14 5 50 0 15 5 50 0 16 5 50 0 17 5 50 0 18 5 50 0 19 5 50 0 20 5 50 0 21 2 99 0 23 2 103 0 26 5 50 0 27 5 50 0 28 5 50 0 33 2 107 0 34 2 111 0 35 2 115 0 37 5 50 0 44 5 50 0 45 5 50 0 47 5 50 0 48 5 50 0 50 4 145 0 52 7 141 0 54 5 50 0 59 2 119 0 61 5 50 0 62 5 50 0 64 5 50 0 65 5 50 0 68 5 50 0 69 5 50 0 70 5 50 0 71 5 50 0 72 5 50 0 73 2 123 0 74 5 50 0 76 5 50 0 77 2 127 0 78 5 50 0 79 2 131 0 80 2 135 0 81 5 50 0 82 5 50 0 83 5 50 0 86 2 139 0 87 2 143 0 88 5 50 0 90 5 50 0 92 5 50 0 94 2 147 0 95 5 50 0 97 5 50 0 98 5 50 0 100 7 137 0 101 5 50 0 103 5 50 0 104 5 50 0 105 5 50 0 106 5 50 0 107 5 50 0 108 5 50 0 109 2 151 0 110 5 50 0 112 5 50 0 113 5 50 0 115 2 155 0 116 5 50 0 117 5 50 0 118 5 50 0 119 5 50 0 123 5 50 0 124 5 50 0 125 5 50 0 126 2 159 0 127 2 163 0 133 2 167 0 134 2 171 0 135 2 175 0 136 2 179 0 137 2 183 0 138 2 187 0 139 2 191 0 140 2 195 0 141 2 199 0 142 5 50 0 144 7 145 0 151 7 145 0 152 7 145 0 153 7 145 0 154 7 145 0 155 7 145 0 156 7 145 0 157 7 145 0 158 7 145 0 159 7 145 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 141 0 204 7 145 0 240 7 145 0 241 7 145 0 242 7 145 0 246 7 145 0 247 7 145 0 248 7 145 0 249 7 145 0 250 7 145 0 251 11 57 0 252 7 145 1 2 7 145 1 3 7 145 1 4 7 145 1 5 7 145 1 6 7 145 1 7 7 145 1 8 7 145 1 9 7 145 1 10 7 145 1 12 7 145 1 14 7 145 1 16 7 145 1 17 7 145 1 18 7 145 1 19 7 145 1 20 7 145 1 21 7 145 1 22 7 145 1 26 7 145 1 67 7 145 1 68 7 145 1 69 7 145 1 70 7 145 1 71 7 145 1 72 7 145 1 73 7 145 1 80 7 145 1 81 7 145 1 82 7 145 1 83 7 145 1 84 7 145 1 85 5 50 1 86] 
#[1 5 54 0 1 5 54 0 3 2 85 0 5 5 54 0 6 5 54 0 7 2 89 0 8 5 54 0 9 2 93 0 10 0 17 0 11 5 54 0 12 5 54 0 13 5 54 0 14 5 54 0 15 5 54 0 16 5 54 0 17 5 54 0 18 5 54 0 19 5 54 0 20 5 54 0 21 2 203 0 23 2 207 0 26 5 54 0 27 5 54 0 28 5 54 0 33 2 211 0 34 2 215 0 35 2 219 0 37 5 54 0 44 5 54 0 45 5 54 0 47 5 54 0 48 5 54 0 50 4 145 0 52 7 141 0 54 5 54 0 59 2 223 0 61 5 54 0 62 5 54 0 64 5 54 0 65 5 54 0 68 5 54 0 69 5 54 0 70 5 54 0 71 5 54 0 72 5 54 0 73 2 227 0 74 5 54 0 76 5 54 0 77 2 231 0 78 5 54 0 79 2 235 0 80 2 239 0 81 5 54 0 82 5 54 0 83 5 54 0 86 2 243 0 87 2 247 0 88 5 54 0 90 5 54 0 92 5 54 0 94 2 251 0 95 5 54 0 97 5 54 0 98 5 54 0 100 7 137 0 101 5 54 0 103 5 54 0 104 5 54 0 105 5 54 0 106 5 54 0 107 5 54 0 108 5 54 0 109 2 255 0 110 5 54 0 112 5 54 0 113 5 54 0 115 3 3 0 116 5 54 0 117 5 54 0 118 5 54 0 119 5 54 0 123 5 54 0 124 5 54 0 125 5 54 0 126 3 7 0 127 3 11 0 133 3 15 0 134 3 19 0 135 3 23 0 136 3 27 0 137 3 31 0 138 3 35 0 139 3 39 0 140 3 43 0 141 3 47 0 142 5 54 0 144 7 145 0 151 7 145 0 152 7 145 0 153 7 145 0 154 7 145 0 155 7 145 0 156 7 145 0 157 7 145 0 158 7 145 0 159 7 145 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 7 141 0 204 7 145 0 240 7 145 0 241 7 145 0 242 7 145 0 246 7 145 0 247 7 145 0 248 7 145 0 249 7 145 0 250 7 145 0 251 11 61 0 252 7 145 1 2 7 145 1 3 7 145 1 4 7 145 1 5 7 145 1 6 7 145 1 7 7 145 1 8 7 145 1 9 7 145 1 10 7 145 1 12 7 145 1 14 7 145 1 16 7 145 1 17 7 145 1 18 7 145 1 19 7 145 1 20 7 145 1 21 7 145 1 22 7 145 1 26 7 145 1 67 7 145 1 68 7 145 1 69 7 145 1 70 7 145 1 71 7 145 1 72 7 145 1 73 7 145 1 80 7 145 1 81 7 145 1 82 7 145 1 83 7 145 1 84 7 145 1 85 5 54 1 86] 
#[0 5 58 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 5 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 11 65 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 11 69 0 148] 
#[1 0 6 0 70 0 6 0 144 11 73 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 77 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 11 81 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 11 85 0 148] 
#[1 11 89 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 11 93 0 148] 
#[1 1 181 0 11 11 97 0 84] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 11 101 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 11 101 0 151 11 101 0 152 11 101 0 153 11 101 0 154 11 101 0 155 11 101 0 156 11 101 0 157 11 101 0 158 11 101 0 159 11 101 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 101 0 240 11 101 0 241 11 101 0 242 11 101 0 246 11 101 0 247 11 101 0 248 11 101 0 249 11 101 0 250 11 101 0 251 11 101 1 2 11 101 1 3 11 101 1 4 11 101 1 5 11 101 1 6 11 101 1 7 11 101 1 8 11 101 1 9 11 101 1 10 11 101 1 12 11 101 1 14 11 101 1 16 11 101 1 17 11 101 1 18 11 101 1 19 11 101 1 20 11 101 1 21 11 101 1 22 11 101 1 26 11 101 1 67 11 101 1 68 11 101 1 69 11 101 1 70 11 101 1 71 11 101 1 72 11 101 1 73 11 101 1 80 11 101 1 81 11 101 1 82 11 101 1 83 11 101 1 84 11 101 1 85] 
#[1 1 162 0 1 1 162 0 3 1 207 0 5 1 162 0 7 1 207 0 8 1 207 0 10 1 207 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 1 162 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 162 0 44 1 162 0 45 1 162 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 162 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 162 0 86 0 6 0 87 0 6 0 88 1 162 0 90 0 6 0 95 0 6 0 97 0 6 0 98 1 162 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 1 162 0 118 0 6 0 119 0 6 0 124 0 6 0 125 1 162 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 11 105 0 148] 
#[1 1 162 0 1 1 162 0 3 1 207 0 5 1 162 0 7 1 207 0 8 1 207 0 10 1 207 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 1 162 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 162 0 44 1 162 0 45 1 162 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 162 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 162 0 86 0 6 0 87 0 6 0 88 1 162 0 90 0 6 0 92 0 6 0 95 0 6 0 97 0 6 0 98 1 162 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 1 162 0 118 0 6 0 119 0 6 0 124 0 6 0 125 1 162 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 11 109 0 148] 
#[1 11 113 0 92 1 121 0 135 0 129 0 144 11 117 0 153] 
#[1 0 6 0 92 0 6 0 135 0 6 0 144 11 121 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 3 51 0 23 3 55 0 26 0 6 0 27 0 6 0 28 3 59 0 34 3 63 0 35 3 67 0 37 0 6 0 48 0 6 0 59 3 71 0 61 0 6 0 64 0 6 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 71 0 6 0 73 3 75 0 74 0 6 0 76 3 79 0 78 0 6 0 79 3 83 0 80 3 87 0 81 0 6 0 82 3 91 0 87 3 95 0 88 3 99 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 3 103 0 110 0 6 0 112 3 107 0 116 0 6 0 119 0 6 0 124 0 6 0 125 3 111 0 127 3 115 0 133 3 119 0 134 1 199 0 135 3 123 0 136 3 127 0 137 3 131 0 138 3 135 0 139 3 139 0 140 3 143 0 141 3 147 0 142 0 6 0 144 11 125 0 148 11 129 0 151 11 129 0 152 11 129 0 153 11 129 0 154 11 129 0 155 11 129 0 156 11 129 0 157 11 129 0 158 11 129 0 159 11 129 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 129 0 240 11 129 0 241 11 129 0 242 11 129 0 246 11 129 0 247 11 129 0 248 11 129 0 249 11 129 0 250 11 129 0 251 11 129 1 2 11 129 1 3 11 129 1 4 11 129 1 5 11 129 1 6 11 129 1 7 11 129 1 8 11 129 1 9 11 129 1 10 11 129 1 12 11 129 1 14 11 129 1 16 11 129 1 17 11 129 1 18 11 129 1 19 11 129 1 20 11 129 1 21 11 129 1 22 11 129 1 26 11 129 1 67 11 129 1 68 11 129 1 69 11 129 1 70 11 129 1 71 11 129 1 72 11 129 1 73 11 129 1 80 11 129 1 81 11 129 1 82 11 129 1 83 11 129 1 84 11 129 1 85] 
#[0 11 133 0 94] 
#[0 5 66 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 5 70 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 7 21 0 144 11 137 0 177 5 121 1 11 5 125 1 13 5 129 1 15 11 141 1 61 11 145 1 62] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 0 6 0 123 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 11 149 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 153 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 11 157 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 161 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 0 6 0 108 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 11 165 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 169 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 8 237 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 11 173 0 171 11 173 0 173 11 173 0 180 5 229 0 185 11 173 0 194 11 173 0 195 11 173 0 199 11 173 0 200 11 173 0 221 11 173 0 222 11 173 0 223 11 173 0 224 11 173 0 225 1 9 0 227 11 173 0 228 11 173 0 229 11 173 0 230 11 173 0 231 11 173 0 232 11 173 0 236 11 173 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 11 173 1 27 11 173 1 28 11 173 1 29 11 173 1 30 11 173 1 31 11 173 1 32 11 173 1 33 11 173 1 34 11 173 1 35 11 173 1 36 11 173 1 37 11 173 1 38 11 173 1 39 11 173 1 40 11 173 1 41 11 173 1 42 11 173 1 43 11 173 1 44 11 173 1 45 11 173 1 48 11 173 1 54 11 173 1 55 11 173 1 56 11 173 1 57 11 173 1 60 11 173 1 63 11 173 1 64 11 173 1 65 11 173 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 11 173 1 74 11 173 1 75 11 173 1 76 11 173 1 77 11 173 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 5 74 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 11 177 0 115] 
#[1 11 181 0 70 0 129 0 144] 
#[0 5 78 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 11 185 0 7 5 82 0 11 5 82 0 61 5 82 0 70 5 82 0 78 5 82 0 87 5 82 0 110 5 82 0 116 5 82 0 140 5 82 0 142 5 82 0 144] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 86 0 6 5 86 0 7 5 86 0 8 5 86 0 9 5 86 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 86 0 19 5 73 0 20 5 77 0 21 5 86 0 23 5 86 0 26 5 86 0 27 5 86 0 28 5 81 0 33 5 86 0 34 5 86 0 35 5 86 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 86 0 48 5 86 0 50 5 86 0 59 5 86 0 61 5 86 0 62 5 86 0 64 5 86 0 65 5 86 0 68 5 86 0 69 5 86 0 70 5 86 0 71 5 97 0 72 5 86 0 73 5 86 0 74 5 86 0 76 5 86 0 77 5 86 0 78 5 86 0 79 5 86 0 80 5 86 0 81 5 86 0 82 5 86 0 83 5 101 0 86 5 86 0 87 5 86 0 88 5 105 0 90 5 86 0 92 5 86 0 94 5 86 0 95 5 86 0 97 5 86 0 98 5 109 0 100 5 86 0 103 5 86 0 104 5 86 0 105 5 86 0 106 5 86 0 107 5 86 0 108 5 86 0 109 5 86 0 110 5 86 0 112 5 86 0 115 5 86 0 116 5 113 0 118 5 86 0 119 5 86 0 123 5 86 0 124 5 86 0 125 5 117 0 126 5 86 0 127 5 86 0 133 5 86 0 134 5 86 0 135 5 86 0 136 5 86 0 137 5 86 0 138 5 86 0 139 5 86 0 140 5 86 0 141 5 86 0 142 5 86 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 86 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 11 189 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 11 189 0 151 11 189 0 152 11 189 0 153 11 189 0 154 11 189 0 155 11 189 0 156 11 189 0 157 11 189 0 158 11 189 0 159 11 189 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 189 0 240 11 189 0 241 11 189 0 242 11 189 0 246 11 189 0 247 11 189 0 248 11 189 0 249 11 189 0 250 11 189 0 251 11 189 1 2 11 189 1 3 11 189 1 4 11 189 1 5 11 189 1 6 11 189 1 7 11 189 1 8 11 189 1 9 11 189 1 10 11 189 1 12 11 189 1 14 11 189 1 16 11 189 1 17 11 189 1 18 11 189 1 19 11 189 1 20 11 189 1 21 11 189 1 22 11 189 1 26 11 189 1 67 11 189 1 68 11 189 1 69 11 189 1 70 11 189 1 71 11 189 1 72 11 189 1 73 11 189 1 80 11 189 1 81 11 189 1 82 11 189 1 83 11 189 1 84 11 189 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 90 0 6 5 90 0 7 5 90 0 8 5 90 0 9 5 90 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 90 0 19 5 73 0 20 5 77 0 21 5 90 0 23 5 90 0 26 5 90 0 27 5 90 0 28 5 81 0 33 5 90 0 34 5 90 0 35 5 90 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 90 0 48 5 90 0 50 5 90 0 59 5 90 0 61 5 90 0 62 5 90 0 64 5 90 0 65 5 90 0 68 5 90 0 69 5 90 0 70 5 90 0 71 5 97 0 72 5 90 0 73 5 90 0 74 5 90 0 76 5 90 0 77 5 90 0 78 5 90 0 79 5 90 0 80 5 90 0 81 5 90 0 82 5 90 0 83 5 101 0 86 5 90 0 87 5 90 0 88 5 105 0 90 5 90 0 92 5 90 0 94 5 90 0 95 5 90 0 97 5 90 0 98 5 109 0 100 5 90 0 103 5 90 0 104 5 90 0 105 5 90 0 106 5 90 0 107 5 90 0 108 5 90 0 109 5 90 0 110 5 90 0 112 5 90 0 115 5 90 0 116 5 113 0 118 5 90 0 119 5 90 0 123 5 90 0 124 5 90 0 125 5 117 0 126 5 90 0 127 5 90 0 133 5 90 0 134 5 90 0 135 5 90 0 136 5 90 0 137 5 90 0 138 5 90 0 139 5 90 0 140 5 90 0 141 5 90 0 142 5 90 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 90 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 11 193 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 11 193 0 151 11 193 0 152 11 193 0 153 11 193 0 154 11 193 0 155 11 193 0 156 11 193 0 157 11 193 0 158 11 193 0 159 11 193 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 193 0 240 11 193 0 241 11 193 0 242 11 193 0 246 11 193 0 247 11 193 0 248 11 193 0 249 11 193 0 250 11 193 0 251 11 193 1 2 11 193 1 3 11 193 1 4 11 193 1 5 11 193 1 6 11 193 1 7 11 193 1 8 11 193 1 9 11 193 1 10 11 193 1 12 11 193 1 14 11 193 1 16 11 193 1 17 11 193 1 18 11 193 1 19 11 193 1 20 11 193 1 21 11 193 1 22 11 193 1 26 11 193 1 67 11 193 1 68 11 193 1 69 11 193 1 70 11 193 1 71 11 193 1 72 11 193 1 73 11 193 1 80 11 193 1 81 11 193 1 82 11 193 1 83 11 193 1 84 11 193 1 85] 
#[1 5 94 0 5 5 94 0 6 11 197 0 7 5 94 0 8 5 94 0 9 5 94 0 10 5 94 0 11 5 94 0 19 5 94 0 23 5 94 0 26 5 94 0 27 5 94 0 28 5 94 0 34 5 94 0 35 5 94 0 37 5 94 0 48 5 94 0 50 5 94 0 59 5 94 0 61 5 94 0 62 5 94 0 64 5 94 0 65 5 94 0 68 5 94 0 69 5 94 0 70 5 94 0 71 5 94 0 73 5 94 0 74 5 94 0 76 5 94 0 77 5 94 0 78 5 94 0 79 5 94 0 80 5 94 0 81 5 94 0 82 5 94 0 83 5 94 0 87 5 94 0 88 5 94 0 92 5 94 0 94 5 94 0 95 5 94 0 97 5 94 0 98 5 94 0 103 5 94 0 104 5 94 0 105 5 94 0 106 5 94 0 107 5 94 0 108 5 94 0 109 5 94 0 110 5 94 0 112 5 94 0 115 5 94 0 116 5 94 0 119 5 94 0 123 5 94 0 124 5 94 0 125 5 94 0 127 5 94 0 133 5 94 0 134 5 94 0 135 5 94 0 136 5 94 0 137 5 94 0 138 5 94 0 139 5 94 0 140 5 94 0 141 5 94 0 142 5 94 0 144 5 94 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 98 0 6 5 98 0 7 5 98 0 8 5 98 0 9 5 98 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 98 0 19 5 73 0 20 5 77 0 21 5 98 0 23 5 98 0 26 5 98 0 27 5 98 0 28 5 81 0 33 5 98 0 34 5 98 0 35 5 98 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 98 0 48 5 98 0 50 5 98 0 59 5 98 0 61 5 98 0 62 5 98 0 64 5 98 0 65 5 98 0 68 5 98 0 69 5 98 0 70 5 98 0 71 5 97 0 72 5 98 0 73 5 98 0 74 5 98 0 76 5 98 0 77 5 98 0 78 5 98 0 79 5 98 0 80 5 98 0 81 5 98 0 82 5 98 0 83 5 101 0 86 5 98 0 87 5 98 0 88 5 105 0 90 5 98 0 92 5 98 0 94 5 98 0 95 5 98 0 97 5 98 0 98 5 109 0 100 5 98 0 103 5 98 0 104 5 98 0 105 5 98 0 106 5 98 0 107 5 98 0 108 5 98 0 109 5 98 0 110 5 98 0 112 5 98 0 115 5 98 0 116 5 113 0 118 5 98 0 119 5 98 0 123 5 98 0 124 5 98 0 125 5 117 0 126 5 98 0 127 5 98 0 133 5 98 0 134 5 98 0 135 5 98 0 136 5 98 0 137 5 98 0 138 5 98 0 139 5 98 0 140 5 98 0 141 5 98 0 142 5 98 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 98 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 11 201 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 11 201 0 151 11 201 0 152 11 201 0 153 11 201 0 154 11 201 0 155 11 201 0 156 11 201 0 157 11 201 0 158 11 201 0 159 11 201 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 11 201 0 240 11 201 0 241 11 201 0 242 11 201 0 246 11 201 0 247 11 201 0 248 11 201 0 249 11 201 0 250 11 201 0 251 11 201 1 2 11 201 1 3 11 201 1 4 11 201 1 5 11 201 1 6 11 201 1 7 11 201 1 8 11 201 1 9 11 201 1 10 11 201 1 12 11 201 1 14 11 201 1 16 11 201 1 17 11 201 1 18 11 201 1 19 11 201 1 20 11 201 1 21 11 201 1 22 11 201 1 26 11 201 1 67 11 201 1 68 11 201 1 69 11 201 1 70 11 201 1 71 11 201 1 72 11 201 1 73 11 201 1 80 11 201 1 81 11 201 1 82 11 201 1 83 11 201 1 84 11 201 1 85] 
#[1 2 73 0 5 11 205 0 46 11 209 0 205] 
#[1 2 73 0 5 11 213 0 46 11 217 0 205] 
#[0 11 221 0 71] 
#[1 0 6 0 70 0 6 0 144 11 225 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 229 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 11 233 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 237 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 241 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 11 245 0 148] 
#[1 0 6 0 70 0 6 0 144 11 249 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 11 253 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 12 1 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 5 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 12 9 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 12 13 0 148] 
#[0 12 17 0 119] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 21 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 25 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 29 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 33 0 148] 
#[1 1 177 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 189 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 37 0 148 12 41 0 188 12 41 0 189 1 201 0 190 12 41 0 193] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 45 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 49 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 53 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 57 0 148] 
#[1 0 6 0 70 0 6 0 144 12 61 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 65 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 12 69 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 73 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 12 77 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 81 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 85 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 12 89 0 148] 
#[1 0 6 0 70 0 6 0 144 12 93 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 97 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 12 101 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 105 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 12 109 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 12 113 0 148] 
#[1 2 73 0 5 12 117 0 205] 
#[0 5 102 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 73 0 5 12 121 0 205] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 106 0 61 5 106 0 70 5 97 0 72 5 106 0 78 5 101 0 86 5 106 0 87 5 105 0 90 5 109 0 100 5 106 0 110 5 106 0 116 5 113 0 118 5 117 0 126 5 106 0 140 5 106 0 142 5 106 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 12 125 0 210] 
#[0 5 110 0 6 0 9] 
#[0 5 114 0 6 0 9] 
#[1 1 177 0 5 2 222 0 6 2 222 0 9 1 181 0 11 7 73 0 19 1 189 0 22 12 129 0 188 12 129 0 189 1 201 0 190 12 129 0 193 7 81 0 209 12 133 0 210] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 12 137 0 210] 
#[0 5 118 0 6 0 9] 
#[0 5 122 0 6 0 9] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 12 141 0 210] 
#[0 5 126 0 6 0 9] 
#[0 5 130 0 6 0 9] 
#[0 5 134 0 6 0 9] 
#[0 12 145 0 77] 
#[1 12 149 0 70 0 129 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 12 153 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 12 153 0 151 12 153 0 152 12 153 0 153 12 153 0 154 12 153 0 155 12 153 0 156 12 153 0 157 12 153 0 158 12 153 0 159 12 153 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 12 153 0 240 12 153 0 241 12 153 0 242 12 153 0 246 12 153 0 247 12 153 0 248 12 153 0 249 12 153 0 250 12 153 0 251 12 153 1 2 12 153 1 3 12 153 1 4 12 153 1 5 12 153 1 6 12 153 1 7 12 153 1 8 12 153 1 9 12 153 1 10 12 153 1 12 12 153 1 14 12 153 1 16 12 153 1 17 12 153 1 18 12 153 1 19 12 153 1 20 12 153 1 21 12 153 1 22 12 153 1 26 12 153 1 67 12 153 1 68 12 153 1 69 12 153 1 70 12 153 1 71 12 153 1 72 12 153 1 73 12 153 1 80 12 153 1 81 12 153 1 82 12 153 1 83 12 153 1 84 12 153 1 85] 
#[0 5 138 0 22] 
#[0 5 142 0 22] 
#[0 5 146 0 22] 
#[1 5 150 0 22 5 150 0 30 5 150 0 31 5 150 0 32 5 150 0 40 12 157 0 42] 
#[0 5 154 0 22] 
#[0 5 158 0 22 0 30 0 31 0 32 0 40] 
#[1 12 161 0 22 12 165 0 30 12 165 0 31 12 165 0 32 12 165 0 40 12 165 1 25] 
#[0 12 169 0 22] 
#[1 9 109 0 132 12 173 0 162] 
#[0 5 162 0 10 0 129 0 132] 
#[1 5 21 0 1 3 151 0 3 5 29 0 5 5 166 0 6 5 33 0 7 5 37 0 8 5 166 0 9 5 41 0 10 5 45 0 11 5 49 0 12 5 166 0 13 3 155 0 14 5 166 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 166 0 23 5 166 0 26 5 166 0 27 5 166 0 28 5 81 0 33 5 166 0 34 5 166 0 35 5 166 0 37 3 159 0 44 5 89 0 45 5 93 0 47 5 166 0 48 5 166 0 50 5 166 0 59 5 166 0 61 5 166 0 62 5 166 0 64 5 166 0 65 5 166 0 68 5 166 0 69 5 166 0 70 5 166 0 71 5 97 0 72 5 166 0 73 5 166 0 74 5 166 0 76 5 166 0 77 5 166 0 78 5 166 0 79 5 166 0 80 5 166 0 81 5 166 0 82 5 166 0 83 5 101 0 86 5 166 0 87 5 166 0 88 5 105 0 90 5 166 0 92 5 166 0 94 5 166 0 95 5 166 0 97 5 166 0 98 5 109 0 100 5 166 0 103 5 166 0 104 5 166 0 105 5 166 0 106 5 166 0 107 5 166 0 108 5 166 0 109 5 166 0 110 5 166 0 112 5 166 0 113 5 166 0 115 5 166 0 116 5 166 0 117 3 163 0 118 5 166 0 119 5 166 0 123 5 166 0 124 5 166 0 125 5 117 0 126 5 166 0 127 5 166 0 133 5 166 0 134 5 166 0 135 5 166 0 136 5 166 0 137 5 166 0 138 5 166 0 139 5 166 0 140 5 166 0 141 5 166 0 142 5 166 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 166 1 86] 
#[0 5 170 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 5 174 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[0 12 177 0 104] 
#[1 12 181 0 70 0 129 0 144] 
#[1 12 185 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 12 189 0 148] 
#[0 12 193 0 104] 
#[1 12 197 0 70 0 129 0 144] 
#[0 12 201 0 104] 
#[1 12 205 0 70 0 129 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 12 209 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 12 209 0 151 12 209 0 152 12 209 0 153 12 209 0 154 12 209 0 155 12 209 0 156 12 209 0 157 12 209 0 158 12 209 0 159 12 209 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 12 209 0 240 12 209 0 241 12 209 0 242 12 209 0 246 12 209 0 247 12 209 0 248 12 209 0 249 12 209 0 250 12 209 0 251 12 209 1 2 12 209 1 3 12 209 1 4 12 209 1 5 12 209 1 6 12 209 1 7 12 209 1 8 12 209 1 9 12 209 1 10 12 209 1 12 12 209 1 14 12 209 1 16 12 209 1 17 12 209 1 18 12 209 1 19 12 209 1 20 12 209 1 21 12 209 1 22 12 209 1 26 12 209 1 67 12 209 1 68 12 209 1 69 12 209 1 70 12 209 1 71 12 209 1 72 12 209 1 73 12 209 1 80 12 209 1 81 12 209 1 82 12 209 1 83 12 209 1 84 12 209 1 85] 
#[1 5 21 0 1 1 111 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 1 115 0 14 5 57 0 16 5 61 0 17 5 65 0 18 4 138 0 19 5 73 0 20 5 77 0 21 5 81 0 33 1 119 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 3 167 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 217 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 0 6 0 92 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 12 221 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 225 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 178 0 68 5 178 0 69 5 178 0 70 5 178 0 92 5 178 0 94 5 178 0 108 5 178 0 123 12 229 0 124 5 178 0 135 5 178 0 144] 
#[0 12 233 0 92] 
#[1 12 237 0 92 1 121 0 135 0 129 0 144 12 241 0 153] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 12 245 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 12 249 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 3 171 0 68 5 182 0 69 5 182 0 70 5 97 0 72 5 101 0 86 5 105 0 90 5 182 0 92 5 182 0 94 5 109 0 100 5 182 0 108 5 113 0 118 5 182 0 123 5 117 0 126 5 182 0 135 5 182 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 5 186 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 13 1 0 55 8 237 0 144 13 5 1 58] 
#[0 5 190 0 144] 
#[1 7 21 0 144 13 9 0 177 13 13 1 61] 
#[1 13 17 0 123 1 121 0 135 0 129 0 144 13 21 0 153] 
#[1 0 6 0 123 0 6 0 135 0 6 0 144 13 25 0 148] 
#[1 13 29 0 70 1 121 0 135 0 129 0 144 13 33 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 13 37 0 148] 
#[1 13 41 0 108 1 121 0 135 0 129 0 144 13 45 0 153] 
#[1 0 6 0 108 0 6 0 135 0 6 0 144 13 49 0 148] 
#[0 5 194 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 5 198 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 13 53 0 115] 
#[1 1 121 0 135 13 57 0 153] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 202 0 6 5 202 0 7 5 202 0 8 5 202 0 9 5 202 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 202 0 19 5 73 0 20 5 77 0 21 5 202 0 23 5 202 0 26 5 202 0 27 5 202 0 28 5 81 0 33 5 202 0 34 5 202 0 35 5 202 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 202 0 48 5 202 0 50 5 202 0 59 5 202 0 61 5 202 0 62 5 202 0 64 5 202 0 65 5 202 0 68 5 202 0 69 5 202 0 70 5 202 0 71 5 97 0 72 5 202 0 73 5 202 0 74 5 202 0 76 5 202 0 77 5 202 0 78 5 202 0 79 5 202 0 80 5 202 0 81 5 202 0 82 5 202 0 83 5 101 0 86 5 202 0 87 5 202 0 88 5 105 0 90 5 202 0 92 5 202 0 94 5 202 0 95 5 202 0 97 5 202 0 98 5 109 0 100 5 202 0 103 5 202 0 104 5 202 0 105 5 202 0 106 5 202 0 107 5 202 0 108 5 202 0 109 5 202 0 110 5 202 0 112 5 202 0 115 5 202 0 116 5 113 0 118 5 202 0 119 5 202 0 123 5 202 0 124 5 202 0 125 5 117 0 126 5 202 0 127 5 202 0 133 5 202 0 134 5 202 0 135 5 202 0 136 5 202 0 137 5 202 0 138 5 202 0 139 5 202 0 140 5 202 0 141 5 202 0 142 5 202 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 202 1 86] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 206 0 6 5 206 0 7 5 206 0 8 5 206 0 9 5 206 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 206 0 19 5 73 0 20 5 77 0 21 5 206 0 23 5 206 0 26 5 206 0 27 5 206 0 28 5 81 0 33 5 206 0 34 5 206 0 35 5 206 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 206 0 48 5 206 0 50 5 206 0 59 5 206 0 61 5 206 0 62 5 206 0 64 5 206 0 65 5 206 0 68 5 206 0 69 5 206 0 70 5 206 0 71 5 97 0 72 5 206 0 73 5 206 0 74 5 206 0 76 5 206 0 77 5 206 0 78 5 206 0 79 5 206 0 80 5 206 0 81 5 206 0 82 5 206 0 83 5 101 0 86 5 206 0 87 5 206 0 88 5 105 0 90 5 206 0 92 5 206 0 94 5 206 0 95 5 206 0 97 5 206 0 98 5 109 0 100 5 206 0 103 5 206 0 104 5 206 0 105 5 206 0 106 5 206 0 107 5 206 0 108 5 206 0 109 5 206 0 110 5 206 0 112 5 206 0 115 5 206 0 116 5 113 0 118 5 206 0 119 5 206 0 123 5 206 0 124 5 206 0 125 5 117 0 126 5 206 0 127 5 206 0 133 5 206 0 134 5 206 0 135 5 206 0 136 5 206 0 137 5 206 0 138 5 206 0 139 5 206 0 140 5 206 0 141 5 206 0 142 5 206 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 206 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 13 61 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 13 61 0 151 13 61 0 152 13 61 0 153 13 61 0 154 13 61 0 155 13 61 0 156 13 61 0 157 13 61 0 158 13 61 0 159 13 61 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 13 61 0 240 13 61 0 241 13 61 0 242 13 61 0 246 13 61 0 247 13 61 0 248 13 61 0 249 13 61 0 250 13 61 0 251 13 61 1 2 13 61 1 3 13 61 1 4 13 61 1 5 13 61 1 6 13 61 1 7 13 61 1 8 13 61 1 9 13 61 1 10 13 61 1 12 13 61 1 14 13 61 1 16 13 61 1 17 13 61 1 18 13 61 1 19 13 61 1 20 13 61 1 21 13 61 1 22 13 61 1 26 13 61 1 67 13 61 1 68 13 61 1 69 13 61 1 70 13 61 1 71 13 61 1 72 13 61 1 73 13 61 1 80 13 61 1 81 13 61 1 82 13 61 1 83 13 61 1 84 13 61 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 210 0 6 5 210 0 7 5 210 0 8 5 210 0 9 5 210 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 210 0 19 5 73 0 20 5 77 0 21 5 210 0 23 5 210 0 26 5 210 0 27 5 210 0 28 5 81 0 33 5 210 0 34 5 210 0 35 5 210 0 37 5 85 0 44 5 89 0 45 5 93 0 47 5 210 0 48 5 210 0 50 5 210 0 59 5 210 0 61 5 210 0 62 5 210 0 64 5 210 0 65 5 210 0 68 5 210 0 69 5 210 0 70 5 210 0 71 5 97 0 72 5 210 0 73 5 210 0 74 5 210 0 76 5 210 0 77 5 210 0 78 5 210 0 79 5 210 0 80 5 210 0 81 5 210 0 82 5 210 0 83 5 101 0 86 5 210 0 87 5 210 0 88 5 105 0 90 5 210 0 92 5 210 0 94 5 210 0 95 5 210 0 97 5 210 0 98 5 109 0 100 5 210 0 103 5 210 0 104 5 210 0 105 5 210 0 106 5 210 0 107 5 210 0 108 5 210 0 109 5 210 0 110 5 210 0 112 5 210 0 115 5 210 0 116 5 113 0 118 5 210 0 119 5 210 0 123 5 210 0 124 5 210 0 125 5 117 0 126 5 210 0 127 5 210 0 133 5 210 0 134 5 210 0 135 5 210 0 136 5 210 0 137 5 210 0 138 5 210 0 139 5 210 0 140 5 210 0 141 5 210 0 142 5 210 0 144 5 121 1 11 5 125 1 13 5 129 1 15 5 210 1 86] 
#[1 2 157 0 138 13 65 0 158] 
#[1 1 177 0 5 1 189 0 22 13 69 0 188 13 69 0 189 1 201 0 190 13 69 0 193] 
#[1 2 157 0 138 13 73 0 158] 
#[0 5 214 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 5 218 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 13 77 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 81 0 148] 
#[1 13 85 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 89 0 148] 
#[1 0 6 0 70 0 6 0 144 13 93 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 97 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 13 101 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 105 0 148] 
#[1 13 109 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 113 0 148] 
#[0 13 117 0 115] 
#[1 13 121 0 70 0 129 0 144] 
#[0 5 222 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 92 0 94 0 98 0 103 0 104 0 105 0 106 0 108 0 110 0 112 0 115 0 116 0 119 0 123 0 135 0 140 0 142 0 144 1 86] 
#[1 0 6 0 70 0 6 0 144 13 125 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 129 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 13 133 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 137 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 141 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 13 145 0 148] 
#[1 0 6 0 70 0 6 0 144 13 149 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 153 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 6 0 70 0 6 0 144 13 157 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 161 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 13 165 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 169 0 148] 
#[1 13 173 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 177 0 148] 
#[1 13 181 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 185 0 148] 
#[1 0 6 0 70 0 6 0 144 13 189 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 13 193 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 13 197 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 201 0 148] 
#[1 13 205 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 13 209 0 148] 
#[0 13 213 0 115] 
#[1 13 217 0 70 0 129 0 144] 
#[1 1 177 0 5 1 189 0 22 13 221 0 188 13 221 0 189 1 201 0 190 13 221 0 193] 
#[0 5 226 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 5 230 0 6 0 9] 
#[1 2 222 0 6 2 222 0 9 7 73 0 19 7 81 0 209 13 225 0 210] 
#[0 5 234 0 6 0 9] 
#[0 5 238 0 6 0 9] 
#[0 5 242 0 6 0 9] 
#[0 5 246 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 13 229 0 77] 
#[1 5 21 0 1 3 175 0 3 13 233 0 5 5 250 0 6 5 33 0 7 13 237 0 8 5 250 0 9 13 241 0 10 13 245 0 11 5 49 0 12 5 250 0 13 3 179 0 14 5 250 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 3 183 0 23 3 187 0 26 5 250 0 27 5 250 0 28 5 81 0 33 3 191 0 34 3 195 0 35 3 199 0 37 3 203 0 44 5 89 0 45 5 93 0 47 5 250 0 48 5 250 0 50 5 250 0 59 3 207 0 61 5 250 0 62 5 250 0 64 5 250 0 65 5 250 0 68 5 250 0 69 5 250 0 70 5 250 0 71 5 97 0 72 5 250 0 73 3 211 0 74 5 250 0 76 5 250 0 77 3 215 0 78 5 250 0 79 3 219 0 80 3 223 0 81 5 250 0 82 5 250 0 83 5 101 0 86 3 227 0 87 3 231 0 88 5 105 0 90 5 250 0 92 5 250 0 94 3 235 0 95 5 250 0 97 5 250 0 98 5 109 0 100 5 250 0 103 5 250 0 104 5 250 0 105 5 250 0 106 5 250 0 107 5 250 0 108 5 250 0 109 3 239 0 110 5 250 0 112 5 250 0 113 5 250 0 115 3 243 0 116 5 250 0 117 3 247 0 118 5 250 0 119 5 250 0 123 5 250 0 124 5 250 0 125 5 117 0 126 3 251 0 127 3 255 0 133 4 3 0 134 4 7 0 135 4 11 0 136 4 15 0 137 4 19 0 138 4 23 0 139 4 27 0 140 4 31 0 141 4 35 0 142 5 250 0 144 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 197 0 250 4 197 0 251 4 197 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 5 121 1 11 4 197 1 12 5 125 1 13 4 197 1 14 5 129 1 15 4 197 1 16 4 197 1 17 13 249 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85 5 250 1 86] 
#[0 5 254 0 22 0 30 0 31 0 32 0 40] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 13 253 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 13 253 0 151 13 253 0 152 13 253 0 153 13 253 0 154 13 253 0 155 13 253 0 156 13 253 0 157 13 253 0 158 13 253 0 159 13 253 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 13 253 0 240 13 253 0 241 13 253 0 242 13 253 0 246 13 253 0 247 13 253 0 248 13 253 0 249 13 253 0 250 13 253 0 251 13 253 1 2 13 253 1 3 13 253 1 4 13 253 1 5 13 253 1 6 13 253 1 7 13 253 1 8 13 253 1 9 13 253 1 10 13 253 1 12 13 253 1 14 13 253 1 16 13 253 1 17 13 253 1 18 13 253 1 19 13 253 1 20 13 253 1 21 13 253 1 22 13 253 1 26 13 253 1 67 13 253 1 68 13 253 1 69 13 253 1 70 13 253 1 71 13 253 1 72 13 253 1 73 13 253 1 80 13 253 1 81 13 253 1 82 13 253 1 83 13 253 1 84 13 253 1 85] 
#[0 14 1 0 22] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 5 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 14 5 0 151 14 5 0 152 14 5 0 153 14 5 0 154 14 5 0 155 14 5 0 156 14 5 0 157 14 5 0 158 14 5 0 159 14 5 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 5 0 240 14 5 0 241 14 5 0 242 14 5 0 246 14 5 0 247 14 5 0 248 14 5 0 249 14 5 0 250 14 5 0 251 14 5 1 2 14 5 1 3 14 5 1 4 14 5 1 5 14 5 1 6 14 5 1 7 14 5 1 8 14 5 1 9 14 5 1 10 14 5 1 12 14 5 1 14 14 5 1 16 14 5 1 17 14 5 1 18 14 5 1 19 14 5 1 20 14 5 1 21 14 5 1 22 14 5 1 26 14 5 1 67 14 5 1 68 14 5 1 69 14 5 1 70 14 5 1 71 14 5 1 72 14 5 1 73 14 5 1 80 14 5 1 81 14 5 1 82 14 5 1 83 14 5 1 84 14 5 1 85] 
#[1 14 9 0 10 11 49 0 132] 
#[0 6 2 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 14 13 0 104] 
#[0 14 17 0 104] 
#[1 14 21 0 70 0 129 0 144] 
#[0 6 6 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 14 25 0 104] 
#[0 6 10 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 14 29 0 104] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 5 81 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 85 0 44 5 89 0 45 5 93 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 97 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 101 0 86 0 6 0 87 0 6 0 88 5 105 0 90 0 6 0 94 0 6 0 95 0 6 0 97 0 6 0 98 5 109 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 5 113 0 118 0 6 0 119 0 6 0 124 0 6 0 125 5 117 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 14 33 0 148 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 37 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 14 37 0 151 14 37 0 152 14 37 0 153 14 37 0 154 14 37 0 155 14 37 0 156 14 37 0 157 14 37 0 158 14 37 0 159 14 37 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 37 0 240 14 37 0 241 14 37 0 242 14 37 0 246 14 37 0 247 14 37 0 248 14 37 0 249 14 37 0 250 14 37 0 251 14 37 1 2 14 37 1 3 14 37 1 4 14 37 1 5 14 37 1 6 14 37 1 7 14 37 1 8 14 37 1 9 14 37 1 10 14 37 1 12 14 37 1 14 14 37 1 16 14 37 1 17 14 37 1 18 14 37 1 19 14 37 1 20 14 37 1 21 14 37 1 22 14 37 1 26 14 37 1 67 14 37 1 68 14 37 1 69 14 37 1 70 14 37 1 71 14 37 1 72 14 37 1 73 14 37 1 80 14 37 1 81 14 37 1 82 14 37 1 83 14 37 1 84 14 37 1 85] 
#[1 0 6 0 92 0 6 0 135 0 6 0 144 14 41 0 148] 
#[1 14 45 0 92 1 121 0 135 0 129 0 144 14 49 0 153] 
#[1 0 6 0 92 0 6 0 135 0 6 0 144 14 53 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 57 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 57 0 240 4 197 0 241 4 197 0 242 4 197 0 246 14 57 0 247 14 57 0 248 14 57 0 249 14 57 0 250 14 57 0 251 14 57 1 2 14 57 1 3 14 57 1 4 14 57 1 5 14 57 1 6 14 57 1 7 14 57 1 8 14 57 1 9 14 57 1 10 14 57 1 12 14 57 1 14 14 57 1 16 14 57 1 17 14 57 1 18 14 57 1 19 14 57 1 20 14 57 1 21 14 57 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 6 14 0 68 6 14 0 69 6 14 0 70 6 14 0 92 6 14 0 94 6 14 0 108 6 14 0 123 14 61 0 124 6 14 0 135 6 14 0 144] 
#[1 6 18 0 68 6 18 0 69 6 18 0 70 6 18 0 92 6 18 0 94 6 18 0 108 14 65 0 120 6 18 0 123 14 69 0 124 6 18 0 135 6 18 0 144] 
#[0 14 73 0 92] 
#[1 14 77 0 68 14 81 0 69 14 85 0 70 1 121 0 135 0 129 0 144 14 89 0 153 14 93 1 46 14 97 1 47 14 93 1 49 14 93 1 50 14 93 1 51] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 135 0 6 0 144 14 113 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 117 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 14 117 0 151 14 117 0 152 14 117 0 153 14 117 0 154 14 117 0 155 14 117 0 156 14 117 0 157 14 117 0 158 14 117 0 159 14 117 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 117 0 240 14 117 0 241 14 117 0 242 14 117 0 246 14 117 0 247 14 117 0 248 14 117 0 249 14 117 0 250 14 117 0 251 14 117 1 2 14 117 1 3 14 117 1 4 14 117 1 5 14 117 1 6 14 117 1 7 14 117 1 8 14 117 1 9 14 117 1 10 14 117 1 12 14 117 1 14 14 117 1 16 14 117 1 17 14 117 1 18 14 117 1 19 14 117 1 20 14 117 1 21 14 117 1 22 14 117 1 26 14 117 1 67 14 117 1 68 14 117 1 69 14 117 1 70 14 117 1 71 14 117 1 72 14 117 1 73 14 117 1 80 14 117 1 81 14 117 1 82 14 117 1 83 14 117 1 84 14 117 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 121 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 14 121 0 151 14 121 0 152 14 121 0 153 14 121 0 154 14 121 0 155 14 121 0 156 14 121 0 157 14 121 0 158 14 121 0 159 14 121 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 121 0 240 14 121 0 241 14 121 0 242 14 121 0 246 14 121 0 247 14 121 0 248 14 121 0 249 14 121 0 250 14 121 0 251 14 121 1 2 14 121 1 3 14 121 1 4 14 121 1 5 14 121 1 6 14 121 1 7 14 121 1 8 14 121 1 9 14 121 1 10 14 121 1 12 14 121 1 14 14 121 1 16 14 121 1 17 14 121 1 18 14 121 1 19 14 121 1 20 14 121 1 21 14 121 1 22 14 121 1 26 14 121 1 67 14 121 1 68 14 121 1 69 14 121 1 70 14 121 1 71 14 121 1 72 14 121 1 73 14 121 1 80 14 121 1 81 14 121 1 82 14 121 1 83 14 121 1 84 14 121 1 85] 
#[0 6 22 0 144] 
#[1 14 125 0 55 14 129 0 70 1 121 0 135 8 237 0 144 14 133 0 153 13 5 1 58 14 137 1 59] 
#[0 6 26 0 144] 
#[0 6 30 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 14 141 0 123] 
#[1 14 145 0 123 1 121 0 135 0 129 0 144 14 149 0 153] 
#[0 14 153 0 125] 
#[0 14 157 0 70] 
#[1 14 161 0 70 1 121 0 135 0 129 0 144 14 165 0 153] 
#[0 6 34 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 14 169 0 108] 
#[1 14 173 0 108 1 121 0 135 0 129 0 144 14 177 0 153] 
#[0 6 38 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 6 42 0 11 0 61 0 70 0 78 0 87 0 110 0 116 0 140 0 142 0 144] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 6 46 0 6 6 46 0 7 6 46 0 8 6 46 0 9 6 46 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 6 46 0 19 5 73 0 20 5 77 0 21 6 46 0 23 6 46 0 26 6 46 0 27 6 46 0 28 5 81 0 33 6 46 0 34 6 46 0 35 6 46 0 37 5 85 0 44 5 89 0 45 5 93 0 47 6 46 0 48 6 46 0 50 6 46 0 59 6 46 0 61 6 46 0 62 6 46 0 64 6 46 0 65 6 46 0 68 6 46 0 69 6 46 0 70 6 46 0 71 5 97 0 72 6 46 0 73 6 46 0 74 6 46 0 76 6 46 0 77 6 46 0 78 6 46 0 79 6 46 0 80 6 46 0 81 6 46 0 82 6 46 0 83 5 101 0 86 6 46 0 87 6 46 0 88 5 105 0 90 6 46 0 92 6 46 0 94 6 46 0 95 6 46 0 97 6 46 0 98 5 109 0 100 6 46 0 103 6 46 0 104 6 46 0 105 6 46 0 106 6 46 0 107 6 46 0 108 6 46 0 109 6 46 0 110 6 46 0 112 6 46 0 115 6 46 0 116 5 113 0 118 6 46 0 119 6 46 0 123 6 46 0 124 6 46 0 125 5 117 0 126 6 46 0 127 6 46 0 133 6 46 0 134 6 46 0 135 6 46 0 136 6 46 0 137 6 46 0 138 6 46 0 139 6 46 0 140 6 46 0 141 6 46 0 142 6 46 0 144 5 121 1 11 5 125 1 13 5 129 1 15 6 46 1 86] 
#[1 2 73 0 5 14 181 0 205] 
#[0 6 50 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 73 0 5 14 185 0 205] 
#[0 14 189 0 77] 
#[1 14 193 0 70 0 129 0 144] 
#[0 14 197 0 104] 
#[1 14 201 0 70 0 129 0 144] 
#[1 14 205 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 14 209 0 148] 
#[0 14 213 0 104] 
#[1 14 217 0 70 0 129 0 144] 
#[0 14 221 0 104] 
#[1 14 225 0 70 0 129 0 144] 
#[0 6 54 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 14 229 0 115] 
#[1 14 233 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 14 237 0 148] 
#[1 14 241 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 14 245 0 148] 
#[1 0 6 0 70 0 6 0 144 14 249 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 14 253 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 15 1 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 15 5 0 148] 
#[1 15 9 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 15 13 0 148] 
#[0 15 17 0 115] 
#[1 15 21 0 70 0 129 0 144] 
#[0 15 25 0 77] 
#[1 15 29 0 70 0 129 0 144] 
#[0 15 33 0 104] 
#[1 15 37 0 70 0 129 0 144] 
#[1 15 41 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 15 45 0 148] 
#[0 15 49 0 104] 
#[1 15 53 0 70 0 129 0 144] 
#[0 15 57 0 104] 
#[1 15 61 0 70 0 129 0 144] 
#[0 6 58 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 15 65 0 115] 
#[0 6 62 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 6 66 0 6 0 9] 
#[0 6 70 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 85 0 5 1 150 0 6 2 89 0 8 1 150 0 9 2 93 0 10 0 17 0 11 1 150 0 15 4 39 0 23 4 43 0 26 4 47 0 34 4 51 0 35 4 55 0 37 1 150 0 52 1 150 0 54 4 59 0 61 4 63 0 74 4 67 0 78 4 71 0 80 4 75 0 81 4 79 0 87 4 83 0 88 4 87 0 95 1 150 0 101 4 91 0 110 4 95 0 116 4 99 0 127 4 103 0 133 4 107 0 134 4 111 0 135 4 115 0 136 4 119 0 137 4 123 0 138 4 127 0 139 4 131 0 140 4 135 0 141 4 139 0 142 4 181 0 151 4 181 0 152 4 181 0 153 4 181 0 154 4 181 0 155 4 181 0 156 4 181 0 157 4 181 0 158 4 181 0 159 4 181 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 181 0 240 4 181 0 241 4 181 0 242 4 181 0 246 4 181 0 247 4 181 0 248 4 181 0 249 4 181 0 250 4 181 0 251 7 169 0 253 5 17 0 255 4 181 1 2 4 181 1 3 4 181 1 4 4 181 1 5 4 181 1 6 4 181 1 7 4 181 1 8 4 181 1 9 4 181 1 10 4 181 1 12 4 181 1 14 4 181 1 16 4 181 1 17 4 181 1 18 4 181 1 19 4 181 1 20 4 181 1 21 4 181 1 22 4 181 1 26 4 181 1 67 4 181 1 68 4 181 1 69 4 181 1 70 4 181 1 71 4 181 1 72 4 181 1 73 4 181 1 80 4 181 1 81 4 181 1 82 4 181 1 83 4 181 1 84 4 181 1 85] 
#[1 2 85 0 5 3 54 0 8 3 54 0 10 0 17 0 11 4 143 0 23 4 147 0 26 4 151 0 34 4 155 0 35 4 159 0 37 4 163 0 61 4 167 0 74 4 171 0 78 4 175 0 80 4 179 0 81 4 183 0 87 4 187 0 88 4 191 0 95 4 195 0 110 4 199 0 116 4 203 0 127 4 207 0 133 4 211 0 134 4 215 0 135 4 219 0 136 4 223 0 137 4 227 0 138 4 231 0 139 4 235 0 140 4 239 0 141 4 243 0 142 4 185 0 151 4 185 0 152 4 185 0 153 4 185 0 154 4 185 0 155 4 185 0 156 4 185 0 157 4 185 0 158 4 185 0 159 4 185 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 185 0 240 4 185 0 241 4 185 0 242 4 185 0 246 4 185 0 247 4 185 0 248 4 185 0 249 4 185 0 250 4 185 0 251 4 185 1 2 4 185 1 3 4 185 1 4 4 185 1 5 4 185 1 6 4 185 1 7 4 185 1 8 4 185 1 9 4 185 1 10 4 185 1 12 4 185 1 14 4 185 1 16 4 185 1 17 4 185 1 18 4 185 1 19 4 185 1 20 4 185 1 21 4 185 1 22 4 185 1 26 4 185 1 67 4 185 1 68 4 185 1 69 4 185 1 70 4 185 1 71 4 185 1 72 4 185 1 73 4 185 1 80 4 185 1 81 4 185 1 82 4 185 1 83 4 185 1 84 4 185 1 85] 
#[1 2 85 0 5 3 58 0 8 3 58 0 10 0 17 0 11 4 247 0 23 4 251 0 26 4 255 0 34 5 3 0 35 5 7 0 37 5 11 0 61 5 15 0 74 5 19 0 78 5 23 0 80 5 27 0 81 5 31 0 87 5 35 0 88 5 39 0 95 5 43 0 110 5 47 0 116 5 51 0 127 5 55 0 133 5 59 0 134 5 63 0 135 5 67 0 136 5 71 0 137 5 75 0 138 5 79 0 139 5 83 0 140 5 87 0 141 5 91 0 142 4 189 0 151 4 189 0 152 4 189 0 153 4 189 0 154 4 189 0 155 4 189 0 156 4 189 0 157 4 189 0 158 4 189 0 159 4 189 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 189 0 240 4 189 0 241 4 189 0 242 4 189 0 246 4 189 0 247 4 189 0 248 4 189 0 249 4 189 0 250 4 189 0 251 4 189 1 2 4 189 1 3 4 189 1 4 4 189 1 5 4 189 1 6 4 189 1 7 4 189 1 8 4 189 1 9 4 189 1 10 4 189 1 12 4 189 1 14 4 189 1 16 4 189 1 17 4 189 1 18 4 189 1 19 4 189 1 20 4 189 1 21 4 189 1 22 4 189 1 26 4 189 1 67 4 189 1 68 4 189 1 69 4 189 1 70 4 189 1 71 4 189 1 72 4 189 1 73 4 189 1 80 4 189 1 81 4 189 1 82 4 189 1 83 4 189 1 84 4 189 1 85] 
#[1 0 17 0 11 0 137 0 61 0 137 0 78 0 137 0 87 0 137 0 110 0 137 0 116 15 69 0 140 0 125 0 142 15 69 0 163 0 137 0 164 15 69 0 165 15 69 0 166 15 69 0 167 15 69 0 168] 
#[1 5 95 0 1 5 95 0 3 5 95 0 5 6 74 0 6 5 95 0 7 5 95 0 8 6 74 0 9 5 95 0 10 5 95 0 11 5 95 0 12 6 74 0 13 5 95 0 14 6 74 0 15 5 95 0 16 5 95 0 17 5 95 0 18 5 95 0 19 5 95 0 20 5 95 0 21 6 74 0 23 6 74 0 26 6 74 0 27 6 74 0 28 5 95 0 33 6 74 0 34 6 74 0 35 6 74 0 37 5 95 0 44 5 95 0 45 5 95 0 47 6 74 0 48 6 74 0 50 6 74 0 59 6 74 0 61 6 74 0 62 6 74 0 64 6 74 0 65 6 74 0 68 6 74 0 69 6 74 0 70 6 74 0 71 5 95 0 72 6 74 0 73 6 74 0 74 6 74 0 76 6 74 0 77 6 74 0 78 6 74 0 79 6 74 0 80 6 74 0 81 6 74 0 82 6 74 0 83 5 95 0 86 6 74 0 87 6 74 0 88 5 95 0 90 6 74 0 92 6 74 0 94 6 74 0 95 6 74 0 97 6 74 0 98 5 95 0 100 6 74 0 103 6 74 0 104 6 74 0 105 6 74 0 106 6 74 0 107 6 74 0 108 6 74 0 109 6 74 0 110 6 74 0 112 6 74 0 113 6 74 0 115 6 74 0 116 6 74 0 117 5 95 0 118 6 74 0 119 6 74 0 123 6 74 0 124 6 74 0 125 5 95 0 126 6 74 0 127 6 74 0 133 6 74 0 134 6 74 0 135 6 74 0 136 6 74 0 137 6 74 0 138 6 74 0 139 6 74 0 140 6 74 0 141 6 74 0 142 6 74 0 144 6 74 1 86] 
#[1 5 21 0 1 5 99 0 3 13 233 0 5 6 78 0 6 5 33 0 7 13 237 0 8 6 78 0 9 13 241 0 10 13 245 0 11 5 49 0 12 6 78 0 13 5 103 0 14 6 78 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 107 0 23 5 111 0 26 6 78 0 27 6 78 0 28 5 81 0 33 5 115 0 34 5 119 0 35 5 123 0 37 5 127 0 44 5 89 0 45 5 93 0 47 6 78 0 48 6 78 0 50 6 78 0 59 5 131 0 61 6 78 0 62 6 78 0 64 6 78 0 65 6 78 0 68 6 78 0 69 6 78 0 70 6 78 0 71 5 97 0 72 6 78 0 73 5 135 0 74 6 78 0 76 6 78 0 77 5 139 0 78 6 78 0 79 5 143 0 80 5 147 0 81 6 78 0 82 6 78 0 83 5 101 0 86 5 151 0 87 5 155 0 88 5 105 0 90 6 78 0 92 6 78 0 94 5 159 0 95 6 78 0 97 6 78 0 98 5 109 0 100 6 78 0 103 6 78 0 104 6 78 0 105 6 78 0 106 6 78 0 107 6 78 0 108 6 78 0 109 5 163 0 110 6 78 0 112 6 78 0 113 6 78 0 115 5 167 0 116 6 78 0 117 5 171 0 118 6 78 0 119 6 78 0 123 6 78 0 124 6 78 0 125 5 117 0 126 5 175 0 127 5 179 0 133 5 183 0 134 5 187 0 135 5 191 0 136 5 195 0 137 5 199 0 138 5 203 0 139 5 207 0 140 5 211 0 141 5 215 0 142 6 78 0 144 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 197 0 250 4 197 0 251 4 197 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 5 121 1 11 4 197 1 12 5 125 1 13 4 197 1 14 5 129 1 15 4 197 1 16 4 197 1 17 15 73 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85 6 78 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 15 77 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 15 77 0 151 15 77 0 152 15 77 0 153 15 77 0 154 15 77 0 155 15 77 0 156 15 77 0 157 15 77 0 158 15 77 0 159 15 77 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 15 77 0 240 15 77 0 241 15 77 0 242 15 77 0 246 15 77 0 247 15 77 0 248 15 77 0 249 15 77 0 250 15 77 0 251 15 77 1 2 15 77 1 3 15 77 1 4 15 77 1 5 15 77 1 6 15 77 1 7 15 77 1 8 15 77 1 9 15 77 1 10 15 77 1 12 15 77 1 14 15 77 1 16 15 77 1 17 15 77 1 18 15 77 1 19 15 77 1 20 15 77 1 21 15 77 1 22 15 77 1 26 15 77 1 67 15 77 1 68 15 77 1 69 15 77 1 70 15 77 1 71 15 77 1 72 15 77 1 73 15 77 1 80 15 77 1 81 15 77 1 82 15 77 1 83 15 77 1 84 15 77 1 85] 
#[1 5 21 0 1 5 219 0 3 13 233 0 5 6 82 0 6 5 33 0 7 13 237 0 8 6 82 0 9 13 241 0 10 13 245 0 11 5 49 0 12 6 82 0 13 5 223 0 14 6 82 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 227 0 23 5 231 0 26 6 82 0 27 6 82 0 28 5 81 0 33 5 235 0 34 5 239 0 35 5 243 0 37 5 247 0 44 5 89 0 45 5 93 0 47 6 82 0 48 6 82 0 50 6 82 0 59 5 251 0 61 6 82 0 62 6 82 0 64 6 82 0 65 6 82 0 68 6 82 0 69 6 82 0 70 6 82 0 71 5 97 0 72 6 82 0 73 5 255 0 74 6 82 0 76 6 82 0 77 6 3 0 78 6 82 0 79 6 7 0 80 6 11 0 81 6 82 0 82 6 82 0 83 5 101 0 86 6 15 0 87 6 19 0 88 5 105 0 90 6 82 0 92 6 82 0 94 6 23 0 95 6 82 0 97 6 82 0 98 5 109 0 100 6 82 0 103 6 82 0 104 6 82 0 105 6 82 0 106 6 82 0 107 6 82 0 108 6 82 0 109 6 27 0 110 6 82 0 112 6 82 0 113 6 82 0 115 6 31 0 116 6 82 0 117 6 35 0 118 6 82 0 119 6 82 0 123 6 82 0 124 6 82 0 125 5 117 0 126 6 39 0 127 6 43 0 133 6 47 0 134 6 51 0 135 6 55 0 136 6 59 0 137 6 63 0 138 6 67 0 139 6 71 0 140 6 75 0 141 6 79 0 142 6 82 0 144 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 197 0 250 4 197 0 251 4 197 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 5 121 1 11 4 197 1 12 5 125 1 13 4 197 1 14 5 129 1 15 4 197 1 16 4 197 1 17 15 81 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85 6 82 1 86] 
#[1 9 109 0 132 15 85 0 162] 
#[0 6 86 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 6 90 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 15 89 0 104] 
#[0 6 94 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 6 98 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 0 6 0 94 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 15 93 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 15 97 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 21 0 1 1 127 0 3 6 83 0 5 5 33 0 7 6 87 0 8 6 91 0 10 6 95 0 11 5 49 0 12 1 131 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 5 81 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 135 0 44 5 89 0 45 5 93 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 97 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 101 0 86 0 6 0 87 0 6 0 88 5 105 0 90 0 6 0 94 0 6 0 95 0 6 0 97 0 6 0 98 5 109 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 15 101 0 113 0 6 0 116 1 139 0 118 0 6 0 119 0 6 0 124 0 6 0 125 5 117 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 15 105 0 148 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 15 109 0 92 1 121 0 135 0 129 0 144 15 113 0 153] 
#[0 6 102 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 15 117 0 92] 
#[1 15 121 0 92 1 121 0 135 0 129 0 144 15 125 0 153] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 6 106 0 68 6 106 0 69 6 106 0 70 1 162 0 72 1 162 0 86 1 162 0 90 6 106 0 92 6 106 0 94 1 162 0 100 6 106 0 108 1 162 0 118 6 106 0 123 1 162 0 126 6 106 0 135 6 106 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 15 129 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 15 129 0 240 4 197 0 241 4 197 0 242 4 197 0 246 15 129 0 247 15 129 0 248 15 129 0 249 15 129 0 250 15 129 0 251 15 129 1 2 15 129 1 3 15 129 1 4 15 129 1 5 15 129 1 6 15 129 1 7 15 129 1 8 15 129 1 9 15 129 1 10 15 129 1 12 15 129 1 14 15 129 1 16 15 129 1 17 15 129 1 18 15 129 1 19 15 129 1 20 15 129 1 21 15 129 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 15 133 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 15 133 0 240 4 197 0 241 4 197 0 242 4 197 0 246 15 133 0 247 15 133 0 248 15 133 0 249 15 133 0 250 15 133 0 251 15 133 1 2 15 133 1 3 15 133 1 4 15 133 1 5 15 133 1 6 15 133 1 7 15 133 1 8 15 133 1 9 15 133 1 10 15 133 1 12 15 133 1 14 15 133 1 16 15 133 1 17 15 133 1 18 15 133 1 19 15 133 1 20 15 133 1 21 15 133 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 15 137 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 15 137 0 240 4 197 0 241 4 197 0 242 4 197 0 246 15 137 0 247 15 137 0 248 15 137 0 249 15 137 0 250 15 137 0 251 15 137 1 2 15 137 1 3 15 137 1 4 15 137 1 5 15 137 1 6 15 137 1 7 15 137 1 8 15 137 1 9 15 137 1 10 15 137 1 12 15 137 1 14 15 137 1 16 15 137 1 17 15 137 1 18 15 137 1 19 15 137 1 20 15 137 1 21 15 137 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 6 110 0 68 6 110 0 69 6 110 0 70 6 110 0 92 6 110 0 94 6 110 0 108 15 141 0 120 6 110 0 123 15 145 0 124 6 110 0 135 6 110 0 144] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 15 149 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 15 153 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 15 153 0 151 15 153 0 152 15 153 0 153 15 153 0 154 15 153 0 155 15 153 0 156 15 153 0 157 15 153 0 158 15 153 0 159 15 153 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 15 153 0 240 15 153 0 241 15 153 0 242 15 153 0 246 15 153 0 247 15 153 0 248 15 153 0 249 15 153 0 250 15 153 0 251 15 153 1 2 15 153 1 3 15 153 1 4 15 153 1 5 15 153 1 6 15 153 1 7 15 153 1 8 15 153 1 9 15 153 1 10 15 153 1 12 15 153 1 14 15 153 1 16 15 153 1 17 15 153 1 18 15 153 1 19 15 153 1 20 15 153 1 21 15 153 1 22 15 153 1 26 15 153 1 67 15 153 1 68 15 153 1 69 15 153 1 70 15 153 1 71 15 153 1 72 15 153 1 73 15 153 1 80 15 153 1 81 15 153 1 82 15 153 1 83 15 153 1 84 15 153 1 85] 
#[0 15 157 0 82] 
#[1 15 161 0 68 15 165 0 70] 
#[0 6 114 0 68 0 69 0 70 0 135] 
#[1 15 169 0 68 14 81 0 69 15 173 0 70 1 121 0 135 15 177 0 153 15 181 1 46 15 181 1 49 15 181 1 50 15 181 1 51] 
#[0 6 118 0 68 0 69 0 70 0 135] 
#[0 6 122 0 68 0 69 0 70 0 135] 
#[0 6 126 0 68 0 69 0 70 0 135] 
#[1 15 185 0 68 14 81 0 69 15 189 0 70 1 121 0 135 0 129 0 144 15 193 0 153 14 93 1 46 15 197 1 47 14 93 1 49 14 93 1 50 14 93 1 51] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 6 130 0 68 6 130 0 69 6 130 0 70 5 97 0 72 5 101 0 86 5 105 0 90 6 130 0 92 6 130 0 94 5 109 0 100 6 130 0 108 5 113 0 118 6 130 0 123 5 117 0 126 6 130 0 135 6 130 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 0 6 0 23 0 6 0 26 5 81 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 85 0 44 5 89 0 45 5 93 0 47 0 6 0 61 5 97 0 72 0 6 0 74 0 6 0 78 0 6 0 80 0 6 0 81 5 101 0 86 0 6 0 87 0 6 0 88 5 105 0 90 0 6 0 95 5 109 0 100 0 6 0 110 0 6 0 116 5 113 0 118 5 117 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 15 201 0 148 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 15 205 0 68 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 14 121 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 14 121 0 151 14 121 0 152 14 121 0 153 14 121 0 154 14 121 0 155 14 121 0 156 14 121 0 157 14 121 0 158 14 121 0 159 14 121 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 14 121 0 240 14 121 0 241 14 121 0 242 14 121 0 246 14 121 0 247 14 121 0 248 14 121 0 249 14 121 0 250 14 121 0 251 14 121 1 2 14 121 1 3 14 121 1 4 14 121 1 5 14 121 1 6 14 121 1 7 14 121 1 8 14 121 1 9 14 121 1 10 14 121 1 12 14 121 1 14 14 121 1 16 14 121 1 17 14 121 1 18 14 121 1 19 14 121 1 20 14 121 1 21 14 121 1 22 14 121 1 26 14 121 1 67 14 121 1 68 14 121 1 69 14 121 1 70 14 121 1 71 14 121 1 72 14 121 1 73 14 121 1 80 14 121 1 81 14 121 1 82 14 121 1 83 14 121 1 84 14 121 1 85] 
#[0 15 209 0 109] 
#[0 15 213 0 70] 
#[1 7 21 0 144 15 217 0 177] 
#[0 6 134 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 6 138 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 15 221 0 123] 
#[0 6 142 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 15 225 0 125] 
#[0 15 229 0 125] 
#[0 15 233 0 70] 
#[0 6 146 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 6 150 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 15 237 0 108] 
#[1 1 177 0 5 1 189 0 22 15 241 0 188 15 241 0 189 1 201 0 190 15 241 0 193] 
#[0 6 154 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 6 158 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 15 245 0 77] 
#[0 6 162 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 15 249 0 104] 
#[0 15 253 0 104] 
#[1 16 1 0 70 0 129 0 144] 
#[0 6 166 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 5 0 104] 
#[0 6 170 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 9 0 104] 
#[0 6 174 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 13 0 77] 
#[1 16 17 0 70 0 129 0 144] 
#[0 16 21 0 104] 
#[1 16 25 0 70 0 129 0 144] 
#[1 16 29 0 70 0 129 0 144] 
#[1 0 6 0 70 0 6 0 144 16 33 0 148] 
#[0 16 37 0 104] 
#[1 16 41 0 70 0 129 0 144] 
#[0 16 45 0 104] 
#[1 16 49 0 70 0 129 0 144] 
#[0 6 178 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 53 0 115] 
#[0 6 182 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 57 0 77] 
#[0 6 186 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 61 0 104] 
#[0 16 65 0 104] 
#[1 16 69 0 70 0 129 0 144] 
#[0 6 190 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 73 0 104] 
#[0 6 194 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 77 0 104] 
#[0 6 198 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 6 99 0 1 6 99 0 3 6 99 0 5 4 130 0 6 6 99 0 7 6 99 0 8 6 99 0 9 6 99 0 10 6 103 0 11 6 99 0 12 4 130 0 13 6 99 0 14 6 99 0 15 6 99 0 16 6 99 0 17 6 99 0 18 6 99 0 19 6 99 0 20 6 99 0 21 6 99 0 23 6 99 0 26 4 130 0 27 4 130 0 28 6 99 0 33 6 99 0 34 6 99 0 35 6 99 0 37 6 99 0 44 6 99 0 45 6 99 0 47 4 130 0 48 4 130 0 50 0 206 0 52 0 206 0 54 4 130 0 59 6 99 0 61 4 130 0 62 4 130 0 64 4 130 0 65 4 130 0 68 4 130 0 69 4 130 0 70 4 130 0 71 6 99 0 72 4 130 0 73 6 99 0 74 4 130 0 76 4 130 0 77 6 99 0 78 4 130 0 79 6 99 0 80 6 99 0 81 4 130 0 82 4 130 0 83 6 99 0 86 6 99 0 87 6 99 0 88 6 99 0 90 4 130 0 92 4 130 0 94 6 99 0 95 4 130 0 97 4 130 0 98 6 99 0 100 0 206 0 101 4 130 0 103 4 130 0 104 4 130 0 105 4 130 0 106 4 130 0 107 4 130 0 108 4 130 0 109 6 99 0 110 4 130 0 112 4 130 0 113 4 130 0 115 6 99 0 116 4 130 0 117 6 99 0 118 4 130 0 119 4 130 0 123 4 130 0 124 4 130 0 125 6 99 0 126 6 99 0 127 6 99 0 133 6 99 0 134 6 99 0 135 6 99 0 136 6 99 0 137 6 99 0 138 6 99 0 139 6 99 0 140 6 99 0 141 6 99 0 142 4 130 0 144 4 130 1 86] 
#[1 6 107 0 1 6 107 0 3 6 107 0 5 6 202 0 6 6 107 0 7 6 107 0 8 6 202 0 9 6 107 0 10 6 107 0 11 6 107 0 12 6 202 0 13 6 107 0 14 6 202 0 15 6 107 0 16 6 107 0 17 6 107 0 18 6 107 0 19 6 107 0 20 6 107 0 21 6 202 0 23 6 202 0 26 6 202 0 27 6 202 0 28 6 107 0 33 6 202 0 34 6 202 0 35 6 202 0 37 6 107 0 44 6 107 0 45 6 107 0 47 6 202 0 48 6 202 0 50 6 202 0 59 6 202 0 61 6 202 0 62 6 202 0 64 6 202 0 65 6 202 0 68 6 202 0 69 6 202 0 70 6 202 0 71 6 107 0 72 6 202 0 73 6 202 0 74 6 202 0 76 6 202 0 77 6 202 0 78 6 202 0 79 6 202 0 80 6 202 0 81 6 202 0 82 6 202 0 83 6 107 0 86 6 202 0 87 6 202 0 88 6 107 0 90 6 202 0 92 6 202 0 94 6 202 0 95 6 202 0 97 6 202 0 98 6 107 0 100 6 202 0 103 6 202 0 104 6 202 0 105 6 202 0 106 6 202 0 107 6 202 0 108 6 202 0 109 6 202 0 110 6 202 0 112 6 202 0 113 6 202 0 115 6 202 0 116 6 202 0 117 6 107 0 118 6 202 0 119 6 202 0 123 6 202 0 124 6 202 0 125 6 107 0 126 6 202 0 127 6 202 0 133 6 202 0 134 6 202 0 135 6 202 0 136 6 202 0 137 6 202 0 138 6 202 0 139 6 202 0 140 6 202 0 141 6 202 0 142 6 202 0 144 6 202 1 86] 
#[1 5 21 0 1 6 111 0 3 13 233 0 5 6 206 0 6 5 33 0 7 13 237 0 8 6 206 0 9 13 241 0 10 13 245 0 11 5 49 0 12 6 206 0 13 6 115 0 14 6 206 0 15 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 6 119 0 23 6 123 0 26 6 206 0 27 6 206 0 28 5 81 0 33 6 127 0 34 6 131 0 35 6 135 0 37 6 139 0 44 5 89 0 45 5 93 0 47 6 206 0 48 6 206 0 50 6 206 0 59 6 143 0 61 6 206 0 62 6 206 0 64 6 206 0 65 6 206 0 68 6 206 0 69 6 206 0 70 6 206 0 71 5 97 0 72 6 206 0 73 6 147 0 74 6 206 0 76 6 206 0 77 6 151 0 78 6 206 0 79 6 155 0 80 6 159 0 81 6 206 0 82 6 206 0 83 5 101 0 86 6 163 0 87 6 167 0 88 5 105 0 90 6 206 0 92 6 206 0 94 6 171 0 95 6 206 0 97 6 206 0 98 5 109 0 100 6 206 0 103 6 206 0 104 6 206 0 105 6 206 0 106 6 206 0 107 6 206 0 108 6 206 0 109 6 175 0 110 6 206 0 112 6 206 0 113 6 206 0 115 6 179 0 116 6 206 0 117 6 183 0 118 6 206 0 119 6 206 0 123 6 206 0 124 6 206 0 125 5 117 0 126 6 187 0 127 6 191 0 133 6 195 0 134 6 199 0 135 6 203 0 136 6 207 0 137 6 211 0 138 6 215 0 139 6 219 0 140 6 223 0 141 6 227 0 142 6 206 0 144 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 4 197 0 240 4 197 0 241 4 197 0 242 4 197 0 246 4 197 0 247 4 197 0 248 4 197 0 249 4 197 0 250 4 197 0 251 4 197 1 2 4 197 1 3 4 197 1 4 4 197 1 5 4 197 1 6 4 197 1 7 4 197 1 8 4 197 1 9 4 197 1 10 5 121 1 11 4 197 1 12 5 125 1 13 4 197 1 14 5 129 1 15 4 197 1 16 4 197 1 17 16 81 1 18 4 197 1 19 4 197 1 20 4 197 1 21 4 197 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85 6 206 1 86] 
#[1 6 231 0 1 6 231 0 3 6 231 0 5 6 210 0 6 6 231 0 7 6 231 0 8 6 210 0 9 6 231 0 10 6 231 0 11 6 231 0 12 6 210 0 13 6 231 0 14 6 210 0 15 6 231 0 16 6 231 0 17 6 231 0 18 6 231 0 19 6 231 0 20 6 231 0 21 6 210 0 23 6 210 0 26 6 210 0 27 6 210 0 28 6 231 0 33 6 210 0 34 6 210 0 35 6 210 0 37 6 231 0 44 6 231 0 45 6 231 0 47 6 210 0 48 6 210 0 50 6 210 0 59 6 210 0 61 6 210 0 62 6 210 0 64 6 210 0 65 6 210 0 68 6 210 0 69 6 210 0 70 6 210 0 71 6 231 0 72 6 210 0 73 6 210 0 74 6 210 0 76 6 210 0 77 6 210 0 78 6 210 0 79 6 210 0 80 6 210 0 81 6 210 0 82 6 210 0 83 6 231 0 86 6 210 0 87 6 210 0 88 6 231 0 90 6 210 0 92 6 210 0 94 6 210 0 95 6 210 0 97 6 210 0 98 6 231 0 100 6 210 0 103 6 210 0 104 6 210 0 105 6 210 0 106 6 210 0 107 6 210 0 108 6 210 0 109 6 210 0 110 6 210 0 112 6 210 0 113 6 210 0 115 6 210 0 116 6 210 0 117 6 231 0 118 6 210 0 119 6 210 0 123 6 210 0 124 6 210 0 125 6 231 0 126 6 210 0 127 6 210 0 133 6 210 0 134 6 210 0 135 6 210 0 136 6 210 0 137 6 210 0 138 6 210 0 139 6 210 0 140 6 210 0 141 6 210 0 142 6 210 0 144 6 210 1 86] 
#[1 16 85 0 10 11 49 0 132] 
#[0 6 214 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 16 89 0 94 1 121 0 135 0 129 0 144 16 93 0 153] 
#[1 0 6 0 94 0 6 0 135 0 6 0 144 16 97 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 16 101 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 16 101 0 151 16 101 0 152 16 101 0 153 16 101 0 154 16 101 0 155 16 101 0 156 16 101 0 157 16 101 0 158 16 101 0 159 16 101 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 16 101 0 240 16 101 0 241 16 101 0 242 16 101 0 246 16 101 0 247 16 101 0 248 16 101 0 249 16 101 0 250 16 101 0 251 16 101 1 2 16 101 1 3 16 101 1 4 16 101 1 5 16 101 1 6 16 101 1 7 16 101 1 8 16 101 1 9 16 101 1 10 16 101 1 12 16 101 1 14 16 101 1 16 16 101 1 17 16 101 1 18 16 101 1 19 16 101 1 20 16 101 1 21 16 101 1 22 16 101 1 26 16 101 1 67 16 101 1 68 16 101 1 69 16 101 1 70 16 101 1 71 16 101 1 72 16 101 1 73 16 101 1 80 16 101 1 81 16 101 1 82 16 101 1 83 16 101 1 84 16 101 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 0 6 0 94 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 16 105 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 16 109 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 6 218 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 16 113 0 92] 
#[0 6 222 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 6 226 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 16 117 0 92] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 6 230 0 68 6 230 0 69 6 230 0 70 1 162 0 72 1 162 0 86 1 162 0 90 6 230 0 92 6 230 0 94 1 162 0 100 6 230 0 108 1 162 0 118 6 230 0 123 1 162 0 126 6 230 0 135 6 230 0 144] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 6 234 0 68 6 234 0 69 6 234 0 70 1 162 0 72 1 162 0 86 1 162 0 90 6 234 0 92 6 234 0 94 1 162 0 100 6 234 0 108 1 162 0 118 6 234 0 123 1 162 0 126 6 234 0 135 6 234 0 144] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 6 238 0 68 6 238 0 69 6 238 0 70 1 162 0 72 1 162 0 86 1 162 0 90 6 238 0 92 6 238 0 94 1 162 0 100 6 238 0 108 1 162 0 118 6 238 0 123 1 162 0 126 6 238 0 135 6 238 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 16 121 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 16 121 0 240 4 197 0 241 4 197 0 242 4 197 0 246 16 121 0 247 16 121 0 248 16 121 0 249 16 121 0 250 16 121 0 251 16 121 1 2 16 121 1 3 16 121 1 4 16 121 1 5 16 121 1 6 16 121 1 7 16 121 1 8 16 121 1 9 16 121 1 10 16 121 1 12 16 121 1 14 16 121 1 16 16 121 1 17 16 121 1 18 16 121 1 19 16 121 1 20 16 121 1 21 16 121 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 16 125 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 4 197 0 151 4 197 0 152 4 197 0 153 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 16 125 0 240 4 197 0 241 4 197 0 242 4 197 0 246 16 125 0 247 16 125 0 248 16 125 0 249 16 125 0 250 16 125 0 251 16 125 1 2 16 125 1 3 16 125 1 4 16 125 1 5 16 125 1 6 16 125 1 7 16 125 1 8 16 125 1 9 16 125 1 10 16 125 1 12 16 125 1 14 16 125 1 16 16 125 1 17 16 125 1 18 16 125 1 19 16 125 1 20 16 125 1 21 16 125 1 22 4 197 1 26 4 197 1 67 4 197 1 68 4 197 1 69 4 197 1 70 4 197 1 71 4 197 1 72 4 197 1 73 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 83 4 197 1 84 4 197 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 16 129 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 16 133 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 16 137 0 117 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 6 242 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 16 141 0 148] 
#[0 16 145 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 16 149 0 148] 
#[0 16 153 0 82] 
#[0 16 157 0 70] 
#[0 6 246 0 68 0 69 0 70 0 135] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 16 161 0 148] 
#[0 16 165 0 82] 
#[1 16 169 0 68 16 173 0 70] 
#[1 16 177 0 68 14 81 0 69 16 181 0 70 1 121 0 135 16 185 0 153 15 181 1 46 15 181 1 49 15 181 1 50 15 181 1 51] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 16 189 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 16 189 0 151 16 189 0 152 16 189 0 153 16 189 0 154 16 189 0 155 16 189 0 156 16 189 0 157 16 189 0 158 16 189 0 159 16 189 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 16 189 0 240 16 189 0 241 16 189 0 242 16 189 0 246 16 189 0 247 16 189 0 248 16 189 0 249 16 189 0 250 16 189 0 251 16 189 1 2 16 189 1 3 16 189 1 4 16 189 1 5 16 189 1 6 16 189 1 7 16 189 1 8 16 189 1 9 16 189 1 10 16 189 1 12 16 189 1 14 16 189 1 16 16 189 1 17 16 189 1 18 16 189 1 19 16 189 1 20 16 189 1 21 16 189 1 22 16 189 1 26 16 189 1 67 16 189 1 68 16 189 1 69 16 189 1 70 16 189 1 71 16 189 1 72 16 189 1 73 16 189 1 80 16 189 1 81 16 189 1 82 16 189 1 83 16 189 1 84 16 189 1 85] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 61 0 6 0 74 0 6 0 78 0 6 0 80 0 6 0 81 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 110 0 6 0 116 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 16 193 0 148] 
#[0 6 250 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 16 197 0 109] 
#[1 16 201 0 70 1 121 0 135 8 237 0 144 16 205 0 153] 
#[0 6 254 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 2 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 6 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 16 209 0 125] 
#[0 7 10 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 14 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 18 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 22 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 26 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 213 0 104] 
#[0 7 30 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 34 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 38 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 217 0 77] 
#[0 7 42 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 221 0 104] 
#[0 16 225 0 104] 
#[1 16 229 0 70 0 129 0 144] 
#[0 7 46 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 233 0 104] 
#[0 7 50 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 237 0 104] 
#[0 7 54 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 58 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 62 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 66 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 16 241 0 104] 
#[0 7 70 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 74 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 6 235 0 1 6 235 0 3 6 235 0 5 7 78 0 6 6 235 0 7 6 235 0 8 7 78 0 9 6 235 0 10 6 235 0 11 6 235 0 12 7 78 0 13 6 235 0 14 7 78 0 15 6 235 0 16 6 235 0 17 6 235 0 18 6 235 0 19 6 235 0 20 6 235 0 21 7 78 0 23 7 78 0 26 7 78 0 27 7 78 0 28 6 235 0 33 7 78 0 34 7 78 0 35 7 78 0 37 6 235 0 44 6 235 0 45 6 235 0 47 7 78 0 48 7 78 0 50 7 78 0 59 7 78 0 61 7 78 0 62 7 78 0 64 7 78 0 65 7 78 0 68 7 78 0 69 7 78 0 70 7 78 0 71 6 235 0 72 7 78 0 73 7 78 0 74 7 78 0 76 7 78 0 77 7 78 0 78 7 78 0 79 7 78 0 80 7 78 0 81 7 78 0 82 7 78 0 83 6 235 0 86 7 78 0 87 7 78 0 88 6 235 0 90 7 78 0 92 7 78 0 94 7 78 0 95 7 78 0 97 7 78 0 98 6 235 0 100 7 78 0 103 7 78 0 104 7 78 0 105 7 78 0 106 7 78 0 107 7 78 0 108 7 78 0 109 7 78 0 110 7 78 0 112 7 78 0 113 7 78 0 115 7 78 0 116 7 78 0 117 6 235 0 118 7 78 0 119 7 78 0 123 7 78 0 124 7 78 0 125 6 235 0 126 7 78 0 127 7 78 0 133 7 78 0 134 7 78 0 135 7 78 0 136 7 78 0 137 7 78 0 138 7 78 0 139 7 78 0 140 7 78 0 141 7 78 0 142 7 78 0 144 7 78 1 86] 
#[1 9 109 0 132 16 245 0 162] 
#[1 0 17 0 11 0 137 0 61 7 82 0 68 7 82 0 69 7 82 0 70 0 137 0 78 0 137 0 87 7 82 0 92 7 82 0 94 7 82 0 108 0 137 0 110 0 137 0 116 7 82 0 123 7 82 0 135 16 249 0 140 0 125 0 142 7 82 0 144 16 249 0 163 0 137 0 164 16 249 0 165 16 249 0 166 16 249 0 167 16 249 0 168] 
#[0 16 253 0 94] 
#[1 17 1 0 94 1 121 0 135 0 129 0 144 17 5 0 153] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 5 81 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 85 0 44 5 89 0 45 5 93 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 97 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 101 0 86 0 6 0 87 0 6 0 88 5 105 0 90 0 6 0 94 0 6 0 95 0 6 0 97 0 6 0 98 5 109 0 100 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 5 113 0 118 0 6 0 119 0 6 0 124 0 6 0 125 5 117 0 126 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 17 9 0 148 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 17 13 0 94 1 121 0 135 0 129 0 144 17 17 0 153] 
#[1 0 6 0 94 0 6 0 135 0 6 0 144 17 21 0 148] 
#[0 7 86 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 90 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 7 94 0 68 7 94 0 69 7 94 0 70 1 162 0 72 1 162 0 86 1 162 0 90 7 94 0 92 7 94 0 94 1 162 0 100 7 94 0 108 1 162 0 118 7 94 0 123 1 162 0 126 7 94 0 135 7 94 0 144] 
#[1 1 162 0 1 1 162 0 3 1 162 0 5 1 162 0 7 1 162 0 8 1 162 0 10 1 162 0 11 1 162 0 12 1 162 0 14 1 162 0 16 1 162 0 17 1 162 0 18 1 162 0 19 1 162 0 20 1 162 0 21 1 162 0 33 1 162 0 44 1 162 0 45 1 162 0 47 7 98 0 68 7 98 0 69 7 98 0 70 1 162 0 72 1 162 0 86 1 162 0 90 7 98 0 92 7 98 0 94 1 162 0 100 7 98 0 108 1 162 0 118 7 98 0 123 1 162 0 126 7 98 0 135 7 98 0 144] 
#[1 17 25 0 70 1 121 0 135 0 129 0 144 17 29 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 17 33 0 148] 
#[1 6 239 0 5 6 239 0 8 6 239 0 10 6 239 0 11 7 102 0 13 6 239 0 23 6 239 0 26 0 6 0 27 0 6 0 28 6 239 0 34 6 239 0 35 6 239 0 37 0 6 0 48 0 6 0 59 6 239 0 61 0 6 0 64 0 6 0 65 6 239 0 68 6 239 0 69 6 239 0 70 0 6 0 71 0 6 0 73 6 239 0 74 0 6 0 76 6 239 0 78 0 6 0 79 6 239 0 80 6 239 0 81 0 6 0 82 6 239 0 87 6 239 0 88 6 239 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 6 239 0 110 0 6 0 112 6 239 0 116 0 6 0 119 0 6 0 124 0 6 0 125 6 239 0 127 6 239 0 133 6 239 0 134 6 239 0 135 6 239 0 136 6 239 0 137 6 239 0 138 6 239 0 139 6 239 0 140 6 239 0 141 6 239 0 142 0 6 0 144 17 37 0 148 17 41 1 53] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 45 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 49 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 7 106 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 53 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 57 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 7 110 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 17 61 0 82] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 65 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 69 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 7 114 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 17 73 0 148] 
#[0 17 77 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 95 0 6 0 97 0 6 0 98 0 6 0 103 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 109 0 6 0 110 0 6 0 112 0 6 0 116 0 6 0 119 0 6 0 124 0 6 0 125 0 6 0 127 0 6 0 133 0 6 0 134 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 144 17 81 0 148] 
#[0 17 85 0 82] 
#[0 17 89 0 70] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 7 118 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 17 93 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 1 121 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 0 129 0 144 17 93 0 151 17 93 0 152 17 93 0 153 17 93 0 154 17 93 0 155 17 93 0 156 17 93 0 157 17 93 0 158 17 93 0 159 17 93 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 17 93 0 240 17 93 0 241 17 93 0 242 17 93 0 246 17 93 0 247 17 93 0 248 17 93 0 249 17 93 0 250 17 93 0 251 17 93 1 2 17 93 1 3 17 93 1 4 17 93 1 5 17 93 1 6 17 93 1 7 17 93 1 8 17 93 1 9 17 93 1 10 17 93 1 12 17 93 1 14 17 93 1 16 17 93 1 17 17 93 1 18 17 93 1 19 17 93 1 20 17 93 1 21 17 93 1 22 17 93 1 26 17 93 1 67 17 93 1 68 17 93 1 69 17 93 1 70 17 93 1 71 17 93 1 72 17 93 1 73 17 93 1 80 17 93 1 81 17 93 1 82 17 93 1 83 17 93 1 84 17 93 1 85] 
#[0 7 122 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 17 97 0 109] 
#[0 17 101 0 70] 
#[0 7 126 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 130 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 134 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 138 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 142 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 17 105 0 104] 
#[0 7 146 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 150 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 154 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[1 17 109 0 129 11 49 0 132] 
#[1 1 181 0 11 7 158 0 68 7 158 0 69 7 158 0 70 7 158 0 92 7 158 0 94 7 158 0 108 7 158 0 123 7 158 0 135 7 158 0 144] 
#[1 0 17 0 11 0 137 0 61 7 162 0 68 7 162 0 69 7 162 0 70 0 137 0 78 0 137 0 87 7 162 0 92 7 162 0 94 7 162 0 108 0 137 0 110 0 137 0 116 7 162 0 123 7 162 0 135 17 113 0 140 0 125 0 142 7 162 0 144 17 113 0 163 0 137 0 164 17 113 0 165 17 113 0 166 17 113 0 167 17 113 0 168] 
#[1 0 17 0 11 0 137 0 61 7 166 0 68 7 166 0 69 7 166 0 70 0 137 0 78 0 137 0 87 7 166 0 92 7 166 0 94 7 166 0 108 0 137 0 110 0 137 0 116 7 166 0 123 7 166 0 135 17 117 0 140 0 125 0 142 7 166 0 144 17 117 0 163 0 137 0 164 17 117 0 165 17 117 0 166 17 117 0 167 17 117 0 168] 
#[0 17 121 0 94] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 0 6 0 94 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 125 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 129 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 0 17 0 11 0 137 0 61 7 170 0 68 7 170 0 69 7 170 0 70 0 137 0 78 0 137 0 87 7 170 0 92 7 170 0 94 7 170 0 108 0 137 0 110 0 137 0 116 7 170 0 123 7 170 0 135 17 133 0 140 0 125 0 142 7 170 0 144 17 133 0 163 0 137 0 164 17 133 0 165 17 133 0 166 17 133 0 167 17 133 0 168] 
#[0 17 137 0 94] 
#[1 17 141 0 94 1 121 0 135 0 129 0 144 17 145 0 153] 
#[0 17 149 0 82] 
#[0 17 153 0 70] 
#[1 17 157 0 70 1 121 0 135 0 129 0 144 17 161 0 153] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 165 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 169 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 17 173 0 13 2 97 0 23 2 101 0 26 2 105 0 34 2 109 0 35 2 113 0 37 0 137 0 61 7 174 0 68 7 174 0 69 7 174 0 70 2 117 0 74 0 137 0 78 2 121 0 80 2 125 0 81 0 137 0 87 17 177 0 88 2 133 0 95 2 137 0 110 0 137 0 116 2 141 0 127 2 145 0 133 2 149 0 134 6 243 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 2 209 0 140 2 165 0 141 0 125 0 142 17 177 0 151 17 177 0 152 17 177 0 153 17 177 0 154 17 177 0 155 17 177 0 156 17 177 0 157 17 177 0 158 17 177 0 159 17 177 0 160 2 209 0 163 0 137 0 164 2 209 0 165 2 209 0 166 2 209 0 167 2 209 0 168 17 177 0 240 17 177 0 241 17 177 0 242 17 177 0 246 17 177 0 247 17 177 0 248 17 177 0 249 17 177 0 250 17 177 0 251 17 177 1 2 17 177 1 3 17 177 1 4 17 177 1 5 17 177 1 6 17 177 1 7 17 177 1 8 17 177 1 9 17 177 1 10 17 177 1 12 17 177 1 14 17 177 1 16 17 177 1 17 17 177 1 18 17 177 1 19 17 177 1 20 17 177 1 21 17 177 1 22 17 177 1 26 17 181 1 52 17 177 1 67 17 177 1 68 17 177 1 69 17 177 1 70 17 177 1 71 17 177 1 72 17 177 1 73 17 177 1 80 17 177 1 81 17 177 1 82 17 177 1 83 17 177 1 84 17 177 1 85] 
#[1 17 185 0 70 1 121 0 135 0 129 0 144 17 189 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 17 193 0 148] 
#[1 17 197 0 70 1 121 0 135 0 129 0 144 17 201 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 17 205 0 148] 
#[0 7 178 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 17 209 0 70 1 121 0 135 0 129 0 144 17 213 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 17 217 0 148] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 221 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 225 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 7 182 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 2 85 0 5 2 89 0 8 2 93 0 10 0 17 0 11 2 97 0 23 2 101 0 26 5 165 0 27 5 169 0 28 2 105 0 34 2 109 0 35 2 113 0 37 0 21 0 48 0 29 0 59 0 137 0 61 0 41 0 64 5 173 0 65 0 6 0 70 0 45 0 71 0 49 0 73 2 117 0 74 5 229 0 76 0 137 0 78 5 229 0 79 2 121 0 80 2 125 0 81 5 177 0 82 0 137 0 87 5 241 0 88 2 133 0 95 5 181 0 97 5 185 0 98 5 229 0 103 5 229 0 105 0 93 0 106 5 189 0 107 5 193 0 109 2 137 0 110 5 197 0 112 0 137 0 116 0 113 0 119 5 201 0 124 5 205 0 125 2 141 0 127 2 145 0 133 2 149 0 134 1 199 0 135 1 169 0 136 2 153 0 137 2 157 0 138 2 161 0 139 5 209 0 140 2 165 0 141 0 125 0 142 1 203 0 144 17 229 0 148 5 241 0 151 5 241 0 152 5 241 0 153 5 241 0 154 5 241 0 155 5 241 0 156 5 241 0 157 5 241 0 158 5 241 0 159 5 241 0 160 5 209 0 163 0 137 0 164 5 209 0 165 5 209 0 166 5 209 0 167 5 209 0 168 5 221 0 171 5 221 0 173 5 221 0 180 17 233 0 181 5 229 0 185 5 221 0 194 5 221 0 195 5 221 0 199 5 221 0 200 5 221 0 221 5 221 0 222 5 221 0 223 5 221 0 224 5 221 0 225 1 9 0 227 5 221 0 228 5 221 0 229 5 221 0 230 5 221 0 231 5 221 0 232 5 221 0 236 5 221 0 239 5 241 0 240 5 241 0 241 5 241 0 242 5 241 0 246 5 241 0 247 5 241 0 248 5 241 0 249 5 241 0 250 5 241 0 251 5 241 1 2 5 241 1 3 5 241 1 4 5 241 1 5 5 241 1 6 5 241 1 7 5 241 1 8 5 241 1 9 5 241 1 10 5 241 1 12 5 241 1 14 5 241 1 16 5 241 1 17 5 241 1 18 5 241 1 19 5 241 1 20 5 241 1 21 5 241 1 22 5 241 1 26 5 221 1 27 5 221 1 28 5 221 1 29 5 221 1 30 5 221 1 31 5 221 1 32 5 221 1 33 5 221 1 34 5 221 1 35 5 221 1 36 5 221 1 37 5 221 1 38 5 221 1 39 5 221 1 40 5 221 1 41 5 221 1 42 5 221 1 43 5 221 1 44 5 221 1 45 5 221 1 48 5 221 1 54 5 221 1 55 5 221 1 56 5 221 1 57 5 221 1 60 5 221 1 63 5 221 1 64 5 221 1 65 5 221 1 66 5 241 1 67 5 241 1 68 5 241 1 69 5 241 1 70 5 241 1 71 5 241 1 72 5 241 1 73 5 221 1 74 5 221 1 75 5 221 1 76 5 221 1 77 5 221 1 79 6 125 1 80 6 125 1 81 6 125 1 82 6 125 1 83 6 125 1 84 6 125 1 85] 
#[0 7 186 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 17 237 0 82] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 7 190 0 144 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 7 194 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 17 241 0 109] 
#[0 7 198 0 11 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 98 0 103 0 104 0 105 0 106 0 110 0 112 0 115 0 116 0 119 0 140 0 142 0 144 1 86] 
#[0 7 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 23 0 26 0 27 0 28 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 112 0 113 0 115 0 116 0 117 0 118 0 119 0 123 0 124 0 125 0 126 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 144 1 86] 
#[1 1 181 0 11 7 206 0 68 7 206 0 69 7 206 0 70 7 206 0 92 7 206 0 94 7 206 0 108 7 206 0 123 7 206 0 135 7 206 0 144] 
#[1 1 181 0 11 7 210 0 68 7 210 0 69 7 210 0 70 7 210 0 92 7 210 0 94 7 210 0 108 7 210 0 123 7 210 0 135 7 210 0 144] 
#[1 0 17 0 11 0 137 0 61 7 214 0 68 7 214 0 69 7 214 0 70 0 137 0 78 0 137 0 87 7 214 0 92 7 214 0 94 7 214 0 108 0 137 0 110 0 137 0 116 7 214 0 123 7 214 0 135 17 245 0 140 0 125 0 142 7 214 0 144 17 245 0 163 0 137 0 164 17 245 0 165 17 245 0 166 17 245 0 167 17 245 0 168] 
#[1 17 249 0 94 1 121 0 135 0 129 0 144 17 253 0 153] 
#[1 0 6 0 94 0 6 0 135 0 6 0 144 18 1 0 148] 
#[1 1 181 0 11 7 218 0 68 7 218 0 69 7 218 0 70 7 218 0 92 7 218 0 94 7 218 0 108 7 218 0 123 7 218 0 135 7 218 0 144] 
#[1 0 17 0 11 0 137 0 61 7 222 0 68 7 222 0 69 7 222 0 70 0 137 0 78 0 137 0 87 7 222 0 92 7 222 0 94 7 222 0 108 0 137 0 110 0 137 0 116 7 222 0 123 7 222 0 135 18 5 0 140 0 125 0 142 7 222 0 144 18 5 0 163 0 137 0 164 18 5 0 165 18 5 0 166 18 5 0 167 18 5 0 168] 
#[1 0 17 0 11 0 137 0 61 7 226 0 68 7 226 0 69 7 226 0 70 0 137 0 78 0 137 0 87 7 226 0 92 7 226 0 94 7 226 0 108 0 137 0 110 0 137 0 116 7 226 0 123 7 226 0 135 18 9 0 140 0 125 0 142 7 226 0 144 18 9 0 163 0 137 0 164 18 9 0 165 18 9 0 166 18 9 0 167 18 9 0 168] 
#[0 18 13 0 94] 
#[0 7 230 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 17 0 82] 
#[0 18 21 0 82] 
#[0 18 25 0 70] 
#[1 7 234 0 68 7 234 0 69 7 234 0 70 7 234 0 135 0 129 0 144] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 135 0 6 0 144 18 29 0 148] 
#[0 7 238 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[1 5 21 0 1 5 25 0 3 5 29 0 5 5 33 0 7 5 37 0 8 5 41 0 10 5 45 0 11 5 49 0 12 18 33 0 13 5 53 0 14 5 57 0 16 5 61 0 17 5 65 0 18 5 69 0 19 5 73 0 20 5 77 0 21 5 81 0 33 5 85 0 44 5 89 0 45 5 93 0 47 5 97 0 72 5 101 0 86 5 105 0 90 5 109 0 100 5 113 0 118 5 117 0 126 5 121 1 11 5 125 1 13 5 129 1 15] 
#[0 7 242 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 18 37 0 82] 
#[0 18 41 0 70] 
#[1 18 45 0 70 1 121 0 135 0 129 0 144 18 49 0 153] 
#[0 18 53 0 82] 
#[0 18 57 0 70] 
#[1 18 61 0 70 1 121 0 135 0 129 0 144 18 65 0 153] 
#[0 18 69 0 82] 
#[0 18 73 0 70] 
#[1 18 77 0 70 1 121 0 135 0 129 0 144 18 81 0 153] 
#[1 18 85 0 70 1 121 0 135 0 129 0 144 18 89 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 18 93 0 148] 
#[1 18 97 0 70 1 121 0 135 0 129 0 144 18 101 0 153] 
#[1 0 6 0 70 0 6 0 135 0 6 0 144 18 105 0 148] 
#[0 7 246 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 7 250 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[1 1 181 0 11 7 254 0 68 7 254 0 69 7 254 0 70 7 254 0 92 7 254 0 94 7 254 0 108 7 254 0 123 7 254 0 135 7 254 0 144] 
#[1 0 17 0 11 0 137 0 61 8 2 0 68 8 2 0 69 8 2 0 70 0 137 0 78 0 137 0 87 8 2 0 92 8 2 0 94 8 2 0 108 0 137 0 110 0 137 0 116 8 2 0 123 8 2 0 135 18 109 0 140 0 125 0 142 8 2 0 144 18 109 0 163 0 137 0 164 18 109 0 165 18 109 0 166 18 109 0 167 18 109 0 168] 
#[0 18 113 0 94] 
#[1 18 117 0 94 1 121 0 135 0 129 0 144 18 121 0 153] 
#[1 1 181 0 11 8 6 0 68 8 6 0 69 8 6 0 70 8 6 0 92 8 6 0 94 8 6 0 108 8 6 0 123 8 6 0 135 8 6 0 144] 
#[1 1 181 0 11 8 10 0 68 8 10 0 69 8 10 0 70 8 10 0 92 8 10 0 94 8 10 0 108 8 10 0 123 8 10 0 135 8 10 0 144] 
#[1 0 17 0 11 0 137 0 61 8 14 0 68 8 14 0 69 8 14 0 70 0 137 0 78 0 137 0 87 8 14 0 92 8 14 0 94 8 14 0 108 0 137 0 110 0 137 0 116 8 14 0 123 8 14 0 135 18 125 0 140 0 125 0 142 8 14 0 144 18 125 0 163 0 137 0 164 18 125 0 165 18 125 0 166 18 125 0 167 18 125 0 168] 
#[0 8 18 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 22 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 129 0 82] 
#[1 8 26 0 68 8 26 0 69 8 26 0 70 8 26 0 135 0 129 0 144] 
#[0 8 30 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 95 0 110 0 116 0 127 0 133 0 134 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142] 
#[0 8 34 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 133 0 82] 
#[0 18 137 0 82] 
#[0 18 141 0 70] 
#[0 8 38 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 145 0 82] 
#[0 18 149 0 82] 
#[0 18 153 0 70] 
#[0 8 42 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 157 0 82] 
#[0 18 161 0 82] 
#[0 18 165 0 70] 
#[0 18 169 0 82] 
#[0 18 173 0 70] 
#[1 18 177 0 70 1 121 0 135 0 129 0 144 18 181 0 153] 
#[0 18 185 0 82] 
#[0 18 189 0 70] 
#[1 18 193 0 70 1 121 0 135 0 129 0 144 18 197 0 153] 
#[1 1 181 0 11 8 46 0 68 8 46 0 69 8 46 0 70 8 46 0 92 8 46 0 94 8 46 0 108 8 46 0 123 8 46 0 135 8 46 0 144] 
#[1 0 17 0 11 0 137 0 61 8 50 0 68 8 50 0 69 8 50 0 70 0 137 0 78 0 137 0 87 8 50 0 92 8 50 0 94 8 50 0 108 0 137 0 110 0 137 0 116 8 50 0 123 8 50 0 135 18 201 0 140 0 125 0 142 8 50 0 144 18 201 0 163 0 137 0 164 18 201 0 165 18 201 0 166 18 201 0 167 18 201 0 168] 
#[1 0 17 0 11 0 137 0 61 8 54 0 68 8 54 0 69 8 54 0 70 0 137 0 78 0 137 0 87 8 54 0 92 8 54 0 94 8 54 0 108 0 137 0 110 0 137 0 116 8 54 0 123 8 54 0 135 18 205 0 140 0 125 0 142 8 54 0 144 18 205 0 163 0 137 0 164 18 205 0 165 18 205 0 166 18 205 0 167 18 205 0 168] 
#[0 18 209 0 94] 
#[1 1 181 0 11 8 58 0 68 8 58 0 69 8 58 0 70 8 58 0 92 8 58 0 94 8 58 0 108 8 58 0 123 8 58 0 135 8 58 0 144] 
#[0 8 62 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 66 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 70 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 213 0 82] 
#[0 8 74 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 78 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 217 0 82] 
#[0 8 82 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 86 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 221 0 82] 
#[0 8 90 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 225 0 82] 
#[0 18 229 0 82] 
#[0 18 233 0 70] 
#[0 8 94 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 237 0 82] 
#[0 18 241 0 82] 
#[0 18 245 0 70] 
#[1 1 181 0 11 8 98 0 68 8 98 0 69 8 98 0 70 8 98 0 92 8 98 0 94 8 98 0 108 8 98 0 123 8 98 0 135 8 98 0 144] 
#[1 1 181 0 11 8 102 0 68 8 102 0 69 8 102 0 70 8 102 0 92 8 102 0 94 8 102 0 108 8 102 0 123 8 102 0 135 8 102 0 144] 
#[1 0 17 0 11 0 137 0 61 8 106 0 68 8 106 0 69 8 106 0 70 0 137 0 78 0 137 0 87 8 106 0 92 8 106 0 94 8 106 0 108 0 137 0 110 0 137 0 116 8 106 0 123 8 106 0 135 18 249 0 140 0 125 0 142 8 106 0 144 18 249 0 163 0 137 0 164 18 249 0 165 18 249 0 166 18 249 0 167 18 249 0 168] 
#[0 8 110 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 114 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 118 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 122 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 126 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 18 253 0 82] 
#[0 8 130 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 134 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 19 1 0 82] 
#[1 1 181 0 11 8 138 0 68 8 138 0 69 8 138 0 70 8 138 0 92 8 138 0 94 8 138 0 108 8 138 0 123 8 138 0 135 8 138 0 144] 
#[0 8 142 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144] 
#[0 8 146 0 68 0 69 0 70 0 92 0 94 0 108 0 123 0 135 0 144]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument1: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument3: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result timesToken: ((nodes at: 2) at: 1).
	result plusToken: ((nodes at: 2) at: 2).
	result minusToken: ((nodes at: 2) at: 3).
	result divideToken: ((nodes at: 2) at: 4).
	result upArrowToken: ((nodes at: 2) at: 5).
	result _Token: ((nodes at: 2) at: 6).
	result modToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignementOrEquals1: nodes [
	| result |
	result := VBAssignementOrEqualsNode new.
	result left: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result setting: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType11: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result andToken: ((nodes at: 2) at: 1).
	result orToken: ((nodes at: 2) at: 2).
	result xorToken: ((nodes at: 2) at: 3).
	result eqvToken: ((nodes at: 2) at: 4).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result expressions.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCaseOtherwise1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result elseToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result greaterThanToken: ((nodes at: 2) at: 1).
	result lessThanToken: ((nodes at: 2) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 2) at: 3).
	result lessThanEqualToken: ((nodes at: 2) at: 4).
	result greaterThanEqualToken: ((nodes at: 2) at: 5).
	result isToken: ((nodes at: 2) at: 6).
	result likeToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result andToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result value: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	result type: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	result type: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result enumTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result typeTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result untilToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result untilToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	result whileToken: (nodes at: 5).
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result whileToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result ifMatch: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfColon1: nodes [
	| result |
	result := VBElseIfColonNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 4) at: 2) to: result ifMatches.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result eventToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result doToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result fORToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result propertyToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result setToken: (nodes at: 1).
	result left: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result right: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement3: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result left: (nodes at: 1).
	result colonEqualToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFileDescriptorLiteral1: nodes [
	| result |
	result := VBFileDescriptorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	result addObject: (nodes at: 9) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addObject: (nodes at: 11) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result element: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext5: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext6: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext7: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext8: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext5: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext6: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext7: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext8: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	result element: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSubLabel1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result gosubToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSubLine1: nodes [
	| result |
	result := VBGoSubLineNode new.
	result gosubToken: (nodes at: 1).
	result lineNumber: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToLabel1: nodes [
	| result |
	result := VBGoToLabelNode new.
	result gotoToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToLine1: nodes [
	| result |
	result := VBGoToLineNode new.
	result gotoToken: (nodes at: 1).
	result lineNumber: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHeadlessIdentifier1: nodes [
	| result |
	result := VBHeadlessIdentifierNode new.
	result periodToken: (nodes at: 1).
	result token: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenColon1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse10: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse11: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse12: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse13: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse14: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse15: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse16: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse7: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse8: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse9: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse5: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse6: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse7: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse8: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	result elseToken: (nodes at: 5).
	result
		ifFalse: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplements1: nodes [
	| result |
	result := VBImplementsNode new.
	result implementsToken: (nodes at: 1).
	result interface: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result identifier: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntervalExpression1: nodes [
	| result |
	result := VBIntervalExpressionNode new.
	result from: (nodes at: 1).
	result toToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabel1: nodes [
	| result |
	result := VBGoToLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub2: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result returnToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub3: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result returnToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub4: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result colonToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result returnToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result constant: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result constants: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet13: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet14: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet15: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet16: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result block: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation1: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result typeName: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation1: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result resumeToken: (nodes at: 3).
	result nextToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result integerExpression: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause1: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause2: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	result length: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause3: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause4: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause5: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause6: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause7: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause8: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	result length: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result databaseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result bINARYToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result compare: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result explicitToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result privateToken: (nodes at: 2).
	result moduleToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOptionBase1: nodes [
	| result |
	result := VBOptionBaseNode new.
	result optionToken: (nodes at: 1).
	result baseToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result type: (nodes at: 5).
	result equalToken: ((nodes at: 6) at: 1).
	result default: ((nodes at: 6) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result equalToken: ((nodes at: 2) at: 1).
	result default: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation1: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result receiver: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForQualifiedIdentifier1: nodes [
	| result |
	result := VBQualifiedIdentifierNode new.
	result token: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseError1: nodes [
	| result |
	result := VBRaiseErrorNode new.
	result eRRORToken: (nodes at: 1).
	result errorCode: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result nextToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect1: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect2: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect3: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect4: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier2: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing2: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing3: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing4: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing5: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing6: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing7: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing8: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	result timesToken: (nodes at: 6).
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result fixedSize: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing5: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing6: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing7: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing8: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith3: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith4: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________2: nodes [
	| result |
	result := Array new: 3.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________2: nodes [
	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___SetUpAssignation__setting___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___Case__case____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	result classToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addNode: (nodes at: 2) to: result elements.
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result elements.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addNode: (nodes at: 4) to: result elements.
	result addTokens: ((nodes at: 5) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result elements.
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]
