Class {
	#name : #VBParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_VB6Parser'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 0 34 1 98] 
#[ 0 38 2 113] 
#[ 0 38 2 117] 
#[ 0 21 0 38] 
#[ 0 38 2 121] 
#[ 0 38 2 125] 
#[ 0 38 2 129] 
#[ 0 37 0 38] 
#[ 0 38 2 133] 
#[ 0 38 0 65] 
#[ 0 38 2 137] 
#[ 0 38 2 141] 
#[ 0 38 0 77] 
#[ 0 38 2 145] 
#[ 0 38 2 149] 
#[ 0 38 2 153] 
#[ 0 38 0 93] 
#[ 0 38 2 157] 
#[ 0 38 0 125] 
#[ 0 38 2 161] 
#[ 0 38 2 165] 
#[ 0 38 2 169] 
#[ 0 38 1 137] 
#[ 0 38 1 185] 
#[ 0 38 2 173] 
#[ 0 38 2 177] 
#[ 0 38 2 181] 
#[ 0 38 0 137] 
#[ 0 38 2 185] 
#[ 0 38 0 141] 
#[ 0 54 1 102] 
#[ 1 170 1 174 1 178] 
#[ 1 170 1 174 1 178 1 197] 
#[ 0 14 2 126] 
#[ 0 6 7 49] 
#[ 2 238 5 41] 
#[ 2 238 5 69] 
#[ 2 238 5 101] 
#[ 2 238 5 129] 
#[ 2 242 5 41] 
#[ 2 242 5 69] 
#[ 2 242 5 101] 
#[ 2 242 5 129] 
#[ 2 62 2 250] 
#[ 2 62 3 2] 
#[ 3 46 5 41] 
#[ 3 46 5 69] 
#[ 3 46 5 101] 
#[ 3 46 5 129] 
#[ 3 58 7 165] 
#[ 2 113 3 58] 
#[ 2 117 3 58] 
#[ 0 21 3 58] 
#[ 2 121 3 58] 
#[ 2 125 3 58] 
#[ 2 129 3 58] 
#[ 0 37 3 58] 
#[ 2 133 3 58] 
#[ 0 65 3 58] 
#[ 2 137 3 58] 
#[ 2 141 3 58] 
#[ 0 77 3 58] 
#[ 2 145 3 58] 
#[ 2 149 3 58] 
#[ 2 153 3 58] 
#[ 0 93 3 58] 
#[ 2 157 3 58] 
#[ 0 125 3 58] 
#[ 2 161 3 58] 
#[ 2 165 3 58] 
#[ 2 169 3 58] 
#[ 1 137 3 58] 
#[ 1 185 3 58] 
#[ 2 173 3 58] 
#[ 2 177 3 58] 
#[ 2 181 3 58] 
#[ 0 137 3 58] 
#[ 2 185 3 58] 
#[ 0 141 3 58] 
#[ 0 6 8 29] 
#[ 3 142 8 49] 
#[ 1 170 1 174 1 178 1 193] 
#[ 1 170 1 174 1 178 1 201] 
#[ 2 22 4 50] 
#[ 4 134 5 41] 
#[ 4 134 5 69] 
#[ 4 134 5 101] 
#[ 4 134 5 129] 
#[ 3 58 9 173] 
#[ 4 142 9 185] 
#[ 4 150 5 41] 
#[ 4 150 5 69] 
#[ 4 150 5 101] 
#[ 4 150 5 129] 
#[ 4 158 5 41] 
#[ 4 158 5 69] 
#[ 4 158 5 101] 
#[ 4 158 5 129] 
#[ 4 162 5 41] 
#[ 4 162 5 69] 
#[ 4 162 5 101] 
#[ 4 162 5 129] 
#[ 4 166 5 41] 
#[ 4 166 5 69] 
#[ 4 166 5 101] 
#[ 4 166 5 129] 
#[ 4 170 5 41] 
#[ 4 170 5 69] 
#[ 4 170 5 101] 
#[ 4 170 5 129] 
#[ 4 174 5 41] 
#[ 4 174 5 69] 
#[ 4 174 5 101] 
#[ 4 174 5 129] 
#[ 1 170 1 174 1 178 2 230] 
#[ 1 170 1 174 1 178 7 101] 
#[ 0 6 1 137] 
#[ 0 6 0 145] 
#[ 0 6 1 182] 
#[ 4 190 7 49] 
#[ 5 41 5 42] 
#[ 5 42 5 69] 
#[ 5 42 5 101] 
#[ 5 42 5 129] 
#[ 5 41 5 50] 
#[ 5 50 5 69] 
#[ 5 50 5 101] 
#[ 5 50 5 129] 
#[ 5 41 5 54] 
#[ 5 54 5 69] 
#[ 5 54 5 101] 
#[ 5 54 5 129] 
#[ 5 66 9 185] 
#[ 2 113 5 70] 
#[ 2 117 5 70] 
#[ 0 21 5 70] 
#[ 2 121 5 70] 
#[ 2 125 5 70] 
#[ 2 129 5 70] 
#[ 0 37 5 70] 
#[ 2 133 5 70] 
#[ 0 65 5 70] 
#[ 2 137 5 70] 
#[ 2 141 5 70] 
#[ 0 77 5 70] 
#[ 2 145 5 70] 
#[ 2 149 5 70] 
#[ 2 153 5 70] 
#[ 0 93 5 70] 
#[ 2 157 5 70] 
#[ 0 125 5 70] 
#[ 2 161 5 70] 
#[ 2 165 5 70] 
#[ 2 169 5 70] 
#[ 1 137 5 70] 
#[ 1 185 5 70] 
#[ 2 173 5 70] 
#[ 2 177 5 70] 
#[ 2 181 5 70] 
#[ 0 137 5 70] 
#[ 2 185 5 70] 
#[ 0 141 5 70] 
#[ 2 113 5 74] 
#[ 2 117 5 74] 
#[ 0 21 5 74] 
#[ 2 121 5 74] 
#[ 2 125 5 74] 
#[ 2 129 5 74] 
#[ 0 37 5 74] 
#[ 2 133 5 74] 
#[ 0 65 5 74] 
#[ 2 137 5 74] 
#[ 2 141 5 74] 
#[ 0 77 5 74] 
#[ 2 145 5 74] 
#[ 2 149 5 74] 
#[ 2 153 5 74] 
#[ 0 93 5 74] 
#[ 2 157 5 74] 
#[ 0 125 5 74] 
#[ 2 161 5 74] 
#[ 2 165 5 74] 
#[ 2 169 5 74] 
#[ 1 137 5 74] 
#[ 1 185 5 74] 
#[ 2 173 5 74] 
#[ 2 177 5 74] 
#[ 2 181 5 74] 
#[ 0 137 5 74] 
#[ 2 185 5 74] 
#[ 0 141 5 74] 
#[ 5 41 5 86] 
#[ 5 69 5 86] 
#[ 5 86 5 101] 
#[ 5 86 5 129] 
#[ 2 113 3 94] 
#[ 2 117 3 94] 
#[ 0 21 3 94] 
#[ 2 121 3 94] 
#[ 2 125 3 94] 
#[ 2 129 3 94] 
#[ 0 37 3 94] 
#[ 2 133 3 94] 
#[ 0 65 3 94] 
#[ 2 137 3 94] 
#[ 2 141 3 94] 
#[ 0 77 3 94] 
#[ 2 145 3 94] 
#[ 2 149 3 94] 
#[ 2 153 3 94] 
#[ 0 93 3 94] 
#[ 2 157 3 94] 
#[ 0 125 3 94] 
#[ 2 161 3 94] 
#[ 2 165 3 94] 
#[ 2 169 3 94] 
#[ 1 137 3 94] 
#[ 1 185 3 94] 
#[ 2 173 3 94] 
#[ 2 177 3 94] 
#[ 2 181 3 94] 
#[ 0 137 3 94] 
#[ 2 185 3 94] 
#[ 0 141 3 94] 
#[ 0 6 2 113] 
#[ 0 6 2 117] 
#[ 0 6 0 21] 
#[ 0 6 2 121] 
#[ 0 6 2 125] 
#[ 0 6 2 129] 
#[ 0 6 0 37] 
#[ 0 6 2 133] 
#[ 0 6 0 65] 
#[ 0 6 2 137] 
#[ 0 6 2 141] 
#[ 0 6 0 77] 
#[ 0 6 2 145] 
#[ 0 6 2 149] 
#[ 0 6 2 153] 
#[ 0 6 0 93] 
#[ 0 6 2 157] 
#[ 0 6 0 125] 
#[ 0 6 2 161] 
#[ 0 6 2 165] 
#[ 0 6 2 169] 
#[ 0 6 1 185] 
#[ 0 6 2 173] 
#[ 0 6 2 177] 
#[ 0 6 2 181] 
#[ 0 6 0 137] 
#[ 0 6 2 185] 
#[ 0 6 0 141] 
#[ 0 74 4 90] 
#[ 1 137 5 98] 
#[ 5 98 9 13] 
#[ 5 41 5 198] 
#[ 5 69 5 198] 
#[ 5 101 5 198] 
#[ 5 129 5 198] 
#[ 5 214 13 57] 
#[ 1 137 5 234] 
#[ 5 234 9 13] 
#[ 5 41 6 38] 
#[ 5 69 6 38] 
#[ 2 113 6 38] 
#[ 2 117 6 38] 
#[ 0 21 6 38] 
#[ 2 121 6 38] 
#[ 2 125 6 38] 
#[ 2 129 6 38] 
#[ 5 101 6 38] 
#[ 0 37 6 38] 
#[ 2 133 6 38] 
#[ 0 65 6 38] 
#[ 2 137 6 38] 
#[ 2 141 6 38] 
#[ 0 77 6 38] 
#[ 2 145 6 38] 
#[ 2 149 6 38] 
#[ 2 153 6 38] 
#[ 0 93 6 38] 
#[ 2 157 6 38] 
#[ 0 125 6 38] 
#[ 5 129 6 38] 
#[ 2 161 6 38] 
#[ 2 165 6 38] 
#[ 2 169 6 38] 
#[ 1 137 6 38] 
#[ 1 185 6 38] 
#[ 2 173 6 38] 
#[ 2 177 6 38] 
#[ 2 181 6 38] 
#[ 0 137 6 38] 
#[ 2 185 6 38] 
#[ 0 141 6 38] 
#[ 1 174 2 113] 
#[ 1 174 2 117] 
#[ 0 21 1 174] 
#[ 1 174 2 121] 
#[ 1 174 2 125] 
#[ 1 174 2 129] 
#[ 0 37 1 174] 
#[ 1 174 2 133] 
#[ 0 65 1 174] 
#[ 1 174 2 137] 
#[ 1 174 2 141] 
#[ 0 77 1 174] 
#[ 1 174 2 145] 
#[ 1 174 2 149] 
#[ 1 174 2 153] 
#[ 0 93 1 174] 
#[ 1 174 2 157] 
#[ 0 125 1 174] 
#[ 1 174 2 161] 
#[ 1 174 2 165] 
#[ 1 174 2 169] 
#[ 1 137 1 174] 
#[ 1 174 1 185] 
#[ 1 174 2 173] 
#[ 1 174 2 177] 
#[ 1 174 2 181] 
#[ 0 137 1 174] 
#[ 1 174 2 185] 
#[ 0 141 1 174] 
#[ 2 113 3 66] 
#[ 2 117 3 66] 
#[ 0 21 3 66] 
#[ 2 121 3 66] 
#[ 2 125 3 66] 
#[ 2 129 3 66] 
#[ 0 37 3 66] 
#[ 2 133 3 66] 
#[ 0 65 3 66] 
#[ 2 137 3 66] 
#[ 2 141 3 66] 
#[ 0 77 3 66] 
#[ 2 145 3 66] 
#[ 2 149 3 66] 
#[ 2 153 3 66] 
#[ 0 93 3 66] 
#[ 2 157 3 66] 
#[ 0 125 3 66] 
#[ 2 161 3 66] 
#[ 2 165 3 66] 
#[ 2 169 3 66] 
#[ 1 137 3 66] 
#[ 1 185 3 66] 
#[ 2 173 3 66] 
#[ 2 177 3 66] 
#[ 2 181 3 66] 
#[ 0 137 3 66] 
#[ 2 185 3 66] 
#[ 0 141 3 66] 
#[ 2 113 3 70] 
#[ 2 117 3 70] 
#[ 0 21 3 70] 
#[ 2 121 3 70] 
#[ 2 125 3 70] 
#[ 2 129 3 70] 
#[ 0 37 3 70] 
#[ 2 133 3 70] 
#[ 0 65 3 70] 
#[ 2 137 3 70] 
#[ 2 141 3 70] 
#[ 0 77 3 70] 
#[ 2 145 3 70] 
#[ 2 149 3 70] 
#[ 2 153 3 70] 
#[ 0 93 3 70] 
#[ 2 157 3 70] 
#[ 0 125 3 70] 
#[ 2 161 3 70] 
#[ 2 165 3 70] 
#[ 2 169 3 70] 
#[ 1 137 3 70] 
#[ 1 185 3 70] 
#[ 2 173 3 70] 
#[ 2 177 3 70] 
#[ 2 181 3 70] 
#[ 0 137 3 70] 
#[ 2 185 3 70] 
#[ 0 141 3 70] 
#[ 1 238 6 126] 
#[ 5 41 6 130] 
#[ 5 69 6 130] 
#[ 2 113 6 130] 
#[ 2 117 6 130] 
#[ 0 21 6 130] 
#[ 2 121 6 130] 
#[ 2 125 6 130] 
#[ 2 129 6 130] 
#[ 5 101 6 130] 
#[ 0 37 6 130] 
#[ 2 133 6 130] 
#[ 0 65 6 130] 
#[ 2 137 6 130] 
#[ 2 141 6 130] 
#[ 0 77 6 130] 
#[ 2 145 6 130] 
#[ 2 149 6 130] 
#[ 2 153 6 130] 
#[ 0 93 6 130] 
#[ 2 157 6 130] 
#[ 0 125 6 130] 
#[ 5 129 6 130] 
#[ 2 161 6 130] 
#[ 2 165 6 130] 
#[ 2 169 6 130] 
#[ 1 137 6 130] 
#[ 1 185 6 130] 
#[ 2 173 6 130] 
#[ 2 177 6 130] 
#[ 2 181 6 130] 
#[ 0 137 6 130] 
#[ 2 185 6 130] 
#[ 0 141 6 130] 
#[ 5 41 6 134] 
#[ 5 69 6 134] 
#[ 2 113 6 134] 
#[ 2 117 6 134] 
#[ 0 21 6 134] 
#[ 2 121 6 134] 
#[ 2 125 6 134] 
#[ 2 129 6 134] 
#[ 5 101 6 134] 
#[ 0 37 6 134] 
#[ 2 133 6 134] 
#[ 0 65 6 134] 
#[ 2 137 6 134] 
#[ 2 141 6 134] 
#[ 0 77 6 134] 
#[ 2 145 6 134] 
#[ 2 149 6 134] 
#[ 2 153 6 134] 
#[ 0 93 6 134] 
#[ 2 157 6 134] 
#[ 0 125 6 134] 
#[ 5 129 6 134] 
#[ 2 161 6 134] 
#[ 2 165 6 134] 
#[ 2 169 6 134] 
#[ 1 137 6 134] 
#[ 1 185 6 134] 
#[ 2 173 6 134] 
#[ 2 177 6 134] 
#[ 2 181 6 134] 
#[ 0 137 6 134] 
#[ 2 185 6 134] 
#[ 0 141 6 134] 
#[ 0 6 4 158 5 45] 
#[ 0 6 4 158 5 53] 
#[ 0 6 4 158 5 57] 
#[ 0 6 4 158 5 61] 
#[ 0 222 4 154] 
#[ 0 222 1 197 4 154] 
#[ 1 238 6 250] 
#[ 5 41 6 254] 
#[ 5 69 6 254] 
#[ 2 113 6 254] 
#[ 2 117 6 254] 
#[ 0 21 6 254] 
#[ 2 121 6 254] 
#[ 2 125 6 254] 
#[ 2 129 6 254] 
#[ 5 101 6 254] 
#[ 0 37 6 254] 
#[ 2 133 6 254] 
#[ 0 65 6 254] 
#[ 2 137 6 254] 
#[ 2 141 6 254] 
#[ 0 77 6 254] 
#[ 2 145 6 254] 
#[ 2 149 6 254] 
#[ 2 153 6 254] 
#[ 0 93 6 254] 
#[ 2 157 6 254] 
#[ 0 125 6 254] 
#[ 5 129 6 254] 
#[ 2 161 6 254] 
#[ 2 165 6 254] 
#[ 2 169 6 254] 
#[ 1 137 6 254] 
#[ 1 185 6 254] 
#[ 2 173 6 254] 
#[ 2 177 6 254] 
#[ 2 181 6 254] 
#[ 0 137 6 254] 
#[ 2 185 6 254] 
#[ 0 141 6 254] 
#[ 1 238 7 2] 
#[ 7 42 9 13] 
#[ 1 238 7 126] 
#[ 0 6 7 150] 
#[ 7 170 9 13] 
#[ 1 137 7 226]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2020-09-01T17:30:58.757422+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
		%ignorecase;
		%annotate_tokens;

		#expression operators -- lowest precedence are first.
		%left "")""  ;
		%left  ""="";
		%left "","";
		%right "":"";
		%left ""eqv"" ;
		%left ""||"" ""or"" ""xor"";
		%left ""&&"" ""and"";
		%left ""is"" ""like"" ""!="" ""<>"";
		%left ""<"" ""<="" "">"" "">="";
		%left ""+"" ""-"";
		%left ""*"" ""/"" ""Mod"";
		%right ""^"";
		%right ""delete"" ""~"";
		%right ""["" ""("";
		%left ""."" ""!"" ;
		%prefix VB;
		%root Program;
		%suffix Node;
		%start module;

		<lineContinuation>
		   :    (_) <whitespace> * ( \r | \n | \r\n | \x2028 ) <whitespace> ?
		   ;
		<DECIMAL_INTEGER>
			: 0 | [1-9] [0-9]*	
			;
		<HEX_INTEGER>
			: 0[xX][0-9a-fA-F]+	
			;
		<OCTAL_INTEGER>
			: 0[0-7]+	
			;
		<EXPONENT>
			: [eE] [\-\+]? [0-9]+ 	
			;
		<FLOAT_TYPE>
			: [fFdD]	
			;

		<DATE_LITERAL>
		   : (\#) ([^\#\r\n])* (\#)
		   ;
		<COLOR_LITERAL>
		   : \&H <HEX_INTEGER>+ ""&""?
		   ;

		<INTEGER_LITERAL>
			: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
			;
		<FLOATING_POINT_LITERAL>
			: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
			| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
			| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
			| [0-9]+ <FLOAT_TYPE>	
			| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
			;
		<BOOLEAN_LITERAL>
			: true
			| false
			;
		<STRING_LITERAL>
		   : \"" ([^\""\r\n] | \""\"")* \""
		   ;
		<NULL_LITERAL>
			: Nothing	
			;
		<IDENTIFIER>
			: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
			;
		<HASH_NUMBER>
			: ( \#) (<DECIMAL_INTEGER>)
			;
		<HASH_IDENTIFIER>
			: ( \#) (<isLetter>|\w|$)*
			;
		<whitespace> : ( \x20 | \xA0 | \x9) + ; 

		<eol>
		   :  ( \r | \n | \r\n | \x2028 | : \ ) <whitespace> ?
		   ;
		<LABEL> : <IDENTIFIER> (:) <whitespace> ? <eol> ;
		<comment>
		   :  (\' | :?  REM  \ ) ( [^\n\r])* 
		   ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Basic module
		########## ########## ########## ########## ########## ########## ########## ########## 

		module: <eol>* (header 'header' <eol>*)? ModuleStatement 'element'  (<eol>* ModuleStatement 'element' )*   <eol>* {{Module}};

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Literals
		########## ########## ########## ########## ########## ########## ########## ########## 
		literal 
			: 
			  FileDescriptorLiteral
			| IntegerLiteral
			| ColorLiteral
			| DateLiteral
			| FloatLiteral
			| BooleanLiteral
			| StringLiteral
			| Null
			| GuidLiteral
		;

		FileDescriptorLiteral : <HASH_NUMBER> 'token' {{FileDescriptorLiteral}};
		IntegerLiteral :  <INTEGER_LITERAL> 'token' {{IntegerLiteral}};
		ColorLiteral: <COLOR_LITERAL> 'token' {{ColorLiteral}} ; 
		DateLiteral:  <DATE_LITERAL> 'token' {{DateLiteral}};
		FloatLiteral: <FLOATING_POINT_LITERAL> 'token' {{FloatLiteral}};
		BooleanLiteral: <BOOLEAN_LITERAL> 'token' {{BooleanLiteral}};
		StringLiteral:  <STRING_LITERAL> 'token' {{StringLiteral}};
		Null: <NULL_LITERAL> 'token' {{Null}};
		GuidLiteral: ""{""<HEX_INTEGER> + ""-""<HEX_INTEGER>+""-"" <HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""-""<HEX_INTEGER>+ ""}"" {{GuidLiteral}};

		Identifier : 
			  SimpleIdentifier 
			| HashIdentifier
			| QualifiedIdentifier 
			| HeadlessIdentifier;


		UsableKeywords : ""text"" | ""date"" | ""len""  | ""get"" | ""set""  | ""let"" | ""input"" | ""name"" | ""print"" ;
		HashIdentifier :  <HASH_IDENTIFIER> 'token'   {{HashIdentifier}};
		SimpleIdentifier : <IDENTIFIER> | UsableKeywords 'token'  {{SimpleIdentifier}};
		HeadlessIdentifier  : "".""  Identifier 'token'  {{HeadlessIdentifier}};
		QualifiedIdentifier : Identifier 'token'  "".""  <IDENTIFIER> 'member' {{QualifiedIdentifier}};

		LabelTag : <LABEL> ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Module header and configuration
		########## ########## ########## ########## ########## ########## ########## ########## 

		header: ""version""   FloatLiteral  'version'  (""class"")?  {{}};
		Option
		   :   ""option"" IntegerLiteral 'value' {{OptionValue}}
		   |   ""option"" ""compare"" ""database"" {{OptionCompareDatabase}}
		   |   ""option"" ""compare""  (""binary""| ""text"" 'compare') {{OptionCompare}}
		   |   ""option"" ""explicit"" {{OptionExplicit}}
		   |   ""option"" ""private"" ""module""{{OptionPrivateModule}}
		   | OptionBase
		   ;
		OptionBase : ""option"" ""base"" Expression 'value' {{OptionBase}} ;
		SetUpAssignation :  
			Identifier  'identifier' ""="" Expression 'value' {{SetUpAssignation}} 
		;
		Attribute
		 : ""attribute"" SetUpAssignation 'setting' {{ModuleAttribute}}
		 ;
		Configuration 
		:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* <eol>*""end"" {{Configuration}};

		Implements : ""implements"" Identifier 'interface' {{Implements}}; 
		ModuleStatement :  
			Option  | Configuration | Attribute | DeclareExternal | VariableDefinition | BehaviourDefinition | Types | Implements
		 ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Body statements
		########## ########## ########## ########## ########## ########## ########## ########## 



		Statement :   VariableDefinition | Attribute | OptionBase | Expression | ControlFlowStatement | Types ;
		Block: Statement 'statement' (<eol>+ Statement 'statement'  )* {{Block}};

		BaseType: ""boolean"" | ""byte"" | ""collection"" | ""date"" | ""double"" | ""integer"" | ""long"" | ""object"" | ""single"" | ""string"" | ""variant"" {{BaseType}};
		Visibility: ""private"" | ""public"" | ""friend"" | ""global"" ; 

		ComplexType: Identifier 'name' {{ComplexType}};
		Type: BaseType | ComplexType ;

		TypedThing: (TypeSize 'size')? ""as""  Type 'type' (TypeSize 'size')? (""*"" Expression 'fixedSize')?  {{AsType}}; 
		TypedAndInstantiatedThing: (TypeSize 'size')? ""as"" ""new""  Type 'type' (TypeSize 'size')?  (""*"" Expression 'fixedSize')? {{AsTypeAndNew}}; 

		TypeSize : (""("" Expression 'size'? ( "","" Expression 'size')* "")"") {{TypeSize}} ;

		AsType: TypedThing | TypedAndInstantiatedThing | TypeSize;



		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Types
		########## ########## ########## ########## ########## ########## ########## ########## 
		Types : DefineEnum | DefineType | Event ;

		DefineType : 	 (Visibility 'visibility')? ""type"" Identifier 'name' ( <eol>* TypeEntry 'field' )* <eol>* ""end"" ""type"" {{DefineType}}    ;
		TypeEntry    : Identifier 'name' AsType 'type' (""*"" IntegerLiteral 'size' )? {{TypeEntry}}     ;
		Event  : (Visibility 'visibility')?  ""event"" Identifier 'selector' ParameterList 'parameters' {{Event}} ;
		DefineEnum    :  (Visibility 'visibility')?  ""enum"" Identifier 'name'  ( <eol>* EnumEntry 'field')* <eol>*  ""end"" ""enum"" {{DefineEnum}}    ;
		EnumEntry    : Identifier 'name'  ( ""=""  Expression 'value')? {{EnumEntry}}    ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Parameters
		########## ########## ########## ########## ########## ########## ########## ########## 
		ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
		ParameterList:  ""("" (Parameter 'parameter' ( "","" Parameter 'parameter')* )? "")"" {{ParameterList}};
		Parameter: ""optional"" ? (ParameterPassingStrategy 'strategy')? ""paramarray""? Identifier 'name'  (AsType 'type')? (""="" Expression 'default')? {{Parameter}};

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## External declaration
		########## ########## ########## ########## ########## ########## ########## ########## 
		DeclareSub: (Visibility 'visibility')? ""declare""  ""sub"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  {{ExternalSub}};
		DeclareFunction: (Visibility 'visibility')? ""declare""  ""function"" Identifier 'selector' ""lib"" StringLiteral 'library' (""alias"" StringLiteral 'alias')? ParameterList 'parameters'  AsType 'type' {{ExternalFunction}};
		DeclareExternal : DeclareSub|DeclareFunction; 

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Function / Sub Definition 
		########## ########## ########## ########## ########## ########## ########## ########## 

		Modifier: ""static"" ;
		DefineFunction: (Visibility 'visibility')? (Modifier 'modifier')? ""function"" Identifier 'selector' ParameterList 'parameters' (AsType 'type')? 
			<eol>* Block 'block' <eol>* ""end"" ""function"" 
		{{FunctionDefinition}};
		DefineSub:  (Visibility 'visibility')? (Modifier 'modifier')? ""sub"" Identifier 'selector' (ParameterList 'parameters') ? 
			<eol>* Block 'block' <eol>*
		""end"" ""sub"" 
		{{SubDefinition}};


		ModulePropertyGet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""get"" Identifier 'selector' (ParameterList 'parameters') ? (AsType 'type')? 
			<eol>* Block 'block' <eol>* ""end"" ""property"" 
		{{ModulePropertyGet}}; 
		ModulePropertySet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""set"" Identifier 'selector'  (ParameterList 'parameters') ?   
			<eol>* Block 'block' <eol>* ""end"" ""property"" 
		{{ModulePropertyGet}}; 
		ModulePropertyLet : (Visibility 'visibility')? (Modifier 'modifier')? ""property"" ""let"" Identifier 'selector' (ParameterList 'parameters') ?   
			 <eol>* Block 'block' <eol>* ""end"" ""property"" 
		{{ModulePropertyGet}}; 


		BehaviourDefinition:  DefineFunction | DefineSub | ModulePropertyGet | ModulePropertySet | ModulePropertyLet ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Variable / And Multiple Variables
		########## ########## ########## ########## ########## ########## ########## ########## 

		ModuleProperty : Visibility 'visibility' Variable 'variable' {{ModuleProperty}};
		ModuleConstant : (Visibility 'visibility')? ""const"" Constant 'constant' {{ModuleConstant}};
		DefineVariable : ""dim"" Variable 'variable' {{DimVariable}};
		ReDefineVariable : ""redim"" ""preserve""? Variable 'variable' {{ReDimVariable}};
		StaticVariable : ""static"" Variable 'variable' {{StaticVariable}};
		Variable : ""WithEvents"" ? Identifier 'name' (AsType 'type') ? {{Variable}};
		Constant :  Identifier 'constant' (AsType 'type')?  ""="" Expression 'value' {{Constant}} ;

		ModuleProperties : Visibility 'visibility' VariableList 'variables' {{ModuleMultipleProperties}};
		ModuleConstants : Visibility 'visibility'? ""const"" ConstantList 'constants' {{ModuleMultipleConstants}};
		DefineVariables : ""dim"" VariableList 'variables' {{DimMultipleVariables}};
		ReDefineVariables : ""redim""  ""preserve""?  VariableList 'variables' {{ReDimMultipleVariables}};
		StaticVariables : ""static"" VariableList 'variables' {{StaticMultipleVariables}};
		VariableList : Variable 'variable' ("",""  Variable 'variable' )+ {{VariableList}};
		ConstantList : Constant 'constant' ("",""  Constant 'constant' )+ {{ConstantList}};

		VariableDefinition : ModuleProperties | ModuleProperty | ModuleConstant | ModuleConstants | ConstantList | DefineVariable | ReDefineVariable |  DefineVariables |  ReDefineVariables | StaticVariable | StaticVariables ;

		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Value Statements
		########## ########## ########## ########## ########## ########## ########## ########## 

		ValueStatement :  Operation | ValueClause  | StateAccess | ExplicitCall | RaiseEvent | ImplicitCall  ;
		Expression :  ValueStatement |  Identifier | literal | Exits | Go | ParentheseesExpression |IntervalExpression | OpenFileClause ; 


		ParentheseesExpression : ""("" Expression 'expression' "")"" {{ParentheseesExpression}};
		ValueStatementList : ValueStatement 'value' ("","" ValueStatement 'value' ) * {{ValueStatementList}} ; 
		IntervalExpression : Expression 'from' ""to"" Expression 'to'  {{IntervalExpression}} ; 



		### Ops

		Operation : UnaryOperation | BinaryOperation | Rename;


		### Unary Ops 
		UnaryOperation:  NegatedOperation | PositiveOperation |  NotOperation ; 

		NegatedOperation : ""-""  Expression 'value' {{NegatedOperation}} ;
		PositiveOperation : ""+"" Expression 'value' {{PositiveOperation}} ;
		NotOperation : ""not""  Expression 'value'  {{NotOperation}};



		### Binary Ops 
		BinaryOperation : ComparisonOperation  
						| ArithmeticOperation | BooleanBinaryOperation 
						| ExplicitAssignement | AssignementOrEquals  | ConcatenationOperation ;

		ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like""  ;
		ComparisonOperation : Expression 'left' ComparisonOperator Expression 'right' {{ComparisonOperation}};
		ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";
		ArithmeticOperation : Expression 'left' ArithmeticOperator Expression 'right' {{ArithmeticOperation}};
		BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
		BooleanBinaryOperation : Expression 'left' BooleanOperator Expression 'right' {{ArithmeticOperation}};
		ConcatenationOperation : Expression 'left' ""&"" Expression 'right' {{ConcatenationOperation}}; 
		AssignOperator :  ""="" |  "":=""  ;
		ExplicitLetSet: ""let"" | ""set"" ; 
		AssignementOrEquals : Expression 'left' AssignOperator 'operator' Expression  'right' {{AssignementOrEquals}}; 
		ExplicitAssignement : ExplicitLetSet 'kind'  Identifier 'left' AssignOperator 'operator'  Expression 'right' {{ExplicitAssignement}};
		 
		Rename : ""name"" Expression 'oldName' ""as""  Expression 'newName'  {{Rename}} ;

		
		### Value Clause 
		ValueClause: AddressOfClause | NewClause ;
		AddressOfClause : ""AddressOf"" Identifier 'name'  {{AddressOfClause}}; 
		NewClause : ""New"" Identifier 'typeName' {{NewClause}};



		OpenMode :  ""Append"" |  ""Binary"" |  ""Input"" |  ""Output"" |  ""Random"" ;
		OpenAccess : ""Read"" | ""Write"" | ""Read"" ""Write"" ;
		Lock :  ""Shared"" | ""Lock Read"" | ""Lock Write"" | ""Lock Read Write"";

		OpenFileClause : ""Open"" Expression 'filepath'  ""For"" OpenMode 'mode' (OpenAccess 'access')? (Lock 'lock')? ""As"" Expression 'fileDescriptor' (AssignementOrEquals 'length')? {{OpenClause}};


		########## ########## ########## ########## ########## ########## ########## ########## 
		########## Control flow statements
		########## ########## ########## ########## ########## ########## ########## ########## 


		ControlFlowStatement : Exits| Loops | If  | On | Resume | To | With | RaiseError | Select ; 

		#### Loops
		Loops : DoLoop | WhileWend | ForLoop ;

		########## Do
		DoLoop : InfinityLoop | WhileTrue | UntilTrue | DoWhileTrue | DoUntilTrue; 
		InfinityLoop : 
			""do""  
				<eol>* (Block 'body')? <eol>* 
			(IntegerLiteral 'endLineNumber')? ""loop""  
		{{InfinityLoop}} ;

		WhileTrue :  
			""do"" ""while"" ValueStatement 'condition' 
				<eol>* ( Block 'body')? <eol>*  
			(IntegerLiteral 'endLineNumber')? ""loop""  
		{{WhileTrue}}; 
		UntilTrue : 
			""do"" ""until"" ValueStatement 'condition'
				 <eol>*  Block 'body' <eol>* 
			(IntegerLiteral 'endLineNumber')?""loop"" 
		 {{UntilTrue}}; 

		DoWhileTrue :  
			""do""<eol>* ( Block 'body')? <eol>*  
			(IntegerLiteral 'endLineNumber')?  ""loop""  ""while"" ValueStatement 'condition' 
		{{DoWhileTrue}}; 

		DoUntilTrue : 
			""do"" <eol>*  Block 'body' <eol>* 
			(IntegerLiteral 'endLineNumber')? ""loop"" ""until"" ValueStatement 'condition'
		 {{DoUntilTrue}}; 

		########## WhileWend
		WhileWend: 
			""while"" ValueStatement 'condition'
				 <eol>* ( Block 'body')? <eol>*  (IntegerLiteral 'endLineNumber')? 
			""wend""  {{WhileWend}}; 

		########## For 
		ForLoop : ForEach | ForNext | ForStepNext;

		ForEach :  
			""for"" ""each"" Identifier 'element' ""in"" Expression 'group' 
				 <eol>*  ( Block 'body')? <eol>*  
			(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
		{{ForEach}} ;
		 
		ForNext :   
			""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit'   
				<eol>*  ( Block 'body')? <eol>* 
			 (IntegerLiteral 'endLineNumber')? 	""next"" (Identifier 'element' )? 
		{{ForNext}} ;
		ForStepNext:   
			""for"" Expression 'counter' ""="" Expression  'initialValue'  ""to"" Expression  'limit' ""step"" Expression 'step'   
				<eol>*  ( Block 'body')? <eol>*  
			(IntegerLiteral 'endLineNumber')? ""next"" (Identifier 'element' )? 
		 {{ForStepNext}} ;

		########## If

		If : IfThenColon | IfThenElseOneLine | IfThen | IfThenElse | IfThenElseIfElse | IfThenElseIf ; 

		IfThenColon : ""if"" Expression 'condition' ""then"" Expression  'ifTrue' {{IfThenColon}} ;

		IfThenElseOneLine : 
			""if"" Expression 'condition' ""then"" 
				 Expression  'ifTrue' 
			""else"" 
				 Expression  'ifFalse'  
		{{IfThenColon}};


		IfThen : 
			""if"" Expression 'condition' ""then"" 
				<eol>* (Block 'ifTrue')? <eol>*  
			(IntegerLiteral 'endLineNumber')?  ""end"" ""if"" 
		{{IfThenElse}};

		IfThenElse : 
			""if"" Expression 'condition' ""then"" 
				<eol>* (Block 'ifTrue')? <eol>* 
			(IntegerLiteral 'elseLineNumber')? ""else"" 
				 <eol>* (Block 'ifFalse')? <eol>* 
			(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
		{{IfThenElse}};

		IfThenElseIfElse  : 
		""if"" Expression 'condition' ""then"" 
			<eol>* (Block 'ifTrue')? <eol>* 
		(ElseIf 'case') + 
		""else""  
			<eol>* (Block 'otherwise')? <eol>*
		(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
		{{IfThenElseIfElse}};

		IfThenElseIf  : 
		""if"" Expression 'condition' ""then"" 
			<eol>* (Block 'ifTrue')? <eol>* 
		(ElseIf 'case') + 
		(IntegerLiteral 'endLineNumber')? ""end"" ""if"" 
		{{IfThenElseIfElse}};


		ElseIf: ElseIfBlock | ElseIfColon ;

		ElseIfBlock : ""elseif"" Expression 'condition' ""then"" 
			<eol>* (Block 'ifMatch')? <eol>*  {{ElseIfBlock}};
			
		ElseIfColon : ""elseif"" Expression 'condition' ""then"" (  Expression 'ifMatch' ?  "":"" )* {{ElseIfColon}} ;
		###### Error 
			RaiseError : ""Error"" Expression 'errorCode'  {{RaiseError}} ;
		###### Label / LabelSub
			To : LabelSub ;
			Label :  LabelTag 'label' (Block 'block' )? <eol>+  {{GoToLabel}}; 
			LabelSub : LabelTag 'label'
				<eol>*(Block 'block' )? <eol>+ 
			(IntegerLiteral 'endLineNumber')? ""return"" ?
			{{GoSubLabel}}; 
			

		###### Select Case 

			Case :  ""case""  Expression 'expression'  <eol>+ (Expression 'expression')? {{Case}};
			CaseOtherwise :""case"" ""else""  <eol>+ (Expression 'expression')?  {{Case}};
			Select : ""select"" ""case"" Expression 'expression'     (<eol>+ Case 'case') +  (<eol>+  CaseOtherwise 'otherwise')? <eol>+ 
			(IntegerLiteral 'endLineNumber')? ""end"" ""select"" 
			{{Select}} ;

		###### Resume
			Resume : ResumeLabel | ResumeNext | ResumeEmpty ;
			
			ResumeLabel : ""resume"" Identifier 'label' {{ResumeLabel}} ; 
			ResumeNext : ""resume"" ""next"" {{ResumeNext}} ; 
			ResumeEmpty : ""resume"" ; 

		###### GoTo / GoSub 
		Go: GoTo | GoSub ;


		Destination : Identifier | IntegerLiteral ;
		DestinationList :  Destination 'label' ("","" Destination 'label')* {{DestinationList}};

		GoTo  : ""goto"" DestinationList 'destination'   {{GoTo}}  ;
		GoSub  :  ""gosub""  DestinationList 'destination'  {{GoSub}} ;


		########## On 
		On: OnErrorGoTo | OnErrorResumeNext |  OnExpressionGo  ; 

		OnErrorGoTo : ""on"" ""error"" GoTo 'to' {{OnErrorGoTo}}  ;
		OnErrorResumeNext : ""on"" ""error"" ""resume""  ""next"" {{OnErrorResumeNext }} ;
		OnExpressionGo : ""on"" Expression 'integerExpression' Go 'to' {{OnExpressionGo}} ;

		########## Error
		Error: ""error"" Expression 'errorCode' {{Error}} ;

		########## With
		With : ""with"" Identifier 'with' <eol>* (Block 'block' )? <eol>*  (IntegerLiteral 'endLineNumber')?""end"" ""with"" {{With}} ;

		########## Exits

		Exits : ExitFunction | ExitSub | ExitProperty | ExitDo |ExitFor ; 
		ExitFunction : ""exit"" ""function"" {{Exits}} ; 
		ExitSub : ""exit"" ""sub"" {{Exits}} ; 
		ExitDo : ""exit"" ""do"" {{Exits}} ; 
		ExitFor : ""exit"" ""for"" {{Exits}} ; 
		ExitProperty : ""exit"" ""property"" {{Exits}} ;
		
		
		### Calls and accesses 

		DictionaryAccess :   Expression 'receiver' ""!"" Identifier 'member' {{DictionaryAccess}} ;
		MemberAccess : Expression 'receiver' ""."" Identifier 'member' {{MemberAccess}} ;
		ImplicitParenthesesLessCall : Identifier 'identifier' ArgumentList 'arguments' {{ImplicitParenthesesLessCall}} ;
		ProcedureCallOrArrayAccess :  Expression 'receiver' ""("" ArgumentList 'arguments' "")"" {{ProcedureCallOrArrayAccess}} ;

		Argument : (ParameterPassingStrategy 'strategy')?  ""paramarray""?  Expression 'value' {{Argument}};
		ArgumentList : (Argument 'argument' ? ("","" | "";"" ))* Argument 'argument'? ( ("","" | "";"" )Argument 'argument' ?)* {{ArgumentList}};

		ImplicitCall : Identifier | ProcedureCallOrArrayAccess | ImplicitParenthesesLessCall ;
		StateAccess : DictionaryAccess | MemberAccess ;

		ExplicitCall : ""Call""  ImplicitCall 'call'  {{ExplicitCall}}; 
		RaiseEvent : ""RaiseEvent""  ImplicitCall 'call'  {{RaiseEvent}};"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(151 0 #reduceActionFor_eol__1: 2035713 false ) 
	#(167 1 #liftFirstValue: 3309575 false ) 
	#(167 1 #liftFirstValue: 3309570 false ) 
	#(189 1 #liftFirstValue: 5581827 false ) 
	#(167 1 #liftFirstValue: 3309572 false ) 
	#(189 1 #liftFirstValue: 5581828 false ) 
	#(167 1 #liftFirstValue: 3309571 false ) 
	#(167 1 #liftFirstValue: 3309574 false ) 
	#(167 1 #liftFirstValue: 3309576 false ) 
	#(167 1 #liftFirstValue: 3309577 false ) 
	#(189 1 #liftFirstValue: 5581825 false ) 
	#(189 1 #liftFirstValue: 5581826 false ) 
	#(167 1 #liftFirstValue: 3309573 false ) 
	#(218 1 #liftFirstValue: 8455169 false ) 
	#(167 1 #liftFirstValue: 3309569 false ) 
	#(169 1 #liftFirstValue: 3481601 false ) 
	#(168 1 #reduceActionForHashIdentifier1: 3411969 false ) 
	#(151 2 #reduceActionFor_eol__2: 2035714 false ) 
	#(169 1 #reduceActionForSimpleIdentifier2: 3481602 false ) 
	#(166 1 #liftFirstValue: 3194882 false ) 
	#(166 1 #liftFirstValue: 3194881 false ) 
	#(166 1 #liftFirstValue: 3194884 false ) 
	#(166 1 #liftFirstValue: 3194883 false ) 
	#(183 1 #liftFirstValue: 4873217 false ) 
	#(174 1 #liftFirstValue: 4064263 false ) 
	#(183 1 #liftFirstValue: 4873219 false ) 
	#(183 1 #liftFirstValue: 4873218 false ) 
	#(183 1 #liftFirstValue: 4873224 false ) 
	#(153 0 #reduceActionFor__eol___ModuleStatement__element____1: 2097153 false ) 
	#(183 1 #liftFirstValue: 4873223 false ) 
	#(198 1 #liftFirstValue: 6349826 false ) 
	#(198 1 #liftFirstValue: 6349827 false ) 
	#(198 1 #liftFirstValue: 6349825 false ) 
	#(217 1 #liftFirstValue: 8175617 false ) 
	#(217 1 #liftFirstValue: 8175618 false ) 
	#(183 1 #liftFirstValue: 4873220 false ) 
	#(224 1 #liftFirstValue: 9597953 false ) 
	#(224 1 #liftFirstValue: 9597954 false ) 
	#(224 1 #liftFirstValue: 9597955 false ) 
	#(224 1 #liftFirstValue: 9597956 false ) 
	#(224 1 #liftFirstValue: 9597957 false ) 
	#(183 1 #liftFirstValue: 4873222 false ) 
	#(243 1 #liftFirstValue: 11169794 false ) 
	#(243 1 #liftFirstValue: 11169795 false ) 
	#(243 1 #liftFirstValue: 11169798 false ) 
	#(243 1 #liftFirstValue: 11169799 false ) 
	#(243 1 #liftFirstValue: 11169802 false ) 
	#(243 1 #liftFirstValue: 11169793 false ) 
	#(243 1 #liftFirstValue: 11169796 false ) 
	#(243 1 #liftFirstValue: 11169800 false ) 
	#(243 1 #liftFirstValue: 11169801 false ) 
	#(243 1 #liftFirstValue: 11169803 false ) 
	#(243 1 #liftFirstValue: 11169797 false ) 
	#(183 1 #liftFirstValue: 4873221 false ) 
	#(170 2 #reduceActionForHeadlessIdentifier1: 3565569 false ) 
	#(177 2 #reduceActionForAttribute1: 4583425 false ) 
	#(226 2 #reduceActionForModuleConstant1: 10035201 false ) 
	#(233 2 #reduceActionForModuleConstants1: 10624001 false ) 
	#(230 1 #reduceActionForVariable1: 10346497 false ) 
	#(227 2 #reduceActionForDefineVariable1: 10131457 false ) 
	#(234 2 #reduceActionForDefineVariables1: 10733569 false ) 
	#(206 0 #reduceActionFor__eol___ModuleStatement__element____1: 6822913 false ) 
	#(182 2 #reduceActionForImplements1: 4803585 false ) 
	#(174 2 #reduceActionForOption5: 4064261 false ) 
	#(156 1 #reduceActionForIntegerLiteral1: 2637825 false ) 
	#(174 2 #reduceActionForOption1: 4064257 false ) 
	#(228 2 #reduceActionForReDefineVariable1: 10194945 false ) 
	#(235 2 #reduceActionForReDefineVariables1: 10812417 false ) 
	#(229 2 #reduceActionForStaticVariable1: 10276865 false ) 
	#(236 2 #reduceActionForStaticVariables1: 10911745 false ) 
	#(201 0 #reduceActionFor__eol___ModuleStatement__element____1: 6464513 false ) 
	#(159 1 #reduceActionForFloatLiteral1: 2824193 false ) 
	#(173 2 #reduceActionForheader1: 3997697 false ) 
	#(196 0 #reduceActionFor__eol___ModuleStatement__element____1: 6028289 false ) 
	#(197 1 #liftFirstValue: 6078465 false ) 
	#(197 1 #liftFirstValue: 6078466 false ) 
	#(197 1 #liftFirstValue: 6078467 false ) 
	#(225 2 #reduceActionForModuleProperty1: 9950209 false ) 
	#(232 2 #reduceActionForModuleProperties1: 10521601 false ) 
	#(242 1 #reduceActionFor______Constant__constant____1: 11118593 false ) 
	#(240 2 #reduceActionForConstantList1: 11082753 false ) 
	#(180 0 #reduceActionFor__eol___ModuleStatement__element____1: 4729857 false ) 
	#(230 2 #reduceActionForVariable3: 10346499 false ) 
	#(230 2 #reduceActionForVariable2: 10346498 false ) 
	#(239 1 #reduceActionFor______Constant__constant____1: 11032577 false ) 
	#(237 2 #reduceActionForVariableList1: 10996737 false ) 
	#(203 3 #reduceActionForEvent1: 6639617 false ) 
	#(265 1 #liftFirstValue: 13374465 false ) 
	#(265 1 #liftFirstValue: 13374466 false ) 
	#(158 1 #reduceActionForDateLiteral1: 2766849 false ) 
	#(157 1 #reduceActionForColorLiteral1: 2705409 false ) 
	#(160 1 #reduceActionForBooleanLiteral1: 2892801 false ) 
	#(161 1 #reduceActionForStringLiteral1: 2958337 false ) 
	#(162 1 #reduceActionForNull1: 3021825 false ) 
	#(155 1 #reduceActionForFileDescriptorLiteral1: 2561025 false ) 
	#(245 1 #liftFirstValue: 11721731 false ) 
	#(154 1 #liftFirstValue: 2368513 false ) 
	#(154 1 #liftFirstValue: 2368514 false ) 
	#(154 1 #liftFirstValue: 2368515 false ) 
	#(154 1 #liftFirstValue: 2368516 false ) 
	#(154 1 #liftFirstValue: 2368517 false ) 
	#(154 1 #liftFirstValue: 2368518 false ) 
	#(154 1 #liftFirstValue: 2368519 false ) 
	#(154 1 #liftFirstValue: 2368520 false ) 
	#(154 1 #liftFirstValue: 2368521 false ) 
	#(245 1 #liftFirstValue: 11721730 false ) 
	#(342 0 #reduceActionFor_Argument__argument__________________1: 20732929 false ) 
	#(345 1 #liftFirstValue: 20853761 false ) 
	#(245 1 #liftFirstValue: 11721729 false ) 
	#(175 3 #reduceActionForOptionBase1: 4412417 false ) 
	#(245 1 #liftFirstValue: 11721734 false ) 
	#(245 1 #liftFirstValue: 11721735 false ) 
	#(244 1 #liftFirstValue: 11614209 false ) 
	#(251 1 #liftFirstValue: 12161025 false ) 
	#(252 1 #liftFirstValue: 12238849 false ) 
	#(252 1 #liftFirstValue: 12238850 false ) 
	#(252 1 #liftFirstValue: 12238851 false ) 
	#(251 1 #liftFirstValue: 12161026 false ) 
	#(256 1 #liftFirstValue: 12541953 false ) 
	#(256 1 #liftFirstValue: 12541954 false ) 
	#(256 1 #liftFirstValue: 12541955 false ) 
	#(256 1 #liftFirstValue: 12541958 false ) 
	#(256 1 #liftFirstValue: 12541957 false ) 
	#(256 1 #liftFirstValue: 12541956 false ) 
	#(251 1 #liftFirstValue: 12161027 false ) 
	#(244 1 #liftFirstValue: 11614210 false ) 
	#(269 1 #liftFirstValue: 13776897 false ) 
	#(269 1 #liftFirstValue: 13776898 false ) 
	#(245 1 #liftFirstValue: 11721736 false ) 
	#(245 1 #liftFirstValue: 11721733 false ) 
	#(316 1 #liftFirstValue: 19039233 false ) 
	#(316 1 #liftFirstValue: 19039234 false ) 
	#(245 1 #liftFirstValue: 11721732 false ) 
	#(329 1 #liftFirstValue: 19877889 false ) 
	#(329 1 #liftFirstValue: 19877890 false ) 
	#(329 1 #liftFirstValue: 19877892 false ) 
	#(329 1 #liftFirstValue: 19877893 false ) 
	#(329 1 #liftFirstValue: 19877891 false ) 
	#(346 1 #liftFirstValue: 20944897 false ) 
	#(346 1 #liftFirstValue: 20944898 false ) 
	#(345 1 #liftFirstValue: 20853763 false ) 
	#(345 1 #liftFirstValue: 20853762 false ) 
	#(244 1 #liftFirstValue: 11614214 false ) 
	#(244 1 #liftFirstValue: 11614211 false ) 
	#(244 1 #liftFirstValue: 11614212 false ) 
	#(244 1 #liftFirstValue: 11614213 false ) 
	#(174 3 #reduceActionForOption3: 4064259 false ) 
	#(174 3 #reduceActionForOption2: 4064258 false ) 
	#(174 3 #reduceActionForOption4: 4064260 false ) 
	#(174 3 #reduceActionForOption6: 4064262 false ) 
	#(228 3 #reduceActionForReDefineVariable2: 10194946 false ) 
	#(235 3 #reduceActionForReDefineVariables2: 10812418 false ) 
	#(173 3 #reduceActionForheader2: 3997698 false ) 
	#(171 3 #reduceActionForQualifiedIdentifier1: 3640321 false ) 
	#(231 3 #reduceActionForConstant1: 10426369 false ) 
	#(188 1 #liftFirstValue: 5432321 false ) 
	#(188 1 #liftFirstValue: 5432322 false ) 
	#(188 1 #liftFirstValue: 5432323 false ) 
	#(188 1 #liftFirstValue: 5432324 false ) 
	#(188 1 #liftFirstValue: 5432325 false ) 
	#(188 1 #liftFirstValue: 5432326 false ) 
	#(188 1 #liftFirstValue: 5432327 false ) 
	#(188 1 #liftFirstValue: 5432328 false ) 
	#(188 1 #liftFirstValue: 5432329 false ) 
	#(188 1 #liftFirstValue: 5432330 false ) 
	#(188 1 #reduceActionForBaseType11: 5432331 false ) 
	#(190 1 #reduceActionForComplexType1: 5644289 false ) 
	#(191 1 #liftFirstValue: 5695489 false ) 
	#(191 1 #liftFirstValue: 5695490 false ) 
	#(192 2 #reduceActionForTypedThing1: 5730305 false ) 
	#(150 4 #reduceActionFormodule1: 2027521 false ) 
	#(153 2 #reduceActionFor__eol___ModuleStatement__element____2: 2097154 false ) 
	#(226 3 #reduceActionForModuleConstant2: 10035202 false ) 
	#(233 3 #reduceActionForModuleConstants2: 10624002 false ) 
	#(241 2 #reduceActionFor______Constant__constant___1: 11118593 false ) 
	#(242 2 #reduceActionFor______Constant__constant____2: 11118594 false ) 
	#(176 3 #reduceActionForSetUpAssignation1: 4481025 false ) 
	#(230 3 #reduceActionForVariable4: 10346500 false ) 
	#(238 2 #reduceActionFor______Constant__constant___1: 11032577 false ) 
	#(239 2 #reduceActionFor______Constant__constant____2: 11032578 false ) 
	#(206 2 #reduceActionFor__eol___ModuleStatement__element____2: 6822914 false ) 
	#(209 2 #reduceActionForParameterList1: 7273473 false ) 
	#(208 1 #reduceActionForParameterPassingStrategy2: 7193602 false ) 
	#(208 1 #liftFirstValue: 7193601 false ) 
	#(214 0 #reduceActionFor_____Expression__default___1: 7492609 false ) 
	#(211 0 #reduceActionFor__eol___ModuleStatement__element____1: 7317505 false ) 
	#(254 2 #reduceActionForPositiveOperation1: 12386305 false ) 
	#(253 2 #reduceActionForNegatedOperation1: 12316673 false ) 
	#(270 2 #reduceActionForAddressOfClause1: 13822977 false ) 
	#(347 2 #reduceActionForExplicitCall1: 20997121 false ) 
	#(271 2 #reduceActionForNewClause1: 13897729 false ) 
	#(348 2 #reduceActionForRaiseEvent1: 21063681 false ) 
	#(333 2 #reduceActionForExitFor1: 20073473 false ) 
	#(332 2 #reduceActionForExitDo1: 20036609 false ) 
	#(330 2 #reduceActionForExitFunction1: 19948545 false ) 
	#(334 2 #reduceActionForExitProperty1: 20112385 false ) 
	#(331 2 #reduceActionForExitSub1: 19997697 false ) 
	#(317 1 #liftFirstValue: 19062786 false ) 
	#(317 1 #liftFirstValue: 19062785 false ) 
	#(320 0 #reduceActionFor__eol___ModuleStatement__element____1: 19149825 false ) 
	#(322 2 #reduceActionForGoSub1: 19264513 false ) 
	#(321 2 #reduceActionForGoTo1: 19202049 false ) 
	#(255 2 #reduceActionForNotOperation1: 12456961 false ) 
	#(164 1 #reduceActionFor_HEX_INTEGER___1: 3080193 false ) 
	#(337 2 #reduceActionForImplicitParenthesesLessCall1: 20372481 false ) 
	#(344 0 #reduceActionFor_Argument__argument__________________1: 20793345 false ) 
	#(259 1 #reduceActionForArithmeticOperator1: 12905473 false ) 
	#(259 1 #reduceActionForArithmeticOperator2: 12905474 false ) 
	#(259 1 #reduceActionForArithmeticOperator3: 12905475 false ) 
	#(259 1 #reduceActionForArithmeticOperator4: 12905476 false ) 
	#(264 1 #liftFirstValue: 13338626 false ) 
	#(257 1 #reduceActionForArithmeticOperator2: 12721154 false ) 
	#(257 1 #reduceActionForArithmeticOperator4: 12721156 false ) 
	#(257 1 #reduceActionForArithmeticOperator3: 12721155 false ) 
	#(264 1 #liftFirstValue: 13338625 false ) 
	#(257 1 #reduceActionForArithmeticOperator1: 12721153 false ) 
	#(257 1 #reduceActionForComparisonOperator5: 12721157 false ) 
	#(259 1 #reduceActionForArithmeticOperator7: 12905479 false ) 
	#(259 1 #reduceActionForArithmeticOperator6: 12905478 false ) 
	#(259 1 #reduceActionForComparisonOperator5: 12905477 false ) 
	#(261 1 #reduceActionForBooleanOperator1: 13080577 false ) 
	#(261 1 #reduceActionForBooleanOperator4: 13080580 false ) 
	#(257 1 #reduceActionForArithmeticOperator6: 12721158 false ) 
	#(257 1 #reduceActionForArithmeticOperator7: 12721159 false ) 
	#(261 1 #reduceActionForBooleanOperator2: 13080578 false ) 
	#(261 1 #reduceActionForBooleanOperator3: 13080579 false ) 
	#(315 1 #liftFirstValue: 18985985 false ) 
	#(172 1 #liftFirstValue: 3739649 false ) 
	#(184 1 #liftFirstValue: 5244931 false ) 
	#(184 1 #liftFirstValue: 5244930 false ) 
	#(187 0 #reduceActionFor__eol___ModuleStatement__element____1: 5383169 false ) 
	#(184 1 #liftFirstValue: 5244934 false ) 
	#(184 1 #liftFirstValue: 5244929 false ) 
	#(184 1 #liftFirstValue: 5244932 false ) 
	#(184 1 #liftFirstValue: 5244933 false ) 
	#(276 1 #liftFirstValue: 14579714 false ) 
	#(277 1 #liftFirstValue: 14691329 false ) 
	#(278 1 #liftFirstValue: 14750721 false ) 
	#(278 1 #liftFirstValue: 14750722 false ) 
	#(278 1 #liftFirstValue: 14750723 false ) 
	#(278 1 #liftFirstValue: 14750724 false ) 
	#(278 1 #liftFirstValue: 14750725 false ) 
	#(277 1 #liftFirstValue: 14691330 false ) 
	#(277 1 #liftFirstValue: 14691331 false ) 
	#(285 1 #liftFirstValue: 15810561 false ) 
	#(285 1 #liftFirstValue: 15810562 false ) 
	#(285 1 #liftFirstValue: 15810563 false ) 
	#(276 1 #liftFirstValue: 14579715 false ) 
	#(289 1 #liftFirstValue: 16589825 false ) 
	#(289 1 #liftFirstValue: 16589826 false ) 
	#(289 1 #liftFirstValue: 16589827 false ) 
	#(289 1 #liftFirstValue: 16589828 false ) 
	#(289 1 #liftFirstValue: 16589829 false ) 
	#(289 1 #liftFirstValue: 16589830 false ) 
	#(276 1 #liftFirstValue: 14579720 false ) 
	#(276 1 #liftFirstValue: 14579718 false ) 
	#(304 1 #liftFirstValue: 18165761 false ) 
	#(276 1 #liftFirstValue: 14579721 false ) 
	#(276 1 #liftFirstValue: 14579717 false ) 
	#(312 1 #liftFirstValue: 18810881 false ) 
	#(312 1 #liftFirstValue: 18810882 false ) 
	#(312 1 #liftFirstValue: 18810883 false ) 
	#(276 1 #liftFirstValue: 14579716 false ) 
	#(323 1 #liftFirstValue: 19349505 false ) 
	#(323 1 #liftFirstValue: 19349506 false ) 
	#(323 1 #liftFirstValue: 19349507 false ) 
	#(276 1 #liftFirstValue: 14579719 false ) 
	#(276 1 #liftFirstValue: 14579713 false ) 
	#(201 2 #reduceActionFor__eol___ModuleStatement__element____2: 6464514 false ) 
	#(194 3 #reduceActionForTypeSize1: 5992449 false ) 
	#(196 2 #reduceActionFor______Constant__constant____2: 6028290 false ) 
	#(193 3 #reduceActionForTypedAndInstantiatedThing1: 5847041 false ) 
	#(192 3 #reduceActionForTypedThing3: 5730307 false ) 
	#(192 3 #reduceActionForTypedThing5: 5730309 false ) 
	#(231 4 #reduceActionForConstant2: 10426370 false ) 
	#(152 2 #reduceActionFor__eol___ModuleStatement__element___1: 2097153 false ) 
	#(203 4 #reduceActionForEvent2: 6639618 false ) 
	#(181 1 #reduceActionFor_HEX_INTEGER___1: 4731905 false ) 
	#(180 2 #reduceActionFor___eol___SetUpAssignation__setting___2: 4729858 false ) 
	#(207 1 #reduceActionForEnumEntry1: 6896641 false ) 
	#(205 2 #reduceActionFor__eol___ModuleStatement__element___1: 6822913 false ) 
	#(214 1 #reduceActionFor_____Expression__default___2: 7492610 false ) 
	#(212 2 #reduceActionForParameter1: 7376897 false ) 
	#(246 3 #reduceActionForParentheseesExpression1: 11859969 false ) 
	#(318 2 #reduceActionForDestinationList1: 19109889 false ) 
	#(164 2 #reduceActionFor_eol__2: 3080194 false ) 
	#(341 1 #reduceActionFor_Argument__argument_________________1: 20732929 false ) 
	#(341 1 #reduceActionFor_Argument__argument_________________2: 20732930 false ) 
	#(339 1 #reduceActionForArgument1: 20614145 false ) 
	#(342 2 #reduceActionFor_Argument__argument__________________2: 20732930 false ) 
	#(340 2 #reduceActionForArgumentList1: 20717569 false ) 
	#(335 3 #reduceActionForDictionaryAccess1: 20194305 false ) 
	#(263 3 #reduceActionForConcatenationOperation1: 13239297 false ) 
	#(336 3 #reduceActionForMemberAccess1: 20288513 false ) 
	#(250 3 #reduceActionForIntervalExpression1: 12055553 false ) 
	#(258 3 #reduceActionForComparisonOperation1: 12797953 false ) 
	#(260 3 #reduceActionForArithmeticOperation1: 12973057 false ) 
	#(262 3 #reduceActionForBooleanBinaryOperation1: 13131777 false ) 
	#(266 3 #reduceActionForAssignementOrEquals1: 13410305 false ) 
	#(303 2 #reduceActionForRaiseError1: 18072577 false ) 
	#(314 2 #reduceActionForResumeNext1: 18934785 false ) 
	#(313 2 #reduceActionForResumeLabel1: 18869249 false ) 
	#(185 2 #reduceActionForBlock1: 5353473 false ) 
	#(200 2 #reduceActionFor__eol___ModuleStatement__element___1: 6464513 false ) 
	#(195 2 #reduceActionFor______Constant__constant___1: 6028289 false ) 
	#(194 4 #reduceActionForTypeSize2: 5992450 false ) 
	#(193 4 #reduceActionForTypedAndInstantiatedThing3: 5847043 false ) 
	#(192 4 #reduceActionForTypedThing2: 5730306 false ) 
	#(193 4 #reduceActionForTypedAndInstantiatedThing5: 5847045 false ) 
	#(192 4 #reduceActionForTypedThing7: 5730311 false ) 
	#(150 6 #reduceActionFormodule2: 2027522 false ) 
	#(178 6 #reduceActionForConfiguration1: 4666369 false ) 
	#(181 2 #reduceActionFor_eol__2: 4731906 false ) 
	#(179 2 #reduceActionFor__eol___ModuleStatement__element___1: 4729857 false ) 
	#(215 6 #reduceActionForDeclareSub1: 7760897 false ) 
	#(204 6 #reduceActionForDefineEnum1: 6750209 false ) 
	#(212 3 #reduceActionForParameter9: 7376905 false ) 
	#(212 3 #reduceActionForParameter3: 7376899 false ) 
	#(213 2 #reduceActionFor______Constant__constant___1: 7492609 false ) 
	#(212 3 #reduceActionForParameter2: 7376898 false ) 
	#(212 3 #reduceActionForParameter5: 7376901 false ) 
	#(209 4 #reduceActionForParameterList2: 7273474 false ) 
	#(211 2 #reduceActionFor______Constant__constant____2: 7317506 false ) 
	#(272 1 #liftFirstValue: 13959169 false ) 
	#(272 1 #liftFirstValue: 13959170 false ) 
	#(272 1 #liftFirstValue: 13959171 false ) 
	#(272 1 #liftFirstValue: 13959172 false ) 
	#(272 1 #liftFirstValue: 13959173 false ) 
	#(320 2 #reduceActionFor______Constant__constant____2: 19149826 false ) 
	#(268 4 #reduceActionForRename1: 13670401 false ) 
	#(165 1 #reduceActionFor_HEX_INTEGER___1: 3099649 false ) 
	#(339 2 #reduceActionForArgument2: 20614146 false ) 
	#(339 2 #reduceActionForArgument3: 20614147 false ) 
	#(341 2 #reduceActionFor_Argument__argument_________________3: 20732931 false ) 
	#(341 2 #reduceActionFor_Argument__argument_________________4: 20732932 false ) 
	#(340 3 #reduceActionForArgumentList2: 20717570 false ) 
	#(343 1 #reduceActionFor_Argument__argument_________________1: 20793345 false ) 
	#(343 1 #reduceActionFor______________Argument__argument____3: 20793347 false ) 
	#(344 2 #reduceActionFor_Argument__argument__________________2: 20793346 false ) 
	#(338 4 #reduceActionForProcedureCallOrArrayAccess1: 20490241 false ) 
	#(267 4 #reduceActionForExplicitAssignement1: 13527041 false ) 
	#(324 3 #reduceActionForOnErrorGoTo1: 19411969 false ) 
	#(326 3 #reduceActionForOnExpressionGo1: 19550209 false ) 
	#(306 3 #reduceActionForLabelSub1: 18257921 false ) 
	#(187 2 #reduceActionFor__eol___ModuleStatement__element____2: 5383170 false ) 
	#(199 6 #reduceActionForDefineType1: 6395905 false ) 
	#(202 2 #reduceActionForTypeEntry1: 6538241 false ) 
	#(193 5 #reduceActionForTypedAndInstantiatedThing2: 5847042 false ) 
	#(192 5 #reduceActionForTypedThing4: 5730308 false ) 
	#(193 5 #reduceActionForTypedAndInstantiatedThing7: 5847047 false ) 
	#(192 5 #reduceActionForTypedThing6: 5730310 false ) 
	#(216 7 #reduceActionForDeclareFunction1: 7953409 false ) 
	#(207 3 #reduceActionForEnumEntry2: 6896642 false ) 
	#(212 4 #reduceActionForParameter11: 7376907 false ) 
	#(212 4 #reduceActionForParameter10: 7376906 false ) 
	#(212 4 #reduceActionForParameter13: 7376909 false ) 
	#(212 4 #reduceActionForParameter4: 7376900 false ) 
	#(212 4 #reduceActionForParameter7: 7376903 false ) 
	#(212 4 #reduceActionForParameter6: 7376902 false ) 
	#(210 2 #reduceActionFor______Constant__constant___1: 7317505 false ) 
	#(274 1 #liftFirstValue: 14085124 false ) 
	#(274 1 #liftFirstValue: 14085122 false ) 
	#(274 1 #liftFirstValue: 14085123 false ) 
	#(273 1 #liftFirstValue: 14032897 false ) 
	#(274 1 #liftFirstValue: 14085121 false ) 
	#(273 1 #liftFirstValue: 14032898 false ) 
	#(319 2 #reduceActionFor______Constant__constant___1: 19149825 false ) 
	#(165 2 #reduceActionFor_eol__2: 3099650 false ) 
	#(339 3 #reduceActionForArgument4: 20614148 false ) 
	#(343 2 #reduceActionFor______________Argument__argument____2: 20793346 false ) 
	#(343 2 #reduceActionFor_Argument__argument_________________4: 20793348 false ) 
	#(279 4 #reduceActionForInfinityLoop1: 14830593 false ) 
	#(290 4 #reduceActionForIfThenColon1: 16691201 false ) 
	#(325 4 #reduceActionForOnErrorResumeNext1: 19471361 false ) 
	#(311 1 #reduceActionFor__eol___Case__case____1: 18649089 false ) 
	#(306 4 #reduceActionForLabelSub2: 18257922 false ) 
	#(306 4 #reduceActionForLabelSub3: 18257923 false ) 
	#(306 4 #reduceActionForLabelSub5: 18257925 false ) 
	#(186 2 #reduceActionFor__eol___ModuleStatement__element___1: 5383169 false ) 
	#(220 7 #reduceActionForDefineSub1: 8705025 false ) 
	#(193 6 #reduceActionForTypedAndInstantiatedThing4: 5847044 false ) 
	#(193 6 #reduceActionForTypedAndInstantiatedThing6: 5847046 false ) 
	#(192 6 #reduceActionForTypedThing8: 5730312 false ) 
	#(215 7 #reduceActionForDeclareSub3: 7760899 false ) 
	#(204 7 #reduceActionForDefineEnum2: 6750210 false ) 
	#(199 7 #reduceActionForDefineType2: 6395906 false ) 
	#(215 8 #reduceActionForDeclareSub2: 7760898 false ) 
	#(212 5 #reduceActionForParameter12: 7376908 false ) 
	#(212 5 #reduceActionForParameter15: 7376911 false ) 
	#(212 5 #reduceActionForParameter14: 7376910 false ) 
	#(212 5 #reduceActionForParameter8: 7376904 false ) 
	#(219 8 #reduceActionForDefineFunction1: 8478721 false ) 
	#(275 6 #reduceActionForOpenFileClause1: 14156801 false ) 
	#(273 2 #liftFirstValue: 14032899 false ) 
	#(221 8 #reduceActionForModulePropertyGet1: 8902657 false ) 
	#(223 8 #reduceActionForModulePropertyLet1: 9369601 false ) 
	#(222 8 #reduceActionForModulePropertySet1: 9143297 false ) 
	#(279 5 #reduceActionForInfinityLoop2: 14830594 false ) 
	#(279 5 #reduceActionForInfinityLoop3: 14830595 false ) 
	#(310 2 #reduceActionFor__eol___ModuleStatement__element___1: 18649089 false ) 
	#(311 2 #reduceActionFor__eol___ModuleStatement__element____2: 18649090 false ) 
	#(284 5 #reduceActionForWhileWend1: 15636481 false ) 
	#(306 5 #reduceActionForLabelSub4: 18257924 false ) 
	#(306 5 #reduceActionForLabelSub6: 18257926 false ) 
	#(306 5 #reduceActionForLabelSub7: 18257927 false ) 
	#(220 8 #reduceActionForDefineSub2: 8705026 false ) 
	#(202 4 #reduceActionForTypeEntry2: 6538242 false ) 
	#(193 7 #reduceActionForTypedAndInstantiatedThing8: 5847048 false ) 
	#(216 8 #reduceActionForDeclareFunction3: 7953411 false ) 
	#(220 8 #reduceActionForDefineSub5: 8705029 false ) 
	#(220 8 #reduceActionForDefineSub3: 8705027 false ) 
	#(216 9 #reduceActionForDeclareFunction2: 7953410 false ) 
	#(212 6 #reduceActionForParameter16: 7376912 false ) 
	#(219 9 #reduceActionForDefineFunction2: 8478722 false ) 
	#(275 7 #reduceActionForOpenFileClause2: 14156802 false ) 
	#(275 7 #reduceActionForOpenFileClause5: 14156805 false ) 
	#(275 7 #reduceActionForOpenFileClause3: 14156803 false ) 
	#(221 9 #reduceActionForModulePropertyGet2: 8902658 false ) 
	#(221 9 #reduceActionForModulePropertyGet3: 8902659 false ) 
	#(223 9 #reduceActionForModulePropertyLet2: 9369602 false ) 
	#(222 9 #reduceActionForModulePropertySet2: 9143298 false ) 
	#(280 6 #reduceActionForWhileTrue1: 14964737 false ) 
	#(282 6 #reduceActionForDoWhileTrue1: 15289345 false ) 
	#(279 6 #reduceActionForInfinityLoop4: 14830596 false ) 
	#(296 1 #reduceActionFor_HEX_INTEGER___1: 17449985 false ) 
	#(295 1 #liftFirstValue: 17449985 false ) 
	#(298 1 #liftFirstValue: 17788929 false ) 
	#(298 1 #liftFirstValue: 17788930 false ) 
	#(291 6 #reduceActionForIfThenElseOneLine1: 16784385 false ) 
	#(284 6 #reduceActionForWhileWend2: 15636482 false ) 
	#(284 6 #reduceActionForWhileWend3: 15636483 false ) 
	#(328 6 #reduceActionForWith1: 19729409 false ) 
	#(306 6 #reduceActionForLabelSub8: 18257928 false ) 
	#(215 9 #reduceActionForDeclareSub4: 7760900 false ) 
	#(219 9 #reduceActionForDefineFunction5: 8478725 false ) 
	#(221 9 #reduceActionForModulePropertyGet9: 8902665 false ) 
	#(223 9 #reduceActionForModulePropertyLet5: 9369605 false ) 
	#(222 9 #reduceActionForModulePropertySet5: 9143301 false ) 
	#(220 9 #reduceActionForDefineSub6: 8705030 false ) 
	#(220 9 #reduceActionForDefineSub7: 8705031 false ) 
	#(219 9 #reduceActionForDefineFunction3: 8478723 false ) 
	#(221 9 #reduceActionForModulePropertyGet5: 8902661 false ) 
	#(223 9 #reduceActionForModulePropertyLet3: 9369603 false ) 
	#(222 9 #reduceActionForModulePropertySet3: 9143299 false ) 
	#(220 9 #reduceActionForDefineSub4: 8705028 false ) 
	#(275 8 #reduceActionForOpenFileClause6: 14156806 false ) 
	#(275 8 #reduceActionForOpenFileClause7: 14156807 false ) 
	#(275 8 #reduceActionForOpenFileClause4: 14156804 false ) 
	#(221 10 #reduceActionForModulePropertyGet4: 8902660 false ) 
	#(281 7 #reduceActionForUntilTrue1: 15129601 false ) 
	#(280 7 #reduceActionForWhileTrue2: 14964738 false ) 
	#(280 7 #reduceActionForWhileTrue3: 14964739 false ) 
	#(282 7 #reduceActionForDoWhileTrue2: 15289346 false ) 
	#(283 7 #reduceActionForDoUntilTrue1: 15454209 false ) 
	#(282 7 #reduceActionForDoWhileTrue3: 15289347 false ) 
	#(292 7 #reduceActionForIfThen1: 16937985 false ) 
	#(296 2 #reduceActionFor_eol__2: 17449986 false ) 
	#(307 3 #reduceActionForCase1: 18424833 false ) 
	#(309 7 #reduceActionForSelect1: 18594817 false ) 
	#(284 7 #reduceActionForWhileWend4: 15636484 false ) 
	#(328 7 #reduceActionForWith2: 19729410 false ) 
	#(328 7 #reduceActionForWith3: 19729411 false ) 
	#(216 10 #reduceActionForDeclareFunction4: 7953412 false ) 
	#(219 10 #reduceActionForDefineFunction6: 8478726 false ) 
	#(221 10 #reduceActionForModulePropertyGet10: 8902666 false ) 
	#(221 10 #reduceActionForModulePropertyGet11: 8902667 false ) 
	#(223 10 #reduceActionForModulePropertyLet6: 9369606 false ) 
	#(222 10 #reduceActionForModulePropertySet6: 9143302 false ) 
	#(219 10 #reduceActionForDefineFunction7: 8478727 false ) 
	#(221 10 #reduceActionForModulePropertyGet13: 8902669 false ) 
	#(223 10 #reduceActionForModulePropertyLet7: 9369607 false ) 
	#(222 10 #reduceActionForModulePropertySet7: 9143303 false ) 
	#(220 10 #reduceActionForDefineSub8: 8705032 false ) 
	#(219 10 #reduceActionForDefineFunction4: 8478724 false ) 
	#(221 10 #reduceActionForModulePropertyGet6: 8902662 false ) 
	#(221 10 #reduceActionForModulePropertyGet7: 8902663 false ) 
	#(223 10 #reduceActionForModulePropertyLet4: 9369604 false ) 
	#(222 10 #reduceActionForModulePropertySet4: 9143300 false ) 
	#(275 9 #reduceActionForOpenFileClause8: 14156808 false ) 
	#(286 8 #reduceActionForForEach1: 15857665 false ) 
	#(281 8 #reduceActionForUntilTrue2: 15129602 false ) 
	#(280 8 #reduceActionForWhileTrue4: 14964740 false ) 
	#(283 8 #reduceActionForDoUntilTrue2: 15454210 false ) 
	#(282 8 #reduceActionForDoWhileTrue4: 15289348 false ) 
	#(302 0 #reduceActionFor__eol___ModuleStatement__element____1: 17999873 false ) 
	#(292 8 #reduceActionForIfThen2: 16937986 false ) 
	#(297 8 #reduceActionForIfThenElseIf1: 17596417 false ) 
	#(292 8 #reduceActionForIfThen3: 16937987 false ) 
	#(307 4 #reduceActionForCase2: 18424834 false ) 
	#(308 3 #reduceActionForCaseOtherwise1: 18514945 false ) 
	#(309 8 #reduceActionForSelect2: 18594818 false ) 
	#(328 8 #reduceActionForWith4: 19729412 false ) 
	#(221 11 #reduceActionForModulePropertyGet12: 8902668 false ) 
	#(219 11 #reduceActionForDefineFunction8: 8478728 false ) 
	#(221 11 #reduceActionForModulePropertyGet14: 8902670 false ) 
	#(221 11 #reduceActionForModulePropertyGet15: 8902671 false ) 
	#(223 11 #reduceActionForModulePropertyLet8: 9369608 false ) 
	#(222 11 #reduceActionForModulePropertySet8: 9143304 false ) 
	#(221 11 #reduceActionForModulePropertyGet8: 8902664 false ) 
	#(286 9 #reduceActionForForEach2: 15857666 false ) 
	#(286 9 #reduceActionForForEach3: 15857667 false ) 
	#(286 9 #reduceActionForForEach5: 15857669 false ) 
	#(287 9 #reduceActionForForNext1: 16067585 false ) 
	#(300 4 #reduceActionForElseIfColon1: 17945601 false ) 
	#(297 9 #reduceActionForIfThenElseIf2: 17596418 false ) 
	#(292 9 #reduceActionForIfThen4: 16937988 false ) 
	#(297 9 #reduceActionForIfThenElseIf3: 17596419 false ) 
	#(308 4 #reduceActionForCaseOtherwise2: 18514946 false ) 
	#(309 9 #reduceActionForSelect3: 18594819 false ) 
	#(221 12 #reduceActionForModulePropertyGet16: 8902672 false ) 
	#(163 11 #reduceActionForGuidLiteral1: 3063809 false ) 
	#(286 10 #reduceActionForForEach4: 15857668 false ) 
	#(286 10 #reduceActionForForEach6: 15857670 false ) 
	#(286 10 #reduceActionForForEach7: 15857671 false ) 
	#(287 10 #reduceActionForForNext2: 16067586 false ) 
	#(287 10 #reduceActionForForNext3: 16067587 false ) 
	#(287 10 #reduceActionForForNext5: 16067589 false ) 
	#(293 10 #reduceActionForIfThenElse1: 17099777 false ) 
	#(299 5 #reduceActionForElseIfBlock1: 17828865 false ) 
	#(301 1 #reduceActionFor___Expression__ifMatch__________1: 17999873 false ) 
	#(302 2 #reduceActionFor______Constant__constant____2: 17999874 false ) 
	#(297 10 #reduceActionForIfThenElseIf4: 17596420 false ) 
	#(309 10 #reduceActionForSelect4: 18594820 false ) 
	#(286 11 #reduceActionForForEach8: 15857672 false ) 
	#(288 11 #reduceActionForForStepNext1: 16303105 false ) 
	#(287 11 #reduceActionForForNext4: 16067588 false ) 
	#(287 11 #reduceActionForForNext6: 16067590 false ) 
	#(287 11 #reduceActionForForNext7: 16067591 false ) 
	#(293 11 #reduceActionForIfThenElse2: 17099778 false ) 
	#(293 11 #reduceActionForIfThenElse3: 17099779 false ) 
	#(299 6 #reduceActionForElseIfBlock2: 17828866 false ) 
	#(301 2 #reduceActionFor___Expression__ifMatch__________2: 17999874 false ) 
	#(293 11 #reduceActionForIfThenElse5: 17099781 false ) 
	#(294 11 #reduceActionForIfThenElseIfElse1: 17350657 false ) 
	#(293 11 #reduceActionForIfThenElse9: 17099785 false ) 
	#(288 12 #reduceActionForForStepNext2: 16303106 false ) 
	#(288 12 #reduceActionForForStepNext3: 16303107 false ) 
	#(288 12 #reduceActionForForStepNext5: 16303109 false ) 
	#(287 12 #reduceActionForForNext8: 16067592 false ) 
	#(293 12 #reduceActionForIfThenElse4: 17099780 false ) 
	#(293 12 #reduceActionForIfThenElse6: 17099782 false ) 
	#(293 12 #reduceActionForIfThenElse7: 17099783 false ) 
	#(294 12 #reduceActionForIfThenElseIfElse2: 17350658 false ) 
	#(294 12 #reduceActionForIfThenElseIfElse3: 17350659 false ) 
	#(293 12 #reduceActionForIfThenElse10: 17099786 false ) 
	#(293 12 #reduceActionForIfThenElse11: 17099787 false ) 
	#(293 12 #reduceActionForIfThenElse13: 17099789 false ) 
	#(294 12 #reduceActionForIfThenElseIfElse5: 17350661 false ) 
	#(288 13 #reduceActionForForStepNext4: 16303108 false ) 
	#(288 13 #reduceActionForForStepNext6: 16303110 false ) 
	#(288 13 #reduceActionForForStepNext7: 16303111 false ) 
	#(293 13 #reduceActionForIfThenElse8: 17099784 false ) 
	#(294 13 #reduceActionForIfThenElseIfElse4: 17350660 false ) 
	#(293 13 #reduceActionForIfThenElse12: 17099788 false ) 
	#(293 13 #reduceActionForIfThenElse14: 17099790 false ) 
	#(293 13 #reduceActionForIfThenElse15: 17099791 false ) 
	#(294 13 #reduceActionForIfThenElseIfElse6: 17350662 false ) 
	#(294 13 #reduceActionForIfThenElseIfElse7: 17350663 false ) 
	#(288 14 #reduceActionForForStepNext8: 16303112 false ) 
	#(293 14 #reduceActionForIfThenElse16: 17099792 false ) 
	#(294 14 #reduceActionForIfThenElseIfElse8: 17350664 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"!="' '"&"' '"&&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<="' '"<>"' '"="' '">"' '">="' '"AS"' '"AddressOf"' '"Append"' '"BINARY"' '"Call"' '"ERROR"' '"FOR"' '"INPUT"' '"Lock Read Write"' '"Lock Read"' '"Lock Write"' '"Mod"' '"NEW"' '"Open"' '"Output"' '"RaiseEvent"' '"Random"' '"Read"' '"Shared"' '"WithEvents"' '"Write"' '"["' '"\"' '"^"' '"alias"' '"and"' '"attribute"' '"base"' '"begin"' '"boolean"' '"byref"' '"byte"' '"byval"' '"case"' '"class"' '"collection"' '"compare"' '"const"' '"database"' '"date"' '"declare"' '"delete"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"elseif"' '"end"' '"enum"' '"eqv"' '"event"' '"exit"' '"explicit"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"implements"' '"in"' '"integer"' '"is"' '"len"' '"let"' '"lib"' '"like"' '"long"' '"loop"' '"module"' '"name"' '"next"' '"not"' '"object"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"print"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"select"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"||"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<HASH_NUMBER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<LABEL>' '<comment>' 'B e g i n' 'module' '<eol>*' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' 'literal' 'FileDescriptorLiteral' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' '<HEX_INTEGER>+' 'Identifier' 'UsableKeywords' 'HashIdentifier' 'SimpleIdentifier' 'HeadlessIdentifier' 'QualifiedIdentifier' 'LabelTag' 'header' 'Option' 'OptionBase' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'Implements' 'ModuleStatement' 'Statement' 'Block' '(<eol>+ Statement ''statement''  )' '(<eol>+ Statement ''statement''  )*' 'BaseType' 'Visibility' 'ComplexType' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '( "," Expression ''size'')' '( "," Expression ''size'')*' 'AsType' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '( "," Parameter ''parameter'')' '( "," Parameter ''parameter'')*' 'Parameter' '("=" Expression ''default'')' '("=" Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '(","  Variable ''variable'' )' '(","  Variable ''variable'' )+' 'ConstantList' '(","  Constant ''constant'' )' '(","  Constant ''constant'' )+' 'VariableDefinition' 'ValueStatement' 'Expression' 'ParentheseesExpression' 'ValueStatementList' '("," ValueStatement ''value'' )' '("," ValueStatement ''value'' ) *' 'IntervalExpression' 'Operation' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'ConcatenationOperation' 'AssignOperator' 'ExplicitLetSet' 'AssignementOrEquals' 'ExplicitAssignement' 'Rename' 'ValueClause' 'AddressOfClause' 'NewClause' 'OpenMode' 'OpenAccess' 'Lock' 'OpenFileClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForStepNext' 'If' 'IfThenColon' 'IfThenElseOneLine' 'IfThen' 'IfThenElse' 'IfThenElseIfElse' '(ElseIf ''case'')' '(ElseIf ''case'') +' 'IfThenElseIf' 'ElseIf' 'ElseIfBlock' 'ElseIfColon' '(  Expression ''ifMatch'' ?  ":" )' '(  Expression ''ifMatch'' ?  ":" )*' 'RaiseError' 'To' 'Label' 'LabelSub' 'Case' 'CaseOtherwise' 'Select' '(<eol>+ Case ''case'')' '(<eol>+ Case ''case'') +' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'Destination' 'DestinationList' '("," Destination ''label'')' '("," Destination ''label'')*' 'GoTo' 'GoSub' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'DictionaryAccess' 'MemberAccess' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" ))' '(Argument ''argument'' ? ("," | ";" ))*' '( ("," | ";" )Argument ''argument'' ?)' '( ("," | ";" )Argument ''argument'' ?)*' 'ImplicitCall' 'StateAccess' 'ExplicitCall' 'RaiseEvent' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBFileDescriptorLiteralNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBHashIdentifierNode #Object #VBHeadlessIdentifierNode #VBQualifiedIdentifierNode #SmaCCToken #VBHeaderNode #VBProgramNode #VBOptionBaseNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBImplementsNode #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #Object #SmaCCToken #VBComplexTypeNode #Object #VBAsTypeNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #Object #Object #VBParentheseesExpressionNode #VBValueStatementListNode #OrderedCollection #OrderedCollection #VBIntervalExpressionNode #VBProgramNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #VBProgramNode #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBConcatenationOperationNode #SmaCCToken #SmaCCToken #VBAssignementOrEqualsNode #VBExplicitAssignementNode #VBRenameNode #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #SmaCCToken #SmaCCToken #SmaCCToken #VBOpenClauseNode #Object #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForStepNextNode #VBProgramNode #VBIfThenColonNode #VBIfThenColonNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseIfElseNode #VBProgramNode #OrderedCollection #VBIfThenElseIfElseNode #VBProgramNode #VBElseIfBlockNode #VBElseIfColonNode #OrderedCollection #OrderedCollection #VBRaiseErrorNode #VBGoSubLabelNode #VBGoToLabelNode #VBGoSubLabelNode #VBCaseNode #VBCaseNode #VBSelectNode #OrderedCollection #OrderedCollection #Object #VBResumeLabelNode #VBResumeNextNode #SmaCCToken #VBProgramNode #Object #VBDestinationListNode #OrderedCollection #OrderedCollection #VBGoToNode #VBGoSubNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBDictionaryAccessNode #VBMemberAccessNode #VBImplicitParenthesesLessCallNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #Object #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 124 0 6 0 142 0 6 0 144 0 6 0 146 0 9 0 150 0 13 0 151] 
#[0 0 0 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 133 0 124 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 0 173 0 173 0 197 0 174 0 197 0 175 0 197 0 177 0 197 0 178 0 197 0 182 0 197 0 183 0 201 0 189 0 197 0 198 0 197 0 199 0 197 0 203 0 197 0 204 0 197 0 215 0 197 0 216 0 197 0 217 0 233 0 218 0 197 0 219 0 197 0 220 0 197 0 221 0 197 0 222 0 197 0 223 0 197 0 224 0 197 0 225 0 197 0 226 0 197 0 227 0 197 0 228 0 197 0 229 1 25 0 231 0 197 0 232 0 197 0 233 0 197 0 234 0 197 0 235 0 197 0 236 0 197 0 240 0 197 0 243] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 57 0 142 0 141 0 144 1 57 0 166 0 153 0 167 1 57 0 168 1 57 0 169 1 57 0 170 1 57 0 171] 
#[0 0 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 1 61 0 166 0 153 0 167 1 61 0 168 1 61 0 169 1 61 0 170 1 61 0 171 1 65 0 176] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 1 69 0 151] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 1 73 0 231 1 77 0 240] 
#[0 0 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 81 0 77 1 85 0 117] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 1 97 0 230 1 101 0 237] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 105 0 142 0 141 0 144 1 105 0 166 0 153 0 167 1 105 0 168 1 105 0 169 1 105 0 170 1 105 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 109 0 142 0 141 0 144 1 109 0 166 0 153 0 167 1 109 0 168 1 109 0 169 1 109 0 170 1 109 0 171] 
#[0 0 18 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 113 0 142 0 141 0 144 1 113 0 166 0 153 0 167 1 113 0 168 1 113 0 169 1 113 0 170 1 113 0 171] 
#[0 0 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 26 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 117 0 142 0 141 0 144 1 117 0 166 0 153 0 167 1 117 0 168 1 117 0 169 1 117 0 170 1 117 0 171] 
#[0 0 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 121 0 49 1 125 0 58 1 129 0 75 1 133 0 105 1 137 0 137 1 141 0 156] 
#[0 0 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 46 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 1 145 0 78 1 149 0 88 1 153 0 112] 
#[0 0 50 0 11 0 29 0 41 0 59 0 61 0 62 0 71 0 73 0 77 0 78 0 87 0 88 0 94 0 104 0 106 0 112 0 114 0 117 0 118 0 121 0 142 0 144] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 1 157 0 103 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 1 161 0 230 1 165 0 237] 
#[0 0 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 58 0 77 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 58 0 106 0 153 0 112 0 58 0 117 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 1 169 0 230 1 173 0 237] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 177 0 142 0 141 0 144 1 177 0 166 0 153 0 167 1 177 0 168 1 177 0 169 1 177 0 170 1 177 0 171] 
#[0 0 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 181 0 142 0 141 0 144 1 181 0 166 0 153 0 167 1 181 0 168 1 181 0 169 1 181 0 170 1 181 0 171] 
#[1 1 185 0 138 1 189 0 159] 
#[0 0 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 74 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 124 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 193 0 5 1 197 0 11 1 201 0 19 1 205 0 22 1 221 0 192 1 221 0 193 1 217 0 194 1 221 0 197] 
#[0 0 78 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 86 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 90 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 94 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 1 225 0 151] 
#[0 0 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 0 118 0 11 0 118 0 29 0 118 0 48 0 118 0 50 0 118 0 59 0 118 0 61 0 118 0 62 0 118 0 64 0 118 0 71 0 118 0 73 0 118 0 76 0 118 0 77 0 118 0 78 0 118 0 79 0 118 0 83 0 118 0 87 0 118 0 88 0 118 0 94 0 118 0 99 0 118 0 104 0 118 0 105 0 118 0 106 0 118 0 107 0 118 0 108 0 118 0 112 0 118 0 114 0 118 0 117 0 118 0 118 0 118 0 121 0 118 0 142 0 118 0 144 0 118 0 146 1 229 0 153 0 118 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 1 233 0 59 0 153 0 61 1 237 0 62 1 241 0 71 1 245 0 73 1 249 0 77 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 1 253 0 106 0 153 0 112 2 13 0 114 2 5 0 117 0 153 0 118 2 9 0 121 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 2 13 0 218 2 17 0 230 2 21 0 237] 
#[0 0 122 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 126 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 130 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 134 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 138 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 142 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 146 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 25 0 77 2 29 0 106 2 33 0 117] 
#[0 0 150 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 154 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 158 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 162 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 166 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 170 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 174 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 178 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 182 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 190 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 2 41 0 241 2 45 0 242] 
#[0 0 194 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 198 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 206 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 210 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 214 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 0 218 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 0 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 197 0 11 2 49 0 19] 
#[0 0 226 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 0 145 0 146 1 61 0 166 0 153 0 167 1 61 0 168 1 61 0 169 1 61 0 170 1 61 0 171 2 53 0 176] 
#[1 2 37 0 9 0 230 0 11 0 230 0 29 0 230 0 48 0 230 0 50 0 230 0 59 0 230 0 61 0 230 0 62 0 230 0 64 0 230 0 68 0 230 0 69 0 230 0 70 0 230 0 71 0 230 0 73 0 230 0 76 0 230 0 77 0 230 0 78 0 230 0 79 0 230 0 83 0 230 0 87 0 230 0 88 0 230 0 92 0 230 0 94 0 230 0 95 0 230 0 99 0 230 0 104 0 230 0 105 0 230 0 106 0 230 0 107 0 230 0 108 0 230 0 112 0 230 0 114 0 230 0 117 0 230 0 118 0 230 0 121 0 230 0 125 0 230 0 137 0 230 0 142 0 230 0 144 0 230 0 146 2 41 0 241 2 45 0 242 0 230 1 93] 
#[0 0 234 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 57 0 142 0 141 0 144 2 57 0 166 0 153 0 167 2 57 0 168 2 57 0 169 2 57 0 170 2 57 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 61 0 142 0 141 0 144 2 61 0 166 0 153 0 167 2 61 0 168 2 61 0 169 2 61 0 170 2 61 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 65 0 142 0 141 0 144 2 65 0 166 0 153 0 167 2 65 0 168 2 65 0 169 2 65 0 170 2 65 0 171] 
#[1 1 193 0 5 0 238 0 9 1 197 0 11 1 205 0 22 0 238 0 29 0 238 0 48 0 238 0 50 0 238 0 59 0 238 0 61 0 238 0 62 0 238 0 64 0 238 0 68 0 238 0 69 0 238 0 70 0 238 0 71 0 238 0 73 0 238 0 76 0 238 0 77 0 238 0 78 0 238 0 79 0 238 0 83 0 238 0 87 0 238 0 88 0 238 0 92 0 238 0 94 0 238 0 95 0 238 0 99 0 238 0 104 0 238 0 105 0 238 0 106 0 238 0 107 0 238 0 108 0 238 0 112 0 238 0 114 0 238 0 117 0 238 0 118 0 238 0 121 0 238 0 125 0 238 0 137 0 238 0 142 0 238 0 144 0 238 0 146 2 69 0 192 2 69 0 193 1 217 0 194 2 69 0 197 0 238 1 93] 
#[1 2 73 0 9 0 242 0 11 0 242 0 29 0 242 0 48 0 242 0 50 0 242 0 59 0 242 0 61 0 242 0 62 0 242 0 64 0 242 0 68 0 242 0 69 0 242 0 70 0 242 0 71 0 242 0 73 0 242 0 76 0 242 0 77 0 242 0 78 0 242 0 79 0 242 0 83 0 242 0 87 0 242 0 88 0 242 0 92 0 242 0 94 0 242 0 95 0 242 0 99 0 242 0 104 0 242 0 105 0 242 0 106 0 242 0 107 0 242 0 108 0 242 0 112 0 242 0 114 0 242 0 117 0 242 0 118 0 242 0 121 0 242 0 125 0 242 0 137 0 242 0 142 0 242 0 144 0 242 0 146 2 77 0 238 2 81 0 239 0 242 1 93] 
#[0 0 246 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 197 0 11 0 250 0 29 0 250 0 61 0 250 0 70 0 250 0 78 0 250 0 87 0 250 0 88 0 250 0 94 0 250 0 104 0 250 0 112 0 250 0 118 0 250 0 142 0 250 0 144 0 250 0 146 2 85 0 206] 
#[1 2 89 0 5 1 197 0 11 2 93 0 209] 
#[1 2 89 0 5 1 197 0 11 2 97 0 209] 
#[1 1 197 0 11 0 254 0 29 0 254 0 48 0 254 0 50 0 254 0 59 0 254 0 61 0 254 0 62 0 254 0 64 0 254 0 71 0 254 0 73 0 254 0 76 0 254 0 77 0 254 0 78 0 254 0 79 0 254 0 83 0 254 0 87 0 254 0 88 0 254 0 94 0 254 0 99 0 254 0 104 0 254 0 105 0 254 0 106 0 254 0 107 0 254 0 108 0 254 0 112 0 254 0 114 0 254 0 117 0 254 0 118 0 254 0 121 0 254 0 142 0 254 0 144 0 254 0 146 0 254 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 2 237 0 154 2 237 0 155 2 237 0 156 2 237 0 157 2 237 0 158 2 237 0 159 2 237 0 160 2 237 0 161 2 237 0 162 2 237 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 2 237 0 244 2 237 0 245 2 237 0 246 2 237 0 250 2 237 0 251 2 237 0 252 2 237 0 253 2 237 0 254 2 237 0 255 2 237 1 0 2 237 1 2 2 237 1 4 2 237 1 6 2 237 1 7 3 33 1 9 2 237 1 10 2 237 1 11 2 237 1 12 2 237 1 13 2 237 1 14 2 237 1 15 2 237 1 19 2 237 1 60 2 237 1 65 2 237 1 66 2 237 1 73 2 237 1 74 2 237 1 75 2 237 1 76 2 237 1 77 2 237 1 78 2 237 1 79 2 237 1 80 2 237 1 81 2 237 1 82 2 237 1 89 2 237 1 90 2 237 1 91 2 237 1 92] 
#[1 3 133 0 25 3 137 0 60 3 141 0 118] 
#[0 1 2 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 3 145 0 93] 
#[0 1 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 10 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 149 0 142 0 141 0 144 3 149 0 166 0 153 0 167 3 149 0 168 3 149 0 169 3 149 0 170 3 149 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 153 0 142 0 141 0 144 3 153 0 166 0 153 0 167 3 153 0 168 3 153 0 169 3 153 0 170 3 153 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 3 157 0 142 0 141 0 144 3 157 0 166 0 153 0 167 3 157 0 168 3 157 0 169 3 157 0 170 3 157 0 171] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 3 161 0 230 3 165 0 237] 
#[1 2 73 0 9 1 14 0 11 1 14 0 29 1 14 0 48 1 14 0 50 1 14 0 59 1 14 0 61 1 14 0 62 1 14 0 64 1 14 0 68 1 14 0 69 1 14 0 70 1 14 0 71 1 14 0 73 1 14 0 76 1 14 0 77 1 14 0 78 1 14 0 79 1 14 0 83 1 14 0 87 1 14 0 88 1 14 0 92 1 14 0 94 1 14 0 95 1 14 0 99 1 14 0 104 1 14 0 105 1 14 0 106 1 14 0 107 1 14 0 108 1 14 0 112 1 14 0 114 1 14 0 117 1 14 0 118 1 14 0 121 1 14 0 125 1 14 0 137 1 14 0 142 1 14 0 144 1 14 0 146 2 77 0 238 2 81 0 239 1 14 1 93] 
#[0 1 18 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 73 0 9 1 22 0 11 1 22 0 29 1 22 0 48 1 22 0 50 1 22 0 59 1 22 0 61 1 22 0 62 1 22 0 64 1 22 0 68 1 22 0 69 1 22 0 70 1 22 0 71 1 22 0 73 1 22 0 76 1 22 0 77 1 22 0 78 1 22 0 79 1 22 0 83 1 22 0 87 1 22 0 88 1 22 0 92 1 22 0 94 1 22 0 95 1 22 0 99 1 22 0 104 1 22 0 105 1 22 0 106 1 22 0 107 1 22 0 108 1 22 0 112 1 22 0 114 1 22 0 117 1 22 0 118 1 22 0 121 1 22 0 125 1 22 0 137 1 22 0 142 1 22 0 144 1 22 0 146 2 77 0 238 2 81 0 239 1 22 1 93] 
#[0 1 26 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 3 169 0 151 3 173 0 209] 
#[1 1 197 0 11 1 30 0 29 1 30 0 61 1 30 0 70 1 30 0 78 1 30 0 87 1 30 0 88 1 30 0 94 1 30 0 104 1 30 0 112 1 30 0 118 1 30 0 142 1 30 0 144 1 30 0 146 3 177 0 201] 
#[0 1 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 56 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 38 0 11 1 38 0 29 1 38 0 48 1 38 0 50 3 181 0 56 1 38 0 59 1 38 0 61 1 38 0 62 1 38 0 64 1 38 0 71 1 38 0 73 1 38 0 76 1 38 0 77 1 38 0 78 1 38 0 79 1 38 0 83 1 38 0 87 1 38 0 88 1 38 0 94 1 38 0 99 1 38 0 104 1 38 0 105 1 38 0 106 1 38 0 107 1 38 0 108 1 38 0 112 1 38 0 114 1 38 0 117 1 38 0 118 1 38 0 121 1 38 0 142 1 38 0 144 1 38 0 146] 
#[1 2 101 0 5 1 42 0 6 2 105 0 8 1 42 0 9 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 3 189 0 154 3 189 0 155 3 189 0 156 3 189 0 157 3 189 0 158 3 189 0 159 3 189 0 160 3 189 0 161 3 189 0 162 3 189 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 3 185 0 196 3 189 0 244 3 189 0 245 3 189 0 246 3 189 0 250 3 189 0 251 3 189 0 252 3 189 0 253 3 189 0 254 3 189 0 255 3 189 1 0 3 189 1 2 3 189 1 4 3 189 1 6 3 189 1 7 3 33 1 9 3 189 1 10 3 189 1 11 3 189 1 12 3 189 1 13 3 189 1 14 3 189 1 15 3 189 1 19 3 189 1 60 3 189 1 65 3 189 1 66 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 89 3 189 1 90 3 189 1 91 3 189 1 92] 
#[0 3 193 0 142] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 3 197 0 154 3 197 0 155 3 197 0 156 3 197 0 157 3 197 0 158 3 197 0 159 3 197 0 160 3 197 0 161 3 197 0 162 3 197 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 3 197 0 244 3 197 0 245 3 197 0 246 3 197 0 250 3 197 0 251 3 197 0 252 3 197 0 253 3 197 0 254 3 197 0 255 3 197 1 0 3 197 1 2 3 197 1 4 3 197 1 6 3 197 1 7 3 33 1 9 3 197 1 10 3 197 1 11 3 197 1 12 3 197 1 13 3 197 1 14 3 197 1 15 3 197 1 19 3 197 1 60 3 197 1 65 3 197 1 66 3 197 1 73 3 197 1 74 3 197 1 75 3 197 1 76 3 197 1 77 3 197 1 78 3 197 1 79 3 197 1 80 3 197 1 81 3 197 1 82 3 197 1 89 3 197 1 90 3 197 1 91 3 197 1 92] 
#[1 0 17 0 11 0 153 0 29 3 201 0 34 4 5 0 51 4 5 0 53 4 5 0 57 3 217 0 61 4 5 0 66 0 153 0 78 4 5 0 85 0 153 0 87 0 153 0 88 4 5 0 91 0 153 0 94 4 5 0 97 0 153 0 104 0 153 0 112 4 5 0 113 4 5 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 166 0 153 0 167 3 249 0 168 3 249 0 169 3 249 0 170 3 249 0 171 4 5 0 188 4 5 0 190 4 5 0 191] 
#[0 1 46 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 50 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 54 0 5 1 54 0 6 1 54 0 7 1 54 0 8 1 54 0 9 1 54 0 10 1 54 0 11 1 54 0 19 4 9 0 22 1 54 0 23 1 54 0 26 1 54 0 27 1 54 0 28 1 54 0 29 1 54 0 34 1 54 0 35 1 54 0 37 1 54 0 48 1 54 0 50 1 54 0 59 1 54 0 61 1 54 0 62 1 54 0 64 1 54 0 65 1 54 0 68 1 54 0 69 1 54 0 70 1 54 0 71 1 54 0 73 1 54 0 74 1 54 0 76 1 54 0 77 1 54 0 78 1 54 0 79 1 54 0 80 1 54 0 81 1 54 0 82 1 54 0 83 1 54 0 87 1 54 0 88 1 54 0 92 1 54 0 94 1 54 0 95 1 54 0 96 1 54 0 98 1 54 0 99 1 54 0 104 1 54 0 105 1 54 0 106 1 54 0 107 1 54 0 108 1 54 0 109 1 54 0 111 1 54 0 112 1 54 0 114 1 54 0 117 1 54 0 118 1 54 0 121 1 54 0 125 1 54 0 126 1 54 0 127 1 54 0 129 1 54 0 135 1 54 0 136 1 54 0 137 1 54 0 138 1 54 0 139 1 54 0 140 1 54 0 141 1 54 0 142 1 54 0 143 1 54 0 144 1 54 0 146 1 54 0 147 1 54 1 93] 
#[0 4 13 0 19] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 4 17 0 174 4 17 0 175 4 17 0 177 4 17 0 178 4 17 0 182 4 17 0 183 0 201 0 189 4 17 0 198 4 17 0 199 4 17 0 203 4 17 0 204 4 17 0 215 4 17 0 216 4 17 0 217 0 233 0 218 4 17 0 219 4 17 0 220 4 17 0 221 4 17 0 222 4 17 0 223 4 17 0 224 4 17 0 225 4 17 0 226 4 17 0 227 4 17 0 228 4 17 0 229 1 25 0 231 4 17 0 232 4 17 0 233 4 17 0 234 4 17 0 235 4 17 0 236 4 17 0 240 4 17 0 243] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 4 21 0 151 4 25 0 152 0 6 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 4 29 0 231 4 33 0 240] 
#[1 4 37 0 77 4 41 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 45 0 142 0 141 0 144 4 45 0 166 0 153 0 167 4 45 0 168 4 45 0 169 4 45 0 170 4 45 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 49 0 142 0 141 0 144 4 49 0 166 0 153 0 167 4 49 0 168 4 49 0 169 4 49 0 170 4 49 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 53 0 142 0 141 0 144 4 53 0 166 0 153 0 167 4 53 0 168 4 53 0 169 4 53 0 170 4 53 0 171] 
#[1 4 57 0 78 4 61 0 88 4 65 0 112] 
#[0 0 58 0 77 0 106 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 69 0 142 0 141 0 144 4 69 0 166 0 153 0 167 4 69 0 168 4 69 0 169 4 69 0 170 4 69 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 73 0 142 0 141 0 144 4 73 0 166 0 153 0 167 4 73 0 168 4 73 0 169 4 73 0 170 4 73 0 171] 
#[1 4 77 0 77 4 81 0 106 4 85 0 117] 
#[1 2 73 0 9 1 58 0 11 1 58 0 29 1 58 0 48 1 58 0 50 1 58 0 59 1 58 0 61 1 58 0 62 1 58 0 64 1 58 0 68 1 58 0 69 1 58 0 70 1 58 0 71 1 58 0 73 1 58 0 76 1 58 0 77 1 58 0 78 1 58 0 79 1 58 0 83 1 58 0 87 1 58 0 88 1 58 0 92 1 58 0 94 1 58 0 95 1 58 0 99 1 58 0 104 1 58 0 105 1 58 0 106 1 58 0 107 1 58 0 108 1 58 0 112 1 58 0 114 1 58 0 117 1 58 0 118 1 58 0 121 1 58 0 125 1 58 0 137 1 58 0 142 1 58 0 144 1 58 0 146 2 77 0 238 2 81 0 239 1 58 1 93] 
#[0 1 62 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 89 0 142 0 141 0 144 4 89 0 166 0 153 0 167 4 89 0 168 4 89 0 169 4 89 0 170 4 89 0 171] 
#[1 4 93 0 78 4 97 0 88 4 101 0 112] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 105 0 142 0 141 0 144 4 105 0 166 0 153 0 167 4 105 0 168 4 105 0 169 4 105 0 170 4 105 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 0 149 0 142 0 141 0 144 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 4 109 0 231] 
#[0 1 66 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 1 70 0 11 1 70 0 29 1 70 0 48 1 70 0 50 1 70 0 59 1 70 0 61 1 70 0 62 1 70 0 64 1 70 0 68 1 70 0 69 1 70 0 70 1 70 0 71 1 70 0 73 1 70 0 76 1 70 0 77 1 70 0 78 1 70 0 79 1 70 0 83 1 70 0 87 1 70 0 88 1 70 0 92 1 70 0 94 1 70 0 95 1 70 0 99 1 70 0 104 1 70 0 105 1 70 0 106 1 70 0 107 1 70 0 108 1 70 0 112 1 70 0 114 1 70 0 117 1 70 0 118 1 70 0 121 1 70 0 125 1 70 0 137 1 70 0 142 1 70 0 144 1 70 0 146 4 113 0 241 1 70 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 117 0 154 4 117 0 155 4 117 0 156 4 117 0 157 4 117 0 158 4 117 0 159 4 117 0 160 4 117 0 161 4 117 0 162 4 117 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 117 0 244 4 117 0 245 4 117 0 246 4 117 0 250 4 117 0 251 4 117 0 252 4 117 0 253 4 117 0 254 4 117 0 255 4 117 1 0 4 117 1 2 4 117 1 4 4 117 1 6 4 117 1 7 3 33 1 9 4 117 1 10 4 117 1 11 4 117 1 12 4 117 1 13 4 117 1 14 4 117 1 15 4 117 1 19 4 117 1 60 4 117 1 65 4 117 1 66 4 117 1 73 4 117 1 74 4 117 1 75 4 117 1 76 4 117 1 77 4 117 1 78 4 117 1 79 4 117 1 80 4 117 1 81 4 117 1 82 4 117 1 89 4 117 1 90 4 117 1 91 4 117 1 92] 
#[1 1 74 0 70 1 74 0 146 4 121 0 180] 
#[1 1 197 0 11 4 125 0 89] 
#[1 1 197 0 11 4 129 0 89] 
#[1 1 193 0 5 1 78 0 9 1 197 0 11 1 205 0 22 1 78 0 29 1 78 0 48 1 78 0 50 1 78 0 59 1 78 0 61 1 78 0 62 1 78 0 64 1 78 0 68 1 78 0 69 1 78 0 70 1 78 0 71 1 78 0 73 1 78 0 76 1 78 0 77 1 78 0 78 1 78 0 79 1 78 0 83 1 78 0 87 1 78 0 88 1 78 0 92 1 78 0 94 1 78 0 95 1 78 0 99 1 78 0 104 1 78 0 105 1 78 0 106 1 78 0 107 1 78 0 108 1 78 0 112 1 78 0 114 1 78 0 117 1 78 0 118 1 78 0 121 1 78 0 125 1 78 0 137 1 78 0 142 1 78 0 144 1 78 0 146 4 133 0 192 4 133 0 193 1 217 0 194 4 133 0 197 1 78 1 93] 
#[0 1 82 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 4 137 0 230] 
#[0 1 86 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 73 0 9 1 90 0 11 1 90 0 29 1 90 0 48 1 90 0 50 1 90 0 59 1 90 0 61 1 90 0 62 1 90 0 64 1 90 0 68 1 90 0 69 1 90 0 70 1 90 0 71 1 90 0 73 1 90 0 76 1 90 0 77 1 90 0 78 1 90 0 79 1 90 0 83 1 90 0 87 1 90 0 88 1 90 0 92 1 90 0 94 1 90 0 95 1 90 0 99 1 90 0 104 1 90 0 105 1 90 0 106 1 90 0 107 1 90 0 108 1 90 0 112 1 90 0 114 1 90 0 117 1 90 0 118 1 90 0 121 1 90 0 125 1 90 0 137 1 90 0 142 1 90 0 144 1 90 0 146 4 141 0 238 1 90 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 4 145 0 151 4 149 0 205] 
#[1 4 153 0 6 0 17 0 11 0 153 0 29 4 157 0 52 4 177 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 4 165 0 100 4 169 0 102 0 153 0 104 0 153 0 112 0 153 0 118 4 173 0 142 0 141 0 144 4 173 0 166 0 153 0 167 4 173 0 168 4 173 0 169 4 173 0 170 4 173 0 171 4 177 0 208 4 181 0 212] 
#[0 1 94 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 4 185 0 151 4 189 0 192 4 189 0 193 1 217 0 194 4 189 0 197] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 193 0 154 4 193 0 155 4 193 0 156 4 193 0 157 4 193 0 158 4 193 0 159 4 193 0 160 4 193 0 161 4 193 0 162 4 193 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 193 0 244 4 193 0 245 4 193 0 246 4 193 0 250 4 193 0 251 4 193 0 252 4 193 0 253 4 193 0 254 4 193 0 255 4 193 1 0 4 193 1 2 4 193 1 4 4 193 1 6 4 193 1 7 3 33 1 9 4 193 1 10 4 193 1 11 4 193 1 12 4 193 1 13 4 193 1 14 4 193 1 15 4 193 1 19 4 193 1 60 4 193 1 65 4 193 1 66 4 193 1 73 4 193 1 74 4 193 1 75 4 193 1 76 4 193 1 77 4 193 1 78 4 193 1 79 4 193 1 80 4 193 1 81 4 193 1 82 4 193 1 89 4 193 1 90 4 193 1 91 4 193 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 4 197 0 161 4 197 0 162 4 197 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 197 0 244 4 197 0 245 4 197 0 246 4 197 0 250 4 197 0 251 4 197 0 252 4 197 0 253 4 197 0 254 4 197 0 255 4 197 1 0 4 197 1 2 4 197 1 4 4 197 1 6 4 197 1 7 3 33 1 9 4 197 1 10 4 197 1 11 4 197 1 12 4 197 1 13 4 197 1 14 4 197 1 15 4 197 1 19 4 197 1 60 4 197 1 65 4 197 1 66 4 197 1 73 4 197 1 74 4 197 1 75 4 197 1 76 4 197 1 77 4 197 1 78 4 197 1 79 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 89 4 197 1 90 4 197 1 91 4 197 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 201 0 154 4 201 0 155 4 201 0 156 4 201 0 157 4 201 0 158 4 201 0 159 4 201 0 160 4 201 0 161 4 201 0 162 4 201 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 201 0 244 4 201 0 245 4 201 0 246 4 201 0 250 4 201 0 251 4 201 0 252 4 201 0 253 4 201 0 254 4 201 0 255 4 201 1 0 4 201 1 2 4 201 1 4 4 201 1 6 4 201 1 7 3 33 1 9 4 201 1 10 4 201 1 11 4 201 1 12 4 201 1 13 4 201 1 14 4 201 1 15 4 201 1 19 4 201 1 60 4 201 1 65 4 201 1 66 4 201 1 73 4 201 1 74 4 201 1 75 4 201 1 76 4 201 1 77 4 201 1 78 4 201 1 79 4 201 1 80 4 201 1 81 4 201 1 82 4 201 1 89 4 201 1 90 4 201 1 91 4 201 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 205 0 142 0 141 0 144 4 205 0 166 0 153 0 167 4 205 0 168 4 205 0 169 4 205 0 170 4 205 0 171] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 4 209 1 2 4 209 1 4 4 209 1 6 4 209 1 7 3 33 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 213 1 81 4 213 1 82 4 213 1 89 4 209 1 90 4 209 1 91 4 209 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 4 217 0 142 0 141 0 144 4 217 0 166 0 153 0 167 4 217 0 168 4 217 0 169 4 217 0 170 4 217 0 171] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 221 0 154 4 221 0 155 4 221 0 156 4 221 0 157 4 221 0 158 4 221 0 159 4 221 0 160 4 221 0 161 4 221 0 162 4 221 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 221 0 244 4 221 0 245 4 221 0 246 4 221 0 250 4 221 0 251 4 221 0 252 4 221 0 253 4 221 0 254 4 221 0 255 4 221 1 0 4 221 1 2 4 221 1 4 4 221 1 6 4 221 1 7 3 33 1 9 4 221 1 10 4 221 1 11 4 221 1 12 4 221 1 13 4 221 1 14 4 221 1 15 4 221 1 19 4 221 1 60 4 221 1 65 4 221 1 66 4 221 1 73 4 221 1 74 4 221 1 75 4 221 1 76 4 221 1 77 4 221 1 78 4 221 1 79 4 221 1 80 4 221 1 81 4 221 1 82 4 221 1 89 4 221 1 90 4 221 1 91 4 221 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 4 209 1 2 4 209 1 4 4 209 1 6 4 209 1 7 3 33 1 9 4 209 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 225 1 81 4 225 1 82 4 225 1 89 4 209 1 90 4 209 1 91 4 209 1 92] 
#[1 4 229 0 28 4 233 0 65 4 237 0 77 4 241 0 106 4 245 0 117] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 5 1 0 156 4 253 0 166 0 153 0 167 4 253 0 168 4 253 0 169 4 253 0 170 4 253 0 171 5 1 1 61 5 5 1 62] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 5 1 0 156 4 253 0 166 0 153 0 167 4 253 0 168 4 253 0 169 4 253 0 170 4 253 0 171 5 1 1 61 5 9 1 62] 
#[1 0 34 0 1 0 34 0 3 0 34 0 5 0 34 0 6 0 34 0 7 0 34 0 8 0 34 0 9 0 34 0 10 0 7 0 11 0 34 0 12 0 34 0 13 0 34 0 14 0 34 0 15 0 34 0 16 0 34 0 17 0 34 0 18 0 34 0 19 0 34 0 20 0 34 0 21 0 34 0 22 0 34 0 23 0 34 0 26 0 34 0 27 0 34 0 28 0 7 0 29 0 34 0 33 0 34 0 34 0 34 0 35 0 34 0 37 0 34 0 44 0 34 0 45 0 34 0 47 0 34 0 48 0 34 0 50 0 34 0 52 0 34 0 54 0 34 0 59 0 7 0 61 0 34 0 62 0 34 0 64 0 34 0 65 0 34 0 68 0 34 0 69 0 34 0 70 0 34 0 71 0 34 0 72 0 34 0 73 0 34 0 74 0 34 0 76 0 34 0 77 0 7 0 78 0 34 0 79 0 34 0 80 0 34 0 81 0 34 0 82 0 34 0 83 0 34 0 86 0 7 0 87 0 7 0 88 0 34 0 90 0 34 0 92 0 7 0 94 0 34 0 95 0 34 0 96 0 34 0 98 0 34 0 99 0 34 0 101 0 34 0 102 0 7 0 104 0 34 0 105 0 34 0 106 0 34 0 107 0 34 0 108 0 34 0 109 0 34 0 111 0 7 0 112 0 34 0 114 0 34 0 115 0 34 0 117 0 7 0 118 0 34 0 119 0 34 0 120 0 34 0 121 0 34 0 125 0 34 0 126 0 34 0 127 0 34 0 128 0 34 0 129 0 34 0 135 0 34 0 136 0 34 0 137 0 34 0 138 0 34 0 139 0 34 0 140 0 34 0 141 0 7 0 142 0 34 0 143 0 7 0 144 0 34 0 146 0 34 0 147 0 34 1 93] 
#[1 0 38 0 1 0 38 0 3 2 101 0 5 0 38 0 6 0 38 0 7 2 105 0 8 0 38 0 9 2 109 0 10 0 17 0 11 0 38 0 12 0 38 0 13 0 38 0 14 0 38 0 15 0 38 0 16 0 38 0 17 0 38 0 18 0 38 0 19 0 38 0 20 0 38 0 21 0 38 0 22 0 11 0 23 0 15 0 26 0 38 0 27 0 38 0 28 0 19 0 29 0 38 0 33 0 23 0 34 0 27 0 35 0 31 0 37 0 38 0 44 0 38 0 45 0 38 0 47 0 38 0 48 0 38 0 50 0 38 0 52 0 38 0 54 0 38 0 59 0 35 0 61 0 38 0 62 0 38 0 64 0 38 0 65 0 38 0 68 0 38 0 69 0 38 0 70 0 38 0 71 0 38 0 72 0 38 0 73 0 39 0 74 0 38 0 76 0 38 0 77 0 43 0 78 0 38 0 79 0 47 0 80 0 51 0 81 0 38 0 82 0 38 0 83 0 38 0 86 0 55 0 87 0 59 0 88 0 38 0 90 0 38 0 92 0 63 0 94 0 38 0 95 0 67 0 96 0 38 0 98 0 38 0 99 0 38 0 101 0 38 0 102 0 71 0 104 0 38 0 105 0 38 0 106 0 38 0 107 0 38 0 108 0 38 0 109 0 38 0 111 0 75 0 112 0 38 0 114 0 38 0 115 0 38 0 117 0 79 0 118 0 38 0 119 0 38 0 120 0 38 0 121 0 38 0 125 0 38 0 126 0 38 0 127 0 38 0 128 0 83 0 129 0 87 0 135 0 91 0 136 0 95 0 137 0 99 0 138 0 103 0 139 0 107 0 140 0 111 0 141 0 115 0 142 0 119 0 143 0 123 0 144 0 38 0 146 0 38 0 147 5 13 0 154 5 13 0 155 5 13 0 156 5 13 0 157 5 13 0 158 5 13 0 159 5 13 0 160 5 13 0 161 5 13 0 162 5 13 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 5 13 0 244 5 13 0 245 5 13 0 246 5 13 0 250 5 13 0 251 5 13 0 252 5 13 0 253 5 13 0 254 5 13 0 255 5 13 1 0 5 13 1 2 5 13 1 4 5 13 1 6 5 13 1 7 3 33 1 9 5 13 1 10 5 13 1 11 5 13 1 12 5 13 1 13 5 13 1 14 5 13 1 15 5 13 1 19 5 13 1 60 5 13 1 65 5 13 1 66 5 13 1 73 5 13 1 74 5 13 1 75 5 13 1 76 5 13 1 77 5 13 1 78 5 13 1 79 5 13 1 80 5 13 1 81 5 13 1 82 5 13 1 89 5 13 1 90 5 13 1 91 5 13 1 92 0 38 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 5 17 0 154 5 17 0 155 5 17 0 156 5 17 0 157 5 17 0 158 5 17 0 159 5 17 0 160 5 17 0 161 5 17 0 162 5 17 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 5 17 0 244 5 17 0 245 5 17 0 246 5 17 0 250 5 17 0 251 5 17 0 252 5 17 0 253 5 17 0 254 5 17 0 255 5 17 1 0 5 17 1 2 5 17 1 4 5 17 1 6 5 17 1 7 3 33 1 9 5 17 1 10 5 17 1 11 5 17 1 12 5 17 1 13 5 17 1 14 5 17 1 15 5 17 1 19 5 17 1 60 5 17 1 65 5 17 1 66 5 17 1 73 5 17 1 74 5 17 1 75 5 17 1 76 5 17 1 77 5 17 1 78 5 17 1 79 5 17 1 80 5 17 1 81 5 17 1 82 5 17 1 89 5 17 1 90 5 17 1 91 5 17 1 92] 
#[1 0 54 0 1 0 54 0 3 0 54 0 5 0 54 0 6 0 54 0 7 0 54 0 8 0 54 0 9 0 54 0 10 0 127 0 11 0 54 0 12 0 54 0 13 0 54 0 14 0 54 0 15 0 54 0 16 0 54 0 17 0 54 0 18 0 54 0 19 0 54 0 20 0 54 0 21 0 54 0 22 0 54 0 23 0 54 0 26 0 54 0 27 0 54 0 28 0 127 0 29 0 54 0 33 0 54 0 34 0 54 0 35 0 54 0 37 0 54 0 44 0 54 0 45 0 54 0 47 0 54 0 48 0 54 0 50 0 54 0 52 0 54 0 54 0 54 0 59 0 127 0 61 0 54 0 62 0 54 0 64 0 54 0 65 0 54 0 68 0 54 0 69 0 54 0 70 0 54 0 71 0 54 0 72 0 54 0 73 0 54 0 74 0 54 0 76 0 54 0 77 0 127 0 78 0 54 0 79 0 54 0 80 0 54 0 81 0 54 0 82 0 54 0 83 0 54 0 86 0 127 0 87 0 127 0 88 0 54 0 90 0 54 0 92 0 127 0 94 0 54 0 95 0 54 0 96 0 54 0 98 0 54 0 99 0 54 0 101 0 54 0 102 0 127 0 104 0 54 0 105 0 54 0 106 0 54 0 107 0 54 0 108 0 54 0 109 0 54 0 111 0 127 0 112 0 54 0 114 0 54 0 115 0 54 0 117 0 127 0 118 0 54 0 119 0 54 0 120 0 54 0 121 0 54 0 125 0 54 0 126 0 54 0 127 0 54 0 128 0 54 0 129 0 54 0 135 0 54 0 136 0 54 0 137 0 54 0 138 0 54 0 139 0 54 0 140 0 54 0 141 0 127 0 142 0 54 0 143 0 127 0 144 0 54 0 146 0 54 0 147 0 54 1 93] 
#[1 5 21 0 134 5 25 0 164] 
#[0 1 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 110 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 118 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 46 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 122 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 134 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 138 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 142 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 146 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 150 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 154 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 158 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 162 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 166 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 131 0 1 0 131 0 3 0 131 0 5 0 131 0 6 0 131 0 7 0 131 0 8 0 131 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 13 0 131 0 14 0 131 0 15 0 131 0 16 0 131 0 17 0 131 0 18 0 131 0 19 0 131 0 20 0 131 0 21 0 131 0 22 0 131 0 23 0 131 0 26 0 131 0 27 0 131 0 28 0 131 0 29 0 131 0 33 0 131 0 34 0 131 0 35 0 131 0 37 0 131 0 44 0 131 0 45 0 131 0 47 0 131 0 48 0 131 0 50 1 174 0 52 1 174 0 54 0 131 0 59 0 131 0 61 0 131 0 62 0 131 0 64 0 131 0 65 0 131 0 68 0 131 0 69 0 131 0 70 0 131 0 71 0 131 0 72 0 131 0 73 0 131 0 74 0 131 0 76 0 131 0 77 0 131 0 78 0 131 0 79 0 131 0 80 0 131 0 81 0 131 0 82 0 131 0 83 0 131 0 86 0 131 0 87 0 131 0 88 0 131 0 90 0 131 0 92 0 131 0 94 0 131 0 95 0 131 0 96 0 131 0 98 0 131 0 99 0 131 0 101 1 174 0 102 0 131 0 104 0 131 0 105 0 131 0 106 0 131 0 107 0 131 0 108 0 131 0 109 0 131 0 111 0 131 0 112 0 131 0 114 0 131 0 115 0 131 0 117 0 131 0 118 0 131 0 119 0 131 0 120 0 131 0 121 0 131 0 125 0 131 0 126 0 131 0 127 0 131 0 128 0 131 0 129 0 131 0 135 0 131 0 136 0 131 0 137 0 131 0 138 0 131 0 139 0 131 0 140 0 131 0 141 0 131 0 142 0 131 0 143 0 131 0 144 0 131 0 146 0 131 0 147 5 29 1 84 5 33 1 86 0 131 1 93] 
#[0 1 182 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 1 186 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 1 186 0 48 1 186 0 50 1 186 0 59 1 186 0 61 1 186 0 62 1 186 0 64 1 186 0 68 1 186 0 69 1 186 0 70 1 186 0 71 5 113 0 72 1 186 0 73 1 186 0 76 1 186 0 77 1 186 0 78 1 186 0 79 1 186 0 83 5 117 0 86 1 186 0 87 1 186 0 88 5 121 0 90 1 186 0 92 1 186 0 94 1 186 0 95 1 186 0 99 5 125 0 101 1 186 0 104 1 186 0 105 1 186 0 106 1 186 0 107 1 186 0 108 1 186 0 112 1 186 0 114 1 186 0 117 1 186 0 118 5 129 0 120 1 186 0 121 1 186 0 125 5 133 0 128 1 186 0 137 1 186 0 142 1 186 0 144 1 186 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 1 186 1 93] 
#[0 1 190 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 194 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 198 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 210 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 214 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 218 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 222 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 226 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 230 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 234 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 5 153 0 142 0 141 0 144 5 153 0 166 0 153 0 167 5 153 0 168 5 153 0 169 5 153 0 170 5 153 0 171] 
#[0 1 238 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 242 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 246 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 250 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 1 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 2 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 30 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 34 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 46 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 50 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 58 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 66 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 70 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 74 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 78 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 82 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 2 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 5 161 0 151 5 165 0 192 5 165 0 193 1 217 0 194 5 165 0 197 5 169 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 5 173 0 151 5 177 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 5 181 0 151 5 185 0 209] 
#[1 2 73 0 9 2 94 0 11 2 94 0 29 2 94 0 48 2 94 0 50 2 94 0 59 2 94 0 61 2 94 0 62 2 94 0 64 2 94 0 68 2 94 0 69 2 94 0 70 2 94 0 71 2 94 0 73 2 94 0 76 2 94 0 77 2 94 0 78 2 94 0 79 2 94 0 83 2 94 0 87 2 94 0 88 2 94 0 92 2 94 0 94 2 94 0 95 2 94 0 99 2 94 0 104 2 94 0 105 2 94 0 106 2 94 0 107 2 94 0 108 2 94 0 112 2 94 0 114 2 94 0 117 2 94 0 118 2 94 0 121 2 94 0 125 2 94 0 137 2 94 0 142 2 94 0 144 2 94 0 146 2 77 0 238 2 81 0 239 2 94 1 93] 
#[0 2 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 6 1 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 6 157 0 151] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 6 161 0 151 6 165 0 200] 
#[0 2 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146] 
#[1 6 169 0 6 6 173 0 9 6 177 0 195] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 1 42 0 6 5 49 0 7 5 53 0 8 1 42 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 6 181 0 196 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 2 106 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 86 0 87 0 88 0 89 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 2 110 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 2 110 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 2 110 0 48 2 110 0 50 2 110 0 59 2 110 0 61 2 110 0 62 2 110 0 64 2 110 0 68 2 110 0 69 2 110 0 70 2 110 0 71 5 113 0 72 2 110 0 73 2 110 0 76 2 110 0 77 2 110 0 78 2 110 0 79 2 110 0 83 5 117 0 86 2 110 0 87 2 110 0 88 5 121 0 90 2 110 0 92 2 110 0 94 2 110 0 95 2 110 0 99 5 125 0 101 2 110 0 104 2 110 0 105 2 110 0 106 2 110 0 107 2 110 0 108 2 110 0 112 2 110 0 114 2 110 0 117 2 110 0 118 5 129 0 120 2 110 0 121 2 110 0 125 5 133 0 128 2 110 0 137 2 110 0 142 2 110 0 144 2 110 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 2 110 1 93] 
#[1 0 17 0 11 0 153 0 29 6 185 0 51 6 185 0 53 6 185 0 57 3 217 0 61 6 185 0 66 0 153 0 78 6 185 0 85 0 153 0 87 0 153 0 88 6 185 0 91 0 153 0 94 6 185 0 97 0 153 0 104 0 153 0 112 6 185 0 113 6 185 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 166 0 153 0 167 3 249 0 168 3 249 0 169 3 249 0 170 3 249 0 171 6 185 0 188 6 185 0 190 6 185 0 191] 
#[0 2 114 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 118 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 122 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 0 139 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 130 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 134 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 138 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 142 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 146 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 150 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 154 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 2 158 0 5 2 158 0 6 2 158 0 7 2 158 0 8 2 158 0 9 2 158 0 10 1 197 0 11 2 158 0 19 2 158 0 23 2 158 0 26 2 158 0 27 2 158 0 28 2 158 0 29 2 158 0 34 2 158 0 35 2 158 0 37 2 158 0 48 2 158 0 50 2 158 0 59 2 158 0 61 2 158 0 62 2 158 0 64 2 158 0 65 2 158 0 68 2 158 0 69 2 158 0 70 2 158 0 71 2 158 0 73 2 158 0 74 2 158 0 76 2 158 0 77 2 158 0 78 2 158 0 79 2 158 0 80 2 158 0 81 2 158 0 82 2 158 0 83 2 158 0 87 2 158 0 88 2 158 0 92 2 158 0 94 2 158 0 95 2 158 0 96 2 158 0 98 2 158 0 99 2 158 0 104 2 158 0 105 2 158 0 106 2 158 0 107 2 158 0 108 2 158 0 109 2 158 0 111 2 158 0 112 2 158 0 114 2 158 0 117 2 158 0 118 2 158 0 121 2 158 0 125 2 158 0 126 2 158 0 127 2 158 0 129 2 158 0 135 2 158 0 136 2 158 0 137 2 158 0 138 2 158 0 139 2 158 0 140 2 158 0 141 2 158 0 142 2 158 0 143 2 158 0 144 2 158 0 146 2 158 0 147 2 158 1 93] 
#[0 2 162 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 166 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 193 0 5 2 170 0 6 6 189 0 7 2 170 0 8 2 170 0 9 2 170 0 10 2 170 0 11 2 170 0 19 2 170 0 23 2 170 0 26 2 170 0 27 2 170 0 28 2 170 0 29 2 170 0 34 2 170 0 35 2 170 0 37 2 170 0 48 2 170 0 50 2 170 0 59 2 170 0 61 2 170 0 62 2 170 0 64 2 170 0 65 2 170 0 68 2 170 0 69 2 170 0 70 2 170 0 71 2 170 0 73 2 170 0 74 2 170 0 76 2 170 0 77 2 170 0 78 2 170 0 79 2 170 0 80 2 170 0 81 2 170 0 82 2 170 0 83 2 170 0 87 2 170 0 88 2 170 0 92 2 170 0 94 2 170 0 95 2 170 0 96 2 170 0 98 2 170 0 99 2 170 0 104 2 170 0 105 2 170 0 106 2 170 0 107 2 170 0 108 2 170 0 109 2 170 0 111 2 170 0 112 2 170 0 114 2 170 0 117 2 170 0 118 2 170 0 121 2 170 0 125 2 170 0 126 2 170 0 127 2 170 0 129 2 170 0 135 2 170 0 136 2 170 0 137 2 170 0 138 2 170 0 139 2 170 0 140 2 170 0 141 2 170 0 142 2 170 0 143 2 170 0 144 2 170 0 146 2 170 0 147 6 193 0 194 2 170 1 93] 
#[1 0 17 0 11 0 153 0 29 6 197 0 34 6 201 0 51 6 201 0 53 6 201 0 57 3 217 0 61 6 201 0 66 0 153 0 78 6 201 0 85 0 153 0 87 0 153 0 88 6 201 0 91 0 153 0 94 6 201 0 97 0 153 0 104 0 153 0 112 6 201 0 113 6 201 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 166 0 153 0 167 3 249 0 168 3 249 0 169 3 249 0 170 3 249 0 171 6 201 0 188 6 201 0 190 6 201 0 191] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 6 205 0 154 6 205 0 155 6 205 0 156 6 205 0 157 6 205 0 158 6 205 0 159 6 205 0 160 6 205 0 161 6 205 0 162 6 205 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 6 205 0 244 6 205 0 245 6 205 0 246 6 205 0 250 6 205 0 251 6 205 0 252 6 205 0 253 6 205 0 254 6 205 0 255 6 205 1 0 6 205 1 2 6 205 1 4 6 205 1 6 6 205 1 7 3 33 1 9 6 205 1 10 6 205 1 11 6 205 1 12 6 205 1 13 6 205 1 14 6 205 1 15 6 205 1 19 6 205 1 60 6 205 1 65 6 205 1 66 6 205 1 73 6 205 1 74 6 205 1 75 6 205 1 76 6 205 1 77 6 205 1 78 6 205 1 79 6 205 1 80 6 205 1 81 6 205 1 82 6 205 1 89 6 205 1 90 6 205 1 91 6 205 1 92] 
#[1 0 118 0 11 0 118 0 29 0 118 0 48 0 118 0 50 0 118 0 59 0 118 0 61 0 118 0 62 0 118 0 64 0 118 0 71 0 118 0 73 0 118 0 76 0 118 0 77 0 118 0 78 0 118 0 79 0 118 0 83 0 118 0 87 0 118 0 88 0 118 0 94 0 118 0 99 0 118 0 104 0 118 0 105 0 118 0 106 0 118 0 107 0 118 0 108 0 118 0 112 0 118 0 114 0 118 0 117 0 118 0 118 0 118 0 121 0 118 0 142 0 118 0 144 0 118 0 146 6 209 0 153 0 118 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 6 213 0 174 6 213 0 175 6 213 0 177 6 213 0 178 6 213 0 182 6 213 0 183 0 201 0 189 6 213 0 198 6 213 0 199 6 213 0 203 6 213 0 204 6 213 0 215 6 213 0 216 6 213 0 217 0 233 0 218 6 213 0 219 6 213 0 220 6 213 0 221 6 213 0 222 6 213 0 223 6 213 0 224 6 213 0 225 6 213 0 226 6 213 0 227 6 213 0 228 6 213 0 229 1 25 0 231 6 213 0 232 6 213 0 233 6 213 0 234 6 213 0 235 6 213 0 236 6 213 0 240 6 213 0 243 2 174 1 93] 
#[0 2 178 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 37 0 9 2 182 0 11 2 182 0 29 2 182 0 48 2 182 0 50 2 182 0 59 2 182 0 61 2 182 0 62 2 182 0 64 2 182 0 68 2 182 0 69 2 182 0 70 2 182 0 71 2 182 0 73 2 182 0 76 2 182 0 77 2 182 0 78 2 182 0 79 2 182 0 83 2 182 0 87 2 182 0 88 2 182 0 92 2 182 0 94 2 182 0 95 2 182 0 99 2 182 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 112 2 182 0 114 2 182 0 117 2 182 0 118 2 182 0 121 2 182 0 125 2 182 0 137 2 182 0 142 2 182 0 144 2 182 0 146 2 41 0 241 2 45 0 242 2 182 1 93] 
#[0 2 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 217 0 142 0 141 0 144 6 217 0 166 0 153 0 167 6 217 0 168 6 217 0 169 6 217 0 170 6 217 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 221 0 142 0 141 0 144 6 221 0 166 0 153 0 167 6 221 0 168 6 221 0 169 6 221 0 170 6 221 0 171] 
#[1 1 197 0 11 0 250 0 29 0 250 0 61 0 250 0 70 0 250 0 78 0 250 0 87 0 250 0 88 0 250 0 94 0 250 0 104 0 250 0 112 0 250 0 118 0 250 0 142 0 250 0 144 0 250 0 146 6 225 0 206] 
#[1 2 89 0 5 1 197 0 11 6 229 0 209] 
#[1 2 89 0 5 1 197 0 11 6 233 0 209] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 237 0 142 0 141 0 144 6 237 0 166 0 153 0 167 6 237 0 168 6 237 0 169 6 237 0 170 6 237 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 241 0 142 0 141 0 144 6 241 0 166 0 153 0 167 6 241 0 168 6 241 0 169 6 241 0 170 6 241 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 6 245 0 142 0 141 0 144 6 245 0 166 0 153 0 167 6 245 0 168 6 245 0 169 6 245 0 170 6 245 0 171] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 6 249 0 151 6 253 0 209] 
#[1 1 197 0 11 1 30 0 29 1 30 0 61 1 30 0 70 1 30 0 78 1 30 0 87 1 30 0 88 1 30 0 94 1 30 0 104 1 30 0 112 1 30 0 118 1 30 0 142 1 30 0 144 1 30 0 146 7 1 0 201] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 5 0 142 0 141 0 144 7 5 0 166 0 153 0 167 7 5 0 168 7 5 0 169 7 5 0 170 7 5 0 171] 
#[1 7 9 0 78 7 13 0 88 7 17 0 112] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 21 0 142 0 141 0 144 7 21 0 166 0 153 0 167 7 21 0 168 7 21 0 169 7 21 0 170 7 21 0 171] 
#[1 2 89 0 5 1 197 0 11 7 25 0 209] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 29 0 142 0 141 0 144 7 29 0 166 0 153 0 167 7 29 0 168 7 29 0 169 7 29 0 170 7 29 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 33 0 142 0 141 0 144 7 33 0 166 0 153 0 167 7 33 0 168 7 33 0 169 7 33 0 170 7 33 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 37 0 142 0 141 0 144 7 37 0 166 0 153 0 167 7 37 0 168 7 37 0 169 7 37 0 170 7 37 0 171] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 7 41 0 151 7 45 0 209] 
#[0 2 190 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 194 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 2 198 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 2 198 0 48 2 198 0 50 2 198 0 59 2 198 0 61 2 198 0 62 2 198 0 64 2 198 0 68 2 198 0 69 2 198 0 70 2 198 0 71 5 113 0 72 2 198 0 73 2 198 0 76 2 198 0 77 2 198 0 78 2 198 0 79 2 198 0 83 5 117 0 86 2 198 0 87 2 198 0 88 5 121 0 90 2 198 0 92 2 198 0 94 2 198 0 95 2 198 0 99 5 125 0 101 2 198 0 104 2 198 0 105 2 198 0 106 2 198 0 107 2 198 0 108 2 198 0 112 2 198 0 114 2 198 0 117 2 198 0 118 5 129 0 120 2 198 0 121 2 198 0 125 5 133 0 128 2 198 0 137 2 198 0 142 2 198 0 144 2 198 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 2 198 1 93] 
#[1 0 6 0 70 0 143 0 146 7 53 0 151 7 57 0 179 7 61 0 181] 
#[1 2 177 0 140 7 65 0 161] 
#[1 2 177 0 140 7 69 0 161] 
#[0 2 202 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 206 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[0 2 210 0 9 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 73 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 77 0 142 0 141 0 144 0 145 0 146 7 77 0 166 0 153 0 167 7 77 0 168 7 77 0 169 7 77 0 170 7 77 0 171 7 81 0 207] 
#[0 2 214 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[0 2 218 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 2 222 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 102 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 2 226 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 102 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 0 17 0 11 0 153 0 29 4 157 0 52 7 93 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 7 85 0 102 0 153 0 104 0 153 0 112 0 153 0 118 7 89 0 142 0 141 0 144 7 89 0 166 0 153 0 167 7 89 0 168 7 89 0 169 7 89 0 170 7 89 0 171 7 93 0 208] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 97 0 142 0 141 0 144 7 97 0 166 0 153 0 167 7 97 0 168 7 97 0 169 7 97 0 170 7 97 0 171] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 7 105 0 192 7 105 0 193 1 217 0 194 7 105 0 197 7 109 0 213 7 113 0 214] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 7 117 0 102 0 153 0 104 0 153 0 112 0 153 0 118 7 121 0 142 0 141 0 144 7 121 0 166 0 153 0 167 7 121 0 168 7 121 0 169 7 121 0 170 7 121 0 171] 
#[1 2 234 0 6 2 234 0 9 7 125 0 211] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 7 129 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 7 133 0 151] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 7 137 0 6 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 5 37 0 1 0 147 0 3 5 45 0 5 2 238 0 6 5 49 0 7 2 238 0 8 2 238 0 9 2 238 0 10 5 61 0 11 5 65 0 12 2 238 0 13 0 151 0 14 2 238 0 15 2 238 0 16 2 238 0 17 2 238 0 18 2 238 0 19 2 238 0 20 2 238 0 21 2 238 0 22 2 238 0 23 2 238 0 26 2 238 0 27 2 238 0 28 2 238 0 29 5 97 0 33 2 238 0 34 2 238 0 35 2 238 0 37 0 155 0 44 5 105 0 45 2 238 0 47 2 238 0 48 2 238 0 50 2 238 0 59 2 238 0 61 2 238 0 62 2 238 0 64 2 238 0 65 2 238 0 68 2 238 0 69 2 238 0 70 2 238 0 71 2 238 0 72 2 238 0 73 2 238 0 74 2 238 0 76 2 238 0 77 2 238 0 78 2 238 0 79 2 238 0 80 2 238 0 81 2 238 0 82 2 238 0 83 2 238 0 86 2 238 0 87 2 238 0 88 2 238 0 90 2 238 0 92 2 238 0 94 2 238 0 95 2 238 0 96 2 238 0 98 2 238 0 99 2 238 0 101 2 238 0 104 2 238 0 105 2 238 0 106 2 238 0 107 2 238 0 108 2 238 0 109 2 238 0 111 2 238 0 112 2 238 0 114 2 238 0 115 2 238 0 117 2 238 0 118 2 238 0 119 0 159 0 120 2 238 0 121 2 238 0 125 2 238 0 126 2 238 0 127 2 238 0 128 2 238 0 129 2 238 0 135 2 238 0 136 2 238 0 137 2 238 0 138 2 238 0 139 2 238 0 140 2 238 0 141 2 238 0 142 2 238 0 143 2 238 0 144 2 238 0 146 2 238 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 2 238 1 93] 
#[1 5 37 0 1 0 163 0 3 5 45 0 5 2 242 0 6 5 49 0 7 2 242 0 8 2 242 0 9 2 242 0 10 5 61 0 11 5 65 0 12 2 242 0 13 0 167 0 14 2 242 0 15 2 242 0 16 2 242 0 17 2 242 0 18 2 242 0 19 2 242 0 20 2 242 0 21 2 242 0 22 2 242 0 23 2 242 0 26 2 242 0 27 2 242 0 28 2 242 0 29 5 97 0 33 2 242 0 34 2 242 0 35 2 242 0 37 0 171 0 44 5 105 0 45 2 242 0 47 2 242 0 48 2 242 0 50 2 242 0 59 2 242 0 61 2 242 0 62 2 242 0 64 2 242 0 65 2 242 0 68 2 242 0 69 2 242 0 70 2 242 0 71 2 242 0 72 2 242 0 73 2 242 0 74 2 242 0 76 2 242 0 77 2 242 0 78 2 242 0 79 2 242 0 80 2 242 0 81 2 242 0 82 2 242 0 83 2 242 0 86 2 242 0 87 2 242 0 88 2 242 0 90 2 242 0 92 2 242 0 94 2 242 0 95 2 242 0 96 2 242 0 98 2 242 0 99 2 242 0 101 2 242 0 104 2 242 0 105 2 242 0 106 2 242 0 107 2 242 0 108 2 242 0 109 2 242 0 111 2 242 0 112 2 242 0 114 2 242 0 115 2 242 0 117 2 242 0 118 2 242 0 119 0 175 0 120 2 242 0 121 2 242 0 125 2 242 0 126 2 242 0 127 2 242 0 128 2 242 0 129 2 242 0 135 2 242 0 136 2 242 0 137 2 242 0 138 2 242 0 139 2 242 0 140 2 242 0 141 2 242 0 142 2 242 0 143 2 242 0 144 2 242 0 146 2 242 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 2 242 1 93] 
#[1 2 246 0 1 2 246 0 3 2 246 0 5 2 246 0 6 2 246 0 7 2 246 0 8 2 246 0 9 2 246 0 10 1 197 0 11 2 246 0 12 2 246 0 13 2 246 0 14 2 246 0 15 2 246 0 16 2 246 0 17 2 246 0 18 2 246 0 19 2 246 0 20 2 246 0 21 2 246 0 22 2 246 0 23 2 246 0 26 2 246 0 27 2 246 0 28 2 246 0 29 2 246 0 33 2 246 0 34 2 246 0 35 2 246 0 37 2 246 0 44 2 246 0 45 2 246 0 47 2 246 0 48 2 246 0 50 2 246 0 59 2 246 0 61 2 246 0 62 2 246 0 64 2 246 0 65 2 246 0 68 2 246 0 69 2 246 0 70 2 246 0 71 2 246 0 72 2 246 0 73 2 246 0 74 2 246 0 76 2 246 0 77 2 246 0 78 2 246 0 79 2 246 0 80 2 246 0 81 2 246 0 82 2 246 0 83 2 246 0 86 2 246 0 87 2 246 0 88 2 246 0 90 2 246 0 92 2 246 0 94 2 246 0 95 2 246 0 96 2 246 0 98 2 246 0 99 2 246 0 101 2 246 0 104 2 246 0 105 2 246 0 106 2 246 0 107 2 246 0 108 2 246 0 109 2 246 0 111 2 246 0 112 2 246 0 114 2 246 0 115 2 246 0 117 2 246 0 118 2 246 0 119 2 246 0 120 2 246 0 121 2 246 0 125 2 246 0 126 2 246 0 127 2 246 0 128 2 246 0 129 2 246 0 135 2 246 0 136 2 246 0 137 2 246 0 138 2 246 0 139 2 246 0 140 2 246 0 141 2 246 0 142 2 246 0 143 2 246 0 144 2 246 0 146 2 246 0 147 2 246 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 0 179 0 1 0 179 0 3 0 179 0 5 2 250 0 6 0 179 0 7 0 179 0 8 2 250 0 9 0 179 0 10 0 179 0 11 0 179 0 12 2 250 0 13 0 179 0 14 2 250 0 15 0 179 0 16 0 179 0 17 0 179 0 18 0 179 0 19 0 179 0 20 0 179 0 21 2 250 0 22 2 250 0 23 2 250 0 26 2 250 0 27 2 250 0 28 2 250 0 29 0 179 0 33 2 250 0 34 2 250 0 35 2 250 0 37 0 179 0 44 0 179 0 45 0 179 0 47 2 250 0 48 2 250 0 50 2 250 0 59 2 250 0 61 2 250 0 62 2 250 0 64 2 250 0 65 2 250 0 68 2 250 0 69 2 250 0 70 2 250 0 71 0 179 0 72 2 250 0 73 2 250 0 74 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 0 179 0 86 2 250 0 87 2 250 0 88 0 179 0 90 2 250 0 92 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 98 2 250 0 99 0 179 0 101 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 111 2 250 0 112 2 250 0 114 2 250 0 115 2 250 0 117 2 250 0 118 2 250 0 119 0 179 0 120 2 250 0 121 2 250 0 125 2 250 0 126 2 250 0 127 0 179 0 128 2 250 0 129 2 250 0 135 2 250 0 136 2 250 0 137 2 250 0 138 2 250 0 139 2 250 0 140 2 250 0 141 2 250 0 142 2 250 0 143 2 250 0 144 2 250 0 146 2 250 0 147 2 250 1 93] 
#[1 2 254 0 1 2 254 0 3 2 254 0 5 2 254 0 6 2 254 0 7 2 254 0 8 2 254 0 9 2 254 0 10 1 197 0 11 2 254 0 12 2 254 0 13 2 254 0 14 2 254 0 15 2 254 0 16 2 254 0 17 2 254 0 18 2 254 0 19 2 254 0 20 2 254 0 21 2 254 0 22 2 254 0 23 2 254 0 26 2 254 0 27 2 254 0 28 2 254 0 29 2 254 0 33 2 254 0 34 2 254 0 35 2 254 0 37 2 254 0 44 2 254 0 45 2 254 0 47 2 254 0 48 2 254 0 50 2 254 0 59 2 254 0 61 2 254 0 62 2 254 0 64 2 254 0 65 2 254 0 68 2 254 0 69 2 254 0 70 2 254 0 71 2 254 0 72 2 254 0 73 2 254 0 74 2 254 0 76 2 254 0 77 2 254 0 78 2 254 0 79 2 254 0 80 2 254 0 81 2 254 0 82 2 254 0 83 2 254 0 86 2 254 0 87 2 254 0 88 2 254 0 90 2 254 0 92 2 254 0 94 2 254 0 95 2 254 0 96 2 254 0 98 2 254 0 99 2 254 0 101 2 254 0 104 2 254 0 105 2 254 0 106 2 254 0 107 2 254 0 108 2 254 0 109 2 254 0 111 2 254 0 112 2 254 0 114 2 254 0 115 2 254 0 117 2 254 0 118 2 254 0 119 2 254 0 120 2 254 0 121 2 254 0 125 2 254 0 126 2 254 0 127 2 254 0 128 2 254 0 129 2 254 0 135 2 254 0 136 2 254 0 137 2 254 0 138 2 254 0 139 2 254 0 140 2 254 0 141 2 254 0 142 2 254 0 143 2 254 0 144 2 254 0 146 2 254 0 147 2 254 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 7 141 0 28 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 0 183 0 1 0 183 0 3 0 183 0 5 3 2 0 6 0 183 0 7 0 183 0 8 3 2 0 9 0 183 0 10 0 183 0 11 0 183 0 12 3 2 0 13 0 183 0 14 3 2 0 15 0 183 0 16 0 183 0 17 0 183 0 18 0 183 0 19 0 183 0 20 0 183 0 21 3 2 0 22 3 2 0 23 3 2 0 26 3 2 0 27 3 2 0 28 3 2 0 29 0 183 0 33 3 2 0 34 3 2 0 35 3 2 0 37 0 183 0 44 0 183 0 45 0 183 0 47 3 2 0 48 3 2 0 50 3 2 0 59 3 2 0 61 3 2 0 62 3 2 0 64 3 2 0 65 3 2 0 68 3 2 0 69 3 2 0 70 3 2 0 71 0 183 0 72 3 2 0 73 3 2 0 74 3 2 0 76 3 2 0 77 3 2 0 78 3 2 0 79 3 2 0 80 3 2 0 81 3 2 0 82 3 2 0 83 0 183 0 86 3 2 0 87 3 2 0 88 0 183 0 90 3 2 0 92 3 2 0 94 3 2 0 95 3 2 0 96 3 2 0 98 3 2 0 99 0 183 0 101 3 2 0 104 3 2 0 105 3 2 0 106 3 2 0 107 3 2 0 108 3 2 0 109 3 2 0 111 3 2 0 112 3 2 0 114 3 2 0 115 3 2 0 117 3 2 0 118 3 2 0 119 0 183 0 120 3 2 0 121 3 2 0 125 3 2 0 126 3 2 0 127 0 183 0 128 3 2 0 129 3 2 0 135 3 2 0 136 3 2 0 137 3 2 0 138 3 2 0 139 3 2 0 140 3 2 0 141 3 2 0 142 3 2 0 143 3 2 0 144 3 2 0 146 3 2 0 147 3 2 1 93] 
#[0 3 6 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 10 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 14 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 18 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 22 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 26 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 3 30 0 1 3 30 0 3 3 30 0 5 3 30 0 6 3 30 0 7 3 30 0 8 3 30 0 9 3 30 0 10 1 197 0 11 3 30 0 12 3 30 0 13 3 30 0 14 3 30 0 15 3 30 0 16 3 30 0 17 3 30 0 18 3 30 0 19 3 30 0 20 3 30 0 21 3 30 0 22 3 30 0 23 3 30 0 26 3 30 0 27 3 30 0 28 3 30 0 29 3 30 0 33 3 30 0 34 3 30 0 35 3 30 0 37 3 30 0 44 3 30 0 45 3 30 0 47 3 30 0 48 3 30 0 50 3 30 0 59 3 30 0 61 3 30 0 62 3 30 0 64 3 30 0 65 3 30 0 68 3 30 0 69 3 30 0 70 3 30 0 71 3 30 0 72 3 30 0 73 3 30 0 74 3 30 0 76 3 30 0 77 3 30 0 78 3 30 0 79 3 30 0 80 3 30 0 81 3 30 0 82 3 30 0 83 3 30 0 86 3 30 0 87 3 30 0 88 3 30 0 90 3 30 0 92 3 30 0 94 3 30 0 95 3 30 0 96 3 30 0 98 3 30 0 99 3 30 0 101 3 30 0 104 3 30 0 105 3 30 0 106 3 30 0 107 3 30 0 108 3 30 0 109 3 30 0 111 3 30 0 112 3 30 0 114 3 30 0 115 3 30 0 117 3 30 0 118 3 30 0 119 3 30 0 120 3 30 0 121 3 30 0 125 3 30 0 126 3 30 0 127 3 30 0 128 3 30 0 129 3 30 0 135 3 30 0 136 3 30 0 137 3 30 0 138 3 30 0 139 3 30 0 140 3 30 0 141 3 30 0 142 3 30 0 143 3 30 0 144 3 30 0 146 3 30 0 147 3 30 1 93] 
#[1 3 34 0 1 3 34 0 3 3 34 0 5 3 34 0 6 3 34 0 7 3 34 0 8 3 34 0 9 3 34 0 10 3 34 0 11 3 34 0 12 3 34 0 13 3 34 0 14 3 34 0 15 3 34 0 16 3 34 0 17 3 34 0 18 3 34 0 19 3 34 0 20 3 34 0 21 3 34 0 22 3 34 0 23 3 34 0 26 3 34 0 27 3 34 0 28 3 34 0 29 3 34 0 33 3 34 0 34 3 34 0 35 3 34 0 37 3 34 0 44 3 34 0 45 3 34 0 47 3 34 0 48 3 34 0 50 3 34 0 59 3 34 0 61 3 34 0 62 3 34 0 64 3 34 0 65 3 34 0 68 3 34 0 69 3 34 0 70 3 34 0 71 3 34 0 72 3 34 0 73 3 34 0 74 3 34 0 76 3 34 0 77 3 34 0 78 3 34 0 79 3 34 0 80 3 34 0 81 3 34 0 82 3 34 0 83 3 34 0 86 3 34 0 87 3 34 0 88 3 34 0 90 3 34 0 92 3 34 0 94 3 34 0 95 3 34 0 96 3 34 0 98 3 34 0 99 3 34 0 101 3 34 0 104 3 34 0 105 3 34 0 106 3 34 0 107 3 34 0 108 3 34 0 109 3 34 0 111 3 34 0 112 3 34 0 114 3 34 0 115 3 34 0 117 3 34 0 118 3 34 0 119 3 34 0 120 3 34 0 121 3 34 0 125 3 34 0 126 3 34 0 127 3 34 0 128 3 34 0 129 3 34 0 135 3 34 0 136 3 34 0 137 3 34 0 138 3 34 0 139 3 34 0 140 3 34 0 141 3 34 0 142 3 34 0 143 3 34 0 144 3 34 0 146 3 34 0 147 7 145 1 64 3 34 1 93] 
#[0 3 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 3 42 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 7 149 0 22 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 5 37 0 1 0 187 0 3 5 45 0 5 3 46 0 6 5 49 0 7 5 53 0 8 3 46 0 9 5 57 0 10 5 61 0 11 5 65 0 12 3 46 0 13 0 191 0 14 3 46 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 3 46 0 22 3 46 0 23 3 46 0 26 3 46 0 27 3 46 0 28 3 46 0 29 5 97 0 33 3 46 0 34 3 46 0 35 3 46 0 37 0 195 0 44 5 105 0 45 5 109 0 47 3 46 0 48 3 46 0 50 3 46 0 59 3 46 0 61 3 46 0 62 3 46 0 64 3 46 0 65 3 46 0 68 3 46 0 69 3 46 0 70 3 46 0 71 5 113 0 72 3 46 0 73 3 46 0 74 3 46 0 76 3 46 0 77 3 46 0 78 3 46 0 79 3 46 0 80 3 46 0 81 3 46 0 82 3 46 0 83 5 117 0 86 3 46 0 87 3 46 0 88 5 121 0 90 3 46 0 92 3 46 0 94 3 46 0 95 3 46 0 96 3 46 0 98 3 46 0 99 5 125 0 101 3 46 0 104 3 46 0 105 3 46 0 106 3 46 0 107 3 46 0 108 3 46 0 109 3 46 0 111 3 46 0 112 3 46 0 114 3 46 0 115 3 46 0 117 3 46 0 118 3 46 0 119 0 199 0 120 3 46 0 121 3 46 0 125 3 46 0 126 3 46 0 127 5 133 0 128 3 46 0 129 3 46 0 135 3 46 0 136 3 46 0 137 3 46 0 138 3 46 0 139 3 46 0 140 3 46 0 141 3 46 0 142 3 46 0 143 3 46 0 144 3 46 0 146 3 46 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 3 46 1 93] 
#[0 3 50 0 10 0 134] 
#[1 7 153 0 10 7 157 0 134] 
#[0 3 54 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 3 58 0 1 3 58 0 3 2 101 0 5 3 58 0 6 3 58 0 7 2 105 0 8 7 161 0 9 2 109 0 10 0 17 0 11 3 58 0 12 3 58 0 13 3 58 0 14 0 203 0 15 3 58 0 16 3 58 0 17 3 58 0 18 3 58 0 19 3 58 0 20 3 58 0 21 3 58 0 22 0 207 0 23 0 211 0 26 3 58 0 27 3 58 0 28 0 215 0 29 3 58 0 33 0 219 0 34 0 223 0 35 0 227 0 37 3 58 0 44 3 58 0 45 3 58 0 47 3 58 0 48 3 58 0 50 4 157 0 52 7 173 0 54 3 58 0 59 0 231 0 61 3 58 0 62 3 58 0 64 3 58 0 65 3 58 0 68 3 58 0 69 3 58 0 70 3 58 0 71 3 58 0 72 3 58 0 73 0 235 0 74 3 58 0 76 3 58 0 77 0 239 0 78 3 58 0 79 0 243 0 80 0 247 0 81 3 58 0 82 3 58 0 83 3 58 0 86 0 251 0 87 0 255 0 88 3 58 0 90 3 58 0 92 1 3 0 94 3 58 0 95 1 7 0 96 3 58 0 98 3 58 0 99 3 58 0 101 7 169 0 102 1 11 0 104 3 58 0 105 3 58 0 106 3 58 0 107 3 58 0 108 3 58 0 109 3 58 0 111 1 15 0 112 3 58 0 114 3 58 0 115 3 58 0 117 1 19 0 118 3 58 0 119 3 58 0 120 3 58 0 121 3 58 0 125 3 58 0 126 3 58 0 127 3 58 0 128 1 23 0 129 1 27 0 135 1 31 0 136 1 35 0 137 1 39 0 138 1 43 0 139 1 47 0 140 1 51 0 141 1 55 0 142 1 59 0 143 1 63 0 144 3 58 0 146 3 58 0 147 7 177 0 154 7 177 0 155 7 177 0 156 7 177 0 157 7 177 0 158 7 177 0 159 7 177 0 160 7 177 0 161 7 177 0 162 7 177 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 173 0 208 7 177 0 244 7 177 0 245 7 177 0 246 7 177 0 250 7 177 0 251 7 177 0 252 7 177 0 253 7 177 0 254 7 177 0 255 7 177 1 0 7 177 1 2 7 177 1 4 7 177 1 6 7 177 1 7 3 33 1 9 7 177 1 10 7 177 1 11 7 177 1 12 7 177 1 13 7 177 1 14 7 177 1 15 7 177 1 19 7 177 1 60 7 177 1 65 7 177 1 66 7 177 1 73 7 177 1 74 7 177 1 75 7 177 1 76 7 177 1 77 7 177 1 78 7 177 1 79 7 177 1 80 7 177 1 81 7 177 1 82 7 181 1 83 7 185 1 85 7 189 1 88 7 177 1 89 7 177 1 90 7 177 1 91 7 177 1 92 3 58 1 93] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 193 0 142 0 141 0 144 7 193 0 166 0 153 0 167 7 193 0 168 7 193 0 169 7 193 0 170 7 193 0 171] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 197 0 154 7 197 0 155 7 197 0 156 7 197 0 157 7 197 0 158 7 197 0 159 7 197 0 160 7 197 0 161 7 197 0 162 7 197 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 197 0 244 7 197 0 245 7 197 0 246 7 197 0 250 7 197 0 251 7 197 0 252 7 197 0 253 7 197 0 254 7 197 0 255 7 197 1 0 7 197 1 2 7 197 1 4 7 197 1 6 7 197 1 7 3 33 1 9 7 197 1 10 7 197 1 11 7 197 1 12 7 197 1 13 7 197 1 14 7 197 1 15 7 197 1 19 7 197 1 60 7 197 1 65 7 197 1 66 7 197 1 73 7 197 1 74 7 197 1 75 7 197 1 76 7 197 1 77 7 197 1 78 7 197 1 79 7 197 1 80 7 197 1 81 7 197 1 82 7 197 1 89 7 197 1 90 7 197 1 91 7 197 1 92] 
#[1 1 174 0 5 1 174 0 6 1 174 0 8 1 174 0 9 1 174 0 10 1 174 0 11 1 174 0 15 1 174 0 23 1 174 0 26 1 174 0 29 1 174 0 34 1 174 0 35 1 174 0 37 1 174 0 52 1 174 0 54 1 174 0 61 1 174 0 74 1 174 0 78 1 174 0 80 1 174 0 81 1 174 0 87 1 174 0 88 1 174 0 94 1 174 0 96 1 174 0 102 1 174 0 104 1 174 0 112 1 174 0 118 1 174 0 129 1 174 0 135 1 174 0 136 1 174 0 137 1 174 0 138 1 174 0 139 1 174 0 140 1 174 0 141 1 174 0 142 1 174 0 143 1 174 0 144 7 201 1 84 5 33 1 86] 
#[0 3 62 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 66 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 70 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 205 0 142 0 141 0 144 7 205 0 166 0 153 0 167 7 205 0 168 7 205 0 169 7 205 0 170 7 205 0 171] 
#[0 3 74 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 78 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 82 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 86 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 90 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 94 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 98 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 102 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 106 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 110 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 114 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 118 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 122 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 126 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 130 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 3 134 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 209 0 154 7 209 0 155 7 209 0 156 7 209 0 157 7 209 0 158 7 209 0 159 7 209 0 160 7 209 0 161 7 209 0 162 7 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 209 0 244 7 209 0 245 7 209 0 246 7 209 0 250 7 209 0 251 7 209 0 252 7 209 0 253 7 209 0 254 7 209 0 255 7 209 1 0 7 209 1 2 7 209 1 4 7 209 1 6 7 209 1 7 3 33 1 9 7 209 1 10 7 209 1 11 7 209 1 12 7 209 1 13 7 209 1 14 7 209 1 15 7 209 1 19 7 209 1 60 7 209 1 65 7 209 1 66 7 209 1 73 7 209 1 74 7 209 1 75 7 209 1 76 7 209 1 77 7 209 1 78 7 209 1 79 7 209 1 80 7 209 1 81 7 209 1 82 7 209 1 89 7 209 1 90 7 209 1 91 7 209 1 92] 
#[0 3 138 0 5 0 8 0 10 0 11 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 213 0 154 7 213 0 155 7 213 0 156 7 213 0 157 7 213 0 158 7 213 0 159 7 213 0 160 7 213 0 161 7 213 0 162 7 213 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 213 0 244 7 213 0 245 7 213 0 246 7 213 0 250 7 213 0 251 7 213 0 252 7 213 0 253 7 213 0 254 7 213 0 255 7 213 1 0 7 213 1 2 7 213 1 4 7 213 1 6 7 213 1 7 3 33 1 9 7 213 1 10 7 213 1 11 7 213 1 12 7 213 1 13 7 213 1 14 7 213 1 15 7 213 1 19 7 213 1 60 7 213 1 65 7 213 1 66 7 213 1 73 7 213 1 74 7 213 1 75 7 213 1 76 7 213 1 77 7 213 1 78 7 213 1 79 7 213 1 80 7 213 1 81 7 213 1 82 7 213 1 89 7 213 1 90 7 213 1 91 7 213 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 217 0 154 7 217 0 155 7 217 0 156 7 217 0 157 7 217 0 158 7 217 0 159 7 217 0 160 7 217 0 161 7 217 0 162 7 217 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 217 0 244 7 217 0 245 7 217 0 246 7 217 0 250 7 217 0 251 7 217 0 252 7 217 0 253 7 217 0 254 7 217 0 255 7 217 1 0 7 217 1 2 7 217 1 4 7 217 1 6 7 217 1 7 3 33 1 9 7 217 1 10 7 217 1 11 7 217 1 12 7 217 1 13 7 217 1 14 7 217 1 15 7 217 1 19 7 217 1 60 7 217 1 65 7 217 1 66 7 217 1 73 7 217 1 74 7 217 1 75 7 217 1 76 7 217 1 77 7 217 1 78 7 217 1 79 7 217 1 80 7 217 1 81 7 217 1 82 7 217 1 89 7 217 1 90 7 217 1 91 7 217 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 221 0 154 7 221 0 155 7 221 0 156 7 221 0 157 7 221 0 158 7 221 0 159 7 221 0 160 7 221 0 161 7 221 0 162 7 221 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 221 0 244 7 221 0 245 7 221 0 246 7 221 0 250 7 221 0 251 7 221 0 252 7 221 0 253 7 221 0 254 7 221 0 255 7 221 1 0 7 221 1 2 7 221 1 4 7 221 1 6 7 221 1 7 3 33 1 9 7 221 1 10 7 221 1 11 7 221 1 12 7 221 1 13 7 221 1 14 7 221 1 15 7 221 1 19 7 221 1 60 7 221 1 65 7 221 1 66 7 221 1 73 7 221 1 74 7 221 1 75 7 221 1 76 7 221 1 77 7 221 1 78 7 221 1 79 7 221 1 80 7 221 1 81 7 221 1 82 7 221 1 89 7 221 1 90 7 221 1 91 7 221 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 225 0 154 7 225 0 155 7 225 0 156 7 225 0 157 7 225 0 158 7 225 0 159 7 225 0 160 7 225 0 161 7 225 0 162 7 225 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 225 0 244 7 225 0 245 7 225 0 246 7 225 0 250 7 225 0 251 7 225 0 252 7 225 0 253 7 225 0 254 7 225 0 255 7 225 1 0 7 225 1 2 7 225 1 4 7 225 1 6 7 225 1 7 3 33 1 9 7 225 1 10 7 225 1 11 7 225 1 12 7 225 1 13 7 225 1 14 7 225 1 15 7 225 1 19 7 225 1 60 7 225 1 65 7 225 1 66 7 225 1 73 7 225 1 74 7 225 1 75 7 225 1 76 7 225 1 77 7 225 1 78 7 225 1 79 7 225 1 80 7 225 1 81 7 225 1 82 7 225 1 89 7 225 1 90 7 225 1 91 7 225 1 92] 
#[1 1 197 0 11 7 229 0 14 7 229 0 19 7 229 1 8] 
#[1 2 101 0 5 4 153 0 6 2 105 0 8 1 42 0 9 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 4 157 0 52 4 177 0 54 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 4 165 0 100 4 169 0 102 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 7 233 0 142 2 185 0 143 0 141 0 144 3 189 0 154 3 189 0 155 3 189 0 156 3 189 0 157 3 189 0 158 3 189 0 159 3 189 0 160 3 189 0 161 3 189 0 162 3 189 0 163 7 233 0 166 0 153 0 167 7 233 0 168 7 233 0 169 7 233 0 170 7 233 0 171 3 185 0 196 4 177 0 208 4 181 0 212 3 189 0 244 3 189 0 245 3 189 0 246 3 189 0 250 3 189 0 251 3 189 0 252 3 189 0 253 3 189 0 254 3 189 0 255 3 189 1 0 3 189 1 2 3 189 1 4 3 189 1 6 3 189 1 7 3 33 1 9 3 189 1 10 3 189 1 11 3 189 1 12 3 189 1 13 3 189 1 14 3 189 1 15 3 189 1 19 3 189 1 60 3 189 1 65 3 189 1 66 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 89 3 189 1 90 3 189 1 91 3 189 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 7 237 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 7 241 0 151] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 7 245 0 151 7 249 0 192 7 249 0 193 1 217 0 194 7 249 0 197] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 7 253 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 1 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 8 5 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 9 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 13 0 154 8 13 0 155 8 13 0 156 8 13 0 157 8 13 0 158 8 13 0 159 8 13 0 160 8 13 0 161 8 13 0 162 8 13 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 13 0 244 8 13 0 245 8 13 0 246 8 13 0 250 8 13 0 251 8 13 0 252 8 13 0 253 8 13 0 254 8 13 0 255 8 13 1 0 8 13 1 2 8 13 1 4 8 13 1 6 8 13 1 7 3 33 1 9 8 13 1 10 8 13 1 11 8 13 1 12 8 13 1 13 8 13 1 14 8 13 1 15 8 13 1 19 8 13 1 60 8 13 1 65 8 13 1 66 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 89 8 13 1 90 8 13 1 91 8 13 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 8 17 0 67 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 21 0 154 8 21 0 155 8 21 0 156 8 21 0 157 8 21 0 158 8 21 0 159 8 21 0 160 8 21 0 161 8 21 0 162 8 21 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 21 0 244 8 21 0 245 8 21 0 246 8 21 0 250 8 21 0 251 8 21 0 252 8 21 0 253 8 21 0 254 8 21 0 255 8 21 1 0 8 21 1 2 8 21 1 4 8 21 1 6 8 21 1 7 3 33 1 9 8 21 1 10 8 21 1 11 8 21 1 12 8 21 1 13 8 21 1 14 8 21 1 15 8 21 1 19 8 21 1 60 8 21 1 65 8 21 1 66 8 21 1 73 8 21 1 74 8 21 1 75 8 21 1 76 8 21 1 77 8 21 1 78 8 21 1 79 8 21 1 80 8 21 1 81 8 21 1 82 8 21 1 89 8 21 1 90 8 21 1 91 8 21 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 8 25 0 122 1 67 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 33 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 37 0 154 8 37 0 155 8 37 0 156 8 37 0 157 8 37 0 158 8 37 0 159 8 37 0 160 8 37 0 161 8 37 0 162 8 37 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 37 0 244 8 37 0 245 8 37 0 246 8 37 0 250 8 37 0 251 8 37 0 252 8 37 0 253 8 37 0 254 8 37 0 255 8 37 1 0 8 37 1 2 8 37 1 4 8 37 1 6 8 37 1 7 3 33 1 9 8 37 1 10 8 37 1 11 8 37 1 12 8 37 1 13 8 37 1 14 8 37 1 15 8 37 1 19 8 37 1 60 8 37 1 65 8 37 1 66 8 37 1 73 8 37 1 74 8 37 1 75 8 37 1 76 8 37 1 77 8 37 1 78 8 37 1 79 8 37 1 80 8 37 1 81 8 37 1 82 8 37 1 89 8 37 1 90 8 37 1 91 8 37 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 8 41 0 27 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 45 0 154 8 45 0 155 8 45 0 156 8 45 0 157 8 45 0 158 8 45 0 159 8 45 0 160 8 45 0 161 8 45 0 162 8 45 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 45 0 244 8 45 0 245 8 45 0 246 8 45 0 250 8 45 0 251 8 45 0 252 8 45 0 253 8 45 0 254 8 45 0 255 8 45 1 0 8 45 1 2 8 45 1 4 8 45 1 6 8 45 1 7 3 33 1 9 8 45 1 10 8 45 1 11 8 45 1 12 8 45 1 13 8 45 1 14 8 45 1 15 8 45 1 19 8 45 1 60 8 45 1 65 8 45 1 66 8 45 1 73 8 45 1 74 8 45 1 75 8 45 1 76 8 45 1 77 8 45 1 78 8 45 1 79 8 45 1 80 8 45 1 81 8 45 1 82 8 45 1 89 8 45 1 90 8 45 1 91 8 45 1 92] 
#[0 1 121 0 49] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 3 142 0 68 3 142 0 69 3 142 0 70 0 153 0 78 0 153 0 87 0 153 0 88 3 142 0 92 0 153 0 94 1 71 0 95 0 153 0 104 0 153 0 112 0 153 0 118 3 142 0 125 3 142 0 137 8 53 0 142 0 141 0 144 3 142 0 146 8 53 0 166 0 153 0 167 8 53 0 168 8 53 0 169 8 53 0 170 8 53 0 171] 
#[0 8 57 0 55] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 1 169 0 230 1 173 0 237] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 61 0 244 4 209 0 245 4 209 0 246 4 209 0 250 8 61 0 251 8 61 0 252 8 61 0 253 8 61 0 254 8 61 0 255 8 61 1 0 8 61 1 2 8 61 1 4 8 61 1 6 8 61 1 7 3 33 1 9 8 61 1 10 8 61 1 11 8 61 1 12 8 61 1 13 8 61 1 14 8 61 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 8 61 1 79 8 61 1 80 8 61 1 81 8 61 1 82 8 61 1 89 8 61 1 90 8 61 1 91 8 61 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 65 0 142 0 141 0 144 8 65 0 166 0 153 0 167 8 65 0 168 8 65 0 169 8 65 0 170 8 65 0 171] 
#[0 3 146 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 59 0 61 0 64 0 65 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 94 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 111 0 112 0 114 0 118 0 121 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147] 
#[1 0 131 0 1 0 131 0 3 1 75 0 5 0 131 0 7 0 131 0 8 1 174 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 14 1 174 0 15 0 131 0 16 0 131 0 17 0 131 0 18 1 79 0 19 0 131 0 20 0 131 0 21 1 205 0 22 1 174 0 23 1 174 0 26 1 174 0 29 0 131 0 33 1 174 0 34 1 174 0 35 1 174 0 37 0 131 0 44 0 131 0 45 0 131 0 47 1 174 0 52 1 174 0 54 1 174 0 61 0 131 0 68 0 131 0 69 0 131 0 70 0 131 0 72 1 174 0 74 1 174 0 78 1 174 0 80 1 174 0 81 0 131 0 86 1 174 0 87 1 174 0 88 0 131 0 90 0 131 0 92 1 174 0 94 0 131 0 95 1 174 0 96 0 131 0 101 1 174 0 102 1 174 0 104 1 174 0 112 1 174 0 118 0 131 0 120 0 131 0 125 0 131 0 128 1 174 0 129 1 174 0 135 1 174 0 136 0 131 0 137 1 174 0 138 1 174 0 139 1 174 0 140 1 174 0 141 1 174 0 142 1 174 0 143 1 174 0 144 0 131 0 146 1 221 0 192 1 221 0 193 1 217 0 194 1 221 0 197 5 29 1 84 5 33 1 86] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 69 0 151] 
#[0 3 150 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 154 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 3 158 0 68 3 158 0 69 3 158 0 70 3 158 0 92 3 158 0 95 3 158 0 125 3 158 0 137 3 158 0 146 8 73 0 187] 
#[1 0 6 0 70 0 6 0 146 8 77 0 151] 
#[1 0 17 0 11 0 153 0 29 1 89 0 41 1 233 0 59 0 153 0 61 1 241 0 71 1 245 0 73 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 2 9 0 121 1 93 0 142 0 141 0 144 1 93 0 166 0 153 0 167 1 93 0 168 1 93 0 169 1 93 0 170 1 93 0 171 2 17 0 230 2 21 0 237] 
#[0 3 162 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 166 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 3 170 0 68 3 170 0 69 3 170 0 70 5 113 0 72 5 117 0 86 5 121 0 90 3 170 0 92 3 170 0 95 5 125 0 101 5 129 0 120 3 170 0 125 5 133 0 128 3 170 0 137 3 170 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 3 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 178 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 190 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 198 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 202 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 206 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 210 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 214 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 218 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 222 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 226 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 230 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 234 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 238 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 242 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 246 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 250 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 3 254 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 2 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 6 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 10 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 14 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 18 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 22 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 26 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 30 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 34 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 38 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 42 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 4 46 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 22 0 1 2 22 0 3 2 22 0 5 2 22 0 7 2 22 0 8 2 22 0 10 2 22 0 11 2 22 0 12 2 22 0 14 2 22 0 16 2 22 0 17 2 22 0 18 2 22 0 19 2 22 0 20 2 22 0 21 2 22 0 33 2 22 0 44 2 22 0 45 2 22 0 47 1 83 0 68 1 83 0 69 1 83 0 70 2 22 0 72 2 22 0 86 2 22 0 90 1 83 0 92 1 83 0 95 2 22 0 101 2 22 0 120 1 83 0 125 2 22 0 128 1 83 0 137 1 83 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 8 81 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 85 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 89 0 142 0 141 0 144 0 145 0 146 8 89 0 166 0 153 0 167 8 89 0 168 8 89 0 169 8 89 0 170 8 89 0 171 8 93 0 202] 
#[0 4 54 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[0 4 58 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 97 0 154 8 97 0 155 8 97 0 156 8 97 0 157 8 97 0 158 8 97 0 159 8 97 0 160 8 97 0 161 8 97 0 162 8 97 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 97 0 244 8 97 0 245 8 97 0 246 8 97 0 250 8 97 0 251 8 97 0 252 8 97 0 253 8 97 0 254 8 97 0 255 8 97 1 0 8 97 1 2 8 97 1 4 8 97 1 6 8 97 1 7 3 33 1 9 8 97 1 10 8 97 1 11 8 97 1 12 8 97 1 13 8 97 1 14 8 97 1 15 8 97 1 19 8 97 1 60 8 97 1 65 8 97 1 66 8 97 1 73 8 97 1 74 8 97 1 75 8 97 1 76 8 97 1 77 8 97 1 78 8 97 1 79 8 97 1 80 8 97 1 81 8 97 1 82 8 97 1 89 8 97 1 90 8 97 1 91 8 97 1 92] 
#[0 4 62 0 6 0 9] 
#[1 8 101 0 6 6 173 0 9 6 177 0 195] 
#[1 1 193 0 5 4 66 0 6 8 105 0 7 4 66 0 8 4 66 0 9 4 66 0 10 4 66 0 11 4 66 0 19 4 66 0 23 4 66 0 26 4 66 0 27 4 66 0 28 4 66 0 29 4 66 0 34 4 66 0 35 4 66 0 37 4 66 0 48 4 66 0 50 4 66 0 59 4 66 0 61 4 66 0 62 4 66 0 64 4 66 0 65 4 66 0 68 4 66 0 69 4 66 0 70 4 66 0 71 4 66 0 73 4 66 0 74 4 66 0 76 4 66 0 77 4 66 0 78 4 66 0 79 4 66 0 80 4 66 0 81 4 66 0 82 4 66 0 83 4 66 0 87 4 66 0 88 4 66 0 92 4 66 0 94 4 66 0 95 4 66 0 96 4 66 0 98 4 66 0 99 4 66 0 104 4 66 0 105 4 66 0 106 4 66 0 107 4 66 0 108 4 66 0 109 4 66 0 111 4 66 0 112 4 66 0 114 4 66 0 117 4 66 0 118 4 66 0 121 4 66 0 125 4 66 0 126 4 66 0 127 4 66 0 129 4 66 0 135 4 66 0 136 4 66 0 137 4 66 0 138 4 66 0 139 4 66 0 140 4 66 0 141 4 66 0 142 4 66 0 143 4 66 0 144 4 66 0 146 4 66 0 147 8 109 0 194 4 66 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 8 113 0 154 8 113 0 155 8 113 0 156 8 113 0 157 8 113 0 158 8 113 0 159 8 113 0 160 8 113 0 161 8 113 0 162 8 113 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 8 113 0 244 8 113 0 245 8 113 0 246 8 113 0 250 8 113 0 251 8 113 0 252 8 113 0 253 8 113 0 254 8 113 0 255 8 113 1 0 8 113 1 2 8 113 1 4 8 113 1 6 8 113 1 7 3 33 1 9 8 113 1 10 8 113 1 11 8 113 1 12 8 113 1 13 8 113 1 14 8 113 1 15 8 113 1 19 8 113 1 60 8 113 1 65 8 113 1 66 8 113 1 73 8 113 1 74 8 113 1 75 8 113 1 76 8 113 1 77 8 113 1 78 8 113 1 79 8 113 1 80 8 113 1 81 8 113 1 82 8 113 1 89 8 113 1 90 8 113 1 91 8 113 1 92] 
#[1 4 70 0 5 4 70 0 6 8 117 0 7 4 70 0 8 4 70 0 9 4 70 0 10 4 70 0 11 4 70 0 19 4 70 0 23 4 70 0 26 4 70 0 27 4 70 0 28 4 70 0 29 4 70 0 34 4 70 0 35 4 70 0 37 4 70 0 48 4 70 0 50 4 70 0 59 4 70 0 61 4 70 0 62 4 70 0 64 4 70 0 65 4 70 0 68 4 70 0 69 4 70 0 70 4 70 0 71 4 70 0 73 4 70 0 74 4 70 0 76 4 70 0 77 4 70 0 78 4 70 0 79 4 70 0 80 4 70 0 81 4 70 0 82 4 70 0 83 4 70 0 87 4 70 0 88 4 70 0 92 4 70 0 94 4 70 0 95 4 70 0 96 4 70 0 98 4 70 0 99 4 70 0 104 4 70 0 105 4 70 0 106 4 70 0 107 4 70 0 108 4 70 0 109 4 70 0 111 4 70 0 112 4 70 0 114 4 70 0 117 4 70 0 118 4 70 0 121 4 70 0 125 4 70 0 126 4 70 0 127 4 70 0 129 4 70 0 135 4 70 0 136 4 70 0 137 4 70 0 138 4 70 0 139 4 70 0 140 4 70 0 141 4 70 0 142 4 70 0 143 4 70 0 144 4 70 0 146 4 70 0 147 4 70 1 93] 
#[1 0 17 0 11 0 153 0 29 8 121 0 51 8 121 0 53 8 121 0 57 3 217 0 61 8 121 0 66 0 153 0 78 8 121 0 85 0 153 0 87 0 153 0 88 8 121 0 91 0 153 0 94 8 121 0 97 0 153 0 104 0 153 0 112 8 121 0 113 8 121 0 116 0 153 0 118 3 245 0 123 3 249 0 142 0 141 0 144 3 249 0 166 0 153 0 167 3 249 0 168 3 249 0 169 3 249 0 170 3 249 0 171 8 121 0 188 8 121 0 190 8 121 0 191] 
#[1 1 193 0 5 4 74 0 6 8 125 0 7 4 74 0 8 4 74 0 9 4 74 0 10 4 74 0 11 4 74 0 19 4 74 0 23 4 74 0 26 4 74 0 27 4 74 0 28 4 74 0 29 4 74 0 34 4 74 0 35 4 74 0 37 4 74 0 48 4 74 0 50 4 74 0 59 4 74 0 61 4 74 0 62 4 74 0 64 4 74 0 65 4 74 0 68 4 74 0 69 4 74 0 70 4 74 0 71 4 74 0 73 4 74 0 74 4 74 0 76 4 74 0 77 4 74 0 78 4 74 0 79 4 74 0 80 4 74 0 81 4 74 0 82 4 74 0 83 4 74 0 87 4 74 0 88 4 74 0 92 4 74 0 94 4 74 0 95 4 74 0 96 4 74 0 98 4 74 0 99 4 74 0 104 4 74 0 105 4 74 0 106 4 74 0 107 4 74 0 108 4 74 0 109 4 74 0 111 4 74 0 112 4 74 0 114 4 74 0 117 4 74 0 118 4 74 0 121 4 74 0 125 4 74 0 126 4 74 0 127 4 74 0 129 4 74 0 135 4 74 0 136 4 74 0 137 4 74 0 138 4 74 0 139 4 74 0 140 4 74 0 141 4 74 0 142 4 74 0 143 4 74 0 144 4 74 0 146 4 74 0 147 8 129 0 194 4 74 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 4 78 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 78 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 78 0 48 4 78 0 50 4 78 0 59 4 78 0 61 4 78 0 62 4 78 0 64 4 78 0 68 4 78 0 69 4 78 0 70 4 78 0 71 5 113 0 72 4 78 0 73 4 78 0 76 4 78 0 77 4 78 0 78 4 78 0 79 4 78 0 83 5 117 0 86 4 78 0 87 4 78 0 88 5 121 0 90 4 78 0 92 4 78 0 94 4 78 0 95 4 78 0 99 5 125 0 101 4 78 0 104 4 78 0 105 4 78 0 106 4 78 0 107 4 78 0 108 4 78 0 112 4 78 0 114 4 78 0 117 4 78 0 118 5 129 0 120 4 78 0 121 4 78 0 125 5 133 0 128 4 78 0 137 4 78 0 142 4 78 0 144 4 78 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 78 1 93] 
#[1 0 6 0 11 0 6 0 29 0 6 0 48 0 6 0 50 0 6 0 59 0 6 0 61 0 6 0 62 0 6 0 64 0 6 0 71 0 6 0 73 0 6 0 76 0 6 0 77 0 6 0 78 0 6 0 79 0 6 0 83 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 112 0 6 0 114 0 6 0 117 0 6 0 118 0 6 0 121 0 6 0 142 0 6 0 144 0 6 0 146 8 133 0 151 4 25 0 152 0 6 1 93] 
#[0 4 82 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 1 197 0 11 8 137 0 89] 
#[1 1 197 0 11 8 141 0 89] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 8 145 0 151 4 149 0 205] 
#[0 4 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 149 0 151 8 153 0 192 8 153 0 193 1 217 0 194 8 153 0 197] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 157 0 151 8 161 0 192 8 161 0 193 1 217 0 194 8 161 0 197 8 165 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 169 0 151 8 173 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 177 0 151 8 181 0 209] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 8 185 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 189 0 151] 
#[1 0 6 0 11 0 6 0 29 0 6 0 61 0 6 0 70 0 6 0 78 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 104 0 6 0 112 0 6 0 118 0 6 0 142 0 6 0 144 0 6 0 146 8 193 0 151 6 165 0 200] 
#[1 2 89 0 5 1 197 0 11 8 197 0 209] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 201 0 142 0 141 0 144 8 201 0 166 0 153 0 167 8 201 0 168 8 201 0 169 8 201 0 170 8 201 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 205 0 142 0 141 0 144 8 205 0 166 0 153 0 167 8 205 0 168 8 205 0 169 8 205 0 170 8 205 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 209 0 142 0 141 0 144 8 209 0 166 0 153 0 167 8 209 0 168 8 209 0 169 8 209 0 170 8 209 0 171] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 213 0 151 8 217 0 209] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 221 0 151 8 225 0 192 8 225 0 193 1 217 0 194 8 225 0 197] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 229 0 151 8 233 0 192 8 233 0 193 1 217 0 194 8 233 0 197 8 237 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 241 0 151 8 245 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 8 249 0 151 8 253 0 209] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 1 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 9 5 0 151] 
#[0 4 90 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147] 
#[1 9 9 0 70 0 145 0 146] 
#[0 4 94 0 70 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 61 0 142 0 141 0 144 9 13 0 146 1 61 0 166 0 153 0 167 1 61 0 168 1 61 0 169 1 61 0 170 1 61 0 171 9 17 0 176] 
#[1 2 89 0 5 9 21 0 46 9 25 0 209] 
#[1 2 89 0 5 9 29 0 46 9 33 0 209] 
#[0 9 37 0 71] 
#[1 1 197 0 11 9 41 0 19 4 98 0 29 4 98 0 61 4 98 0 70 4 98 0 78 4 98 0 87 4 98 0 88 4 98 0 94 4 98 0 104 4 98 0 112 4 98 0 118 4 98 0 142 4 98 0 144 4 98 0 146] 
#[0 4 102 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 45 0 142 0 141 0 144 9 45 0 166 0 153 0 167 9 45 0 168 9 45 0 169 9 45 0 170 9 45 0 171] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 9 49 0 192 9 49 0 193 1 217 0 194 9 49 0 197 7 109 0 213 9 53 0 214] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 9 57 0 102 0 153 0 104 0 153 0 112 0 153 0 118 9 61 0 142 0 141 0 144 9 61 0 166 0 153 0 167 9 61 0 168 9 61 0 169 9 61 0 170 9 61 0 171] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 9 65 0 192 9 65 0 193 1 217 0 194 9 65 0 197 7 109 0 213 9 69 0 214] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 73 0 154 9 73 0 155 9 73 0 156 9 73 0 157 9 73 0 158 9 73 0 159 9 73 0 160 9 73 0 161 9 73 0 162 9 73 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 73 0 244 9 73 0 245 9 73 0 246 9 73 0 250 9 73 0 251 9 73 0 252 9 73 0 253 9 73 0 254 9 73 0 255 9 73 1 0 9 73 1 2 9 73 1 4 9 73 1 6 9 73 1 7 3 33 1 9 9 73 1 10 9 73 1 11 9 73 1 12 9 73 1 13 9 73 1 14 9 73 1 15 9 73 1 19 9 73 1 60 9 73 1 65 9 73 1 66 9 73 1 73 9 73 1 74 9 73 1 75 9 73 1 76 9 73 1 77 9 73 1 78 9 73 1 79 9 73 1 80 9 73 1 81 9 73 1 82 9 73 1 89 9 73 1 90 9 73 1 91 9 73 1 92] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 9 77 0 214] 
#[0 4 106 0 6 0 9] 
#[0 4 110 0 6 0 9] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 81 0 142 0 141 0 144 9 81 0 166 0 153 0 167 9 81 0 168 9 81 0 169 9 81 0 170 9 81 0 171] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 9 85 0 192 9 85 0 193 1 217 0 194 9 85 0 197 7 109 0 213 9 89 0 214] 
#[1 9 93 0 6 9 97 0 9 9 101 0 210] 
#[1 0 6 0 70 0 6 0 146 9 105 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 109 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 4 114 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 9 133 0 24 0 25 0 29 0 36 0 38 1 16] 
#[1 4 118 0 1 4 118 0 3 4 118 0 5 4 118 0 6 4 118 0 7 4 118 0 8 9 137 0 9 4 118 0 10 4 118 0 11 4 118 0 12 4 118 0 13 4 118 0 14 4 118 0 15 4 118 0 16 4 118 0 17 4 118 0 18 4 118 0 19 4 118 0 20 4 118 0 21 4 118 0 22 4 118 0 23 4 118 0 26 4 118 0 27 4 118 0 28 4 118 0 29 4 118 0 33 4 118 0 34 4 118 0 35 4 118 0 37 4 118 0 44 4 118 0 45 4 118 0 47 4 118 0 48 4 118 0 50 4 118 0 59 4 118 0 61 4 118 0 62 4 118 0 64 4 118 0 65 4 118 0 68 4 118 0 69 4 118 0 70 4 118 0 71 4 118 0 72 4 118 0 73 4 118 0 74 4 118 0 76 4 118 0 77 4 118 0 78 4 118 0 79 4 118 0 80 4 118 0 81 4 118 0 82 4 118 0 83 4 118 0 86 4 118 0 87 4 118 0 88 4 118 0 90 4 118 0 92 4 118 0 94 4 118 0 95 4 118 0 96 4 118 0 98 4 118 0 99 4 118 0 101 4 118 0 104 4 118 0 105 4 118 0 106 4 118 0 107 4 118 0 108 4 118 0 109 4 118 0 111 4 118 0 112 4 118 0 114 4 118 0 115 4 118 0 117 4 118 0 118 4 118 0 119 4 118 0 120 4 118 0 121 4 118 0 125 4 118 0 126 4 118 0 127 4 118 0 128 4 118 0 129 4 118 0 135 4 118 0 136 4 118 0 137 4 118 0 138 4 118 0 139 4 118 0 140 4 118 0 141 4 118 0 142 4 118 0 143 4 118 0 144 4 118 0 146 4 118 0 147 9 141 1 63 4 118 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 145 0 154 9 145 0 155 9 145 0 156 9 145 0 157 9 145 0 158 9 145 0 159 9 145 0 160 9 145 0 161 9 145 0 162 9 145 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 145 0 244 9 145 0 245 9 145 0 246 9 145 0 250 9 145 0 251 9 145 0 252 9 145 0 253 9 145 0 254 9 145 0 255 9 145 1 0 9 145 1 2 9 145 1 4 9 145 1 6 9 145 1 7 3 33 1 9 9 145 1 10 9 145 1 11 9 145 1 12 9 145 1 13 9 145 1 14 9 145 1 15 9 145 1 19 9 145 1 60 9 145 1 65 9 145 1 66 9 145 1 73 9 145 1 74 9 145 1 75 9 145 1 76 9 145 1 77 9 145 1 78 9 145 1 79 9 145 1 80 9 145 1 81 9 145 1 82 9 145 1 89 9 145 1 90 9 145 1 91 9 145 1 92] 
#[1 9 149 0 134 9 153 0 165] 
#[0 4 122 0 10 0 134] 
#[0 4 126 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 4 130 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 157 0 154 9 157 0 155 9 157 0 156 9 157 0 157 9 157 0 158 9 157 0 159 9 157 0 160 9 157 0 161 9 157 0 162 9 157 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 157 0 244 9 157 0 245 9 157 0 246 9 157 0 250 9 157 0 251 9 157 0 252 9 157 0 253 9 157 0 254 9 157 0 255 9 157 1 0 9 157 1 2 9 157 1 4 9 157 1 6 9 157 1 7 3 33 1 9 9 157 1 10 9 157 1 11 9 157 1 12 9 157 1 13 9 157 1 14 9 157 1 15 9 157 1 19 9 157 1 60 9 157 1 65 9 157 1 66 9 157 1 73 9 157 1 74 9 157 1 75 9 157 1 76 9 157 1 77 9 157 1 78 9 157 1 79 9 157 1 80 9 157 1 81 9 157 1 82 9 157 1 89 9 157 1 90 9 157 1 91 9 157 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 9 161 0 102 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 165 0 154 9 165 0 155 9 165 0 156 9 165 0 157 9 165 0 158 9 165 0 159 9 165 0 160 9 165 0 161 9 165 0 162 9 165 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 165 0 244 9 165 0 245 9 165 0 246 9 165 0 250 9 165 0 251 9 165 0 252 9 165 0 253 9 165 0 254 9 165 0 255 9 165 1 0 9 165 1 2 9 165 1 4 9 165 1 6 9 165 1 7 3 33 1 9 9 165 1 10 9 165 1 11 9 165 1 12 9 165 1 13 9 165 1 14 9 165 1 15 9 165 1 19 9 165 1 60 9 165 1 65 9 165 1 66 9 165 1 73 9 165 1 74 9 165 1 75 9 165 1 76 9 165 1 77 9 165 1 78 9 165 1 79 9 165 1 80 9 165 1 81 9 165 1 82 9 165 1 89 9 165 1 90 9 165 1 91 9 165 1 92] 
#[1 5 37 0 1 1 87 0 3 5 45 0 5 4 134 0 6 5 49 0 7 5 53 0 8 4 134 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 134 0 13 1 91 0 14 4 134 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 134 0 22 4 134 0 23 4 134 0 26 4 134 0 27 4 134 0 28 4 134 0 29 5 97 0 33 4 134 0 34 4 134 0 35 4 134 0 37 1 95 0 44 5 105 0 45 5 109 0 47 4 134 0 48 4 134 0 50 4 134 0 59 4 134 0 61 4 134 0 62 4 134 0 64 4 134 0 65 4 134 0 68 4 134 0 69 4 134 0 70 4 134 0 71 5 113 0 72 4 134 0 73 4 134 0 74 4 134 0 76 4 134 0 77 4 134 0 78 4 134 0 79 4 134 0 80 4 134 0 81 4 134 0 82 4 134 0 83 5 117 0 86 4 134 0 87 4 134 0 88 5 121 0 90 4 134 0 92 4 134 0 94 4 134 0 95 4 134 0 96 4 134 0 98 4 134 0 99 5 125 0 101 4 134 0 104 4 134 0 105 4 134 0 106 4 134 0 107 4 134 0 108 4 134 0 109 4 134 0 111 4 134 0 112 4 134 0 114 4 134 0 115 4 134 0 117 4 134 0 118 4 134 0 119 1 99 0 120 4 134 0 121 4 134 0 125 4 134 0 126 4 134 0 127 5 133 0 128 4 134 0 129 4 134 0 135 4 134 0 136 4 134 0 137 4 134 0 138 4 134 0 139 4 134 0 140 4 134 0 141 4 134 0 142 4 134 0 143 4 134 0 144 4 134 0 146 4 134 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 134 1 93] 
#[1 3 58 0 1 3 58 0 3 3 58 0 5 3 58 0 6 3 58 0 7 3 58 0 8 9 169 0 9 3 58 0 10 3 58 0 11 3 58 0 12 3 58 0 13 3 58 0 14 1 103 0 15 3 58 0 16 3 58 0 17 3 58 0 18 3 58 0 19 3 58 0 20 3 58 0 21 3 58 0 22 3 58 0 23 3 58 0 26 3 58 0 27 3 58 0 28 3 58 0 29 3 58 0 33 3 58 0 34 3 58 0 35 3 58 0 37 3 58 0 44 3 58 0 45 3 58 0 47 3 58 0 48 3 58 0 50 3 58 0 59 3 58 0 61 3 58 0 62 3 58 0 64 3 58 0 65 3 58 0 68 3 58 0 69 3 58 0 70 3 58 0 71 3 58 0 72 3 58 0 73 3 58 0 74 3 58 0 76 3 58 0 77 3 58 0 78 3 58 0 79 3 58 0 80 3 58 0 81 3 58 0 82 3 58 0 83 3 58 0 86 3 58 0 87 3 58 0 88 3 58 0 90 3 58 0 92 3 58 0 94 3 58 0 95 3 58 0 96 3 58 0 98 3 58 0 99 3 58 0 101 3 58 0 104 3 58 0 105 3 58 0 106 3 58 0 107 3 58 0 108 3 58 0 109 3 58 0 111 3 58 0 112 3 58 0 114 3 58 0 115 3 58 0 117 3 58 0 118 3 58 0 119 3 58 0 120 3 58 0 121 3 58 0 125 3 58 0 126 3 58 0 127 3 58 0 128 3 58 0 129 3 58 0 135 3 58 0 136 3 58 0 137 3 58 0 138 3 58 0 139 3 58 0 140 3 58 0 141 3 58 0 142 3 58 0 143 3 58 0 144 3 58 0 146 3 58 0 147 9 177 1 88 3 58 1 93] 
#[0 4 138 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 4 142 0 1 4 142 0 3 4 142 0 5 4 142 0 6 4 142 0 7 4 142 0 8 9 181 0 9 4 142 0 10 4 142 0 11 4 142 0 12 4 142 0 13 4 142 0 14 1 107 0 15 4 142 0 16 4 142 0 17 4 142 0 18 4 142 0 19 4 142 0 20 4 142 0 21 4 142 0 22 4 142 0 23 4 142 0 26 4 142 0 27 4 142 0 28 4 142 0 29 4 142 0 33 4 142 0 34 4 142 0 35 4 142 0 37 4 142 0 44 4 142 0 45 4 142 0 47 4 142 0 48 4 142 0 50 4 142 0 59 4 142 0 61 4 142 0 62 4 142 0 64 4 142 0 65 4 142 0 68 4 142 0 69 4 142 0 70 4 142 0 71 4 142 0 72 4 142 0 73 4 142 0 74 4 142 0 76 4 142 0 77 4 142 0 78 4 142 0 79 4 142 0 80 4 142 0 81 4 142 0 82 4 142 0 83 4 142 0 86 4 142 0 87 4 142 0 88 4 142 0 90 4 142 0 92 4 142 0 94 4 142 0 95 4 142 0 96 4 142 0 98 4 142 0 99 4 142 0 101 4 142 0 104 4 142 0 105 4 142 0 106 4 142 0 107 4 142 0 108 4 142 0 109 4 142 0 111 4 142 0 112 4 142 0 114 4 142 0 115 4 142 0 117 4 142 0 118 4 142 0 119 4 142 0 120 4 142 0 121 4 142 0 125 4 142 0 126 4 142 0 127 4 142 0 128 4 142 0 129 4 142 0 135 4 142 0 136 4 142 0 137 4 142 0 138 4 142 0 139 4 142 0 140 4 142 0 141 4 142 0 142 4 142 0 143 4 142 0 144 4 142 0 146 4 142 0 147 9 189 1 87 4 142 1 93] 
#[0 4 146 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 1 111 0 3 5 45 0 5 4 150 0 6 5 49 0 7 5 53 0 8 4 150 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 150 0 13 1 115 0 14 4 150 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 150 0 22 4 150 0 23 4 150 0 26 4 150 0 27 4 150 0 28 4 150 0 29 5 97 0 33 4 150 0 34 4 150 0 35 4 150 0 37 1 119 0 44 5 105 0 45 5 109 0 47 4 150 0 48 4 150 0 50 4 150 0 59 4 150 0 61 4 150 0 62 4 150 0 64 4 150 0 65 4 150 0 68 4 150 0 69 4 150 0 70 4 150 0 71 5 113 0 72 4 150 0 73 4 150 0 74 4 150 0 76 4 150 0 77 4 150 0 78 4 150 0 79 4 150 0 80 4 150 0 81 4 150 0 82 4 150 0 83 5 117 0 86 4 150 0 87 4 150 0 88 5 121 0 90 4 150 0 92 4 150 0 94 4 150 0 95 4 150 0 96 4 150 0 98 4 150 0 99 5 125 0 101 4 150 0 104 4 150 0 105 4 150 0 106 4 150 0 107 4 150 0 108 4 150 0 109 4 150 0 111 4 150 0 112 4 150 0 114 4 150 0 115 4 150 0 117 4 150 0 118 4 150 0 119 1 123 0 120 4 150 0 121 4 150 0 125 4 150 0 126 4 150 0 127 5 133 0 128 4 150 0 129 4 150 0 135 4 150 0 136 4 150 0 137 4 150 0 138 4 150 0 139 4 150 0 140 4 150 0 141 4 150 0 142 4 150 0 143 4 150 0 144 4 150 0 146 4 150 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 150 1 93] 
#[0 9 193 0 6] 
#[0 4 154 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 1 127 0 3 5 45 0 5 4 158 0 6 5 49 0 7 5 53 0 8 4 158 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 158 0 13 1 131 0 14 4 158 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 158 0 22 4 158 0 23 4 158 0 26 4 158 0 27 4 158 0 28 4 158 0 29 5 97 0 33 4 158 0 34 4 158 0 35 4 158 0 37 1 135 0 44 5 105 0 45 5 109 0 47 4 158 0 48 4 158 0 50 4 158 0 59 4 158 0 61 4 158 0 62 4 158 0 64 4 158 0 65 4 158 0 68 4 158 0 69 4 158 0 70 4 158 0 71 5 113 0 72 4 158 0 73 4 158 0 74 4 158 0 76 4 158 0 77 4 158 0 78 4 158 0 79 4 158 0 80 4 158 0 81 4 158 0 82 4 158 0 83 5 117 0 86 4 158 0 87 4 158 0 88 5 121 0 90 4 158 0 92 4 158 0 94 4 158 0 95 4 158 0 96 4 158 0 98 4 158 0 99 5 125 0 101 4 158 0 104 4 158 0 105 4 158 0 106 4 158 0 107 4 158 0 108 4 158 0 109 4 158 0 111 4 158 0 112 4 158 0 114 4 158 0 115 4 158 0 117 4 158 0 118 4 158 0 119 1 139 0 120 4 158 0 121 4 158 0 125 4 158 0 126 4 158 0 127 5 133 0 128 4 158 0 129 4 158 0 135 4 158 0 136 4 158 0 137 4 158 0 138 4 158 0 139 4 158 0 140 4 158 0 141 4 158 0 142 4 158 0 143 4 158 0 144 4 158 0 146 4 158 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 158 1 93] 
#[1 5 37 0 1 1 143 0 3 5 45 0 5 4 162 0 6 5 49 0 7 5 53 0 8 4 162 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 162 0 13 1 147 0 14 4 162 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 162 0 22 4 162 0 23 4 162 0 26 4 162 0 27 4 162 0 28 4 162 0 29 5 97 0 33 4 162 0 34 4 162 0 35 4 162 0 37 1 151 0 44 5 105 0 45 5 109 0 47 4 162 0 48 4 162 0 50 4 162 0 59 4 162 0 61 4 162 0 62 4 162 0 64 4 162 0 65 4 162 0 68 4 162 0 69 4 162 0 70 4 162 0 71 5 113 0 72 4 162 0 73 4 162 0 74 4 162 0 76 4 162 0 77 4 162 0 78 4 162 0 79 4 162 0 80 4 162 0 81 4 162 0 82 4 162 0 83 5 117 0 86 4 162 0 87 4 162 0 88 5 121 0 90 4 162 0 92 4 162 0 94 4 162 0 95 4 162 0 96 4 162 0 98 4 162 0 99 5 125 0 101 4 162 0 104 4 162 0 105 4 162 0 106 4 162 0 107 4 162 0 108 4 162 0 109 4 162 0 111 4 162 0 112 4 162 0 114 4 162 0 115 4 162 0 117 4 162 0 118 4 162 0 119 1 155 0 120 4 162 0 121 4 162 0 125 4 162 0 126 4 162 0 127 5 133 0 128 4 162 0 129 4 162 0 135 4 162 0 136 4 162 0 137 4 162 0 138 4 162 0 139 4 162 0 140 4 162 0 141 4 162 0 142 4 162 0 143 4 162 0 144 4 162 0 146 4 162 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 162 1 93] 
#[1 5 37 0 1 1 159 0 3 5 45 0 5 4 166 0 6 5 49 0 7 5 53 0 8 4 166 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 166 0 13 1 163 0 14 4 166 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 166 0 22 4 166 0 23 4 166 0 26 4 166 0 27 4 166 0 28 4 166 0 29 5 97 0 33 4 166 0 34 4 166 0 35 4 166 0 37 1 167 0 44 5 105 0 45 5 109 0 47 4 166 0 48 4 166 0 50 4 166 0 59 4 166 0 61 4 166 0 62 4 166 0 64 4 166 0 65 4 166 0 68 4 166 0 69 4 166 0 70 4 166 0 71 5 113 0 72 4 166 0 73 4 166 0 74 4 166 0 76 4 166 0 77 4 166 0 78 4 166 0 79 4 166 0 80 4 166 0 81 4 166 0 82 4 166 0 83 5 117 0 86 4 166 0 87 4 166 0 88 5 121 0 90 4 166 0 92 4 166 0 94 4 166 0 95 4 166 0 96 4 166 0 98 4 166 0 99 5 125 0 101 4 166 0 104 4 166 0 105 4 166 0 106 4 166 0 107 4 166 0 108 4 166 0 109 4 166 0 111 4 166 0 112 4 166 0 114 4 166 0 115 4 166 0 117 4 166 0 118 4 166 0 119 1 171 0 120 4 166 0 121 4 166 0 125 4 166 0 126 4 166 0 127 5 133 0 128 4 166 0 129 4 166 0 135 4 166 0 136 4 166 0 137 4 166 0 138 4 166 0 139 4 166 0 140 4 166 0 141 4 166 0 142 4 166 0 143 4 166 0 144 4 166 0 146 4 166 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 166 1 93] 
#[1 5 37 0 1 1 175 0 3 5 45 0 5 4 170 0 6 5 49 0 7 5 53 0 8 4 170 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 170 0 13 1 179 0 14 4 170 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 170 0 22 4 170 0 23 4 170 0 26 4 170 0 27 4 170 0 28 4 170 0 29 5 97 0 33 4 170 0 34 4 170 0 35 4 170 0 37 1 183 0 44 5 105 0 45 5 109 0 47 4 170 0 48 4 170 0 50 4 170 0 59 4 170 0 61 4 170 0 62 4 170 0 64 4 170 0 65 4 170 0 68 4 170 0 69 4 170 0 70 4 170 0 71 5 113 0 72 4 170 0 73 4 170 0 74 4 170 0 76 4 170 0 77 4 170 0 78 4 170 0 79 4 170 0 80 4 170 0 81 4 170 0 82 4 170 0 83 5 117 0 86 4 170 0 87 4 170 0 88 5 121 0 90 4 170 0 92 4 170 0 94 4 170 0 95 4 170 0 96 4 170 0 98 4 170 0 99 5 125 0 101 4 170 0 104 4 170 0 105 4 170 0 106 4 170 0 107 4 170 0 108 4 170 0 109 4 170 0 111 4 170 0 112 4 170 0 114 4 170 0 115 4 170 0 117 4 170 0 118 4 170 0 119 1 187 0 120 4 170 0 121 4 170 0 125 4 170 0 126 4 170 0 127 5 133 0 128 4 170 0 129 4 170 0 135 4 170 0 136 4 170 0 137 4 170 0 138 4 170 0 139 4 170 0 140 4 170 0 141 4 170 0 142 4 170 0 143 4 170 0 144 4 170 0 146 4 170 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 170 1 93] 
#[1 5 37 0 1 1 191 0 3 5 45 0 5 4 174 0 6 5 49 0 7 5 53 0 8 4 174 0 9 5 57 0 10 5 61 0 11 5 65 0 12 4 174 0 13 1 195 0 14 4 174 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 4 174 0 22 4 174 0 23 4 174 0 26 4 174 0 27 4 174 0 28 4 174 0 29 5 97 0 33 4 174 0 34 4 174 0 35 4 174 0 37 1 199 0 44 5 105 0 45 5 109 0 47 4 174 0 48 4 174 0 50 4 174 0 59 4 174 0 61 4 174 0 62 4 174 0 64 4 174 0 65 4 174 0 68 4 174 0 69 4 174 0 70 4 174 0 71 5 113 0 72 4 174 0 73 4 174 0 74 4 174 0 76 4 174 0 77 4 174 0 78 4 174 0 79 4 174 0 80 4 174 0 81 4 174 0 82 4 174 0 83 5 117 0 86 4 174 0 87 4 174 0 88 5 121 0 90 4 174 0 92 4 174 0 94 4 174 0 95 4 174 0 96 4 174 0 98 4 174 0 99 5 125 0 101 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 109 4 174 0 111 4 174 0 112 4 174 0 114 4 174 0 115 4 174 0 117 4 174 0 118 4 174 0 119 1 203 0 120 4 174 0 121 4 174 0 125 4 174 0 126 4 174 0 127 5 133 0 128 4 174 0 129 4 174 0 135 4 174 0 136 4 174 0 137 4 174 0 138 4 174 0 139 4 174 0 140 4 174 0 141 4 174 0 142 4 174 0 143 4 174 0 144 4 174 0 146 4 174 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 174 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 9 197 0 154 9 197 0 155 9 197 0 156 9 197 0 157 9 197 0 158 9 197 0 159 9 197 0 160 9 197 0 161 9 197 0 162 9 197 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 197 0 244 9 197 0 245 9 197 0 246 9 197 0 250 9 197 0 251 9 197 0 252 9 197 0 253 9 197 0 254 9 197 0 255 9 197 1 0 9 197 1 2 9 197 1 4 9 197 1 6 9 197 1 7 3 33 1 9 9 197 1 10 9 197 1 11 9 197 1 12 9 197 1 13 9 197 1 14 9 197 1 15 9 197 1 19 9 197 1 60 9 197 1 65 9 197 1 66 9 197 1 73 9 197 1 74 9 197 1 75 9 197 1 76 9 197 1 77 9 197 1 78 9 197 1 79 9 197 1 80 9 197 1 81 9 197 1 82 9 197 1 89 9 197 1 90 9 197 1 91 9 197 1 92] 
#[1 0 131 0 1 0 131 0 3 1 75 0 5 1 207 0 6 0 131 0 7 0 131 0 8 1 207 0 9 0 131 0 10 0 135 0 11 0 131 0 12 0 131 0 14 1 174 0 15 0 131 0 16 0 131 0 17 0 131 0 18 1 211 0 19 0 131 0 20 0 131 0 21 1 205 0 22 1 174 0 23 1 174 0 26 1 174 0 29 0 131 0 33 1 174 0 34 1 174 0 35 1 174 0 37 0 131 0 44 0 131 0 45 0 131 0 47 1 174 0 52 1 174 0 54 1 174 0 61 0 131 0 72 1 174 0 74 1 174 0 78 1 174 0 80 1 174 0 81 0 131 0 86 1 174 0 87 1 174 0 88 0 131 0 90 1 174 0 94 1 174 0 96 0 131 0 101 1 174 0 102 1 174 0 104 1 174 0 112 1 174 0 118 0 131 0 120 0 131 0 128 1 174 0 129 1 174 0 135 1 174 0 136 1 174 0 137 1 174 0 138 1 174 0 139 1 174 0 140 1 174 0 141 1 174 0 142 1 174 0 143 1 174 0 144 7 105 0 192 7 105 0 193 1 217 0 194 7 105 0 197 7 109 0 213 7 113 0 214 5 29 1 84 5 33 1 86] 
#[1 0 6 0 70 0 6 0 146 9 201 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 205 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 209 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 9 213 0 151] 
#[1 0 6 0 70 0 6 0 146 9 217 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 221 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 9 225 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 229 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 178 0 68 4 178 0 69 4 178 0 70 5 113 0 72 5 117 0 86 5 121 0 90 4 178 0 92 4 178 0 95 5 125 0 101 5 129 0 120 4 178 0 125 5 133 0 128 4 178 0 137 4 178 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 9 233 0 142 0 141 0 144 9 233 0 166 0 153 0 167 9 233 0 168 9 233 0 169 9 233 0 170 9 233 0 171] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 9 237 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 241 0 244 4 209 0 245 4 209 0 246 4 209 0 250 9 241 0 251 9 241 0 252 9 241 0 253 9 241 0 254 9 241 0 255 9 241 1 0 9 241 1 2 9 241 1 4 9 241 1 6 9 241 1 7 3 33 1 9 9 241 1 10 9 241 1 11 9 241 1 12 9 241 1 13 9 241 1 14 9 241 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 9 241 1 79 9 241 1 80 9 241 1 81 9 241 1 82 9 241 1 89 9 241 1 90 9 241 1 91 9 241 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 9 245 0 244 4 209 0 245 4 209 0 246 4 209 0 250 9 245 0 251 9 245 0 252 9 245 0 253 9 245 0 254 9 245 0 255 9 245 1 0 9 245 1 2 9 245 1 4 9 245 1 6 9 245 1 7 3 33 1 9 9 245 1 10 9 245 1 11 9 245 1 12 9 245 1 13 9 245 1 14 9 245 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 9 245 1 79 9 245 1 80 9 245 1 81 9 245 1 82 9 245 1 89 9 245 1 90 9 245 1 91 9 245 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 0 6 0 92 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 9 249 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 9 253 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 10 1 0 119 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 141 0 81 10 5 0 109 10 9 1 65] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 2 137 0 80 2 141 0 81 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 10 13 1 60 10 13 1 65 10 13 1 66] 
#[0 4 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 197 0 11 4 186 0 68 4 186 0 69 4 186 0 70 4 186 0 92 4 186 0 95 4 186 0 125 4 186 0 137 4 186 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 17 0 154 10 17 0 155 10 17 0 156 10 17 0 157 10 17 0 158 10 17 0 159 10 17 0 160 10 17 0 161 10 17 0 162 10 17 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 10 17 0 244 10 17 0 245 10 17 0 246 10 17 0 250 10 17 0 251 10 17 0 252 10 17 0 253 10 17 0 254 10 17 0 255 10 17 1 0 10 17 1 2 10 17 1 4 10 17 1 6 10 17 1 7 3 33 1 9 10 17 1 10 10 17 1 11 10 17 1 12 10 17 1 13 10 17 1 14 10 17 1 15 10 17 1 19 10 17 1 60 10 17 1 65 10 17 1 66 10 17 1 73 10 17 1 74 10 17 1 75 10 17 1 76 10 17 1 77 10 17 1 78 10 17 1 79 10 17 1 80 10 17 1 81 10 17 1 82 10 17 1 89 10 17 1 90 10 17 1 91 10 17 1 92] 
#[1 1 182 0 1 1 182 0 3 1 223 0 5 1 182 0 7 1 223 0 8 1 223 0 10 1 223 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 125 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 21 0 151] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 25 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 10 29 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 10 33 0 181 5 253 0 184 10 37 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 4 190 0 68 4 190 0 69 4 190 0 70 4 190 0 92 4 190 0 95 4 190 0 125 4 190 0 137 1 227 0 146 10 41 0 181 10 45 0 186] 
#[1 10 49 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 10 53 0 151] 
#[0 10 57 0 121] 
#[1 1 193 0 5 1 197 0 11 1 205 0 22 10 61 0 192 10 61 0 193 1 217 0 194 10 61 0 197] 
#[0 4 194 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 4 198 0 6 5 49 0 7 5 53 0 8 4 198 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 4 202 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 19 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 65 0 154 10 65 0 155 10 65 0 156 10 65 0 157 10 65 0 158 10 65 0 159 10 65 0 160 10 65 0 161 10 65 0 162 10 65 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 10 65 0 244 10 65 0 245 10 65 0 246 10 65 0 250 10 65 0 251 10 65 0 252 10 65 0 253 10 65 0 254 10 65 0 255 10 65 1 0 10 65 1 2 10 65 1 4 10 65 1 6 10 65 1 7 3 33 1 9 10 65 1 10 10 65 1 11 10 65 1 12 10 65 1 13 10 65 1 14 10 65 1 15 10 65 1 19 10 65 1 60 10 65 1 65 10 65 1 66 10 65 1 73 10 65 1 74 10 65 1 75 10 65 1 76 10 65 1 77 10 65 1 78 10 65 1 79 10 65 1 80 10 65 1 81 10 65 1 82 10 65 1 89 10 65 1 90 10 65 1 91 10 65 1 92] 
#[1 4 206 0 5 4 206 0 6 10 69 0 7 4 206 0 8 4 206 0 9 4 206 0 10 4 206 0 11 4 206 0 19 4 206 0 23 4 206 0 26 4 206 0 27 4 206 0 28 4 206 0 29 4 206 0 34 4 206 0 35 4 206 0 37 4 206 0 48 4 206 0 50 4 206 0 59 4 206 0 61 4 206 0 62 4 206 0 64 4 206 0 65 4 206 0 68 4 206 0 69 4 206 0 70 4 206 0 71 4 206 0 73 4 206 0 74 4 206 0 76 4 206 0 77 4 206 0 78 4 206 0 79 4 206 0 80 4 206 0 81 4 206 0 82 4 206 0 83 4 206 0 87 4 206 0 88 4 206 0 92 4 206 0 94 4 206 0 95 4 206 0 96 4 206 0 98 4 206 0 99 4 206 0 104 4 206 0 105 4 206 0 106 4 206 0 107 4 206 0 108 4 206 0 109 4 206 0 111 4 206 0 112 4 206 0 114 4 206 0 117 4 206 0 118 4 206 0 121 4 206 0 125 4 206 0 126 4 206 0 127 4 206 0 129 4 206 0 135 4 206 0 136 4 206 0 137 4 206 0 138 4 206 0 139 4 206 0 140 4 206 0 141 4 206 0 142 4 206 0 143 4 206 0 144 4 206 0 146 4 206 0 147 4 206 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 4 210 0 6 4 210 0 7 4 210 0 8 4 210 0 9 4 210 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 4 210 0 19 5 89 0 20 5 93 0 21 4 210 0 23 4 210 0 26 4 210 0 27 4 210 0 28 4 210 0 29 5 97 0 33 4 210 0 34 4 210 0 35 4 210 0 37 5 101 0 44 5 105 0 45 5 109 0 47 4 210 0 48 4 210 0 50 4 210 0 59 4 210 0 61 4 210 0 62 4 210 0 64 4 210 0 65 4 210 0 68 4 210 0 69 4 210 0 70 4 210 0 71 5 113 0 72 4 210 0 73 4 210 0 74 4 210 0 76 4 210 0 77 4 210 0 78 4 210 0 79 4 210 0 80 4 210 0 81 4 210 0 82 4 210 0 83 5 117 0 86 4 210 0 87 4 210 0 88 5 121 0 90 4 210 0 92 4 210 0 94 4 210 0 95 4 210 0 96 4 210 0 98 4 210 0 99 5 125 0 101 4 210 0 104 4 210 0 105 4 210 0 106 4 210 0 107 4 210 0 108 4 210 0 109 4 210 0 111 4 210 0 112 4 210 0 114 4 210 0 117 4 210 0 118 5 129 0 120 4 210 0 121 4 210 0 125 4 210 0 126 4 210 0 127 5 133 0 128 4 210 0 129 4 210 0 135 4 210 0 136 4 210 0 137 4 210 0 138 4 210 0 139 4 210 0 140 4 210 0 141 4 210 0 142 4 210 0 143 4 210 0 144 4 210 0 146 4 210 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 4 210 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 73 0 154 10 73 0 155 10 73 0 156 10 73 0 157 10 73 0 158 10 73 0 159 10 73 0 160 10 73 0 161 10 73 0 162 10 73 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 10 73 0 244 10 73 0 245 10 73 0 246 10 73 0 250 10 73 0 251 10 73 0 252 10 73 0 253 10 73 0 254 10 73 0 255 10 73 1 0 10 73 1 2 10 73 1 4 10 73 1 6 10 73 1 7 3 33 1 9 10 73 1 10 10 73 1 11 10 73 1 12 10 73 1 13 10 73 1 14 10 73 1 15 10 73 1 19 10 73 1 60 10 73 1 65 10 73 1 66 10 73 1 73 10 73 1 74 10 73 1 75 10 73 1 76 10 73 1 77 10 73 1 78 10 73 1 79 10 73 1 80 10 73 1 81 10 73 1 82 10 73 1 89 10 73 1 90 10 73 1 91 10 73 1 92] 
#[1 1 193 0 5 4 214 0 6 10 77 0 7 4 214 0 8 4 214 0 9 4 214 0 10 4 214 0 11 4 214 0 19 4 214 0 23 4 214 0 26 4 214 0 27 4 214 0 28 4 214 0 29 4 214 0 34 4 214 0 35 4 214 0 37 4 214 0 48 4 214 0 50 4 214 0 59 4 214 0 61 4 214 0 62 4 214 0 64 4 214 0 65 4 214 0 68 4 214 0 69 4 214 0 70 4 214 0 71 4 214 0 73 4 214 0 74 4 214 0 76 4 214 0 77 4 214 0 78 4 214 0 79 4 214 0 80 4 214 0 81 4 214 0 82 4 214 0 83 4 214 0 87 4 214 0 88 4 214 0 92 4 214 0 94 4 214 0 95 4 214 0 96 4 214 0 98 4 214 0 99 4 214 0 104 4 214 0 105 4 214 0 106 4 214 0 107 4 214 0 108 4 214 0 109 4 214 0 111 4 214 0 112 4 214 0 114 4 214 0 117 4 214 0 118 4 214 0 121 4 214 0 125 4 214 0 126 4 214 0 127 4 214 0 129 4 214 0 135 4 214 0 136 4 214 0 137 4 214 0 138 4 214 0 139 4 214 0 140 4 214 0 141 4 214 0 142 4 214 0 143 4 214 0 144 4 214 0 146 4 214 0 147 10 81 0 194 4 214 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 10 85 0 154 10 85 0 155 10 85 0 156 10 85 0 157 10 85 0 158 10 85 0 159 10 85 0 160 10 85 0 161 10 85 0 162 10 85 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 10 85 0 244 10 85 0 245 10 85 0 246 10 85 0 250 10 85 0 251 10 85 0 252 10 85 0 253 10 85 0 254 10 85 0 255 10 85 1 0 10 85 1 2 10 85 1 4 10 85 1 6 10 85 1 7 3 33 1 9 10 85 1 10 10 85 1 11 10 85 1 12 10 85 1 13 10 85 1 14 10 85 1 15 10 85 1 19 10 85 1 60 10 85 1 65 10 85 1 66 10 85 1 73 10 85 1 74 10 85 1 75 10 85 1 76 10 85 1 77 10 85 1 78 10 85 1 79 10 85 1 80 10 85 1 81 10 85 1 82 10 85 1 89 10 85 1 90 10 85 1 91 10 85 1 92] 
#[1 4 218 0 5 4 218 0 6 10 89 0 7 4 218 0 8 4 218 0 9 4 218 0 10 4 218 0 11 4 218 0 19 4 218 0 23 4 218 0 26 4 218 0 27 4 218 0 28 4 218 0 29 4 218 0 34 4 218 0 35 4 218 0 37 4 218 0 48 4 218 0 50 4 218 0 59 4 218 0 61 4 218 0 62 4 218 0 64 4 218 0 65 4 218 0 68 4 218 0 69 4 218 0 70 4 218 0 71 4 218 0 73 4 218 0 74 4 218 0 76 4 218 0 77 4 218 0 78 4 218 0 79 4 218 0 80 4 218 0 81 4 218 0 82 4 218 0 83 4 218 0 87 4 218 0 88 4 218 0 92 4 218 0 94 4 218 0 95 4 218 0 96 4 218 0 98 4 218 0 99 4 218 0 104 4 218 0 105 4 218 0 106 4 218 0 107 4 218 0 108 4 218 0 109 4 218 0 111 4 218 0 112 4 218 0 114 4 218 0 117 4 218 0 118 4 218 0 121 4 218 0 125 4 218 0 126 4 218 0 127 4 218 0 129 4 218 0 135 4 218 0 136 4 218 0 137 4 218 0 138 4 218 0 139 4 218 0 140 4 218 0 141 4 218 0 142 4 218 0 143 4 218 0 144 4 218 0 146 4 218 0 147 4 218 1 93] 
#[1 0 17 0 11 0 153 0 29 0 25 0 48 0 29 0 50 0 33 0 59 0 153 0 61 0 41 0 62 0 45 0 64 0 49 0 71 0 53 0 73 0 201 0 76 0 61 0 77 0 153 0 78 0 201 0 79 0 73 0 83 0 153 0 87 0 153 0 88 0 153 0 94 0 89 0 99 0 153 0 104 0 201 0 105 0 101 0 106 0 201 0 107 0 109 0 108 0 153 0 112 0 117 0 114 0 121 0 117 0 153 0 118 0 129 0 121 0 149 0 142 0 141 0 144 0 145 0 146 0 149 0 166 0 153 0 167 0 149 0 168 0 149 0 169 0 149 0 170 0 149 0 171 6 213 0 174 6 213 0 175 6 213 0 177 6 213 0 178 6 213 0 182 6 213 0 183 0 201 0 189 6 213 0 198 6 213 0 199 6 213 0 203 6 213 0 204 6 213 0 215 6 213 0 216 6 213 0 217 0 233 0 218 6 213 0 219 6 213 0 220 6 213 0 221 6 213 0 222 6 213 0 223 6 213 0 224 6 213 0 225 6 213 0 226 6 213 0 227 6 213 0 228 6 213 0 229 1 25 0 231 6 213 0 232 6 213 0 233 6 213 0 234 6 213 0 235 6 213 0 236 6 213 0 240 6 213 0 243 4 222 1 93] 
#[1 2 177 0 140 10 93 0 161] 
#[1 2 177 0 140 10 97 0 161] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 10 101 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 7 77 0 142 0 141 0 144 0 145 0 146 7 77 0 166 0 153 0 167 7 77 0 168 7 77 0 169 7 77 0 170 7 77 0 171 7 81 0 207] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 105 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 109 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 113 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 117 0 151] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 121 0 151 10 125 0 192 10 125 0 193 1 217 0 194 10 125 0 197] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 129 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 133 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 137 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 141 0 151] 
#[1 0 6 0 70 0 6 0 146 10 145 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 149 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 10 153 0 70 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 8 89 0 142 0 141 0 144 0 145 0 146 8 89 0 166 0 153 0 167 8 89 0 168 8 89 0 169 8 89 0 170 8 89 0 171 8 93 0 202] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 157 0 151 10 161 0 192 10 161 0 193 1 217 0 194 10 161 0 197] 
#[1 5 157 0 5 0 6 0 8 0 6 0 10 1 197 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 165 0 151 10 169 0 192 10 169 0 193 1 217 0 194 10 169 0 197 10 173 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 177 0 151 10 181 0 209] 
#[1 2 89 0 5 0 6 0 8 0 6 0 10 1 197 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 185 0 151 10 189 0 209] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 193 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 197 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 201 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 205 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 209 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 213 0 151] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 217 0 151 10 221 0 192 10 221 0 193 1 217 0 194 10 221 0 197] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 225 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 229 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 233 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 10 237 0 151] 
#[1 0 6 0 70 0 6 0 146 10 241 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 10 245 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 4 226 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 4 230 0 5 0 8 0 10 0 11 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 55 0 59 0 61 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 78 0 79 0 80 0 81 0 82 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 107 0 108 0 109 0 110 0 111 0 112 0 114 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147] 
#[0 4 234 0 70 0 146] 
#[1 2 177 0 140 10 249 0 161] 
#[1 1 193 0 5 1 205 0 22 10 253 0 192 10 253 0 193 1 217 0 194 10 253 0 197] 
#[1 2 177 0 140 11 1 0 161] 
#[0 4 238 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 4 242 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 5 0 154 11 5 0 155 11 5 0 156 11 5 0 157 11 5 0 158 11 5 0 159 11 5 0 160 11 5 0 161 11 5 0 162 11 5 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 5 0 244 11 5 0 245 11 5 0 246 11 5 0 250 11 5 0 251 11 5 0 252 11 5 0 253 11 5 0 254 11 5 0 255 11 5 1 0 11 5 1 2 11 5 1 4 11 5 1 6 11 5 1 7 3 33 1 9 11 5 1 10 11 5 1 11 11 5 1 12 11 5 1 13 11 5 1 14 11 5 1 15 11 5 1 19 11 5 1 60 11 5 1 65 11 5 1 66 11 5 1 73 11 5 1 74 11 5 1 75 11 5 1 76 11 5 1 77 11 5 1 78 11 5 1 79 11 5 1 80 11 5 1 81 11 5 1 82 11 5 1 89 11 5 1 90 11 5 1 91 11 5 1 92] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 11 9 0 192 11 9 0 193 1 217 0 194 11 9 0 197 7 109 0 213 11 13 0 214] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 11 17 0 214] 
#[0 4 246 0 6 0 9] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 11 21 0 142 0 141 0 144 11 21 0 166 0 153 0 167 11 21 0 168 11 21 0 169 11 21 0 170 11 21 0 171] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 11 25 0 192 11 25 0 193 1 217 0 194 11 25 0 197 7 109 0 213 11 29 0 214] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 11 33 0 214] 
#[0 4 250 0 6 0 9] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 4 254 0 6 5 49 0 7 5 53 0 8 4 254 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 5 2 0 6 0 9] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 11 37 0 192 11 37 0 193 1 217 0 194 11 37 0 197 7 109 0 213 11 41 0 214] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 11 45 0 214] 
#[0 5 6 0 6 0 9] 
#[0 5 10 0 5 0 8 0 10 0 11 0 22 0 23 0 26 0 27 0 28 0 29 0 34 0 35 0 37 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 87 0 88 0 92 0 94 0 95 0 96 0 98 0 99 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 117 0 118 0 121 0 125 0 126 0 127 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 0 17 0 11 0 153 0 29 4 157 0 52 4 177 0 54 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 4 165 0 100 4 169 0 102 0 153 0 104 0 153 0 112 0 153 0 118 4 173 0 142 0 141 0 144 4 173 0 166 0 153 0 167 4 173 0 168 4 173 0 169 4 173 0 170 4 173 0 171 4 177 0 208 11 49 0 212] 
#[0 5 14 0 6 0 9] 
#[1 11 53 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 57 0 151] 
#[0 5 18 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 22 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 26 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 30 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[0 5 34 0 22 0 30 0 31 0 32 0 39 0 40 0 42] 
#[1 11 61 0 22 11 93 0 30 11 93 0 31 11 93 0 32 11 77 0 39 11 93 0 40 11 89 0 42 11 89 1 17 11 93 1 18] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 1 137 0 137 4 253 0 142 0 141 0 144 11 97 0 156 4 253 0 166 0 153 0 167 4 253 0 168 4 253 0 169 4 253 0 170 4 253 0 171 11 97 1 61] 
#[0 5 38 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 1 231 0 3 5 45 0 5 5 42 0 6 5 49 0 7 5 53 0 8 5 42 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 42 0 13 1 235 0 14 5 42 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 42 0 22 5 42 0 23 5 42 0 26 5 42 0 27 5 42 0 28 5 42 0 29 5 97 0 33 5 42 0 34 5 42 0 35 5 42 0 37 1 239 0 44 5 105 0 45 5 109 0 47 5 42 0 48 5 42 0 50 5 42 0 59 5 42 0 61 5 42 0 62 5 42 0 64 5 42 0 65 5 42 0 68 5 42 0 69 5 42 0 70 5 42 0 71 5 113 0 72 5 42 0 73 5 42 0 74 5 42 0 76 5 42 0 77 5 42 0 78 5 42 0 79 5 42 0 80 5 42 0 81 5 42 0 82 5 42 0 83 5 117 0 86 5 42 0 87 5 42 0 88 5 121 0 90 5 42 0 92 5 42 0 94 5 42 0 95 5 42 0 96 5 42 0 98 5 42 0 99 5 125 0 101 5 42 0 104 5 42 0 105 5 42 0 106 5 42 0 107 5 42 0 108 5 42 0 109 5 42 0 111 5 42 0 112 5 42 0 114 5 42 0 115 5 42 0 117 5 42 0 118 5 42 0 119 1 243 0 120 5 42 0 121 5 42 0 125 5 42 0 126 5 42 0 127 5 133 0 128 5 42 0 129 5 42 0 135 5 42 0 136 5 42 0 137 5 42 0 138 5 42 0 139 5 42 0 140 5 42 0 141 5 42 0 142 5 42 0 143 5 42 0 144 5 42 0 146 5 42 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 42 1 93] 
#[0 5 46 0 10 0 131 0 134] 
#[1 11 101 0 10 11 105 0 134] 
#[1 5 37 0 1 1 247 0 3 5 45 0 5 5 50 0 6 5 49 0 7 5 53 0 8 5 50 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 50 0 13 1 251 0 14 5 50 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 50 0 22 5 50 0 23 5 50 0 26 5 50 0 27 5 50 0 28 5 50 0 29 5 97 0 33 5 50 0 34 5 50 0 35 5 50 0 37 1 255 0 44 5 105 0 45 5 109 0 47 5 50 0 48 5 50 0 50 5 50 0 59 5 50 0 61 5 50 0 62 5 50 0 64 5 50 0 65 5 50 0 68 5 50 0 69 5 50 0 70 5 50 0 71 5 113 0 72 5 50 0 73 5 50 0 74 5 50 0 76 5 50 0 77 5 50 0 78 5 50 0 79 5 50 0 80 5 50 0 81 5 50 0 82 5 50 0 83 5 117 0 86 5 50 0 87 5 50 0 88 5 121 0 90 5 50 0 92 5 50 0 94 5 50 0 95 5 50 0 96 5 50 0 98 5 50 0 99 5 125 0 101 5 50 0 104 5 50 0 105 5 50 0 106 5 50 0 107 5 50 0 108 5 50 0 109 5 50 0 111 5 50 0 112 5 50 0 114 5 50 0 115 5 50 0 117 5 50 0 118 5 50 0 119 2 3 0 120 5 50 0 121 5 50 0 125 5 50 0 126 5 50 0 127 5 133 0 128 5 50 0 129 5 50 0 135 5 50 0 136 5 50 0 137 5 50 0 138 5 50 0 139 5 50 0 140 5 50 0 141 5 50 0 142 5 50 0 143 5 50 0 144 5 50 0 146 5 50 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 50 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 109 0 154 11 109 0 155 11 109 0 156 11 109 0 157 11 109 0 158 11 109 0 159 11 109 0 160 11 109 0 161 11 109 0 162 11 109 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 109 0 244 11 109 0 245 11 109 0 246 11 109 0 250 11 109 0 251 11 109 0 252 11 109 0 253 11 109 0 254 11 109 0 255 11 109 1 0 11 109 1 2 11 109 1 4 11 109 1 6 11 109 1 7 3 33 1 9 11 109 1 10 11 109 1 11 11 109 1 12 11 109 1 13 11 109 1 14 11 109 1 15 11 109 1 19 11 109 1 60 11 109 1 65 11 109 1 66 11 109 1 73 11 109 1 74 11 109 1 75 11 109 1 76 11 109 1 77 11 109 1 78 11 109 1 79 11 109 1 80 11 109 1 81 11 109 1 82 11 109 1 89 11 109 1 90 11 109 1 91 11 109 1 92] 
#[1 5 37 0 1 2 7 0 3 5 45 0 5 5 54 0 6 5 49 0 7 5 53 0 8 5 54 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 54 0 13 2 11 0 14 5 54 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 54 0 22 5 54 0 23 5 54 0 26 5 54 0 27 5 54 0 28 5 54 0 29 5 97 0 33 5 54 0 34 5 54 0 35 5 54 0 37 2 15 0 44 5 105 0 45 5 109 0 47 5 54 0 48 5 54 0 50 5 54 0 59 5 54 0 61 5 54 0 62 5 54 0 64 5 54 0 65 5 54 0 68 5 54 0 69 5 54 0 70 5 54 0 71 5 113 0 72 5 54 0 73 5 54 0 74 5 54 0 76 5 54 0 77 5 54 0 78 5 54 0 79 5 54 0 80 5 54 0 81 5 54 0 82 5 54 0 83 5 117 0 86 5 54 0 87 5 54 0 88 5 121 0 90 5 54 0 92 5 54 0 94 5 54 0 95 5 54 0 96 5 54 0 98 5 54 0 99 5 125 0 101 5 54 0 104 5 54 0 105 5 54 0 106 5 54 0 107 5 54 0 108 5 54 0 109 5 54 0 111 5 54 0 112 5 54 0 114 5 54 0 115 5 54 0 117 5 54 0 118 5 54 0 119 2 19 0 120 5 54 0 121 5 54 0 125 5 54 0 126 5 54 0 127 5 133 0 128 5 54 0 129 5 54 0 135 5 54 0 136 5 54 0 137 5 54 0 138 5 54 0 139 5 54 0 140 5 54 0 141 5 54 0 142 5 54 0 143 5 54 0 144 5 54 0 146 5 54 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 54 1 93] 
#[0 5 58 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 5 62 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 52 0 54 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 102 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 66 0 1 5 66 0 3 5 66 0 5 5 66 0 6 5 66 0 7 5 66 0 8 9 181 0 9 5 66 0 10 5 66 0 11 5 66 0 12 5 66 0 13 5 66 0 14 2 23 0 15 5 66 0 16 5 66 0 17 5 66 0 18 5 66 0 19 5 66 0 20 5 66 0 21 5 66 0 22 5 66 0 23 5 66 0 26 5 66 0 27 5 66 0 28 5 66 0 29 5 66 0 33 5 66 0 34 5 66 0 35 5 66 0 37 5 66 0 44 5 66 0 45 5 66 0 47 5 66 0 48 5 66 0 50 5 66 0 59 5 66 0 61 5 66 0 62 5 66 0 64 5 66 0 65 5 66 0 68 5 66 0 69 5 66 0 70 5 66 0 71 5 66 0 72 5 66 0 73 5 66 0 74 5 66 0 76 5 66 0 77 5 66 0 78 5 66 0 79 5 66 0 80 5 66 0 81 5 66 0 82 5 66 0 83 5 66 0 86 5 66 0 87 5 66 0 88 5 66 0 90 5 66 0 92 5 66 0 94 5 66 0 95 5 66 0 96 5 66 0 98 5 66 0 99 5 66 0 101 5 66 0 104 5 66 0 105 5 66 0 106 5 66 0 107 5 66 0 108 5 66 0 109 5 66 0 111 5 66 0 112 5 66 0 114 5 66 0 115 5 66 0 117 5 66 0 118 5 66 0 119 5 66 0 120 5 66 0 121 5 66 0 125 5 66 0 126 5 66 0 127 5 66 0 128 5 66 0 129 5 66 0 135 5 66 0 136 5 66 0 137 5 66 0 138 5 66 0 139 5 66 0 140 5 66 0 141 5 66 0 142 5 66 0 143 5 66 0 144 5 66 0 146 5 66 0 147 9 189 1 87 5 66 1 93] 
#[1 5 70 0 1 5 70 0 3 2 101 0 5 5 70 0 6 5 70 0 7 2 105 0 8 5 70 0 9 2 109 0 10 0 17 0 11 5 70 0 12 5 70 0 13 5 70 0 14 5 70 0 15 5 70 0 16 5 70 0 17 5 70 0 18 5 70 0 19 5 70 0 20 5 70 0 21 5 70 0 22 2 27 0 23 2 31 0 26 5 70 0 27 5 70 0 28 2 35 0 29 5 70 0 33 2 39 0 34 2 43 0 35 2 47 0 37 5 70 0 44 5 70 0 45 5 70 0 47 5 70 0 48 5 70 0 50 4 157 0 52 7 173 0 54 5 70 0 59 2 51 0 61 5 70 0 62 5 70 0 64 5 70 0 65 5 70 0 68 5 70 0 69 5 70 0 70 5 70 0 71 5 70 0 72 5 70 0 73 2 55 0 74 5 70 0 76 5 70 0 77 2 59 0 78 5 70 0 79 2 63 0 80 2 67 0 81 5 70 0 82 5 70 0 83 5 70 0 86 2 71 0 87 2 75 0 88 5 70 0 90 5 70 0 92 2 79 0 94 5 70 0 95 2 83 0 96 5 70 0 98 5 70 0 99 5 70 0 101 7 169 0 102 2 87 0 104 5 70 0 105 5 70 0 106 5 70 0 107 5 70 0 108 5 70 0 109 5 70 0 111 2 91 0 112 5 70 0 114 5 70 0 115 5 70 0 117 2 95 0 118 5 70 0 119 5 70 0 120 5 70 0 121 5 70 0 125 5 70 0 126 5 70 0 127 5 70 0 128 2 99 0 129 2 103 0 135 2 107 0 136 2 111 0 137 2 115 0 138 2 119 0 139 2 123 0 140 2 127 0 141 2 131 0 142 2 135 0 143 2 139 0 144 5 70 0 146 5 70 0 147 7 177 0 154 7 177 0 155 7 177 0 156 7 177 0 157 7 177 0 158 7 177 0 159 7 177 0 160 7 177 0 161 7 177 0 162 7 177 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 173 0 208 7 177 0 244 7 177 0 245 7 177 0 246 7 177 0 250 7 177 0 251 7 177 0 252 7 177 0 253 7 177 0 254 7 177 0 255 7 177 1 0 7 177 1 2 7 177 1 4 7 177 1 6 7 177 1 7 3 33 1 9 7 177 1 10 7 177 1 11 7 177 1 12 7 177 1 13 7 177 1 14 7 177 1 15 7 177 1 19 7 177 1 60 7 177 1 65 7 177 1 66 7 177 1 73 7 177 1 74 7 177 1 75 7 177 1 76 7 177 1 77 7 177 1 78 7 177 1 79 7 177 1 80 7 177 1 81 7 177 1 82 11 113 1 83 7 177 1 89 7 177 1 90 7 177 1 91 7 177 1 92 5 70 1 93] 
#[1 5 74 0 1 5 74 0 3 2 101 0 5 5 74 0 6 5 74 0 7 2 105 0 8 5 74 0 9 2 109 0 10 0 17 0 11 5 74 0 12 5 74 0 13 5 74 0 14 5 74 0 15 5 74 0 16 5 74 0 17 5 74 0 18 5 74 0 19 5 74 0 20 5 74 0 21 5 74 0 22 2 143 0 23 2 147 0 26 5 74 0 27 5 74 0 28 2 151 0 29 5 74 0 33 2 155 0 34 2 159 0 35 2 163 0 37 5 74 0 44 5 74 0 45 5 74 0 47 5 74 0 48 5 74 0 50 4 157 0 52 7 173 0 54 5 74 0 59 2 167 0 61 5 74 0 62 5 74 0 64 5 74 0 65 5 74 0 68 5 74 0 69 5 74 0 70 5 74 0 71 5 74 0 72 5 74 0 73 2 171 0 74 5 74 0 76 5 74 0 77 2 175 0 78 5 74 0 79 2 179 0 80 2 183 0 81 5 74 0 82 5 74 0 83 5 74 0 86 2 187 0 87 2 191 0 88 5 74 0 90 5 74 0 92 2 195 0 94 5 74 0 95 2 199 0 96 5 74 0 98 5 74 0 99 5 74 0 101 7 169 0 102 2 203 0 104 5 74 0 105 5 74 0 106 5 74 0 107 5 74 0 108 5 74 0 109 5 74 0 111 2 207 0 112 5 74 0 114 5 74 0 115 5 74 0 117 2 211 0 118 5 74 0 119 5 74 0 120 5 74 0 121 5 74 0 125 5 74 0 126 5 74 0 127 5 74 0 128 2 215 0 129 2 219 0 135 2 223 0 136 2 227 0 137 2 231 0 138 2 235 0 139 2 239 0 140 2 243 0 141 2 247 0 142 2 251 0 143 2 255 0 144 5 74 0 146 5 74 0 147 7 177 0 154 7 177 0 155 7 177 0 156 7 177 0 157 7 177 0 158 7 177 0 159 7 177 0 160 7 177 0 161 7 177 0 162 7 177 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 7 173 0 208 7 177 0 244 7 177 0 245 7 177 0 246 7 177 0 250 7 177 0 251 7 177 0 252 7 177 0 253 7 177 0 254 7 177 0 255 7 177 1 0 7 177 1 2 7 177 1 4 7 177 1 6 7 177 1 7 3 33 1 9 7 177 1 10 7 177 1 11 7 177 1 12 7 177 1 13 7 177 1 14 7 177 1 15 7 177 1 19 7 177 1 60 7 177 1 65 7 177 1 66 7 177 1 73 7 177 1 74 7 177 1 75 7 177 1 76 7 177 1 77 7 177 1 78 7 177 1 79 7 177 1 80 7 177 1 81 7 177 1 82 11 117 1 83 7 177 1 89 7 177 1 90 7 177 1 91 7 177 1 92 5 74 1 93] 
#[0 5 78 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 5 82 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 5 37 0 1 3 3 0 3 5 45 0 5 5 86 0 6 5 49 0 7 5 53 0 8 5 86 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 86 0 13 3 7 0 14 5 86 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 86 0 22 5 86 0 23 5 86 0 26 5 86 0 27 5 86 0 28 5 86 0 29 5 97 0 33 5 86 0 34 5 86 0 35 5 86 0 37 3 11 0 44 5 105 0 45 5 109 0 47 5 86 0 48 5 86 0 50 5 86 0 59 5 86 0 61 5 86 0 62 5 86 0 64 5 86 0 65 5 86 0 68 5 86 0 69 5 86 0 70 5 86 0 71 5 113 0 72 5 86 0 73 5 86 0 74 5 86 0 76 5 86 0 77 5 86 0 78 5 86 0 79 5 86 0 80 5 86 0 81 5 86 0 82 5 86 0 83 5 117 0 86 5 86 0 87 5 86 0 88 5 121 0 90 5 86 0 92 5 86 0 94 5 86 0 95 5 86 0 96 5 86 0 98 5 86 0 99 5 125 0 101 5 86 0 104 5 86 0 105 5 86 0 106 5 86 0 107 5 86 0 108 5 86 0 109 5 86 0 111 5 86 0 112 5 86 0 114 5 86 0 115 5 86 0 117 5 86 0 118 5 86 0 119 3 15 0 120 5 86 0 121 5 86 0 125 5 86 0 126 5 86 0 127 5 133 0 128 5 86 0 129 5 86 0 135 5 86 0 136 5 86 0 137 5 86 0 138 5 86 0 139 5 86 0 140 5 86 0 141 5 86 0 142 5 86 0 143 5 86 0 144 5 86 0 146 5 86 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 86 1 93] 
#[1 11 121 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 125 0 151] 
#[1 0 6 0 70 0 6 0 146 11 129 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 11 133 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 11 137 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 141 0 151] 
#[1 11 145 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 11 149 0 151] 
#[1 1 197 0 11 11 153 0 84] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 3 19 0 23 3 23 0 26 3 27 0 29 3 31 0 34 3 35 0 35 3 39 0 37 3 43 0 61 3 47 0 74 3 51 0 78 3 55 0 80 3 59 0 81 3 63 0 87 3 67 0 88 3 71 0 94 3 75 0 96 3 79 0 104 3 83 0 112 3 87 0 118 3 91 0 129 3 95 0 135 3 99 0 136 3 103 0 137 3 107 0 138 3 111 0 139 3 115 0 140 3 119 0 141 3 123 0 142 3 127 0 143 3 131 0 144 11 157 0 154 11 157 0 155 11 157 0 156 11 157 0 157 11 157 0 158 11 157 0 159 11 157 0 160 11 157 0 161 11 157 0 162 11 157 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 157 0 244 11 157 0 245 11 157 0 246 11 157 0 250 11 157 0 251 11 157 0 252 11 157 0 253 11 157 0 254 11 157 0 255 11 157 1 0 11 157 1 2 11 157 1 4 11 157 1 6 11 157 1 7 3 33 1 9 11 157 1 10 11 157 1 11 11 157 1 12 11 157 1 13 11 157 1 14 11 157 1 15 11 157 1 19 11 157 1 60 11 157 1 65 11 157 1 66 11 157 1 73 11 157 1 74 11 157 1 75 11 157 1 76 11 157 1 77 11 157 1 78 11 157 1 79 11 157 1 80 11 157 1 81 11 157 1 82 11 157 1 89 11 157 1 90 11 157 1 91 11 157 1 92] 
#[1 1 182 0 1 1 182 0 3 1 223 0 5 1 182 0 7 1 223 0 8 1 223 0 10 1 223 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 11 161 0 151] 
#[1 1 182 0 1 1 182 0 3 1 223 0 5 1 182 0 7 1 223 0 8 1 223 0 10 1 223 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 1 182 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 182 0 44 1 182 0 45 1 182 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 1 182 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 1 182 0 86 0 6 0 87 0 6 0 88 1 182 0 90 0 6 0 92 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 1 182 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 1 182 0 120 0 6 0 121 0 6 0 126 0 6 0 127 1 182 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 11 165 0 151] 
#[1 11 169 0 92 1 137 0 137 0 145 0 146 11 173 0 156] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 11 177 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 3 135 0 23 3 139 0 26 0 6 0 27 0 6 0 28 3 143 0 29 3 147 0 34 3 151 0 35 3 155 0 37 0 6 0 48 0 6 0 59 3 159 0 61 0 6 0 64 0 6 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 71 0 6 0 73 3 163 0 74 0 6 0 76 3 167 0 78 0 6 0 79 3 171 0 80 3 175 0 81 0 6 0 82 3 179 0 87 3 183 0 88 3 187 0 94 3 191 0 96 0 6 0 98 0 6 0 99 3 195 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 3 199 0 112 0 6 0 114 3 203 0 118 0 6 0 121 0 6 0 126 0 6 0 127 3 207 0 129 3 211 0 135 3 215 0 136 1 215 0 137 3 219 0 138 3 223 0 139 3 227 0 140 3 231 0 141 3 235 0 142 3 239 0 143 3 243 0 144 0 6 0 146 0 6 0 147 11 181 0 151 11 185 0 154 11 185 0 155 11 185 0 156 11 185 0 157 11 185 0 158 11 185 0 159 11 185 0 160 11 185 0 161 11 185 0 162 11 185 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 185 0 244 11 185 0 245 11 185 0 246 11 185 0 250 11 185 0 251 11 185 0 252 11 185 0 253 11 185 0 254 11 185 0 255 11 185 1 0 11 185 1 2 11 185 1 4 11 185 1 6 11 185 1 7 3 33 1 9 11 185 1 10 11 185 1 11 11 185 1 12 11 185 1 13 11 185 1 14 11 185 1 15 11 185 1 19 11 185 1 60 11 185 1 65 11 185 1 66 11 185 1 73 11 185 1 74 11 185 1 75 11 185 1 76 11 185 1 77 11 185 1 78 11 185 1 79 11 185 1 80 11 185 1 81 11 185 1 82 11 185 1 89 11 185 1 90 11 185 1 91 11 185 1 92] 
#[0 11 189 0 95] 
#[0 5 90 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 5 94 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 49 0 146 11 193 0 181 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 11 197 1 54 11 201 1 55] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 0 6 0 125 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 11 205 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 11 209 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 11 213 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 11 217 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 74 0 5 0 74 0 8 0 74 0 10 0 74 0 11 0 74 0 23 0 74 0 26 0 74 0 27 0 74 0 28 0 74 0 29 0 74 0 34 0 74 0 35 0 74 0 37 0 74 0 48 0 74 0 59 0 74 0 61 0 74 0 64 0 74 0 65 4 90 0 68 4 90 0 69 4 90 0 70 0 74 0 71 0 74 0 73 0 74 0 74 0 74 0 76 0 74 0 78 0 74 0 79 0 74 0 80 0 74 0 81 0 74 0 82 0 74 0 87 0 74 0 88 4 90 0 92 0 74 0 94 4 90 0 95 0 74 0 96 0 74 0 98 0 74 0 99 0 74 0 104 0 74 0 105 0 74 0 107 0 74 0 108 0 74 0 109 4 90 0 110 0 74 0 111 0 74 0 112 0 74 0 114 0 74 0 118 0 74 0 121 4 90 0 125 0 74 0 126 0 74 0 127 0 74 0 129 0 74 0 135 0 74 0 136 3 247 0 137 0 74 0 138 0 74 0 139 0 74 0 140 0 74 0 141 0 74 0 142 0 74 0 143 0 74 0 144 3 247 0 146 0 74 0 147] 
#[1 5 98 0 68 5 98 0 69 5 98 0 70 5 98 0 92 5 98 0 95 11 221 0 110 5 98 0 125 3 251 0 137 3 255 0 146 11 225 0 156] 
#[1 7 49 0 146 11 229 0 181] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 9 13 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 11 233 0 175 11 233 0 177 11 233 0 184 6 5 0 189 11 233 0 198 11 233 0 199 11 233 0 203 11 233 0 204 11 233 0 225 11 233 0 226 11 233 0 227 11 233 0 228 11 233 0 229 1 25 0 231 11 233 0 232 11 233 0 233 11 233 0 234 11 233 0 235 11 233 0 236 11 233 0 240 11 233 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 11 233 1 20 11 233 1 21 11 233 1 22 11 233 1 23 11 233 1 24 11 233 1 25 11 233 1 26 11 233 1 27 11 233 1 28 11 233 1 29 11 233 1 30 11 233 1 31 11 233 1 32 11 233 1 33 11 233 1 34 11 233 1 35 11 233 1 36 11 233 1 37 11 233 1 38 11 233 1 41 11 233 1 47 11 233 1 48 11 233 1 50 11 233 1 53 11 233 1 56 11 233 1 57 11 233 1 58 11 233 1 59 6 17 1 60 6 17 1 65 6 17 1 66 11 233 1 67 11 233 1 68 11 233 1 69 11 233 1 70 11 233 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 5 102 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 11 237 0 117] 
#[1 11 241 0 70 0 145 0 146] 
#[0 5 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 11 245 0 7 5 110 0 11 5 110 0 29 5 110 0 61 5 110 0 70 5 110 0 78 5 110 0 87 5 110 0 88 5 110 0 94 5 110 0 104 5 110 0 112 5 110 0 118 5 110 0 142 5 110 0 144 5 110 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 114 0 6 5 114 0 7 5 114 0 8 5 114 0 9 5 114 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 114 0 19 5 89 0 20 5 93 0 21 5 114 0 23 5 114 0 26 5 114 0 27 5 114 0 28 5 114 0 29 5 97 0 33 5 114 0 34 5 114 0 35 5 114 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 114 0 48 5 114 0 50 5 114 0 59 5 114 0 61 5 114 0 62 5 114 0 64 5 114 0 65 5 114 0 68 5 114 0 69 5 114 0 70 5 114 0 71 5 113 0 72 5 114 0 73 5 114 0 74 5 114 0 76 5 114 0 77 5 114 0 78 5 114 0 79 5 114 0 80 5 114 0 81 5 114 0 82 5 114 0 83 5 117 0 86 5 114 0 87 5 114 0 88 5 121 0 90 5 114 0 92 5 114 0 94 5 114 0 95 5 114 0 96 5 114 0 98 5 114 0 99 5 125 0 101 5 114 0 104 5 114 0 105 5 114 0 106 5 114 0 107 5 114 0 108 5 114 0 109 5 114 0 111 5 114 0 112 5 114 0 114 5 114 0 117 5 114 0 118 5 129 0 120 5 114 0 121 5 114 0 125 5 114 0 126 5 114 0 127 5 133 0 128 5 114 0 129 5 114 0 135 5 114 0 136 5 114 0 137 5 114 0 138 5 114 0 139 5 114 0 140 5 114 0 141 5 114 0 142 5 114 0 143 5 114 0 144 5 114 0 146 5 114 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 114 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 249 0 154 11 249 0 155 11 249 0 156 11 249 0 157 11 249 0 158 11 249 0 159 11 249 0 160 11 249 0 161 11 249 0 162 11 249 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 249 0 244 11 249 0 245 11 249 0 246 11 249 0 250 11 249 0 251 11 249 0 252 11 249 0 253 11 249 0 254 11 249 0 255 11 249 1 0 11 249 1 2 11 249 1 4 11 249 1 6 11 249 1 7 3 33 1 9 11 249 1 10 11 249 1 11 11 249 1 12 11 249 1 13 11 249 1 14 11 249 1 15 11 249 1 19 11 249 1 60 11 249 1 65 11 249 1 66 11 249 1 73 11 249 1 74 11 249 1 75 11 249 1 76 11 249 1 77 11 249 1 78 11 249 1 79 11 249 1 80 11 249 1 81 11 249 1 82 11 249 1 89 11 249 1 90 11 249 1 91 11 249 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 118 0 6 5 118 0 7 5 118 0 8 5 118 0 9 5 118 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 118 0 19 5 89 0 20 5 93 0 21 5 118 0 23 5 118 0 26 5 118 0 27 5 118 0 28 5 118 0 29 5 97 0 33 5 118 0 34 5 118 0 35 5 118 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 118 0 48 5 118 0 50 5 118 0 59 5 118 0 61 5 118 0 62 5 118 0 64 5 118 0 65 5 118 0 68 5 118 0 69 5 118 0 70 5 118 0 71 5 113 0 72 5 118 0 73 5 118 0 74 5 118 0 76 5 118 0 77 5 118 0 78 5 118 0 79 5 118 0 80 5 118 0 81 5 118 0 82 5 118 0 83 5 117 0 86 5 118 0 87 5 118 0 88 5 121 0 90 5 118 0 92 5 118 0 94 5 118 0 95 5 118 0 96 5 118 0 98 5 118 0 99 5 125 0 101 5 118 0 104 5 118 0 105 5 118 0 106 5 118 0 107 5 118 0 108 5 118 0 109 5 118 0 111 5 118 0 112 5 118 0 114 5 118 0 117 5 118 0 118 5 129 0 120 5 118 0 121 5 118 0 125 5 118 0 126 5 118 0 127 5 133 0 128 5 118 0 129 5 118 0 135 5 118 0 136 5 118 0 137 5 118 0 138 5 118 0 139 5 118 0 140 5 118 0 141 5 118 0 142 5 118 0 143 5 118 0 144 5 118 0 146 5 118 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 118 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 11 253 0 154 11 253 0 155 11 253 0 156 11 253 0 157 11 253 0 158 11 253 0 159 11 253 0 160 11 253 0 161 11 253 0 162 11 253 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 11 253 0 244 11 253 0 245 11 253 0 246 11 253 0 250 11 253 0 251 11 253 0 252 11 253 0 253 11 253 0 254 11 253 0 255 11 253 1 0 11 253 1 2 11 253 1 4 11 253 1 6 11 253 1 7 3 33 1 9 11 253 1 10 11 253 1 11 11 253 1 12 11 253 1 13 11 253 1 14 11 253 1 15 11 253 1 19 11 253 1 60 11 253 1 65 11 253 1 66 11 253 1 73 11 253 1 74 11 253 1 75 11 253 1 76 11 253 1 77 11 253 1 78 11 253 1 79 11 253 1 80 11 253 1 81 11 253 1 82 11 253 1 89 11 253 1 90 11 253 1 91 11 253 1 92] 
#[1 5 122 0 5 5 122 0 6 12 1 0 7 5 122 0 8 5 122 0 9 5 122 0 10 5 122 0 11 5 122 0 19 5 122 0 23 5 122 0 26 5 122 0 27 5 122 0 28 5 122 0 29 5 122 0 34 5 122 0 35 5 122 0 37 5 122 0 48 5 122 0 50 5 122 0 59 5 122 0 61 5 122 0 62 5 122 0 64 5 122 0 65 5 122 0 68 5 122 0 69 5 122 0 70 5 122 0 71 5 122 0 73 5 122 0 74 5 122 0 76 5 122 0 77 5 122 0 78 5 122 0 79 5 122 0 80 5 122 0 81 5 122 0 82 5 122 0 83 5 122 0 87 5 122 0 88 5 122 0 92 5 122 0 94 5 122 0 95 5 122 0 96 5 122 0 98 5 122 0 99 5 122 0 104 5 122 0 105 5 122 0 106 5 122 0 107 5 122 0 108 5 122 0 109 5 122 0 111 5 122 0 112 5 122 0 114 5 122 0 117 5 122 0 118 5 122 0 121 5 122 0 125 5 122 0 126 5 122 0 127 5 122 0 129 5 122 0 135 5 122 0 136 5 122 0 137 5 122 0 138 5 122 0 139 5 122 0 140 5 122 0 141 5 122 0 142 5 122 0 143 5 122 0 144 5 122 0 146 5 122 0 147 5 122 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 126 0 6 5 126 0 7 5 126 0 8 5 126 0 9 5 126 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 126 0 19 5 89 0 20 5 93 0 21 5 126 0 23 5 126 0 26 5 126 0 27 5 126 0 28 5 126 0 29 5 97 0 33 5 126 0 34 5 126 0 35 5 126 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 126 0 48 5 126 0 50 5 126 0 59 5 126 0 61 5 126 0 62 5 126 0 64 5 126 0 65 5 126 0 68 5 126 0 69 5 126 0 70 5 126 0 71 5 113 0 72 5 126 0 73 5 126 0 74 5 126 0 76 5 126 0 77 5 126 0 78 5 126 0 79 5 126 0 80 5 126 0 81 5 126 0 82 5 126 0 83 5 117 0 86 5 126 0 87 5 126 0 88 5 121 0 90 5 126 0 92 5 126 0 94 5 126 0 95 5 126 0 96 5 126 0 98 5 126 0 99 5 125 0 101 5 126 0 104 5 126 0 105 5 126 0 106 5 126 0 107 5 126 0 108 5 126 0 109 5 126 0 111 5 126 0 112 5 126 0 114 5 126 0 117 5 126 0 118 5 129 0 120 5 126 0 121 5 126 0 125 5 126 0 126 5 126 0 127 5 133 0 128 5 126 0 129 5 126 0 135 5 126 0 136 5 126 0 137 5 126 0 138 5 126 0 139 5 126 0 140 5 126 0 141 5 126 0 142 5 126 0 143 5 126 0 144 5 126 0 146 5 126 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 126 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 5 0 154 12 5 0 155 12 5 0 156 12 5 0 157 12 5 0 158 12 5 0 159 12 5 0 160 12 5 0 161 12 5 0 162 12 5 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 12 5 0 244 12 5 0 245 12 5 0 246 12 5 0 250 12 5 0 251 12 5 0 252 12 5 0 253 12 5 0 254 12 5 0 255 12 5 1 0 12 5 1 2 12 5 1 4 12 5 1 6 12 5 1 7 3 33 1 9 12 5 1 10 12 5 1 11 12 5 1 12 12 5 1 13 12 5 1 14 12 5 1 15 12 5 1 19 12 5 1 60 12 5 1 65 12 5 1 66 12 5 1 73 12 5 1 74 12 5 1 75 12 5 1 76 12 5 1 77 12 5 1 78 12 5 1 79 12 5 1 80 12 5 1 81 12 5 1 82 12 5 1 89 12 5 1 90 12 5 1 91 12 5 1 92] 
#[1 2 89 0 5 12 9 0 46 12 13 0 209] 
#[1 2 89 0 5 12 17 0 46 12 21 0 209] 
#[0 12 25 0 71] 
#[1 0 6 0 70 0 6 0 146 12 29 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 33 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 37 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 41 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 45 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 49 0 151] 
#[1 0 6 0 70 0 6 0 146 12 53 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 57 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 61 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 65 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 12 69 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 12 73 0 151] 
#[0 12 77 0 121] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 81 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 85 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 89 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 93 0 151] 
#[1 1 193 0 5 0 6 0 8 0 6 0 10 0 6 0 11 1 205 0 22 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 97 0 151 12 101 0 192 12 101 0 193 1 217 0 194 12 101 0 197] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 105 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 109 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 113 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 117 0 151] 
#[1 0 6 0 70 0 6 0 146 12 121 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 125 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 129 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 133 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 137 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 141 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 145 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 12 149 0 151] 
#[1 0 6 0 70 0 6 0 146 12 153 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 157 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 12 161 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 12 165 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 12 169 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 12 173 0 151] 
#[1 2 89 0 5 12 177 0 209] 
#[0 5 130 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 12 181 0 209] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 134 0 29 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 134 0 61 5 134 0 70 5 113 0 72 5 134 0 78 5 117 0 86 5 134 0 87 5 134 0 88 5 121 0 90 5 134 0 94 5 125 0 101 5 134 0 104 5 134 0 112 5 134 0 118 5 129 0 120 5 133 0 128 5 134 0 142 5 134 0 144 5 134 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 12 185 0 214] 
#[0 5 138 0 6 0 9] 
#[0 5 142 0 6 0 9] 
#[1 1 193 0 5 2 230 0 6 2 230 0 9 1 197 0 11 7 101 0 19 1 205 0 22 12 189 0 192 12 189 0 193 1 217 0 194 12 189 0 197 7 109 0 213 12 193 0 214] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 12 197 0 214] 
#[0 5 146 0 6 0 9] 
#[0 5 150 0 6 0 9] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 12 201 0 214] 
#[0 5 154 0 6 0 9] 
#[0 5 158 0 6 0 9] 
#[0 5 162 0 6 0 9] 
#[0 12 205 0 77] 
#[1 12 209 0 70 0 145 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 12 213 0 154 12 213 0 155 12 213 0 156 12 213 0 157 12 213 0 158 12 213 0 159 12 213 0 160 12 213 0 161 12 213 0 162 12 213 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 12 213 0 244 12 213 0 245 12 213 0 246 12 213 0 250 12 213 0 251 12 213 0 252 12 213 0 253 12 213 0 254 12 213 0 255 12 213 1 0 12 213 1 2 12 213 1 4 12 213 1 6 12 213 1 7 3 33 1 9 12 213 1 10 12 213 1 11 12 213 1 12 12 213 1 13 12 213 1 14 12 213 1 15 12 213 1 19 12 213 1 60 12 213 1 65 12 213 1 66 12 213 1 73 12 213 1 74 12 213 1 75 12 213 1 76 12 213 1 77 12 213 1 78 12 213 1 79 12 213 1 80 12 213 1 81 12 213 1 82 12 213 1 89 12 213 1 90 12 213 1 91 12 213 1 92] 
#[0 5 166 0 22] 
#[0 5 170 0 22] 
#[0 5 174 0 22] 
#[1 5 178 0 22 5 178 0 30 5 178 0 31 5 178 0 32 5 178 0 40 12 217 0 42] 
#[0 5 182 0 22] 
#[0 5 186 0 22 0 30 0 31 0 32 0 40] 
#[1 12 221 0 22 12 225 0 30 12 225 0 31 12 225 0 32 12 225 0 40 12 225 1 18] 
#[0 12 229 0 22] 
#[0 5 190 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 9 149 0 134 12 233 0 165] 
#[0 5 194 0 10 0 131 0 134] 
#[1 5 37 0 1 4 3 0 3 5 45 0 5 5 198 0 6 5 49 0 7 5 53 0 8 5 198 0 9 5 57 0 10 5 61 0 11 5 65 0 12 5 198 0 13 4 7 0 14 5 198 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 198 0 22 5 198 0 23 5 198 0 26 5 198 0 27 5 198 0 28 5 198 0 29 5 97 0 33 5 198 0 34 5 198 0 35 5 198 0 37 4 11 0 44 5 105 0 45 5 109 0 47 5 198 0 48 5 198 0 50 5 198 0 59 5 198 0 61 5 198 0 62 5 198 0 64 5 198 0 65 5 198 0 68 5 198 0 69 5 198 0 70 5 198 0 71 5 113 0 72 5 198 0 73 5 198 0 74 5 198 0 76 5 198 0 77 5 198 0 78 5 198 0 79 5 198 0 80 5 198 0 81 5 198 0 82 5 198 0 83 5 117 0 86 5 198 0 87 5 198 0 88 5 121 0 90 5 198 0 92 5 198 0 94 5 198 0 95 5 198 0 96 5 198 0 98 5 198 0 99 5 125 0 101 5 198 0 104 5 198 0 105 5 198 0 106 5 198 0 107 5 198 0 108 5 198 0 109 5 198 0 111 5 198 0 112 5 198 0 114 5 198 0 115 5 198 0 117 5 198 0 118 5 198 0 119 4 15 0 120 5 198 0 121 5 198 0 125 5 198 0 126 5 198 0 127 5 133 0 128 5 198 0 129 5 198 0 135 5 198 0 136 5 198 0 137 5 198 0 138 5 198 0 139 5 198 0 140 5 198 0 141 5 198 0 142 5 198 0 143 5 198 0 144 5 198 0 146 5 198 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 198 1 93] 
#[0 5 202 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 5 206 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[0 12 237 0 106] 
#[1 12 241 0 70 0 145 0 146] 
#[1 12 245 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 12 249 0 151] 
#[0 12 253 0 106] 
#[1 13 1 0 70 0 145 0 146] 
#[0 13 5 0 106] 
#[1 13 9 0 70 0 145 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 13 13 0 154 13 13 0 155 13 13 0 156 13 13 0 157 13 13 0 158 13 13 0 159 13 13 0 160 13 13 0 161 13 13 0 162 13 13 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 13 13 0 244 13 13 0 245 13 13 0 246 13 13 0 250 13 13 0 251 13 13 0 252 13 13 0 253 13 13 0 254 13 13 0 255 13 13 1 0 13 13 1 2 13 13 1 4 13 13 1 6 13 13 1 7 3 33 1 9 13 13 1 10 13 13 1 11 13 13 1 12 13 13 1 13 13 13 1 14 13 13 1 15 13 13 1 19 13 13 1 60 13 13 1 65 13 13 1 66 13 13 1 73 13 13 1 74 13 13 1 75 13 13 1 76 13 13 1 77 13 13 1 78 13 13 1 79 13 13 1 80 13 13 1 81 13 13 1 82 13 13 1 89 13 13 1 90 13 13 1 91 13 13 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 13 17 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 21 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 0 6 0 92 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 13 25 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 29 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 210 0 68 5 210 0 69 5 210 0 70 5 210 0 92 5 210 0 95 5 210 0 125 13 33 0 126 5 210 0 137 5 210 0 146] 
#[0 13 37 0 92] 
#[1 13 41 0 92 1 137 0 137 0 145 0 146 13 45 0 156] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 13 49 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 53 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 4 19 0 68 5 214 0 69 5 214 0 70 5 113 0 72 5 117 0 86 5 121 0 90 5 214 0 92 5 214 0 95 5 125 0 101 5 129 0 120 5 214 0 125 5 133 0 128 5 214 0 137 5 214 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 5 218 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 13 61 0 55 9 13 0 146 13 65 1 51] 
#[0 5 222 0 146] 
#[1 7 49 0 146 13 69 0 181 13 73 1 54] 
#[1 13 77 0 125 1 137 0 137 0 145 0 146 13 81 0 156] 
#[1 0 6 0 125 0 6 0 137 0 6 0 146 13 85 0 151] 
#[1 13 89 0 70 1 137 0 137 0 145 0 146 13 93 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 13 97 0 151] 
#[0 5 226 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 5 230 0 68 5 230 0 69 5 230 0 70 5 230 0 92 5 230 0 95 13 101 0 110 5 230 0 125 5 230 0 137 5 230 0 146] 
#[1 5 234 0 68 5 234 0 69 5 234 0 70 5 234 0 92 5 234 0 95 13 105 0 110 5 234 0 125 4 23 0 137 4 27 0 146 13 109 0 156] 
#[0 5 238 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 5 242 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 13 113 0 117] 
#[1 1 137 0 137 13 117 0 156] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 246 0 6 5 246 0 7 5 246 0 8 5 246 0 9 5 246 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 246 0 19 5 89 0 20 5 93 0 21 5 246 0 23 5 246 0 26 5 246 0 27 5 246 0 28 5 246 0 29 5 97 0 33 5 246 0 34 5 246 0 35 5 246 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 246 0 48 5 246 0 50 5 246 0 59 5 246 0 61 5 246 0 62 5 246 0 64 5 246 0 65 5 246 0 68 5 246 0 69 5 246 0 70 5 246 0 71 5 113 0 72 5 246 0 73 5 246 0 74 5 246 0 76 5 246 0 77 5 246 0 78 5 246 0 79 5 246 0 80 5 246 0 81 5 246 0 82 5 246 0 83 5 117 0 86 5 246 0 87 5 246 0 88 5 121 0 90 5 246 0 92 5 246 0 94 5 246 0 95 5 246 0 96 5 246 0 98 5 246 0 99 5 125 0 101 5 246 0 104 5 246 0 105 5 246 0 106 5 246 0 107 5 246 0 108 5 246 0 109 5 246 0 111 5 246 0 112 5 246 0 114 5 246 0 117 5 246 0 118 5 129 0 120 5 246 0 121 5 246 0 125 5 246 0 126 5 246 0 127 5 133 0 128 5 246 0 129 5 246 0 135 5 246 0 136 5 246 0 137 5 246 0 138 5 246 0 139 5 246 0 140 5 246 0 141 5 246 0 142 5 246 0 143 5 246 0 144 5 246 0 146 5 246 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 246 1 93] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 250 0 6 5 250 0 7 5 250 0 8 5 250 0 9 5 250 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 250 0 19 5 89 0 20 5 93 0 21 5 250 0 23 5 250 0 26 5 250 0 27 5 250 0 28 5 250 0 29 5 97 0 33 5 250 0 34 5 250 0 35 5 250 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 250 0 48 5 250 0 50 5 250 0 59 5 250 0 61 5 250 0 62 5 250 0 64 5 250 0 65 5 250 0 68 5 250 0 69 5 250 0 70 5 250 0 71 5 113 0 72 5 250 0 73 5 250 0 74 5 250 0 76 5 250 0 77 5 250 0 78 5 250 0 79 5 250 0 80 5 250 0 81 5 250 0 82 5 250 0 83 5 117 0 86 5 250 0 87 5 250 0 88 5 121 0 90 5 250 0 92 5 250 0 94 5 250 0 95 5 250 0 96 5 250 0 98 5 250 0 99 5 125 0 101 5 250 0 104 5 250 0 105 5 250 0 106 5 250 0 107 5 250 0 108 5 250 0 109 5 250 0 111 5 250 0 112 5 250 0 114 5 250 0 117 5 250 0 118 5 129 0 120 5 250 0 121 5 250 0 125 5 250 0 126 5 250 0 127 5 133 0 128 5 250 0 129 5 250 0 135 5 250 0 136 5 250 0 137 5 250 0 138 5 250 0 139 5 250 0 140 5 250 0 141 5 250 0 142 5 250 0 143 5 250 0 144 5 250 0 146 5 250 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 250 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 13 121 0 154 13 121 0 155 13 121 0 156 13 121 0 157 13 121 0 158 13 121 0 159 13 121 0 160 13 121 0 161 13 121 0 162 13 121 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 13 121 0 244 13 121 0 245 13 121 0 246 13 121 0 250 13 121 0 251 13 121 0 252 13 121 0 253 13 121 0 254 13 121 0 255 13 121 1 0 13 121 1 2 13 121 1 4 13 121 1 6 13 121 1 7 3 33 1 9 13 121 1 10 13 121 1 11 13 121 1 12 13 121 1 13 13 121 1 14 13 121 1 15 13 121 1 19 13 121 1 60 13 121 1 65 13 121 1 66 13 121 1 73 13 121 1 74 13 121 1 75 13 121 1 76 13 121 1 77 13 121 1 78 13 121 1 79 13 121 1 80 13 121 1 81 13 121 1 82 13 121 1 89 13 121 1 90 13 121 1 91 13 121 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 254 0 6 5 254 0 7 5 254 0 8 5 254 0 9 5 254 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 254 0 19 5 89 0 20 5 93 0 21 5 254 0 23 5 254 0 26 5 254 0 27 5 254 0 28 5 254 0 29 5 97 0 33 5 254 0 34 5 254 0 35 5 254 0 37 5 101 0 44 5 105 0 45 5 109 0 47 5 254 0 48 5 254 0 50 5 254 0 59 5 254 0 61 5 254 0 62 5 254 0 64 5 254 0 65 5 254 0 68 5 254 0 69 5 254 0 70 5 254 0 71 5 113 0 72 5 254 0 73 5 254 0 74 5 254 0 76 5 254 0 77 5 254 0 78 5 254 0 79 5 254 0 80 5 254 0 81 5 254 0 82 5 254 0 83 5 117 0 86 5 254 0 87 5 254 0 88 5 121 0 90 5 254 0 92 5 254 0 94 5 254 0 95 5 254 0 96 5 254 0 98 5 254 0 99 5 125 0 101 5 254 0 104 5 254 0 105 5 254 0 106 5 254 0 107 5 254 0 108 5 254 0 109 5 254 0 111 5 254 0 112 5 254 0 114 5 254 0 117 5 254 0 118 5 129 0 120 5 254 0 121 5 254 0 125 5 254 0 126 5 254 0 127 5 133 0 128 5 254 0 129 5 254 0 135 5 254 0 136 5 254 0 137 5 254 0 138 5 254 0 139 5 254 0 140 5 254 0 141 5 254 0 142 5 254 0 143 5 254 0 144 5 254 0 146 5 254 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 5 254 1 93] 
#[1 2 177 0 140 13 125 0 161] 
#[1 1 193 0 5 1 205 0 22 13 129 0 192 13 129 0 193 1 217 0 194 13 129 0 197] 
#[1 2 177 0 140 13 133 0 161] 
#[0 6 2 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 6 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 13 137 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 141 0 151] 
#[1 13 145 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 149 0 151] 
#[1 0 6 0 70 0 6 0 146 13 153 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 157 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 13 161 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 165 0 151] 
#[1 13 169 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 173 0 151] 
#[0 13 177 0 117] 
#[1 13 181 0 70 0 145 0 146] 
#[0 6 10 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 68 0 69 0 70 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 92 0 94 0 95 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 125 0 137 0 142 0 144 0 146 1 93] 
#[1 0 6 0 70 0 6 0 146 13 185 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 189 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 13 193 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 197 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 201 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 13 205 0 151] 
#[1 0 6 0 70 0 6 0 146 13 209 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 213 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 6 0 70 0 6 0 146 13 217 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 221 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 13 225 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 229 0 151] 
#[1 13 233 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 237 0 151] 
#[1 13 241 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 13 245 0 151] 
#[1 0 6 0 70 0 6 0 146 13 249 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 13 253 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 14 1 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 14 5 0 151] 
#[1 14 9 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 14 13 0 151] 
#[0 14 17 0 117] 
#[1 14 21 0 70 0 145 0 146] 
#[1 1 193 0 5 1 205 0 22 14 25 0 192 14 25 0 193 1 217 0 194 14 25 0 197] 
#[0 6 14 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 18 0 6 0 9] 
#[1 2 230 0 6 2 230 0 9 7 101 0 19 7 109 0 213 14 29 0 214] 
#[0 6 22 0 6 0 9] 
#[0 6 26 0 6 0 9] 
#[0 6 30 0 6 0 9] 
#[0 6 34 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 33 0 77] 
#[1 5 37 0 1 4 31 0 3 14 37 0 5 6 38 0 6 5 49 0 7 14 41 0 8 6 38 0 9 14 45 0 10 14 49 0 11 5 65 0 12 6 38 0 13 4 35 0 14 6 38 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 38 0 22 4 39 0 23 4 43 0 26 6 38 0 27 6 38 0 28 4 47 0 29 5 97 0 33 4 51 0 34 4 55 0 35 4 59 0 37 4 63 0 44 5 105 0 45 5 109 0 47 6 38 0 48 6 38 0 50 6 38 0 59 4 67 0 61 6 38 0 62 6 38 0 64 6 38 0 65 6 38 0 68 6 38 0 69 6 38 0 70 6 38 0 71 5 113 0 72 6 38 0 73 4 71 0 74 6 38 0 76 6 38 0 77 4 75 0 78 6 38 0 79 4 79 0 80 4 83 0 81 6 38 0 82 6 38 0 83 5 117 0 86 4 87 0 87 4 91 0 88 5 121 0 90 6 38 0 92 4 95 0 94 6 38 0 95 4 99 0 96 6 38 0 98 6 38 0 99 5 125 0 101 4 103 0 104 6 38 0 105 6 38 0 106 6 38 0 107 6 38 0 108 6 38 0 109 6 38 0 111 4 107 0 112 6 38 0 114 6 38 0 115 6 38 0 117 4 111 0 118 6 38 0 119 4 115 0 120 6 38 0 121 6 38 0 125 6 38 0 126 6 38 0 127 5 133 0 128 4 119 0 129 4 123 0 135 4 127 0 136 4 131 0 137 4 135 0 138 4 139 0 139 4 143 0 140 4 147 0 141 4 151 0 142 4 155 0 143 4 159 0 144 6 38 0 146 6 38 0 147 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 5 137 1 1 4 209 1 2 5 141 1 3 4 209 1 4 5 145 1 5 4 209 1 6 4 209 1 7 5 149 1 8 3 33 1 9 14 53 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 38 1 93] 
#[0 6 42 0 22 0 30 0 31 0 32 0 40] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 57 0 154 14 57 0 155 14 57 0 156 14 57 0 157 14 57 0 158 14 57 0 159 14 57 0 160 14 57 0 161 14 57 0 162 14 57 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 57 0 244 14 57 0 245 14 57 0 246 14 57 0 250 14 57 0 251 14 57 0 252 14 57 0 253 14 57 0 254 14 57 0 255 14 57 1 0 14 57 1 2 14 57 1 4 14 57 1 6 14 57 1 7 3 33 1 9 14 57 1 10 14 57 1 11 14 57 1 12 14 57 1 13 14 57 1 14 14 57 1 15 14 57 1 19 14 57 1 60 14 57 1 65 14 57 1 66 14 57 1 73 14 57 1 74 14 57 1 75 14 57 1 76 14 57 1 77 14 57 1 78 14 57 1 79 14 57 1 80 14 57 1 81 14 57 1 82 14 57 1 89 14 57 1 90 14 57 1 91 14 57 1 92] 
#[0 14 61 0 22] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 65 0 154 14 65 0 155 14 65 0 156 14 65 0 157 14 65 0 158 14 65 0 159 14 65 0 160 14 65 0 161 14 65 0 162 14 65 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 65 0 244 14 65 0 245 14 65 0 246 14 65 0 250 14 65 0 251 14 65 0 252 14 65 0 253 14 65 0 254 14 65 0 255 14 65 1 0 14 65 1 2 14 65 1 4 14 65 1 6 14 65 1 7 3 33 1 9 14 65 1 10 14 65 1 11 14 65 1 12 14 65 1 13 14 65 1 14 14 65 1 15 14 65 1 19 14 65 1 60 14 65 1 65 14 65 1 66 14 65 1 73 14 65 1 74 14 65 1 75 14 65 1 76 14 65 1 77 14 65 1 78 14 65 1 79 14 65 1 80 14 65 1 81 14 65 1 82 14 65 1 89 14 65 1 90 14 65 1 91 14 65 1 92] 
#[1 14 69 0 10 11 105 0 134] 
#[0 6 46 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 73 0 106] 
#[0 14 77 0 106] 
#[1 14 81 0 70 0 145 0 146] 
#[0 6 50 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 85 0 106] 
#[0 6 54 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 14 89 0 106] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 101 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 5 129 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 14 93 0 151 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 97 0 154 14 97 0 155 14 97 0 156 14 97 0 157 14 97 0 158 14 97 0 159 14 97 0 160 14 97 0 161 14 97 0 162 14 97 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 97 0 244 14 97 0 245 14 97 0 246 14 97 0 250 14 97 0 251 14 97 0 252 14 97 0 253 14 97 0 254 14 97 0 255 14 97 1 0 14 97 1 2 14 97 1 4 14 97 1 6 14 97 1 7 3 33 1 9 14 97 1 10 14 97 1 11 14 97 1 12 14 97 1 13 14 97 1 14 14 97 1 15 14 97 1 19 14 97 1 60 14 97 1 65 14 97 1 66 14 97 1 73 14 97 1 74 14 97 1 75 14 97 1 76 14 97 1 77 14 97 1 78 14 97 1 79 14 97 1 80 14 97 1 81 14 97 1 82 14 97 1 89 14 97 1 90 14 97 1 91 14 97 1 92] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 14 101 0 151] 
#[1 14 105 0 92 1 137 0 137 0 145 0 146 14 109 0 156] 
#[1 0 6 0 92 0 6 0 137 0 6 0 146 14 113 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 117 0 244 4 209 0 245 4 209 0 246 4 209 0 250 14 117 0 251 14 117 0 252 14 117 0 253 14 117 0 254 14 117 0 255 14 117 1 0 14 117 1 2 14 117 1 4 14 117 1 6 14 117 1 7 3 33 1 9 14 117 1 10 14 117 1 11 14 117 1 12 14 117 1 13 14 117 1 14 14 117 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 14 117 1 79 14 117 1 80 14 117 1 81 14 117 1 82 14 117 1 89 14 117 1 90 14 117 1 91 14 117 1 92] 
#[1 6 58 0 68 6 58 0 69 6 58 0 70 6 58 0 92 6 58 0 95 6 58 0 125 14 121 0 126 6 58 0 137 6 58 0 146] 
#[1 6 62 0 68 6 62 0 69 6 62 0 70 6 62 0 92 6 62 0 95 14 125 0 122 6 62 0 125 14 129 0 126 6 62 0 137 6 62 0 146] 
#[0 14 133 0 92] 
#[1 14 137 0 68 14 141 0 69 14 145 0 70 1 137 0 137 0 145 0 146 14 149 0 156 14 153 1 39 14 157 1 40 14 153 1 42 14 153 1 43 14 153 1 44] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 137 0 6 0 146 14 173 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 177 0 154 14 177 0 155 14 177 0 156 14 177 0 157 14 177 0 158 14 177 0 159 14 177 0 160 14 177 0 161 14 177 0 162 14 177 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 177 0 244 14 177 0 245 14 177 0 246 14 177 0 250 14 177 0 251 14 177 0 252 14 177 0 253 14 177 0 254 14 177 0 255 14 177 1 0 14 177 1 2 14 177 1 4 14 177 1 6 14 177 1 7 3 33 1 9 14 177 1 10 14 177 1 11 14 177 1 12 14 177 1 13 14 177 1 14 14 177 1 15 14 177 1 19 14 177 1 60 14 177 1 65 14 177 1 66 14 177 1 73 14 177 1 74 14 177 1 75 14 177 1 76 14 177 1 77 14 177 1 78 14 177 1 79 14 177 1 80 14 177 1 81 14 177 1 82 14 177 1 89 14 177 1 90 14 177 1 91 14 177 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 181 0 154 14 181 0 155 14 181 0 156 14 181 0 157 14 181 0 158 14 181 0 159 14 181 0 160 14 181 0 161 14 181 0 162 14 181 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 181 0 244 14 181 0 245 14 181 0 246 14 181 0 250 14 181 0 251 14 181 0 252 14 181 0 253 14 181 0 254 14 181 0 255 14 181 1 0 14 181 1 2 14 181 1 4 14 181 1 6 14 181 1 7 3 33 1 9 14 181 1 10 14 181 1 11 14 181 1 12 14 181 1 13 14 181 1 14 14 181 1 15 14 181 1 19 14 181 1 60 14 181 1 65 14 181 1 66 14 181 1 73 14 181 1 74 14 181 1 75 14 181 1 76 14 181 1 77 14 181 1 78 14 181 1 79 14 181 1 80 14 181 1 81 14 181 1 82 14 181 1 89 14 181 1 90 14 181 1 91 14 181 1 92] 
#[0 6 66 0 146] 
#[1 14 185 0 55 14 189 0 70 1 137 0 137 9 13 0 146 14 193 0 156 13 65 1 51 14 197 1 52] 
#[0 6 70 0 146] 
#[0 6 74 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 14 201 0 125] 
#[1 14 205 0 125 1 137 0 137 0 145 0 146 14 209 0 156] 
#[0 14 213 0 127] 
#[0 14 217 0 70] 
#[1 14 221 0 70 1 137 0 137 0 145 0 146 14 225 0 156] 
#[0 6 78 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 6 82 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 6 86 0 68 6 86 0 69 6 86 0 70 6 86 0 92 6 86 0 95 14 229 0 110 6 86 0 125 6 86 0 137 6 86 0 146] 
#[0 6 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 94 0 11 0 29 0 61 0 70 0 78 0 87 0 88 0 94 0 104 0 112 0 118 0 142 0 144 0 146] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 6 98 0 6 6 98 0 7 6 98 0 8 6 98 0 9 6 98 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 6 98 0 19 5 89 0 20 5 93 0 21 6 98 0 23 6 98 0 26 6 98 0 27 6 98 0 28 6 98 0 29 5 97 0 33 6 98 0 34 6 98 0 35 6 98 0 37 5 101 0 44 5 105 0 45 5 109 0 47 6 98 0 48 6 98 0 50 6 98 0 59 6 98 0 61 6 98 0 62 6 98 0 64 6 98 0 65 6 98 0 68 6 98 0 69 6 98 0 70 6 98 0 71 5 113 0 72 6 98 0 73 6 98 0 74 6 98 0 76 6 98 0 77 6 98 0 78 6 98 0 79 6 98 0 80 6 98 0 81 6 98 0 82 6 98 0 83 5 117 0 86 6 98 0 87 6 98 0 88 5 121 0 90 6 98 0 92 6 98 0 94 6 98 0 95 6 98 0 96 6 98 0 98 6 98 0 99 5 125 0 101 6 98 0 104 6 98 0 105 6 98 0 106 6 98 0 107 6 98 0 108 6 98 0 109 6 98 0 111 6 98 0 112 6 98 0 114 6 98 0 117 6 98 0 118 5 129 0 120 6 98 0 121 6 98 0 125 6 98 0 126 6 98 0 127 5 133 0 128 6 98 0 129 6 98 0 135 6 98 0 136 6 98 0 137 6 98 0 138 6 98 0 139 6 98 0 140 6 98 0 141 6 98 0 142 6 98 0 143 6 98 0 144 6 98 0 146 6 98 0 147 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8 6 98 1 93] 
#[1 2 89 0 5 14 233 0 209] 
#[0 6 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 89 0 5 14 237 0 209] 
#[0 14 241 0 77] 
#[1 14 245 0 70 0 145 0 146] 
#[0 14 249 0 106] 
#[1 14 253 0 70 0 145 0 146] 
#[1 15 1 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 5 0 151] 
#[0 15 9 0 106] 
#[1 15 13 0 70 0 145 0 146] 
#[0 15 17 0 106] 
#[1 15 21 0 70 0 145 0 146] 
#[0 6 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 25 0 117] 
#[1 15 29 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 33 0 151] 
#[1 15 37 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 41 0 151] 
#[1 0 6 0 70 0 6 0 146 15 45 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 0 145 0 146 5 241 0 147 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 15 49 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 15 53 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 57 0 151] 
#[1 15 61 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 65 0 151] 
#[0 15 69 0 117] 
#[1 15 73 0 70 0 145 0 146] 
#[0 15 77 0 77] 
#[1 15 81 0 70 0 145 0 146] 
#[0 15 85 0 106] 
#[1 15 89 0 70 0 145 0 146] 
#[1 15 93 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 15 97 0 151] 
#[0 15 101 0 106] 
#[1 15 105 0 70 0 145 0 146] 
#[0 15 109 0 106] 
#[1 15 113 0 70 0 145 0 146] 
#[0 6 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 117 0 117] 
#[0 6 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 118 0 6 0 9] 
#[0 6 122 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 1 174 0 6 2 105 0 8 1 174 0 9 2 109 0 10 0 17 0 11 1 174 0 15 4 163 0 23 4 167 0 26 4 171 0 29 4 175 0 34 4 179 0 35 4 183 0 37 1 174 0 52 1 174 0 54 4 187 0 61 4 191 0 74 4 195 0 78 4 199 0 80 4 203 0 81 4 207 0 87 4 211 0 88 4 215 0 94 4 219 0 96 1 174 0 102 4 223 0 104 4 227 0 112 4 231 0 118 4 235 0 129 4 239 0 135 4 243 0 136 4 247 0 137 4 251 0 138 4 255 0 139 5 3 0 140 5 7 0 141 5 11 0 142 5 15 0 143 5 19 0 144 4 193 0 154 4 193 0 155 4 193 0 156 4 193 0 157 4 193 0 158 4 193 0 159 4 193 0 160 4 193 0 161 4 193 0 162 4 193 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 193 0 244 4 193 0 245 4 193 0 246 4 193 0 250 4 193 0 251 4 193 0 252 4 193 0 253 4 193 0 254 4 193 0 255 4 193 1 0 4 193 1 2 4 193 1 4 4 193 1 6 4 193 1 7 3 33 1 9 4 193 1 10 4 193 1 11 4 193 1 12 4 193 1 13 4 193 1 14 4 193 1 15 4 193 1 19 4 193 1 60 4 193 1 65 4 193 1 66 4 193 1 73 4 193 1 74 4 193 1 75 4 193 1 76 4 193 1 77 4 193 1 78 4 193 1 79 4 193 1 80 4 193 1 81 4 193 1 82 7 201 1 84 5 33 1 86 4 193 1 89 4 193 1 90 4 193 1 91 4 193 1 92] 
#[1 2 101 0 5 3 66 0 8 3 66 0 10 0 17 0 11 5 23 0 23 5 27 0 26 5 31 0 29 5 35 0 34 5 39 0 35 5 43 0 37 5 47 0 61 5 51 0 74 5 55 0 78 5 59 0 80 5 63 0 81 5 67 0 87 5 71 0 88 5 75 0 94 5 79 0 96 5 83 0 104 5 87 0 112 5 91 0 118 5 95 0 129 5 99 0 135 5 103 0 136 5 107 0 137 5 111 0 138 5 115 0 139 5 119 0 140 5 123 0 141 5 127 0 142 5 131 0 143 5 135 0 144 4 197 0 154 4 197 0 155 4 197 0 156 4 197 0 157 4 197 0 158 4 197 0 159 4 197 0 160 4 197 0 161 4 197 0 162 4 197 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 197 0 244 4 197 0 245 4 197 0 246 4 197 0 250 4 197 0 251 4 197 0 252 4 197 0 253 4 197 0 254 4 197 0 255 4 197 1 0 4 197 1 2 4 197 1 4 4 197 1 6 4 197 1 7 3 33 1 9 4 197 1 10 4 197 1 11 4 197 1 12 4 197 1 13 4 197 1 14 4 197 1 15 4 197 1 19 4 197 1 60 4 197 1 65 4 197 1 66 4 197 1 73 4 197 1 74 4 197 1 75 4 197 1 76 4 197 1 77 4 197 1 78 4 197 1 79 4 197 1 80 4 197 1 81 4 197 1 82 4 197 1 89 4 197 1 90 4 197 1 91 4 197 1 92] 
#[1 2 101 0 5 3 70 0 8 3 70 0 10 0 17 0 11 5 139 0 23 5 143 0 26 5 147 0 29 5 151 0 34 5 155 0 35 5 159 0 37 5 163 0 61 5 167 0 74 5 171 0 78 5 175 0 80 5 179 0 81 5 183 0 87 5 187 0 88 5 191 0 94 5 195 0 96 5 199 0 104 5 203 0 112 5 207 0 118 5 211 0 129 5 215 0 135 5 219 0 136 5 223 0 137 5 227 0 138 5 231 0 139 5 235 0 140 5 239 0 141 5 243 0 142 5 247 0 143 5 251 0 144 4 201 0 154 4 201 0 155 4 201 0 156 4 201 0 157 4 201 0 158 4 201 0 159 4 201 0 160 4 201 0 161 4 201 0 162 4 201 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 201 0 244 4 201 0 245 4 201 0 246 4 201 0 250 4 201 0 251 4 201 0 252 4 201 0 253 4 201 0 254 4 201 0 255 4 201 1 0 4 201 1 2 4 201 1 4 4 201 1 6 4 201 1 7 3 33 1 9 4 201 1 10 4 201 1 11 4 201 1 12 4 201 1 13 4 201 1 14 4 201 1 15 4 201 1 19 4 201 1 60 4 201 1 65 4 201 1 66 4 201 1 73 4 201 1 74 4 201 1 75 4 201 1 76 4 201 1 77 4 201 1 78 4 201 1 79 4 201 1 80 4 201 1 81 4 201 1 82 4 201 1 89 4 201 1 90 4 201 1 91 4 201 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 0 153 0 78 0 153 0 87 0 153 0 88 0 153 0 94 0 153 0 104 0 153 0 112 0 153 0 118 15 121 0 142 0 141 0 144 15 121 0 166 0 153 0 167 15 121 0 168 15 121 0 169 15 121 0 170 15 121 0 171] 
#[1 5 255 0 1 5 255 0 3 5 255 0 5 6 126 0 6 5 255 0 7 5 255 0 8 6 126 0 9 5 255 0 10 5 255 0 11 5 255 0 12 6 126 0 13 5 255 0 14 6 126 0 15 5 255 0 16 5 255 0 17 5 255 0 18 5 255 0 19 5 255 0 20 5 255 0 21 6 126 0 22 6 126 0 23 6 126 0 26 6 126 0 27 6 126 0 28 6 126 0 29 5 255 0 33 6 126 0 34 6 126 0 35 6 126 0 37 5 255 0 44 5 255 0 45 5 255 0 47 6 126 0 48 6 126 0 50 6 126 0 59 6 126 0 61 6 126 0 62 6 126 0 64 6 126 0 65 6 126 0 68 6 126 0 69 6 126 0 70 6 126 0 71 5 255 0 72 6 126 0 73 6 126 0 74 6 126 0 76 6 126 0 77 6 126 0 78 6 126 0 79 6 126 0 80 6 126 0 81 6 126 0 82 6 126 0 83 5 255 0 86 6 126 0 87 6 126 0 88 5 255 0 90 6 126 0 92 6 126 0 94 6 126 0 95 6 126 0 96 6 126 0 98 6 126 0 99 5 255 0 101 6 126 0 104 6 126 0 105 6 126 0 106 6 126 0 107 6 126 0 108 6 126 0 109 6 126 0 111 6 126 0 112 6 126 0 114 6 126 0 115 6 126 0 117 6 126 0 118 6 126 0 119 5 255 0 120 6 126 0 121 6 126 0 125 6 126 0 126 6 126 0 127 5 255 0 128 6 126 0 129 6 126 0 135 6 126 0 136 6 126 0 137 6 126 0 138 6 126 0 139 6 126 0 140 6 126 0 141 6 126 0 142 6 126 0 143 6 126 0 144 6 126 0 146 6 126 0 147 6 126 1 93] 
#[1 5 37 0 1 6 3 0 3 14 37 0 5 6 130 0 6 5 49 0 7 14 41 0 8 6 130 0 9 14 45 0 10 14 49 0 11 5 65 0 12 6 130 0 13 6 7 0 14 6 130 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 130 0 22 6 11 0 23 6 15 0 26 6 130 0 27 6 130 0 28 6 19 0 29 5 97 0 33 6 23 0 34 6 27 0 35 6 31 0 37 6 35 0 44 5 105 0 45 5 109 0 47 6 130 0 48 6 130 0 50 6 130 0 59 6 39 0 61 6 130 0 62 6 130 0 64 6 130 0 65 6 130 0 68 6 130 0 69 6 130 0 70 6 130 0 71 5 113 0 72 6 130 0 73 6 43 0 74 6 130 0 76 6 130 0 77 6 47 0 78 6 130 0 79 6 51 0 80 6 55 0 81 6 130 0 82 6 130 0 83 5 117 0 86 6 59 0 87 6 63 0 88 5 121 0 90 6 130 0 92 6 67 0 94 6 130 0 95 6 71 0 96 6 130 0 98 6 130 0 99 5 125 0 101 6 75 0 104 6 130 0 105 6 130 0 106 6 130 0 107 6 130 0 108 6 130 0 109 6 130 0 111 6 79 0 112 6 130 0 114 6 130 0 115 6 130 0 117 6 83 0 118 6 130 0 119 6 87 0 120 6 130 0 121 6 130 0 125 6 130 0 126 6 130 0 127 5 133 0 128 6 91 0 129 6 95 0 135 6 99 0 136 6 103 0 137 6 107 0 138 6 111 0 139 6 115 0 140 6 119 0 141 6 123 0 142 6 127 0 143 6 131 0 144 6 130 0 146 6 130 0 147 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 5 137 1 1 4 209 1 2 5 141 1 3 4 209 1 4 5 145 1 5 4 209 1 6 4 209 1 7 5 149 1 8 3 33 1 9 15 125 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 130 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 15 129 0 154 15 129 0 155 15 129 0 156 15 129 0 157 15 129 0 158 15 129 0 159 15 129 0 160 15 129 0 161 15 129 0 162 15 129 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 15 129 0 244 15 129 0 245 15 129 0 246 15 129 0 250 15 129 0 251 15 129 0 252 15 129 0 253 15 129 0 254 15 129 0 255 15 129 1 0 15 129 1 2 15 129 1 4 15 129 1 6 15 129 1 7 3 33 1 9 15 129 1 10 15 129 1 11 15 129 1 12 15 129 1 13 15 129 1 14 15 129 1 15 15 129 1 19 15 129 1 60 15 129 1 65 15 129 1 66 15 129 1 73 15 129 1 74 15 129 1 75 15 129 1 76 15 129 1 77 15 129 1 78 15 129 1 79 15 129 1 80 15 129 1 81 15 129 1 82 15 129 1 89 15 129 1 90 15 129 1 91 15 129 1 92] 
#[1 5 37 0 1 6 135 0 3 14 37 0 5 6 134 0 6 5 49 0 7 14 41 0 8 6 134 0 9 14 45 0 10 14 49 0 11 5 65 0 12 6 134 0 13 6 139 0 14 6 134 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 134 0 22 6 143 0 23 6 147 0 26 6 134 0 27 6 134 0 28 6 151 0 29 5 97 0 33 6 155 0 34 6 159 0 35 6 163 0 37 6 167 0 44 5 105 0 45 5 109 0 47 6 134 0 48 6 134 0 50 6 134 0 59 6 171 0 61 6 134 0 62 6 134 0 64 6 134 0 65 6 134 0 68 6 134 0 69 6 134 0 70 6 134 0 71 5 113 0 72 6 134 0 73 6 175 0 74 6 134 0 76 6 134 0 77 6 179 0 78 6 134 0 79 6 183 0 80 6 187 0 81 6 134 0 82 6 134 0 83 5 117 0 86 6 191 0 87 6 195 0 88 5 121 0 90 6 134 0 92 6 199 0 94 6 134 0 95 6 203 0 96 6 134 0 98 6 134 0 99 5 125 0 101 6 207 0 104 6 134 0 105 6 134 0 106 6 134 0 107 6 134 0 108 6 134 0 109 6 134 0 111 6 211 0 112 6 134 0 114 6 134 0 115 6 134 0 117 6 215 0 118 6 134 0 119 6 219 0 120 6 134 0 121 6 134 0 125 6 134 0 126 6 134 0 127 5 133 0 128 6 223 0 129 6 227 0 135 6 231 0 136 6 235 0 137 6 239 0 138 6 243 0 139 6 247 0 140 6 251 0 141 6 255 0 142 7 3 0 143 7 7 0 144 6 134 0 146 6 134 0 147 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 5 137 1 1 4 209 1 2 5 141 1 3 4 209 1 4 5 145 1 5 4 209 1 6 4 209 1 7 5 149 1 8 3 33 1 9 15 133 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 134 1 93] 
#[1 9 149 0 134 15 137 0 165] 
#[0 6 138 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 142 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 15 141 0 106] 
#[0 6 146 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 150 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 15 145 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 15 149 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 1 127 0 3 7 11 0 5 5 49 0 7 7 15 0 8 7 19 0 10 7 23 0 11 5 65 0 12 1 131 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 1 135 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 15 153 0 115 0 6 0 118 1 139 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 15 157 0 151 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 15 161 0 92 1 137 0 137 0 145 0 146 15 165 0 156] 
#[0 6 154 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 15 169 0 92] 
#[1 15 173 0 92 1 137 0 137 0 145 0 146 15 177 0 156] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 6 158 0 68 6 158 0 69 6 158 0 70 1 182 0 72 1 182 0 86 1 182 0 90 6 158 0 92 6 158 0 95 1 182 0 101 1 182 0 120 6 158 0 125 1 182 0 128 6 158 0 137 6 158 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 15 181 0 244 4 209 0 245 4 209 0 246 4 209 0 250 15 181 0 251 15 181 0 252 15 181 0 253 15 181 0 254 15 181 0 255 15 181 1 0 15 181 1 2 15 181 1 4 15 181 1 6 15 181 1 7 3 33 1 9 15 181 1 10 15 181 1 11 15 181 1 12 15 181 1 13 15 181 1 14 15 181 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 181 1 79 15 181 1 80 15 181 1 81 15 181 1 82 15 181 1 89 15 181 1 90 15 181 1 91 15 181 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 15 185 0 244 4 209 0 245 4 209 0 246 4 209 0 250 15 185 0 251 15 185 0 252 15 185 0 253 15 185 0 254 15 185 0 255 15 185 1 0 15 185 1 2 15 185 1 4 15 185 1 6 15 185 1 7 3 33 1 9 15 185 1 10 15 185 1 11 15 185 1 12 15 185 1 13 15 185 1 14 15 185 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 185 1 79 15 185 1 80 15 185 1 81 15 185 1 82 15 185 1 89 15 185 1 90 15 185 1 91 15 185 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 15 189 0 244 4 209 0 245 4 209 0 246 4 209 0 250 15 189 0 251 15 189 0 252 15 189 0 253 15 189 0 254 15 189 0 255 15 189 1 0 15 189 1 2 15 189 1 4 15 189 1 6 15 189 1 7 3 33 1 9 15 189 1 10 15 189 1 11 15 189 1 12 15 189 1 13 15 189 1 14 15 189 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 15 189 1 79 15 189 1 80 15 189 1 81 15 189 1 82 15 189 1 89 15 189 1 90 15 189 1 91 15 189 1 92] 
#[1 6 162 0 68 6 162 0 69 6 162 0 70 6 162 0 92 6 162 0 95 15 193 0 122 6 162 0 125 15 197 0 126 6 162 0 137 6 162 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 15 201 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 15 205 0 154 15 205 0 155 15 205 0 156 15 205 0 157 15 205 0 158 15 205 0 159 15 205 0 160 15 205 0 161 15 205 0 162 15 205 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 15 205 0 244 15 205 0 245 15 205 0 246 15 205 0 250 15 205 0 251 15 205 0 252 15 205 0 253 15 205 0 254 15 205 0 255 15 205 1 0 15 205 1 2 15 205 1 4 15 205 1 6 15 205 1 7 3 33 1 9 15 205 1 10 15 205 1 11 15 205 1 12 15 205 1 13 15 205 1 14 15 205 1 15 15 205 1 19 15 205 1 60 15 205 1 65 15 205 1 66 15 205 1 73 15 205 1 74 15 205 1 75 15 205 1 76 15 205 1 77 15 205 1 78 15 205 1 79 15 205 1 80 15 205 1 81 15 205 1 82 15 205 1 89 15 205 1 90 15 205 1 91 15 205 1 92] 
#[0 15 209 0 82] 
#[1 15 213 0 68 15 217 0 70] 
#[0 6 166 0 68 0 69 0 70 0 137] 
#[1 15 221 0 68 14 141 0 69 15 225 0 70 1 137 0 137 15 229 0 156 15 233 1 39 15 233 1 42 15 233 1 43 15 233 1 44] 
#[0 6 170 0 68 0 69 0 70 0 137] 
#[0 6 174 0 68 0 69 0 70 0 137] 
#[0 6 178 0 68 0 69 0 70 0 137] 
#[1 15 237 0 68 14 141 0 69 15 241 0 70 1 137 0 137 0 145 0 146 15 245 0 156 14 153 1 39 15 249 1 40 14 153 1 42 14 153 1 43 14 153 1 44] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 6 182 0 68 6 182 0 69 6 182 0 70 5 113 0 72 5 117 0 86 5 121 0 90 6 182 0 92 6 182 0 95 5 125 0 101 5 129 0 120 6 182 0 125 5 133 0 128 6 182 0 137 6 182 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 49 0 146 15 253 0 181 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 16 1 0 68 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 14 181 0 154 14 181 0 155 14 181 0 156 14 181 0 157 14 181 0 158 14 181 0 159 14 181 0 160 14 181 0 161 14 181 0 162 14 181 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 14 181 0 244 14 181 0 245 14 181 0 246 14 181 0 250 14 181 0 251 14 181 0 252 14 181 0 253 14 181 0 254 14 181 0 255 14 181 1 0 14 181 1 2 14 181 1 4 14 181 1 6 14 181 1 7 3 33 1 9 14 181 1 10 14 181 1 11 14 181 1 12 14 181 1 13 14 181 1 14 14 181 1 15 14 181 1 19 14 181 1 60 14 181 1 65 14 181 1 66 14 181 1 73 14 181 1 74 14 181 1 75 14 181 1 76 14 181 1 77 14 181 1 78 14 181 1 79 14 181 1 80 14 181 1 81 14 181 1 82 14 181 1 89 14 181 1 90 14 181 1 91 14 181 1 92] 
#[0 16 5 0 111] 
#[0 16 9 0 70] 
#[1 7 49 0 146 16 13 0 181] 
#[0 6 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 6 190 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 17 0 125] 
#[0 6 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 21 0 127] 
#[0 16 25 0 127] 
#[0 16 29 0 70] 
#[0 6 198 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 193 0 5 1 205 0 22 16 33 0 192 16 33 0 193 1 217 0 194 16 33 0 197] 
#[0 6 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 6 206 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 37 0 77] 
#[0 6 210 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 41 0 106] 
#[0 16 45 0 106] 
#[1 16 49 0 70 0 145 0 146] 
#[0 6 214 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 53 0 106] 
#[0 6 218 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 57 0 106] 
#[0 6 222 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 61 0 77] 
#[1 16 65 0 70 0 145 0 146] 
#[0 16 69 0 106] 
#[1 16 73 0 70 0 145 0 146] 
#[1 16 77 0 70 0 145 0 146] 
#[1 0 6 0 70 0 6 0 146 16 81 0 151] 
#[0 16 85 0 106] 
#[1 16 89 0 70 0 145 0 146] 
#[0 16 93 0 106] 
#[1 16 97 0 70 0 145 0 146] 
#[0 6 226 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 101 0 117] 
#[0 6 230 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 105 0 77] 
#[0 6 234 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 109 0 106] 
#[0 16 113 0 106] 
#[1 16 117 0 70 0 145 0 146] 
#[0 6 238 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 121 0 106] 
#[0 6 242 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 16 125 0 106] 
#[0 6 246 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 7 27 0 1 7 27 0 3 7 27 0 5 4 154 0 6 7 27 0 7 7 27 0 8 7 27 0 9 7 27 0 10 7 31 0 11 7 27 0 12 4 154 0 13 7 27 0 14 7 27 0 15 7 27 0 16 7 27 0 17 7 27 0 18 7 27 0 19 7 27 0 20 7 27 0 21 4 154 0 22 7 27 0 23 7 27 0 26 4 154 0 27 4 154 0 28 7 27 0 29 7 27 0 33 7 27 0 34 7 27 0 35 7 27 0 37 7 27 0 44 7 27 0 45 7 27 0 47 4 154 0 48 4 154 0 50 0 222 0 52 0 222 0 54 4 154 0 59 7 27 0 61 4 154 0 62 4 154 0 64 4 154 0 65 4 154 0 68 4 154 0 69 4 154 0 70 4 154 0 71 7 27 0 72 4 154 0 73 7 27 0 74 4 154 0 76 4 154 0 77 7 27 0 78 4 154 0 79 7 27 0 80 7 27 0 81 4 154 0 82 4 154 0 83 7 27 0 86 7 27 0 87 7 27 0 88 7 27 0 90 4 154 0 92 7 27 0 94 4 154 0 95 7 27 0 96 4 154 0 98 4 154 0 99 7 27 0 101 0 222 0 102 7 27 0 104 4 154 0 105 4 154 0 106 4 154 0 107 4 154 0 108 4 154 0 109 4 154 0 111 7 27 0 112 4 154 0 114 4 154 0 115 4 154 0 117 7 27 0 118 4 154 0 119 7 27 0 120 4 154 0 121 4 154 0 125 4 154 0 126 4 154 0 127 7 27 0 128 7 27 0 129 7 27 0 135 7 27 0 136 7 27 0 137 7 27 0 138 7 27 0 139 7 27 0 140 7 27 0 141 7 27 0 142 7 27 0 143 7 27 0 144 4 154 0 146 4 154 0 147 4 154 1 93] 
#[1 7 35 0 1 7 35 0 3 7 35 0 5 6 250 0 6 7 35 0 7 7 35 0 8 6 250 0 9 7 35 0 10 7 35 0 11 7 35 0 12 6 250 0 13 7 35 0 14 6 250 0 15 7 35 0 16 7 35 0 17 7 35 0 18 7 35 0 19 7 35 0 20 7 35 0 21 6 250 0 22 6 250 0 23 6 250 0 26 6 250 0 27 6 250 0 28 6 250 0 29 7 35 0 33 6 250 0 34 6 250 0 35 6 250 0 37 7 35 0 44 7 35 0 45 7 35 0 47 6 250 0 48 6 250 0 50 6 250 0 59 6 250 0 61 6 250 0 62 6 250 0 64 6 250 0 65 6 250 0 68 6 250 0 69 6 250 0 70 6 250 0 71 7 35 0 72 6 250 0 73 6 250 0 74 6 250 0 76 6 250 0 77 6 250 0 78 6 250 0 79 6 250 0 80 6 250 0 81 6 250 0 82 6 250 0 83 7 35 0 86 6 250 0 87 6 250 0 88 7 35 0 90 6 250 0 92 6 250 0 94 6 250 0 95 6 250 0 96 6 250 0 98 6 250 0 99 7 35 0 101 6 250 0 104 6 250 0 105 6 250 0 106 6 250 0 107 6 250 0 108 6 250 0 109 6 250 0 111 6 250 0 112 6 250 0 114 6 250 0 115 6 250 0 117 6 250 0 118 6 250 0 119 7 35 0 120 6 250 0 121 6 250 0 125 6 250 0 126 6 250 0 127 7 35 0 128 6 250 0 129 6 250 0 135 6 250 0 136 6 250 0 137 6 250 0 138 6 250 0 139 6 250 0 140 6 250 0 141 6 250 0 142 6 250 0 143 6 250 0 144 6 250 0 146 6 250 0 147 6 250 1 93] 
#[1 5 37 0 1 7 39 0 3 14 37 0 5 6 254 0 6 5 49 0 7 14 41 0 8 6 254 0 9 14 45 0 10 14 49 0 11 5 65 0 12 6 254 0 13 7 43 0 14 6 254 0 15 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 6 254 0 22 7 47 0 23 7 51 0 26 6 254 0 27 6 254 0 28 7 55 0 29 5 97 0 33 7 59 0 34 7 63 0 35 7 67 0 37 7 71 0 44 5 105 0 45 5 109 0 47 6 254 0 48 6 254 0 50 6 254 0 59 7 75 0 61 6 254 0 62 6 254 0 64 6 254 0 65 6 254 0 68 6 254 0 69 6 254 0 70 6 254 0 71 5 113 0 72 6 254 0 73 7 79 0 74 6 254 0 76 6 254 0 77 7 83 0 78 6 254 0 79 7 87 0 80 7 91 0 81 6 254 0 82 6 254 0 83 5 117 0 86 7 95 0 87 7 99 0 88 5 121 0 90 6 254 0 92 7 103 0 94 6 254 0 95 7 107 0 96 6 254 0 98 6 254 0 99 5 125 0 101 7 111 0 104 6 254 0 105 6 254 0 106 6 254 0 107 6 254 0 108 6 254 0 109 6 254 0 111 7 115 0 112 6 254 0 114 6 254 0 115 6 254 0 117 7 119 0 118 6 254 0 119 7 123 0 120 6 254 0 121 6 254 0 125 6 254 0 126 6 254 0 127 5 133 0 128 7 127 0 129 7 131 0 135 7 135 0 136 7 139 0 137 7 143 0 138 7 147 0 139 7 151 0 140 7 155 0 141 7 159 0 142 7 163 0 143 7 167 0 144 6 254 0 146 6 254 0 147 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 4 209 0 244 4 209 0 245 4 209 0 246 4 209 0 250 4 209 0 251 4 209 0 252 4 209 0 253 4 209 0 254 4 209 0 255 4 209 1 0 5 137 1 1 4 209 1 2 5 141 1 3 4 209 1 4 5 145 1 5 4 209 1 6 4 209 1 7 5 149 1 8 3 33 1 9 16 129 1 10 4 209 1 11 4 209 1 12 4 209 1 13 4 209 1 14 4 209 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 4 209 1 79 4 209 1 80 4 209 1 81 4 209 1 82 4 209 1 89 4 209 1 90 4 209 1 91 4 209 1 92 6 254 1 93] 
#[1 7 171 0 1 7 171 0 3 7 171 0 5 7 2 0 6 7 171 0 7 7 171 0 8 7 2 0 9 7 171 0 10 7 171 0 11 7 171 0 12 7 2 0 13 7 171 0 14 7 2 0 15 7 171 0 16 7 171 0 17 7 171 0 18 7 171 0 19 7 171 0 20 7 171 0 21 7 2 0 22 7 2 0 23 7 2 0 26 7 2 0 27 7 2 0 28 7 2 0 29 7 171 0 33 7 2 0 34 7 2 0 35 7 2 0 37 7 171 0 44 7 171 0 45 7 171 0 47 7 2 0 48 7 2 0 50 7 2 0 59 7 2 0 61 7 2 0 62 7 2 0 64 7 2 0 65 7 2 0 68 7 2 0 69 7 2 0 70 7 2 0 71 7 171 0 72 7 2 0 73 7 2 0 74 7 2 0 76 7 2 0 77 7 2 0 78 7 2 0 79 7 2 0 80 7 2 0 81 7 2 0 82 7 2 0 83 7 171 0 86 7 2 0 87 7 2 0 88 7 171 0 90 7 2 0 92 7 2 0 94 7 2 0 95 7 2 0 96 7 2 0 98 7 2 0 99 7 171 0 101 7 2 0 104 7 2 0 105 7 2 0 106 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 111 7 2 0 112 7 2 0 114 7 2 0 115 7 2 0 117 7 2 0 118 7 2 0 119 7 171 0 120 7 2 0 121 7 2 0 125 7 2 0 126 7 2 0 127 7 171 0 128 7 2 0 129 7 2 0 135 7 2 0 136 7 2 0 137 7 2 0 138 7 2 0 139 7 2 0 140 7 2 0 141 7 2 0 142 7 2 0 143 7 2 0 144 7 2 0 146 7 2 0 147 7 2 1 93] 
#[1 16 133 0 10 11 105 0 134] 
#[0 7 6 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 16 137 0 95 1 137 0 137 0 145 0 146 16 141 0 156] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 16 145 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 16 149 0 154 16 149 0 155 16 149 0 156 16 149 0 157 16 149 0 158 16 149 0 159 16 149 0 160 16 149 0 161 16 149 0 162 16 149 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 16 149 0 244 16 149 0 245 16 149 0 246 16 149 0 250 16 149 0 251 16 149 0 252 16 149 0 253 16 149 0 254 16 149 0 255 16 149 1 0 16 149 1 2 16 149 1 4 16 149 1 6 16 149 1 7 3 33 1 9 16 149 1 10 16 149 1 11 16 149 1 12 16 149 1 13 16 149 1 14 16 149 1 15 16 149 1 19 16 149 1 60 16 149 1 65 16 149 1 66 16 149 1 73 16 149 1 74 16 149 1 75 16 149 1 76 16 149 1 77 16 149 1 78 16 149 1 79 16 149 1 80 16 149 1 81 16 149 1 82 16 149 1 89 16 149 1 90 16 149 1 91 16 149 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 16 153 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 16 157 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 10 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 161 0 92] 
#[0 7 14 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 18 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 165 0 92] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 22 0 68 7 22 0 69 7 22 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 22 0 92 7 22 0 95 1 182 0 101 1 182 0 120 7 22 0 125 1 182 0 128 7 22 0 137 7 22 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 26 0 68 7 26 0 69 7 26 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 26 0 92 7 26 0 95 1 182 0 101 1 182 0 120 7 26 0 125 1 182 0 128 7 26 0 137 7 26 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 30 0 68 7 30 0 69 7 30 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 30 0 92 7 30 0 95 1 182 0 101 1 182 0 120 7 30 0 125 1 182 0 128 7 30 0 137 7 30 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 16 169 0 244 4 209 0 245 4 209 0 246 4 209 0 250 16 169 0 251 16 169 0 252 16 169 0 253 16 169 0 254 16 169 0 255 16 169 1 0 16 169 1 2 16 169 1 4 16 169 1 6 16 169 1 7 3 33 1 9 16 169 1 10 16 169 1 11 16 169 1 12 16 169 1 13 16 169 1 14 16 169 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 16 169 1 79 16 169 1 80 16 169 1 81 16 169 1 82 16 169 1 89 16 169 1 90 16 169 1 91 16 169 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 4 209 0 154 4 209 0 155 4 209 0 156 4 209 0 157 4 209 0 158 4 209 0 159 4 209 0 160 4 209 0 161 4 209 0 162 4 209 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 16 173 0 244 4 209 0 245 4 209 0 246 4 209 0 250 16 173 0 251 16 173 0 252 16 173 0 253 16 173 0 254 16 173 0 255 16 173 1 0 16 173 1 2 16 173 1 4 16 173 1 6 16 173 1 7 3 33 1 9 16 173 1 10 16 173 1 11 16 173 1 12 16 173 1 13 16 173 1 14 16 173 1 15 4 209 1 19 4 209 1 60 4 209 1 65 4 209 1 66 4 209 1 73 4 209 1 74 4 209 1 75 4 209 1 76 4 209 1 77 4 209 1 78 16 173 1 79 16 173 1 80 16 173 1 81 16 173 1 82 16 173 1 89 16 173 1 90 16 173 1 91 16 173 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 16 177 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 16 181 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 16 185 0 119 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 7 34 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 16 189 0 151] 
#[0 16 193 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 16 197 0 151] 
#[0 16 201 0 82] 
#[0 16 205 0 70] 
#[0 7 38 0 68 0 69 0 70 0 137] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 16 209 0 151] 
#[0 16 213 0 82] 
#[1 16 217 0 68 16 221 0 70] 
#[1 16 225 0 68 14 141 0 69 16 229 0 70 1 137 0 137 16 233 0 156 15 233 1 39 15 233 1 42 15 233 1 43 15 233 1 44] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 175 0 146 16 237 0 154 16 237 0 155 16 237 0 156 16 237 0 157 16 237 0 158 16 237 0 159 16 237 0 160 16 237 0 161 16 237 0 162 16 237 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 16 237 0 244 16 237 0 245 16 237 0 246 16 237 0 250 16 237 0 251 16 237 0 252 16 237 0 253 16 237 0 254 16 237 0 255 16 237 1 0 16 237 1 2 16 237 1 4 16 237 1 6 16 237 1 7 3 33 1 9 16 237 1 10 16 237 1 11 16 237 1 12 16 237 1 13 16 237 1 14 16 237 1 15 16 237 1 19 16 237 1 60 16 237 1 65 16 237 1 66 16 237 1 73 16 237 1 74 16 237 1 75 16 237 1 76 16 237 1 77 16 237 1 78 16 237 1 79 16 237 1 80 16 237 1 81 16 237 1 82 16 237 1 89 16 237 1 90 16 237 1 91 16 237 1 92] 
#[1 7 49 0 146 16 241 0 181] 
#[0 7 46 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 16 245 0 111] 
#[1 16 249 0 70 1 137 0 137 9 13 0 146 16 253 0 156] 
#[0 7 50 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 54 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 58 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 1 0 127] 
#[0 7 62 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 66 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 70 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 74 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 5 0 106] 
#[0 7 78 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 82 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 86 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 9 0 77] 
#[0 7 90 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 13 0 106] 
#[0 17 17 0 106] 
#[1 17 21 0 70 0 145 0 146] 
#[0 7 94 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 25 0 106] 
#[0 7 98 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 29 0 106] 
#[0 7 102 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 106 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 110 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 114 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 33 0 106] 
#[0 7 118 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 122 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 7 179 0 1 7 179 0 3 7 179 0 5 7 126 0 6 7 179 0 7 7 179 0 8 7 126 0 9 7 179 0 10 7 179 0 11 7 179 0 12 7 126 0 13 7 179 0 14 7 126 0 15 7 179 0 16 7 179 0 17 7 179 0 18 7 179 0 19 7 179 0 20 7 179 0 21 7 126 0 22 7 126 0 23 7 126 0 26 7 126 0 27 7 126 0 28 7 126 0 29 7 179 0 33 7 126 0 34 7 126 0 35 7 126 0 37 7 179 0 44 7 179 0 45 7 179 0 47 7 126 0 48 7 126 0 50 7 126 0 59 7 126 0 61 7 126 0 62 7 126 0 64 7 126 0 65 7 126 0 68 7 126 0 69 7 126 0 70 7 126 0 71 7 179 0 72 7 126 0 73 7 126 0 74 7 126 0 76 7 126 0 77 7 126 0 78 7 126 0 79 7 126 0 80 7 126 0 81 7 126 0 82 7 126 0 83 7 179 0 86 7 126 0 87 7 126 0 88 7 179 0 90 7 126 0 92 7 126 0 94 7 126 0 95 7 126 0 96 7 126 0 98 7 126 0 99 7 179 0 101 7 126 0 104 7 126 0 105 7 126 0 106 7 126 0 107 7 126 0 108 7 126 0 109 7 126 0 111 7 126 0 112 7 126 0 114 7 126 0 115 7 126 0 117 7 126 0 118 7 126 0 119 7 179 0 120 7 126 0 121 7 126 0 125 7 126 0 126 7 126 0 127 7 179 0 128 7 126 0 129 7 126 0 135 7 126 0 136 7 126 0 137 7 126 0 138 7 126 0 139 7 126 0 140 7 126 0 141 7 126 0 142 7 126 0 143 7 126 0 144 7 126 0 146 7 126 0 147 7 126 1 93] 
#[1 9 149 0 134 17 37 0 165] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 130 0 68 7 130 0 69 7 130 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 130 0 92 0 153 0 94 7 130 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 130 0 125 7 130 0 137 17 41 0 142 0 141 0 144 7 130 0 146 17 41 0 166 0 153 0 167 17 41 0 168 17 41 0 169 17 41 0 170 17 41 0 171] 
#[0 17 45 0 95] 
#[1 17 49 0 95 1 137 0 137 0 145 0 146 17 53 0 156] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 5 97 0 33 0 6 0 34 0 6 0 35 0 6 0 37 5 101 0 44 5 105 0 45 5 109 0 47 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 71 5 113 0 72 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 5 117 0 86 0 6 0 87 0 6 0 88 5 121 0 90 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 98 0 6 0 99 5 125 0 101 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 5 129 0 120 0 6 0 121 0 6 0 126 0 6 0 127 5 133 0 128 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 17 57 0 151 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 17 61 0 95 1 137 0 137 0 145 0 146 17 65 0 156] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 17 69 0 151] 
#[0 7 134 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 138 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 142 0 68 7 142 0 69 7 142 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 142 0 92 7 142 0 95 1 182 0 101 1 182 0 120 7 142 0 125 1 182 0 128 7 142 0 137 7 142 0 146] 
#[1 1 182 0 1 1 182 0 3 1 182 0 5 1 182 0 7 1 182 0 8 1 182 0 10 1 182 0 11 1 182 0 12 1 182 0 14 1 182 0 16 1 182 0 17 1 182 0 18 1 182 0 19 1 182 0 20 1 182 0 21 1 182 0 33 1 182 0 44 1 182 0 45 1 182 0 47 7 146 0 68 7 146 0 69 7 146 0 70 1 182 0 72 1 182 0 86 1 182 0 90 7 146 0 92 7 146 0 95 1 182 0 101 1 182 0 120 7 146 0 125 1 182 0 128 7 146 0 137 7 146 0 146] 
#[1 17 73 0 70 1 137 0 137 0 145 0 146 17 77 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 17 81 0 151] 
#[1 7 183 0 5 7 183 0 8 7 183 0 10 7 183 0 11 7 150 0 13 7 183 0 23 7 183 0 26 0 6 0 27 0 6 0 28 7 183 0 29 7 183 0 34 7 183 0 35 7 183 0 37 0 6 0 48 0 6 0 59 7 183 0 61 0 6 0 64 0 6 0 65 7 183 0 68 7 183 0 69 7 183 0 70 0 6 0 71 0 6 0 73 7 183 0 74 0 6 0 76 7 183 0 78 0 6 0 79 7 183 0 80 7 183 0 81 0 6 0 82 7 183 0 87 7 183 0 88 7 183 0 94 7 183 0 96 0 6 0 98 0 6 0 99 7 183 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 7 183 0 112 0 6 0 114 7 183 0 118 0 6 0 121 0 6 0 126 0 6 0 127 7 183 0 129 7 183 0 135 7 183 0 136 7 183 0 137 7 183 0 138 7 183 0 139 7 183 0 140 7 183 0 141 7 183 0 142 7 183 0 143 7 183 0 144 0 6 0 146 0 6 0 147 17 85 0 151 17 89 1 46] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 17 93 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 17 97 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 154 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 17 101 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 17 105 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 158 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 109 0 82] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 17 113 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 17 117 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 162 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 17 121 0 151] 
#[0 17 125 0 82] 
#[1 0 6 0 5 0 6 0 8 0 6 0 10 0 6 0 11 0 6 0 23 0 6 0 26 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 34 0 6 0 35 0 6 0 37 0 6 0 48 0 6 0 59 0 6 0 61 0 6 0 64 0 6 0 65 0 6 0 70 0 6 0 71 0 6 0 73 0 6 0 74 0 6 0 76 0 6 0 78 0 6 0 79 0 6 0 80 0 6 0 81 0 6 0 82 0 6 0 87 0 6 0 88 0 6 0 94 0 6 0 96 0 6 0 98 0 6 0 99 0 6 0 104 0 6 0 105 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 111 0 6 0 112 0 6 0 114 0 6 0 118 0 6 0 121 0 6 0 126 0 6 0 127 0 6 0 129 0 6 0 135 0 6 0 136 0 6 0 137 0 6 0 138 0 6 0 139 0 6 0 140 0 6 0 141 0 6 0 142 0 6 0 143 0 6 0 144 0 6 0 146 0 6 0 147 17 129 0 151] 
#[0 17 133 0 82] 
#[0 17 137 0 70] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 166 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 1 137 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 7 187 0 146 17 141 0 154 17 141 0 155 17 141 0 156 17 141 0 157 17 141 0 158 17 141 0 159 17 141 0 160 17 141 0 161 17 141 0 162 17 141 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 17 141 0 244 17 141 0 245 17 141 0 246 17 141 0 250 17 141 0 251 17 141 0 252 17 141 0 253 17 141 0 254 17 141 0 255 17 141 1 0 17 141 1 2 17 141 1 4 17 141 1 6 17 141 1 7 3 33 1 9 17 141 1 10 17 141 1 11 17 141 1 12 17 141 1 13 17 141 1 14 17 141 1 15 17 141 1 19 17 141 1 60 17 141 1 65 17 141 1 66 17 141 1 73 17 141 1 74 17 141 1 75 17 141 1 76 17 141 1 77 17 141 1 78 17 141 1 79 17 141 1 80 17 141 1 81 17 141 1 82 17 141 1 89 17 141 1 90 17 141 1 91 17 141 1 92] 
#[0 7 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 17 145 0 111] 
#[0 17 149 0 70] 
#[0 7 178 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 7 182 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 186 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 190 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 194 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 17 153 0 106] 
#[0 7 198 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 202 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 206 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[1 17 157 0 131 11 105 0 134] 
#[1 1 197 0 11 7 210 0 68 7 210 0 69 7 210 0 70 7 210 0 92 7 210 0 95 7 210 0 125 7 210 0 137 7 210 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 214 0 68 7 214 0 69 7 214 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 214 0 92 0 153 0 94 7 214 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 214 0 125 7 214 0 137 17 161 0 142 0 141 0 144 7 214 0 146 17 161 0 166 0 153 0 167 17 161 0 168 17 161 0 169 17 161 0 170 17 161 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 218 0 68 7 218 0 69 7 218 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 218 0 92 0 153 0 94 7 218 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 218 0 125 7 218 0 137 17 165 0 142 0 141 0 144 7 218 0 146 17 165 0 166 0 153 0 167 17 165 0 168 17 165 0 169 17 165 0 170 17 165 0 171] 
#[0 17 169 0 95] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 0 6 0 95 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 17 173 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 17 177 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 7 222 0 68 7 222 0 69 7 222 0 70 0 153 0 78 0 153 0 87 0 153 0 88 7 222 0 92 0 153 0 94 7 222 0 95 0 153 0 104 0 153 0 112 0 153 0 118 7 222 0 125 7 222 0 137 17 181 0 142 0 141 0 144 7 222 0 146 17 181 0 166 0 153 0 167 17 181 0 168 17 181 0 169 17 181 0 170 17 181 0 171] 
#[0 17 185 0 95] 
#[1 17 189 0 95 1 137 0 137 0 145 0 146 17 193 0 156] 
#[0 17 197 0 82] 
#[0 17 201 0 70] 
#[1 17 205 0 70 1 137 0 137 0 145 0 146 17 209 0 156] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 68 0 6 0 69 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 17 213 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 17 217 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 17 221 0 13 2 113 0 23 2 117 0 26 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 153 0 61 7 226 0 68 7 226 0 69 7 226 0 70 2 133 0 74 0 153 0 78 2 137 0 80 2 141 0 81 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 0 153 0 104 2 157 0 112 0 153 0 118 2 161 0 129 2 165 0 135 2 169 0 136 7 191 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 2 229 0 142 2 185 0 143 0 141 0 144 17 225 0 154 17 225 0 155 17 225 0 156 17 225 0 157 17 225 0 158 17 225 0 159 17 225 0 160 17 225 0 161 17 225 0 162 17 225 0 163 2 229 0 166 0 153 0 167 2 229 0 168 2 229 0 169 2 229 0 170 2 229 0 171 17 225 0 244 17 225 0 245 17 225 0 246 17 225 0 250 17 225 0 251 17 225 0 252 17 225 0 253 17 225 0 254 17 225 0 255 17 225 1 0 17 225 1 2 17 225 1 4 17 225 1 6 17 225 1 7 3 33 1 9 17 225 1 10 17 225 1 11 17 225 1 12 17 225 1 13 17 225 1 14 17 225 1 15 17 225 1 19 17 229 1 45 17 225 1 60 17 225 1 65 17 225 1 66 17 225 1 73 17 225 1 74 17 225 1 75 17 225 1 76 17 225 1 77 17 225 1 78 17 225 1 79 17 225 1 80 17 225 1 81 17 225 1 82 17 225 1 89 17 225 1 90 17 225 1 91 17 225 1 92] 
#[1 17 233 0 70 1 137 0 137 0 145 0 146 17 237 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 17 241 0 151] 
#[1 17 245 0 70 1 137 0 137 0 145 0 146 17 249 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 17 253 0 151] 
#[0 7 230 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 18 1 0 70 1 137 0 137 0 145 0 146 18 5 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 9 0 151] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 18 13 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 18 17 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 234 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 2 101 0 5 2 105 0 8 2 109 0 10 0 17 0 11 2 113 0 23 2 117 0 26 5 189 0 27 5 193 0 28 0 153 0 29 2 121 0 34 2 125 0 35 2 129 0 37 0 25 0 48 0 33 0 59 0 153 0 61 0 45 0 64 5 197 0 65 0 6 0 70 0 49 0 71 0 53 0 73 2 133 0 74 6 5 0 76 0 153 0 78 6 5 0 79 2 137 0 80 2 141 0 81 5 201 0 82 0 153 0 87 2 145 0 88 2 149 0 94 2 153 0 96 5 205 0 98 5 209 0 99 0 153 0 104 6 5 0 105 6 5 0 107 0 109 0 108 5 213 0 109 5 217 0 111 2 157 0 112 5 221 0 114 0 153 0 118 0 129 0 121 5 225 0 126 5 229 0 127 2 161 0 129 2 165 0 135 2 169 0 136 1 215 0 137 1 185 0 138 2 173 0 139 2 177 0 140 2 181 0 141 5 237 0 142 2 185 0 143 0 141 0 144 1 219 0 146 5 241 0 147 18 21 0 151 6 17 0 154 6 17 0 155 6 17 0 156 6 17 0 157 6 17 0 158 6 17 0 159 6 17 0 160 6 17 0 161 6 17 0 162 6 17 0 163 5 237 0 166 0 153 0 167 5 237 0 168 5 237 0 169 5 237 0 170 5 237 0 171 5 241 0 172 5 253 0 175 5 253 0 177 5 253 0 184 18 25 0 185 6 5 0 189 5 253 0 198 5 253 0 199 5 253 0 203 5 253 0 204 5 253 0 225 5 253 0 226 5 253 0 227 5 253 0 228 5 253 0 229 1 25 0 231 5 253 0 232 5 253 0 233 5 253 0 234 5 253 0 235 5 253 0 236 5 253 0 240 5 253 0 243 6 17 0 244 6 17 0 245 6 17 0 246 6 17 0 250 6 17 0 251 6 17 0 252 6 17 0 253 6 17 0 254 6 17 0 255 6 17 1 0 6 17 1 2 6 17 1 4 6 17 1 6 6 17 1 7 3 33 1 9 6 17 1 10 6 17 1 11 6 17 1 12 6 17 1 13 6 17 1 14 6 17 1 15 6 17 1 19 5 253 1 20 5 253 1 21 5 253 1 22 5 253 1 23 5 253 1 24 5 253 1 25 5 253 1 26 5 253 1 27 5 253 1 28 5 253 1 29 5 253 1 30 5 253 1 31 5 253 1 32 5 253 1 33 5 253 1 34 5 253 1 35 5 253 1 36 5 253 1 37 5 253 1 38 5 253 1 41 5 253 1 47 5 253 1 48 5 253 1 50 5 253 1 53 5 253 1 56 5 253 1 57 5 253 1 58 5 253 1 59 6 17 1 60 6 17 1 65 6 17 1 66 5 253 1 67 5 253 1 68 5 253 1 69 5 253 1 70 5 253 1 72 6 153 1 73 6 153 1 74 6 153 1 75 6 153 1 76 6 153 1 77 6 153 1 78 6 17 1 79 6 17 1 80 6 17 1 81 6 17 1 82 6 17 1 89 6 17 1 90 6 17 1 91 6 17 1 92] 
#[0 7 238 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 29 0 82] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 7 242 0 146 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 7 246 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 33 0 111] 
#[0 7 250 0 11 0 29 0 48 0 50 0 59 0 61 0 62 0 64 0 71 0 73 0 76 0 77 0 78 0 79 0 83 0 87 0 88 0 94 0 99 0 104 0 105 0 106 0 107 0 108 0 112 0 114 0 117 0 118 0 121 0 142 0 144 0 146 1 93] 
#[0 7 254 0 1 0 3 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 22 0 23 0 26 0 27 0 28 0 29 0 33 0 34 0 35 0 37 0 44 0 45 0 47 0 48 0 50 0 59 0 61 0 62 0 64 0 65 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 86 0 87 0 88 0 90 0 92 0 94 0 95 0 96 0 98 0 99 0 101 0 104 0 105 0 106 0 107 0 108 0 109 0 111 0 112 0 114 0 115 0 117 0 118 0 119 0 120 0 121 0 125 0 126 0 127 0 128 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144 0 146 0 147 1 93] 
#[1 1 197 0 11 8 2 0 68 8 2 0 69 8 2 0 70 8 2 0 92 8 2 0 95 8 2 0 125 8 2 0 137 8 2 0 146] 
#[1 1 197 0 11 8 6 0 68 8 6 0 69 8 6 0 70 8 6 0 92 8 6 0 95 8 6 0 125 8 6 0 137 8 6 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 10 0 68 8 10 0 69 8 10 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 10 0 92 0 153 0 94 8 10 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 10 0 125 8 10 0 137 18 37 0 142 0 141 0 144 8 10 0 146 18 37 0 166 0 153 0 167 18 37 0 168 18 37 0 169 18 37 0 170 18 37 0 171] 
#[1 18 41 0 95 1 137 0 137 0 145 0 146 18 45 0 156] 
#[1 0 6 0 95 0 6 0 137 0 6 0 146 18 49 0 151] 
#[1 1 197 0 11 8 14 0 68 8 14 0 69 8 14 0 70 8 14 0 92 8 14 0 95 8 14 0 125 8 14 0 137 8 14 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 18 0 68 8 18 0 69 8 18 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 18 0 92 0 153 0 94 8 18 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 18 0 125 8 18 0 137 18 53 0 142 0 141 0 144 8 18 0 146 18 53 0 166 0 153 0 167 18 53 0 168 18 53 0 169 18 53 0 170 18 53 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 22 0 68 8 22 0 69 8 22 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 22 0 92 0 153 0 94 8 22 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 22 0 125 8 22 0 137 18 57 0 142 0 141 0 144 8 22 0 146 18 57 0 166 0 153 0 167 18 57 0 168 18 57 0 169 18 57 0 170 18 57 0 171] 
#[0 18 61 0 95] 
#[0 8 26 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 65 0 82] 
#[0 18 69 0 82] 
#[0 18 73 0 70] 
#[1 8 30 0 68 8 30 0 69 8 30 0 70 8 30 0 137 0 145 0 146] 
#[1 0 6 0 68 0 6 0 69 0 6 0 70 0 6 0 137 0 6 0 146 18 77 0 151] 
#[0 8 34 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[1 5 37 0 1 5 41 0 3 5 45 0 5 5 49 0 7 5 53 0 8 5 57 0 10 5 61 0 11 5 65 0 12 18 81 0 13 5 149 0 14 5 73 0 16 5 77 0 17 5 81 0 18 5 149 0 19 5 89 0 20 5 93 0 21 5 97 0 33 5 101 0 44 5 105 0 45 5 109 0 47 5 113 0 72 5 117 0 86 5 121 0 90 5 125 0 101 5 129 0 120 5 133 0 128 5 137 1 1 5 141 1 3 5 145 1 5 5 149 1 8] 
#[0 8 38 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 18 85 0 82] 
#[0 18 89 0 70] 
#[1 18 93 0 70 1 137 0 137 0 145 0 146 18 97 0 156] 
#[0 18 101 0 82] 
#[0 18 105 0 70] 
#[1 18 109 0 70 1 137 0 137 0 145 0 146 18 113 0 156] 
#[0 18 117 0 82] 
#[0 18 121 0 70] 
#[1 18 125 0 70 1 137 0 137 0 145 0 146 18 129 0 156] 
#[1 18 133 0 70 1 137 0 137 0 145 0 146 18 137 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 141 0 151] 
#[1 18 145 0 70 1 137 0 137 0 145 0 146 18 149 0 156] 
#[1 0 6 0 70 0 6 0 137 0 6 0 146 18 153 0 151] 
#[0 8 42 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 46 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[1 1 197 0 11 8 50 0 68 8 50 0 69 8 50 0 70 8 50 0 92 8 50 0 95 8 50 0 125 8 50 0 137 8 50 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 54 0 68 8 54 0 69 8 54 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 54 0 92 0 153 0 94 8 54 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 54 0 125 8 54 0 137 18 157 0 142 0 141 0 144 8 54 0 146 18 157 0 166 0 153 0 167 18 157 0 168 18 157 0 169 18 157 0 170 18 157 0 171] 
#[0 18 161 0 95] 
#[1 18 165 0 95 1 137 0 137 0 145 0 146 18 169 0 156] 
#[1 1 197 0 11 8 58 0 68 8 58 0 69 8 58 0 70 8 58 0 92 8 58 0 95 8 58 0 125 8 58 0 137 8 58 0 146] 
#[1 1 197 0 11 8 62 0 68 8 62 0 69 8 62 0 70 8 62 0 92 8 62 0 95 8 62 0 125 8 62 0 137 8 62 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 66 0 68 8 66 0 69 8 66 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 66 0 92 0 153 0 94 8 66 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 66 0 125 8 66 0 137 18 173 0 142 0 141 0 144 8 66 0 146 18 173 0 166 0 153 0 167 18 173 0 168 18 173 0 169 18 173 0 170 18 173 0 171] 
#[0 8 70 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 74 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 177 0 82] 
#[1 8 78 0 68 8 78 0 69 8 78 0 70 8 78 0 137 0 145 0 146] 
#[0 8 82 0 5 0 8 0 10 0 11 0 13 0 23 0 26 0 29 0 34 0 35 0 37 0 61 0 68 0 69 0 70 0 74 0 78 0 80 0 81 0 87 0 88 0 94 0 96 0 104 0 112 0 118 0 129 0 135 0 136 0 137 0 138 0 139 0 140 0 141 0 142 0 143 0 144] 
#[0 8 86 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 181 0 82] 
#[0 18 185 0 82] 
#[0 18 189 0 70] 
#[0 8 90 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 193 0 82] 
#[0 18 197 0 82] 
#[0 18 201 0 70] 
#[0 8 94 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 18 205 0 82] 
#[0 18 209 0 82] 
#[0 18 213 0 70] 
#[0 18 217 0 82] 
#[0 18 221 0 70] 
#[1 18 225 0 70 1 137 0 137 0 145 0 146 18 229 0 156] 
#[0 18 233 0 82] 
#[0 18 237 0 70] 
#[1 18 241 0 70 1 137 0 137 0 145 0 146 18 245 0 156] 
#[1 1 197 0 11 8 98 0 68 8 98 0 69 8 98 0 70 8 98 0 92 8 98 0 95 8 98 0 125 8 98 0 137 8 98 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 102 0 68 8 102 0 69 8 102 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 102 0 92 0 153 0 94 8 102 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 102 0 125 8 102 0 137 18 249 0 142 0 141 0 144 8 102 0 146 18 249 0 166 0 153 0 167 18 249 0 168 18 249 0 169 18 249 0 170 18 249 0 171] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 106 0 68 8 106 0 69 8 106 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 106 0 92 0 153 0 94 8 106 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 106 0 125 8 106 0 137 18 253 0 142 0 141 0 144 8 106 0 146 18 253 0 166 0 153 0 167 18 253 0 168 18 253 0 169 18 253 0 170 18 253 0 171] 
#[0 19 1 0 95] 
#[1 1 197 0 11 8 110 0 68 8 110 0 69 8 110 0 70 8 110 0 92 8 110 0 95 8 110 0 125 8 110 0 137 8 110 0 146] 
#[0 8 114 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 118 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 122 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 5 0 82] 
#[0 8 126 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 130 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 9 0 82] 
#[0 8 134 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 138 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 13 0 82] 
#[0 8 142 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 17 0 82] 
#[0 19 21 0 82] 
#[0 19 25 0 70] 
#[0 8 146 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 29 0 82] 
#[0 19 33 0 82] 
#[0 19 37 0 70] 
#[1 1 197 0 11 8 150 0 68 8 150 0 69 8 150 0 70 8 150 0 92 8 150 0 95 8 150 0 125 8 150 0 137 8 150 0 146] 
#[1 1 197 0 11 8 154 0 68 8 154 0 69 8 154 0 70 8 154 0 92 8 154 0 95 8 154 0 125 8 154 0 137 8 154 0 146] 
#[1 0 17 0 11 0 153 0 29 0 153 0 61 8 158 0 68 8 158 0 69 8 158 0 70 0 153 0 78 0 153 0 87 0 153 0 88 8 158 0 92 0 153 0 94 8 158 0 95 0 153 0 104 0 153 0 112 0 153 0 118 8 158 0 125 8 158 0 137 19 41 0 142 0 141 0 144 8 158 0 146 19 41 0 166 0 153 0 167 19 41 0 168 19 41 0 169 19 41 0 170 19 41 0 171] 
#[0 8 162 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 166 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 170 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 174 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 178 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 45 0 82] 
#[0 8 182 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 186 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 19 49 0 82] 
#[1 1 197 0 11 8 190 0 68 8 190 0 69 8 190 0 70 8 190 0 92 8 190 0 95 8 190 0 125 8 190 0 137 8 190 0 146] 
#[0 8 194 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146] 
#[0 8 198 0 68 0 69 0 70 0 92 0 95 0 125 0 137 0 146]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument1: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument3: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 3) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result timesToken: ((nodes at: 2) at: 1).
	result plusToken: ((nodes at: 2) at: 2).
	result minusToken: ((nodes at: 2) at: 3).
	result divideToken: ((nodes at: 2) at: 4).
	result upArrowToken: ((nodes at: 2) at: 5).
	result _Token: ((nodes at: 2) at: 6).
	result modToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignementOrEquals1: nodes [
	| result |
	result := VBAssignementOrEqualsNode new.
	result left: (nodes at: 1).
	result operator: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result setting: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType11: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result andToken: ((nodes at: 2) at: 1).
	result orToken: ((nodes at: 2) at: 2).
	result xorToken: ((nodes at: 2) at: 3).
	result eqvToken: ((nodes at: 2) at: 4).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result expressions.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result expressions.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCaseOtherwise1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result elseToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCaseOtherwise2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result elseToken: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addObject: (nodes at: 4) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result greaterThanToken: ((nodes at: 2) at: 1).
	result lessThanToken: ((nodes at: 2) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 2) at: 3).
	result lessThanEqualToken: ((nodes at: 2) at: 4).
	result greaterThanEqualToken: ((nodes at: 2) at: 5).
	result isToken: ((nodes at: 2) at: 6).
	result likeToken: ((nodes at: 2) at: 7).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result andToken: (nodes at: 2).
	result right: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result value: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	result type: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	result type: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result libToken: (nodes at: 4).
	result library: (nodes at: 5).
	result aliasToken: (nodes at: 6).
	result alias: (nodes at: 7).
	result parameters: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result declareToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result libToken: (nodes at: 5).
	result library: (nodes at: 6).
	result aliasToken: (nodes at: 7).
	result alias: (nodes at: 8).
	result parameters: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result enumTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result functionTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result functionTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result subTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result subTokens.
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result name: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result fields.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result typeTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDestinationList1: nodes [
	| result |
	result := VBDestinationListNode new.
	result addObject: (nodes at: 1) to: result labels.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result labels.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result untilToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result untilToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	result whileToken: (nodes at: 5).
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	result whileToken: (nodes at: 6).
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	result whileToken: (nodes at: 7).
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfBlock2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result ifMatch: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIfColon1: nodes [
	| result |
	result := VBElseIfColonNode new.
	result elseifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 4) at: 2) to: result ifMatches.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result selector: (nodes at: 2).
	result parameters: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result eventToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result doToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result fORToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result functionToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result propertyToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result subToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement1: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result kind: (nodes at: 1).
	result left: (nodes at: 2).
	result operator: (nodes at: 3).
	result right: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFileDescriptorLiteral1: nodes [
	| result |
	result := VBFileDescriptorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result nextToken: (nodes at: 8).
	result addObject: (nodes at: 9) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result addObject: (nodes at: 10) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result eachToken: (nodes at: 2).
	result addObject: (nodes at: 3) to: result elements.
	result inToken: (nodes at: 4).
	result group: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result body: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addObject: (nodes at: 11) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result nextToken: (nodes at: 9).
	result element: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext5: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext6: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result nextToken: (nodes at: 10).
	result element: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext7: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext8: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result body: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result nextToken: (nodes at: 11).
	result element: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext5: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext6: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result nextToken: (nodes at: 12).
	result element: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext7: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext8: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result counter: (nodes at: 2).
	result equalToken: (nodes at: 3).
	result initialValue: (nodes at: 4).
	result toToken: (nodes at: 5).
	result limit: (nodes at: 6).
	result stepToken: (nodes at: 7).
	result step: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result body: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result nextToken: (nodes at: 13).
	result element: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSub1: nodes [
	| result |
	result := VBGoSubNode new.
	result gosubToken: (nodes at: 1).
	result destination: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoTo1: nodes [
	| result |
	result := VBGoToNode new.
	result gotoToken: (nodes at: 1).
	result destination: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHeadlessIdentifier1: nodes [
	| result |
	result := VBHeadlessIdentifierNode new.
	result periodToken: (nodes at: 1).
	result token: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThen4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenColon1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse10: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse11: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse12: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse13: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse14: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse15: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse16: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseLineNumber: (nodes at: 7).
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result
		ifFalse: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endLineNumber: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseToken: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result
		ifFalse: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse7: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse8: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result elseLineNumber: (nodes at: 6).
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result
		ifFalse: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse9: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result endLineNumber: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIf4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse1: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse2: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endLineNumber: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse3: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse4: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result addNodes: (nodes at: 6) to: result cases.
	result elseToken: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result otherwise: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse5: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse6: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endLineNumber: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse7: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseIfElse8: nodes [
	| result |
	result := VBIfThenElseIfElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result
		ifTrue: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result elseToken: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result otherwise: (nodes at: 10).
	result addTokens: (nodes at: 11) to: result eolTokens.
	result endLineNumber: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenColonNode new.
	result ifToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result thenToken: (nodes at: 3).
	result
		ifTrue: (nodes at: 4).
	result elseToken: (nodes at: 5).
	result
		ifFalse: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplements1: nodes [
	| result |
	result := VBImplementsNode new.
	result implementsToken: (nodes at: 1).
	result interface: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result identifier: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result body: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntervalExpression1: nodes [
	| result |
	result := VBIntervalExpressionNode new.
	result from: (nodes at: 1).
	result toToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub1: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub2: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result returnToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub3: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub4: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	result endLineNumber: (nodes at: 4).
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub5: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub6: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result returnToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub7: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelSub8: nodes [
	| result |
	result := VBGoSubLabelNode new.
	result label: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result block: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result returnToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result constant: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result constants: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result constToken: (nodes at: 2).
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet13: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet14: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet15: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet16: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result getToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result block: (nodes at: 9).
	result addTokens: (nodes at: 10) to: result eolTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result getToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result getToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result letToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result letToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result letToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result block: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result setToken: (nodes at: 2).
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result block: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result propertyTokens.
	result setToken: (nodes at: 3).
	result selector: (nodes at: 4).
	result parameters: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result block: (nodes at: 7).
	result addTokens: (nodes at: 8) to: result eolTokens.
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result modifier: (nodes at: 2).
	result addToken: (nodes at: 3) to: result propertyTokens.
	result setToken: (nodes at: 4).
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result block: (nodes at: 8).
	result addTokens: (nodes at: 9) to: result eolTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation1: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result typeName: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation1: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result eRRORToken: (nodes at: 2).
	result resumeToken: (nodes at: 3).
	result nextToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result integerExpression: (nodes at: 2).
	result to: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause1: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause2: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result aSToken: (nodes at: 5).
	result fileDescriptor: (nodes at: 6).
	result length: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause3: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause4: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result lock: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause5: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause6: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result aSToken: (nodes at: 6).
	result fileDescriptor: (nodes at: 7).
	result length: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause7: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause8: nodes [
	| result |
	result := VBOpenClauseNode new.
	result openToken: (nodes at: 1).
	result filepath: (nodes at: 2).
	result fORToken: (nodes at: 3).
	result mode: (nodes at: 4).
	result access: (nodes at: 5).
	result lock: (nodes at: 6).
	result aSToken: (nodes at: 7).
	result fileDescriptor: (nodes at: 8).
	result length: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result databaseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result bINARYToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result compareToken: (nodes at: 2).
	result compare: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result explicitToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result privateToken: (nodes at: 2).
	result moduleToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOptionBase1: nodes [
	| result |
	result := VBOptionBaseNode new.
	result optionToken: (nodes at: 1).
	result baseToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result strategy: (nodes at: 2).
	result paramarrayToken: (nodes at: 3).
	result name: (nodes at: 4).
	result type: (nodes at: 5).
	result equalToken: ((nodes at: 6) at: 1).
	result default: ((nodes at: 6) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result equalToken: ((nodes at: 2) at: 1).
	result default: ((nodes at: 2) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result equalToken: ((nodes at: 4) at: 1).
	result default: ((nodes at: 4) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result paramarrayToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result equalToken: ((nodes at: 5) at: 1).
	result default: ((nodes at: 5) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result name: (nodes at: 2).
	result equalToken: ((nodes at: 3) at: 1).
	result default: ((nodes at: 3) at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation1: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result receiver: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForQualifiedIdentifier1: nodes [
	| result |
	result := VBQualifiedIdentifierNode new.
	result token: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseError1: nodes [
	| result |
	result := VBRaiseErrorNode new.
	result eRRORToken: (nodes at: 1).
	result errorCode: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result call: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result preserveToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRename1: nodes [
	| result |
	result := VBRenameNode new.
	result nameToken: (nodes at: 1).
	result oldName: (nodes at: 2).
	result aSToken: (nodes at: 3).
	result newName: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result label: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result nextToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect1: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect2: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect3: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect4: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result caseToken: (nodes at: 2).
	result expression: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result cases.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result otherwise: (nodes at: 6).
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endLineNumber: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result equalToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier2: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result variable: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result variables: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addObject: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result sizes.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing2: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing3: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing4: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result aSToken: (nodes at: 1).
	result nEWToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing5: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing6: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing7: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing8: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result nEWToken: (nodes at: 3).
	result type: (nodes at: 4).
	result addNode: (nodes at: 5) to: result sizes.
	result timesToken: (nodes at: 6).
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result fixedSize: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBAsTypeNode new.
	result aSToken: (nodes at: 1).
	result type: (nodes at: 2).
	result addNode: (nodes at: 3) to: result sizes.
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing5: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing6: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result timesToken: (nodes at: 4).
	result fixedSize: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing7: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing8: nodes [
	| result |
	result := VBAsTypeNode new.
	result addNode: (nodes at: 1) to: result sizes.
	result aSToken: (nodes at: 2).
	result type: (nodes at: 3).
	result addNode: (nodes at: 4) to: result sizes.
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result untilToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result name: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result whileToken: (nodes at: 2).
	result condition: (nodes at: 3).
	result addTokens: (nodes at: 4) to: result eolTokens.
	result body: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result endLineNumber: (nodes at: 7).
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result condition: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result body: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	result endLineNumber: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith3: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith4: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result with: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result block: (nodes at: 4).
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endLineNumber: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________2: nodes [
	| result |
	result := Array new: 3.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument_________________4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument__________________2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___Expression__ifMatch__________2: nodes [
	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____Expression__default___2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______________Argument__argument____3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___SetUpAssignation__setting___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___Case__case____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result version: (nodes at: 2).
	result classToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addNode: (nodes at: 2) to: result elements.
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result elements.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addNode: (nodes at: 4) to: result elements.
	result addTokens: ((nodes at: 5) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result elements.
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]
